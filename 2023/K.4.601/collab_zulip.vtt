WEBVTT

00:00.000 --> 00:11.060
Great. Again, I hope everyone's had a great first day at

00:11.060 --> 00:14.480
Fostem in person again and thank

00:14.480 --> 00:16.740
you for staying to the last presentation.

00:16.740 --> 00:20.460
My name is Lauren and I'm a software engineer at

00:20.460 --> 00:24.420
Condor Labs and I work on the open source project Zulip.

00:24.420 --> 00:29.700
I'm going to be talking about how you can collaborate

00:29.700 --> 00:32.840
via chat, hopefully transparently,

00:32.840 --> 00:36.080
efficiently and asynchronously.

00:38.240 --> 00:42.280
So as a collaboration tool,

00:42.280 --> 00:46.320
and we're thinking especially here as open source communities,

00:46.320 --> 00:49.640
open source software projects, open research projects,

00:49.640 --> 00:52.320
what are some of the benefits of chat that we have?

00:52.320 --> 00:55.800
Really, I mean, we have so many collaboration tools

00:55.800 --> 00:57.100
and communication tools.

00:57.100 --> 01:02.240
We have e-mail, we have our issue trackers.

01:02.240 --> 01:04.680
But chat can really be a place of

01:04.680 --> 01:07.160
generating some community and connection.

01:07.160 --> 01:10.480
Also, it's a low friction,

01:10.480 --> 01:13.600
lightweight place to connect and create some of those things.

01:13.600 --> 01:18.040
So it can be a really beneficial place for our projects,

01:18.040 --> 01:23.240
but it comes with some challenges.

01:23.240 --> 01:28.160
So who here works with

01:28.160 --> 01:30.720
some folks that are maybe in a different time zone than them?

01:30.720 --> 01:33.440
Yeah, me, I definitely do.

01:33.440 --> 01:36.120
So that can be really challenging if you have

01:36.120 --> 01:39.880
a chat application going because we think of chat as being live.

01:39.880 --> 01:41.720
We're all sitting down at our computers together,

01:41.720 --> 01:45.960
but if you're working with someone in a totally different time zone,

01:45.960 --> 01:48.180
then your chat is not going to be synchronous.

01:48.180 --> 01:52.800
It's going to need to be functional in a different sense.

01:52.800 --> 01:56.880
So that's a challenge of chat in our communities.

01:56.880 --> 01:59.280
Also, in our communities, we have so many things going on.

01:59.280 --> 02:01.840
We have new features that we want to implement.

02:01.840 --> 02:05.440
We have bugs that we're fixing issues that we're dealing with.

02:05.440 --> 02:07.640
We have releases to manage,

02:07.640 --> 02:09.400
conferences to attend.

02:09.400 --> 02:11.640
So we've got a lot going on and that can

02:11.640 --> 02:15.680
really make chat become very overwhelming very quickly.

02:15.680 --> 02:18.800
We have a lot of different folks in our communities,

02:18.800 --> 02:21.200
and they all have different needs and play different roles.

02:21.200 --> 02:25.320
So we're going to go through an analysis,

02:25.320 --> 02:28.120
and I encourage you to think about your open source community,

02:28.120 --> 02:30.120
your open research community maybe,

02:30.120 --> 02:33.000
and these roles and what their needs might be,

02:33.000 --> 02:36.040
in addition to the ones that I've specified here.

02:36.040 --> 02:41.120
So project leaders, the folks who are leading the charge of your project,

02:41.120 --> 02:43.960
the people who are making it happen.

02:43.960 --> 02:47.280
What are some of their needs and challenges with chat?

02:47.280 --> 02:50.200
Well, they want to be there and have

02:50.200 --> 02:52.880
those connections with the community in chat,

02:52.880 --> 02:56.960
but they also really want to make sure that they're not missing anything in chat,

02:56.960 --> 02:58.240
if they're not there.

02:58.240 --> 03:03.680
So there's this balance between connecting and also being able to step away from it,

03:03.680 --> 03:06.520
that we have as project leaders.

03:06.520 --> 03:08.560
We have our core contributors.

03:08.560 --> 03:11.480
I'm a core contributor to Zulip.

03:11.480 --> 03:13.600
When your core folks come on,

03:13.600 --> 03:14.880
they're working more often,

03:14.880 --> 03:16.880
they're checking on a chat more often,

03:16.880 --> 03:22.560
but they really want when they check in with chat for it to be relevant to the work they're doing,

03:22.560 --> 03:28.120
and helpful that they're participating in chat.

03:28.120 --> 03:32.040
Then they also want to be able to go away and focus on their work,

03:32.040 --> 03:33.320
and then come back to chat.

03:33.320 --> 03:37.840
So it's again this coming and going that becomes a challenge.

03:38.960 --> 03:42.960
Our casual contributors, folks who are maybe invested in our project,

03:42.960 --> 03:44.600
but are not there day-to-day.

03:44.600 --> 03:52.680
Folks who are checking in maybe on the weekends or once in a while.

03:52.680 --> 03:54.840
So what about these folks?

03:54.840 --> 04:01.200
Well, honestly, if the chat is just a big volume of messages that are coming in,

04:01.200 --> 04:02.720
and this huge stream,

04:02.720 --> 04:05.040
they may not even use chat as a collaboration tool,

04:05.040 --> 04:07.560
because when they come in and see that there are

04:07.560 --> 04:11.440
hundreds and hundreds of unread messages that they have to sort through and see through,

04:11.440 --> 04:14.920
they're going to say, hey, I'm going to go somewhere else to collaborate.

04:14.920 --> 04:16.360
I'm going to look at the issue tracker,

04:16.360 --> 04:20.080
I'm going to be on the email list or whatnot.

04:21.000 --> 04:24.600
They're not going to really know what's going on in the way that chat is.

04:24.600 --> 04:26.880
So that can be really a challenge.

04:27.680 --> 04:30.000
If we want our communities to grow,

04:30.000 --> 04:31.520
we need new folks coming in,

04:31.520 --> 04:37.600
new contributors, new people getting invested in our projects.

04:37.600 --> 04:43.760
When they come in, we don't want those people lurking, hiding.

04:43.760 --> 04:45.760
I don't know what to do, what's going on.

04:45.760 --> 04:48.800
We want those people to be able to feel like they have a space to step

04:48.800 --> 04:51.520
forward and start participating, have a voice,

04:51.520 --> 04:57.720
and not be this shadowy person in the background until they figure things out.

04:58.440 --> 05:01.640
We want them to get a sense of who our community is,

05:01.640 --> 05:05.760
what they're doing, what we're doing together, what we're building.

05:05.760 --> 05:09.480
We have end users,

05:09.480 --> 05:11.840
the people who are using our projects.

05:11.840 --> 05:14.400
So when they come into a chat,

05:14.400 --> 05:16.040
again, it is overwhelming,

05:16.040 --> 05:18.560
lots of conversations going on,

05:18.560 --> 05:23.520
and they have a question or a doubt or maybe some feedback to give.

05:23.520 --> 05:26.960
They may not choose to do that in your chat if there's not a space for them,

05:26.960 --> 05:28.720
that they feel like their voice is going to be heard.

05:28.720 --> 05:30.960
So if it's this chaotic,

05:30.960 --> 05:32.640
loud cacophonous like chat,

05:32.640 --> 05:35.320
hey, what's going on, lots of things going on.

05:35.320 --> 05:37.720
They may be like, all right, no,

05:37.720 --> 05:40.120
I'm not going to be able to engage here.

05:41.000 --> 05:46.400
We really want to create a chat space that they can have these needs met.

05:48.400 --> 05:52.320
Of course, we're talking about interacting with these people,

05:52.320 --> 05:56.120
but there's 20 minutes going on.

05:56.120 --> 06:02.040
These are three characteristics of collaboration and communication with chat that I've identified

06:02.040 --> 06:07.920
as being core to serving open-source, open research projects.

06:07.920 --> 06:09.560
That's as well as live,

06:09.560 --> 06:12.280
having an asynchronous ability to chat,

06:12.280 --> 06:14.800
having an efficient chat experience,

06:14.800 --> 06:16.960
and having a transparent chat experience.

06:16.960 --> 06:22.680
So something that we're working on together.

06:22.680 --> 06:24.640
So going back to Zulip, again,

06:24.640 --> 06:27.720
I'm a contributor to the Zulip open-source project.

06:27.720 --> 06:29.560
It's 100 percent open-source,

06:29.560 --> 06:32.080
modern chat application.

06:32.080 --> 06:34.760
We have many contributors from all over the world,

06:34.760 --> 06:38.280
lots of people making their first time contribution to open-source

06:38.280 --> 06:41.960
through an internship program like Outreachy,

06:41.960 --> 06:43.600
or Google Summer of Code,

06:43.600 --> 06:46.480
or just for their own interests.

06:47.040 --> 06:50.000
Folks can choose to self-host,

06:50.000 --> 06:53.840
obviously open-source their own server with their own chat application,

06:53.840 --> 06:59.520
or we also host Zulip Cloud for folks who want to be organizations on the Cloud.

06:59.520 --> 07:08.240
So let's start talking about tackling those characteristics that I talked about.

07:08.240 --> 07:12.640
So Zulip has this unique topic-based threading model.

07:12.640 --> 07:15.520
So you're probably familiar from chat applications,

07:15.520 --> 07:18.280
who has, everyone has a chat application they're using,

07:18.280 --> 07:21.600
right, with some shape or other on their phone or whatnot.

07:21.600 --> 07:24.160
So we have maybe, we call them in Zulip,

07:24.160 --> 07:25.560
we call them streams.

07:25.560 --> 07:29.680
You might be familiar with channels or rooms,

07:29.680 --> 07:34.920
and this is the big buckets that we set out for conversations that we're having.

07:34.920 --> 07:42.080
The thing about Zulip is we create another layer of context in our streams.

07:42.080 --> 07:48.480
So for example, I have an image here of a stream for our annual summit that we're having.

07:48.480 --> 07:51.320
We're going to have a great time at our annual summit,

07:51.320 --> 07:54.680
and we've actually within our annual summit conversation,

07:54.680 --> 08:00.080
our stream, we have topics that are coming in and binding those groups of conversations together,

08:00.080 --> 08:02.840
kind of like an email subject line would have.

08:02.840 --> 08:05.560
So it's the end of my day.

08:05.560 --> 08:11.200
I've just got my CI passing on my issue.

08:11.200 --> 08:13.240
I'm super excited, but I'm going to sign off.

08:13.240 --> 08:15.160
But I signed into chat just before I go,

08:15.160 --> 08:19.040
and I look and I have 78 unread messages in my annual summit stream.

08:19.040 --> 08:21.160
I was supposed to check in about this today,

08:21.160 --> 08:24.440
and I'm looking through and I open up the topics and I say,

08:24.440 --> 08:30.240
you know what, they're having a very lively discussion about a bouncy castle at our annual summit.

08:30.240 --> 08:34.320
But you know what? I don't like bouncy castles.

08:34.320 --> 08:36.720
I could care less about the bouncy castle.

08:36.720 --> 08:38.600
I have no interest in bouncy castle.

08:38.600 --> 08:43.000
I'm not going to be jumping in the bouncy castle at the summit.

08:43.000 --> 08:46.720
So that is 48 messages that I know right there from the topic.

08:46.720 --> 08:48.680
I don't need to read right now.

08:48.680 --> 08:50.480
I can save those for later.

08:50.480 --> 08:53.720
I can mark them unread now, whatever I'd like to do.

08:53.720 --> 08:55.800
But I can look at these topics and say, you know what?

08:55.800 --> 08:59.080
I'm really interested in the catering because I know some people attending

08:59.080 --> 09:02.160
our summit have some nut allergies that are very severe.

09:02.160 --> 09:06.440
I want to make sure that's part of this discussion focused on our catering.

09:06.440 --> 09:11.760
So I'm going to look at that topic and that focus conversation context there.

09:11.760 --> 09:16.200
If no one's brought that up in those four different messages,

09:16.200 --> 09:18.320
then I'm going to put in a pertinent question there.

09:18.320 --> 09:21.000
Hey, do we know that people are coming with nut allergies?

09:21.000 --> 09:24.320
Are we making sure our catering is accommodating that need?

09:24.320 --> 09:28.640
So by reading through my topics, topic by topic,

09:28.640 --> 09:31.360
I can focus on what my interests are,

09:31.360 --> 09:34.000
where I can add value to the chat,

09:34.000 --> 09:37.360
and it makes the whole experience much more manageable.

09:37.360 --> 09:40.480
So topics really make asynchronous chat work.

09:40.480 --> 09:45.520
We now have folks all over the globe who can participate with

09:45.520 --> 09:50.720
more contextual feedback when they're online.

09:50.720 --> 09:54.640
So again, they really care about that bouncy conversation that happened.

09:54.640 --> 09:57.640
They can still jump in and add their feedback there.

09:57.640 --> 10:02.120
Again, we make some space for people whose voices might get lost,

10:02.120 --> 10:10.280
new folks and users, and so chat becomes more useful for them.

10:10.280 --> 10:15.440
But of course, topics are being used by humans.

10:15.440 --> 10:17.640
Humans do not always work.

10:17.640 --> 10:20.080
We don't have conversations in straight lines.

10:20.080 --> 10:22.400
We don't always make sense all the time.

10:22.400 --> 10:26.080
And we need to make sure that they work with the humans that are working with them.

10:26.080 --> 10:29.840
So at Zulip, we've made a number of tools to work with

10:29.840 --> 10:32.600
the patterns of conversations that we have.

10:32.600 --> 10:38.080
So for example, maybe we have this new feature we're implementing,

10:38.080 --> 10:41.720
we're having this really intense design conversation in our design stream,

10:41.720 --> 10:44.960
and somebody has this really great new idea right here.

10:44.960 --> 10:47.520
What we're going to do is take that new idea message,

10:47.520 --> 10:50.280
we're going to move it over here to its own topic with the new idea.

10:50.280 --> 10:55.080
We're going to create a link between these two topics in the same stream for the design.

10:55.080 --> 10:57.840
And now we have two parallel topic conversations going on in

10:57.840 --> 11:00.760
the same stream about design that have context.

11:00.760 --> 11:04.200
We can go back, we can connect them.

11:04.920 --> 11:09.040
Maybe we're having this really intense conversation about the new release,

11:09.040 --> 11:11.280
and we have a really excited new contributor jump in and say,

11:11.280 --> 11:13.640
hey, my name is and I'm really excited.

11:13.640 --> 11:15.240
And what do we do? How do I get things done?

11:15.240 --> 11:19.200
And we can take that message, move it over to the new person stream,

11:19.200 --> 11:22.000
say introductions, hi, welcome, we're so glad you're here.

11:22.000 --> 11:24.400
Please read our documentation, let us know if you have questions.

11:24.400 --> 11:26.840
And this really important release conversation that's going on in

11:26.840 --> 11:32.840
our release stream continues uninterrupted and we keep our flow organized and efficient.

11:32.840 --> 11:38.320
Maybe you have some come in with a help question, right?

11:38.320 --> 11:39.600
They're asking for help.

11:39.600 --> 11:42.800
They're working on upgrading to the new release.

11:42.800 --> 11:44.960
They have some questions, they've had some issues.

11:44.960 --> 11:48.400
Some of our sysops who look it on,

11:48.400 --> 11:53.160
work with them with a question and they come to a resolution.

11:53.160 --> 11:56.520
That user can then mark that topic as resolved.

11:56.520 --> 11:59.640
A big check mark will show up in front of that topic visually.

11:59.640 --> 12:03.520
And now we know that that question has been answered and resolved.

12:03.520 --> 12:05.760
And so we have this kind of,

12:05.920 --> 12:14.080
they have the ability to step out and say,

12:14.080 --> 12:17.760
hey, you know what, my question was answered, thank you so much.

12:17.760 --> 12:18.960
This is done.

12:18.960 --> 12:25.520
So again, creating organization within our topics makes things more efficient.

12:25.520 --> 12:27.840
People can prioritize their time,

12:27.840 --> 12:30.400
we can move conversations forward,

12:30.400 --> 12:33.560
and people have agency to say, thank you, I'm done.

12:33.560 --> 12:36.680
Or, hey, this unresolved this topic,

12:36.680 --> 12:40.440
we thought we fixed it, but we didn't, it's still an issue, let's unresolved it.

12:40.440 --> 12:42.240
And we're building up all of this,

12:42.240 --> 12:44.720
these conversations are happening, they're branching off here,

12:44.720 --> 12:46.240
they're branching off there, they're branching out there.

12:46.240 --> 12:48.720
We built this big tree, this repository of knowledge.

12:48.720 --> 12:50.800
Now our chat is not something ephemeral,

12:50.800 --> 12:51.800
happening in the moment.

12:51.800 --> 12:54.800
We're really starting to create a repository of

12:54.800 --> 12:57.080
knowledge that's there for everyone to share.

12:57.080 --> 13:00.520
So we've got this asynchronous conversations,

13:00.520 --> 13:02.800
we've got this repository of knowledge.

13:02.800 --> 13:04.720
What about the transparency?

13:04.720 --> 13:09.720
Right? So in our most recent Zillip release in November,

13:09.720 --> 13:14.000
6.0, our public access feature was landed.

13:14.000 --> 13:18.840
And what public access makes basically is,

13:18.840 --> 13:22.120
is an organization with a Zillip can decide, you know what?

13:22.120 --> 13:23.840
That help stream we have,

13:23.840 --> 13:26.320
that's really important information we want to share with everyone.

13:26.320 --> 13:27.880
So we're going to make that web public,

13:27.880 --> 13:31.560
which basically means that anyone on the Internet can access

13:31.560 --> 13:35.920
those conversations without signing in and without logging into your Zillip.

13:35.920 --> 13:40.360
So that now is information that's on the Internet available to anyone.

13:40.360 --> 13:43.840
Whatever their questions are, whatever, however they get there,

13:43.840 --> 13:45.880
they can start accessing that information,

13:45.880 --> 13:47.400
those help questions right away.

13:47.400 --> 13:51.080
Maybe we have our design conversations and we don't put those in a public.

13:51.080 --> 13:53.600
So people know what is our design ethic,

13:53.600 --> 13:55.520
where are we moving, what are we working on?

13:55.520 --> 13:59.000
And we can make that web public and people can engage.

13:59.200 --> 14:02.400
Maybe we've had this really great conversation about

14:02.400 --> 14:05.600
a new feature that we're implementing in our chat,

14:05.600 --> 14:10.040
and we have over here in GitLab our issue tracker for that feature.

14:10.040 --> 14:11.640
We can actually now,

14:11.640 --> 14:14.640
if that conversation happened on a web public stream,

14:14.640 --> 14:17.880
we can take that, make a link to the chat.

14:17.880 --> 14:21.360
And again, anyone who gets to GitLab and looks at our issue and says,

14:21.360 --> 14:22.960
oh, there's more information here,

14:22.960 --> 14:25.520
click relevant chat conversation and now all of

14:25.520 --> 14:28.680
that information without logging in is available to that person.

14:28.680 --> 14:33.080
So again, we're really taking our chat with the public access and moving it beyond

14:33.080 --> 14:38.080
our community and making it relevant to anyone who's curious about our open source,

14:38.080 --> 14:40.280
our open research projects, like what we're doing.

14:40.280 --> 14:43.880
This is a value of open source that we have.

14:43.880 --> 14:46.960
So again, if we're making decisions in chat,

14:46.960 --> 14:49.200
this is available for people to see.

14:49.200 --> 14:53.440
New community members can start learning before they even sign up.

14:53.440 --> 14:55.600
And we have this repository,

14:55.600 --> 15:00.960
this tree of knowledge that we built that's now out there in the wild,

15:00.960 --> 15:05.040
in the forest of the Internet that we have that we're sharing with everyone.

15:05.040 --> 15:10.480
So really creating that transparent and chats becoming much more

15:10.480 --> 15:15.160
relevant beyond just an ephemerable conversation.

15:15.160 --> 15:18.800
So as I mentioned, Zulip is 100 percent open source,

15:18.800 --> 15:21.800
free, you can start your own server.

15:21.800 --> 15:26.120
And we also have our Zulip Cloud which has a free level of support.

15:26.120 --> 15:30.720
Similarly to Slack before they made their change this summer,

15:30.720 --> 15:31.840
which is like limited,

15:31.840 --> 15:34.840
you have a certain history of messages.

15:35.000 --> 15:38.640
With non-profits, open source projects,

15:38.640 --> 15:42.920
academic research, we actually offer sponsorship on our Zulip Cloud standard,

15:42.920 --> 15:44.440
which is normally a paid platform.

15:44.440 --> 15:47.800
So you get even more history available to the public.

15:47.800 --> 15:49.200
It's not limited.

15:49.200 --> 15:50.920
That public access is there.

15:50.920 --> 15:56.920
So we really are committed to being part of the open source community.

15:56.920 --> 16:02.840
And making sure that all of our projects have great connection,

16:02.840 --> 16:05.600
collaboration, and are engaging all of the people who

16:05.600 --> 16:08.120
want to be involved in the organizations.

16:08.120 --> 16:09.760
Again, thank you so much.

16:09.760 --> 16:10.760
That's about it for me.

16:10.760 --> 16:13.360
I have some great links that are in the slides here.

16:13.360 --> 16:15.960
The community's directory is a directory of

16:15.960 --> 16:19.680
organizations on Zulip that have opted into the public access already.

16:19.680 --> 16:22.400
So if you're curious, that's a great place to start looking.

16:22.400 --> 16:24.600
You can find me at Zulip Development Community.

16:24.600 --> 16:26.960
That's where we are talking about Zulip and

16:26.960 --> 16:29.840
the features that we're implementing and what we're doing.

16:29.840 --> 16:32.360
We have some case studies, etc.

16:32.360 --> 16:37.640
So I want to open it to questions or I can jump into one of

16:37.640 --> 16:40.320
these open Zulip instances if anyone's interested.

16:40.320 --> 16:41.720
Yeah. So thank you.

16:41.720 --> 16:42.720
Thank you.

16:42.720 --> 16:48.720
Yes.

16:48.720 --> 16:54.920
So for topics to work efficiently, you need to be really strict with

16:54.920 --> 16:56.920
moving messages around.

16:56.920 --> 17:01.520
And that means that moderators, I guess,

17:01.520 --> 17:07.000
would have to scan every message and move things around.

17:07.000 --> 17:07.720
Yeah, yeah.

17:07.720 --> 17:10.640
So the question is, for topics to work and

17:10.640 --> 17:14.520
removing things around and when people come in,

17:14.520 --> 17:18.360
you take on a lot of moderators who have to kind of be very active and

17:18.360 --> 17:20.320
efficient in that.

17:20.320 --> 17:24.640
Yes, definitely my experience in Zulip Cloud.

17:24.640 --> 17:25.920
It depends on your organization.

17:25.920 --> 17:27.560
You can actually set that up.

17:27.560 --> 17:32.000
So for example, just moving topics within the same stream,

17:32.000 --> 17:34.040
like maybe somebody didn't name it very well.

17:34.040 --> 17:39.480
You can actually set that permission level to a generic user right now.

17:39.480 --> 17:41.480
And we're actually working on our user groups so

17:41.480 --> 17:46.560
that they can be even more designed to be unique to the organization.

17:46.560 --> 17:51.600
So those permissions can kind of be shared throughout your user base.

17:51.600 --> 17:54.280
So we actually have this in our New Year's.

17:54.280 --> 17:58.920
There's a lot of times we're coming in and to Zulip who want to contribute.

17:58.920 --> 18:02.360
And they're sending messages in very quickly.

18:02.360 --> 18:06.600
They'll start actually, if they see a message kind of go jump into a stream and

18:06.600 --> 18:09.400
interrupt a conversation, they'll even just move that out, right?

18:09.400 --> 18:12.240
As a person maybe who was there for two weeks.

18:12.240 --> 18:16.800
But it does require that kind of communal engagement.

18:16.800 --> 18:18.080
But you can disperse that so

18:18.080 --> 18:20.880
it's not just on your core contributors or your moderators.

18:20.880 --> 18:23.360
It can kind of be dispersed and hopefully with user groups,

18:23.360 --> 18:25.920
which is a feature that we're working on and planning.

18:25.920 --> 18:29.160
That'll be even more, can be fine tuned to your organization and

18:29.160 --> 18:33.520
how the community you want to create with your Zulip chat.

18:33.520 --> 18:34.520
Other questions?

18:34.520 --> 18:35.520
Yes.

18:35.520 --> 18:42.880
It's a big one, but the feature that we shared content with the public,

18:42.880 --> 18:44.760
it's really interesting.

18:44.760 --> 18:47.960
But I was wondering, how do you handle privacy?

18:47.960 --> 18:54.960
And is there a way that you can control this kind of things?

18:54.960 --> 18:58.040
Right, so each Zulip organization is deciding.

18:58.040 --> 19:02.160
So the question is, how do you control privacy with public streams and

19:02.160 --> 19:05.480
what's going on for the folks listening at home?

19:05.480 --> 19:09.680
So definitely your organization is deciding what streams are web public,

19:09.680 --> 19:10.200
right?

19:10.200 --> 19:15.360
So that is definitely kind of when you sign on and you're posting in those

19:15.360 --> 19:20.360
streams, it's kind of like this information is available in general on the internet.

19:21.560 --> 19:23.320
There are private streams in Zulip.

19:23.320 --> 19:26.320
There are streams that are public within your Zulip organization that people

19:26.320 --> 19:26.880
have to sign in.

19:26.880 --> 19:30.720
So for example, on our Zulip development community,

19:30.720 --> 19:37.360
the stream for asking help for new contributors, getting help with development,

19:37.360 --> 19:38.520
that's not a web public stream.

19:38.520 --> 19:41.680
Because that's kind of folks being vulnerable and maybe asking questions and

19:41.680 --> 19:44.640
saying, I don't know how to do this, can someone help?

19:44.640 --> 19:47.280
Obviously, that's not something, I mean, that's super brave of them and

19:47.280 --> 19:50.600
we're proud, we want that as public within our organization.

19:50.600 --> 19:52.200
But we're not sending that out to the internet.

19:52.200 --> 19:55.480
So we've made that choice culturally as an organization.

19:55.480 --> 19:57.800
So each organization that decides.

19:57.800 --> 20:01.480
So I believe the REST language that's using the public access feature,

20:01.480 --> 20:04.320
they've decided that all of their streams are web public.

20:04.320 --> 20:09.160
So basically, when you sign up to be part of that chat discussion on the REST

20:09.160 --> 20:12.760
language community, whatever discussion you're having there is available on

20:12.760 --> 20:13.800
the internet.

20:13.800 --> 20:18.400
And so that's just part of the culture of each organization that you're setting up.

20:18.400 --> 20:22.600
You can definitely set it up so there are more privacy focused organizations.

20:22.600 --> 20:25.040
But again, thinking about open source communities and

20:25.040 --> 20:28.360
the fact that we want to be having, there are definitely certain parts of our

20:28.360 --> 20:32.880
conversations and chats that we might want to be having as publicly as possible, right?

20:32.880 --> 20:33.640
So, yeah.

20:35.360 --> 20:37.240
Any other questions?

20:37.240 --> 20:38.400
Yes.

20:38.400 --> 20:41.280
Do you have any integration API?

20:41.280 --> 20:43.640
Yes, yes, we have lots of integrations.

20:43.640 --> 20:53.040
I mean, it's just my company, they try to remove a slack and use things.

20:53.040 --> 20:56.040
And only engineers say, what was that?

20:56.040 --> 20:57.920
It's useless.

20:57.920 --> 21:02.400
So I guess that you have also this kind of integration.

21:02.400 --> 21:07.120
Right, yeah, so you can move from Slack to Zulip, for instance.

21:07.120 --> 21:09.760
Or GitHub to Zulip and so on.

21:09.760 --> 21:10.320
Yes, yes.

21:10.320 --> 21:14.640
Well, GitHub for tracking issues and Zulip as a chat application work together, yeah.

21:14.640 --> 21:21.440
So we track our, we're on GitHub for our open source,

21:21.440 --> 21:24.800
that's where our code is, and so our issues link and

21:24.800 --> 21:28.120
we use integrations for bots to communicate and stuff.

21:28.120 --> 21:31.080
So, but definitely there are lots of integrations and

21:31.080 --> 21:36.120
such that one can use, lots of different authentication methods, etc.

21:36.120 --> 21:38.840
It's a fully fledged modern chat app.

21:38.840 --> 21:39.360
Yeah.

21:40.400 --> 21:42.120
Other questions?

21:42.120 --> 21:43.680
Curiosity.

21:43.680 --> 21:44.800
Again, if your, your,

21:44.800 --> 21:49.520
QISU's been for your open source projects, please, I'll be around tomorrow or

21:49.520 --> 21:52.080
come on the Zulip development community, check us out.

21:52.080 --> 21:56.120
We have lots of public streams and I'm just been really excited to see everyone

21:56.120 --> 22:20.080
here at Fostom, and thank you for having me.
