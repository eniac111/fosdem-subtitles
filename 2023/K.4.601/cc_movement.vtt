WEBVTT

00:00.000 --> 00:11.800
First session, and I wanted to give you like explain a bit more, give an overview of the

00:11.800 --> 00:15.000
fields rights for those learning.

00:15.000 --> 00:16.920
So I'm Nick Vidal.

00:16.920 --> 00:21.920
I'm part of the NRX, Community Manager at NRX.

00:21.920 --> 00:23.920
It's part of the Confidential Computing Consortium.

00:23.920 --> 00:25.720
It's an open source project.

00:25.720 --> 00:31.080
I'm also serving as the chair of the Outreach Committee from the Confidential Computing Consortium,

00:31.080 --> 00:33.800
and it's a pleasure to be here.

00:33.800 --> 00:39.660
So let's start out with talking about the states of data protection.

00:39.660 --> 00:40.920
This is very basic.

00:40.920 --> 00:47.280
I mean, everybody knows about protecting arrests, protecting data arrests, protecting data in

00:47.280 --> 00:50.360
transit, but now protecting EUs.

00:50.360 --> 00:53.680
This is something that is relatively new.

00:53.680 --> 00:56.960
So what exactly is protecting data arrests?

00:56.960 --> 01:04.560
When you have your hard drive encrypted, your laptop, your traveling, you get lost, that

01:04.560 --> 01:11.760
data is safe as long as your hard drive is encrypted and nobody can get in there.

01:11.760 --> 01:18.960
In transit, when you open up your browser and you just type HTTPS and you access some

01:18.960 --> 01:26.280
website, the data that's flowing between your browser and the server, if that's using HTTPS,

01:26.280 --> 01:31.200
that's encrypted and nobody can tamper into that data.

01:31.200 --> 01:32.200
That's secure.

01:32.200 --> 01:40.740
However, there's a third way that the data can also be accessible, and that's directly

01:40.740 --> 01:41.740
on the CPU.

01:41.740 --> 01:52.880
This is something that people mostly are not aware of, developers, even security professionals,

01:52.880 --> 02:01.880
and they are not aware that when you have some type of application or data running at

02:01.880 --> 02:08.520
the CPU in memory, if for some reason that system is compromised, somebody can get access

02:08.520 --> 02:11.240
to that data.

02:11.240 --> 02:16.880
Suppose that there's an exploit, somebody gains root access, they'll be able to see

02:16.880 --> 02:20.680
what's in memory.

02:20.680 --> 02:27.560
Conflash computing allows you to encrypt data while in use, while in the CPU.

02:27.560 --> 02:36.560
Even if somebody gains access, root access to that system, they won't have access to

02:36.560 --> 02:37.640
that data.

02:37.640 --> 02:49.360
Because it's just like the hard drive example, it's just like the data in transit example.

02:49.360 --> 02:57.280
Conflash computing protects data and the codes, both confidentiality and integrity.

02:57.280 --> 03:05.440
Confidentiality means you cannot actually read the data and integrity, you cannot mess

03:05.440 --> 03:11.040
up a tamper with that data or with that code.

03:11.040 --> 03:18.320
For confidential computing to have, to achieve confidential computing, you have to at least

03:18.320 --> 03:25.480
provide data confidentiality, data integrity, and codes integrity.

03:25.480 --> 03:29.680
How about codes confidentiality?

03:29.680 --> 03:34.560
As part of the confidential computing consortium's definition of confidential computing, that's

03:34.560 --> 03:46.000
not necessary, but some projects like the NRX projects, we provide all those protections.

03:46.000 --> 03:51.760
This is the official definition by the confidential computing consortium.

03:51.760 --> 03:57.840
Confidential computing protects data in use by performing computation in a hardware-based,

03:57.840 --> 04:21.840
out-tested, trusted, and managed sensitive and regulated data.

04:21.840 --> 04:30.760
I wanted to read that because the CCC worked, a whole bunch of people worked together during

04:30.760 --> 04:39.240
one year to define this definition and another year to add one word attested.

04:39.240 --> 04:46.280
I wanted to read very clearly to make this definition so I wouldn't make a mistake.

04:46.280 --> 04:51.760
I don't want to memorize it and forget something.

04:51.760 --> 04:53.920
What's confidential computing?

04:53.920 --> 04:55.200
What's the case study?

04:55.200 --> 04:57.560
Where can it be used?

04:57.560 --> 04:59.600
Actually it has many uses.

04:59.600 --> 05:04.240
Right now we have some sectors that are very much regulated.

05:04.240 --> 05:11.760
They have a lot of sensitive data and in fact they cannot use the clouds as of today.

05:11.760 --> 05:15.120
They simply can't.

05:15.120 --> 05:19.480
Policies won't allow them to benefit from the clouds.

05:19.480 --> 05:23.440
So we have, for example, banking, financial services, insurance.

05:23.440 --> 05:27.360
Of course they have a lot of sensitive financial data.

05:27.360 --> 05:30.160
We also have healthcare.

05:30.160 --> 05:33.200
There's the HIPAA, for example, in the US.

05:33.200 --> 05:37.560
It's regulation regarding healthcare.

05:37.560 --> 05:45.560
We have telecom, edge, IOT, governments, a whole bunch of sectors that currently do not

05:45.560 --> 05:51.080
use the clouds because they can't, because they have a lot of sensitive data, because

05:51.080 --> 05:55.000
it's very much regulated by governments, policies.

05:55.000 --> 06:04.760
So confidential computing will open the clouds, the IOT, the edge through these sectors.

06:04.760 --> 06:07.120
They have a lot of sensitive data.

06:07.120 --> 06:12.840
And that's the huge potential of this technology.

06:12.840 --> 06:21.000
If we can open up these, the clouds through these sectors, you'll grow a lot.

06:21.000 --> 06:26.640
That's one of the reasons why cloud service providers are currently, this year and this

06:26.640 --> 06:34.480
past year, they have offered confidential computing and this is going to grow immensely.

06:34.480 --> 06:40.200
So I talked about the confidential computing consortium.

06:40.200 --> 06:42.640
We are part of the Linux Foundation.

06:42.640 --> 06:51.120
We bring together hardware vendors like Intel, AMD, ARM, Nvidia, cloud service providers

06:51.120 --> 07:02.120
like Azure, Google clouds, and so many others, startups as well, and software developers.

07:02.120 --> 07:04.200
We have a whole bunch of members here.

07:04.200 --> 07:11.160
As you can see, all the major players are betting on this because in some ways this

07:11.160 --> 07:17.720
is the future of the clouds in terms of security.

07:17.720 --> 07:21.960
And we have, currently we have seven open source projects.

07:21.960 --> 07:28.320
We invite as many open source projects, if you are working with confidential computing

07:28.320 --> 07:32.680
and you have a nice project, we welcome you to the CCC.

07:32.680 --> 07:39.880
So I work at the Anark, but we have Gramin, we have Veracruz, Veracone, a lot of very

07:39.880 --> 07:45.400
great technology here, which is fully open source.

07:45.400 --> 07:52.160
Now let's step back and look at the Let's Encrypt movement.

07:52.160 --> 07:58.360
Not many people are aware of confidential computing and its importance of protecting

07:58.360 --> 08:01.280
data while in use.

08:01.280 --> 08:08.840
If we go back 10, 15 years ago, that was the same challenge that we had regarding protecting

08:08.840 --> 08:11.680
data in transit.

08:11.680 --> 08:18.160
People were like, hey, I'm not an e-commerce, I'm not like a bank, or why should I use HTTPS,

08:18.160 --> 08:19.520
right?

08:19.520 --> 08:24.400
We kind of left right now, hey, HTTPS is just the default, right?

08:24.400 --> 08:25.400
It's very easy.

08:25.400 --> 08:29.000
Why we shouldn't have this as the default?

08:29.000 --> 08:34.600
Everyone from whatever, you have your own blog, it doesn't have any sensitive data,

08:34.600 --> 08:40.040
so even so, you're going to use HTTPS because it's easy, it's convenient, and it's just

08:40.040 --> 08:41.960
more secure.

08:41.960 --> 08:51.640
This same mindset is what we need to change for people to start really thinking about

08:51.640 --> 08:55.040
data in use, of protecting data in use.

08:55.040 --> 08:58.400
And it will make everything so much secure.

08:58.400 --> 09:07.440
It doesn't matter if your system gets hacked, if everyone has roots access to it, even so,

09:04.540 --> 09:34.320
So, landscape crypt, it was started in 2012 by four people, two from Mozilla, one from

09:07.440 --> 09:09.320
it's not game over.

09:09.320 --> 09:11.420
Your data is still secure.

09:11.420 --> 09:19.160
We hear in the news all the time about all the vulnerabilities, and this could have been

09:19.160 --> 09:34.320
prevented by using Conf

09:34.320 --> 09:38.880
the Electronic Frontier Foundation, and from the University of Michigan.

09:38.880 --> 09:42.140
It's the world's largest certificate authority.

09:42.140 --> 09:52.620
It provides free TLS encryption, and the goal is to really make the web safer using HTTPS.

09:52.620 --> 09:56.280
They have a lot of sponsors and partners.

09:56.280 --> 10:00.360
As I mentioned, they're part of the Linux Foundation, the Linux Foundation helps them,

10:00.360 --> 10:04.460
as a partner, also the Mozilla Foundation, EFF.

10:04.460 --> 10:12.700
There's a whole group of people that see the importance of having HTTPS by default today.

10:12.700 --> 10:19.740
And what makes it possible is that they have developed software that's very easy to use,

10:19.740 --> 10:27.880
that makes it just, it's a very easy process to enable HTTPS.

10:27.880 --> 10:38.960
So they have the Acma protocol, and they have those who have provided open up search bots.

10:38.960 --> 10:40.200
You know what that is?

10:40.200 --> 10:46.140
That's the Python application that creates a certificate, right?

10:46.140 --> 10:48.760
And on the server side, they have Boulder.

10:48.760 --> 10:55.840
And these technologies, this software, and this protocol, they make it really easy to

10:55.840 --> 11:00.920
achieve HTTPS by default.

11:00.920 --> 11:04.200
So I'm not sure if you can see really well here.

11:04.200 --> 11:09.240
The contrast is not really good, but you can see the growth here.

11:09.240 --> 11:10.240
So this is the...

11:10.240 --> 11:14.280
It's quite well on the stream if you happen to have the right...

11:14.280 --> 11:19.600
So this is the start of the project.

11:19.600 --> 11:24.720
I can't actually see the ears here.

11:24.720 --> 11:27.120
But as you can see, it's growing, right?

11:27.120 --> 11:29.760
It has grown a lot.

11:29.760 --> 11:37.040
Especially here, I'm not sure what happened here, but this is how many certificates they

11:37.040 --> 11:42.360
have given rights.

11:42.360 --> 11:44.840
And so it's very successful.

11:44.840 --> 11:52.680
Let's Encrypt is one of the most successful achievements to help secure the web.

11:52.680 --> 11:55.900
And how did they accomplish this?

11:55.900 --> 12:02.520
What can the confidential computing community learn from the Let's Encrypt movements?

12:02.520 --> 12:09.160
So here are some key ideas that I thought about, but you can also explore this.

12:09.160 --> 12:12.020
And this can be an open discussion as well.

12:12.020 --> 12:20.720
So first of all, make a campaign that brings this awareness around the importance of encrypting

12:20.720 --> 12:23.480
data while in use.

12:23.480 --> 12:28.720
The same way that Let's Encrypt did this for data in transit.

12:28.720 --> 12:32.200
For us, HTTPS is just the default way.

12:32.200 --> 12:35.200
We can't think of any other way of doing this.

12:35.200 --> 12:39.880
Why would we use HTTP only, right?

12:39.880 --> 12:41.840
Even for a blog or whatever.

12:41.840 --> 12:45.160
It just makes sense.

12:45.160 --> 12:49.920
So adoption by TEs, by cloud service providers.

12:49.920 --> 12:51.960
This is happening right now.

12:51.960 --> 12:59.120
So all the major cloud service providers are really making this generally available.

12:59.120 --> 13:04.800
And they're a bit expensive right now, but they should become more affordable in the

13:04.800 --> 13:06.840
future.

13:06.840 --> 13:13.000
Of course, all the hardware developers, they have made the technologies available.

13:13.000 --> 13:15.320
So Intel, ARM.

13:15.320 --> 13:18.520
ARM is still going to release this.

13:18.520 --> 13:20.560
But you have AMD as well.

13:20.560 --> 13:27.200
They have invested a lot, sometimes even a decade, right, in terms of Intel, SGX.

13:27.200 --> 13:32.000
We have to develop software that makes it really easy to deploy computer computing.

13:32.000 --> 13:36.360
So one of the projects is Enarx.

13:36.360 --> 13:38.240
We make it really easy.

13:38.240 --> 13:42.760
We use WebAssembly to allow developers to deploy applications.

13:42.760 --> 13:47.360
And it's really nice if you want to check that out.

13:47.360 --> 13:50.160
We have to abstract the complexities.

13:50.160 --> 13:52.120
Complex computing is really complex.

13:52.120 --> 13:54.160
You have to know about encryption.

13:54.160 --> 14:02.760
You have to learn about attestation, about the different models that exist to achieve

14:02.760 --> 14:04.480
computational computing.

14:04.480 --> 14:11.640
And the software has to abstract all those complexities if you want to gain market share,

14:11.640 --> 14:12.640
right?

14:12.640 --> 14:15.520
It has to be CSP neutral.

14:15.520 --> 14:19.520
It has to be hardware neutral, preferably.

14:19.520 --> 14:25.640
The developer doesn't have to know if his application is going to run on AMD or Intel

14:25.640 --> 14:26.640
or whatever.

14:26.640 --> 14:28.760
It just should work.

14:28.760 --> 14:33.360
He's going to deploy this application and it will just, complex computing will just,

14:33.360 --> 14:36.120
everything will be encrypted.

14:36.120 --> 14:39.720
And he doesn't have to care about attestation or whatever.

14:39.720 --> 14:41.040
Just works.

14:41.040 --> 14:44.400
Just like Let's Encrypts.

14:44.400 --> 14:45.520
Promotes open source software.

14:45.520 --> 14:48.280
I believe open source plays a very important role here.

14:48.280 --> 14:53.840
And the Confidential Computing Consortium has this as part of its mission to promote

14:53.840 --> 14:55.120
open source software.

14:55.120 --> 14:59.980
That's why we adopted setting open source projects here.

14:59.980 --> 15:02.080
We have to make it affordable.

15:02.080 --> 15:05.360
And right now it's very niche.

15:05.360 --> 15:10.800
But we have to see that maybe in five years, this is just going to be the default way,

15:10.800 --> 15:11.800
right?

15:11.800 --> 15:15.480
Maybe eventually it might even be free.

15:15.480 --> 15:19.800
So we want to commoditize Confidential Computing at some point, right?

15:19.800 --> 15:24.400
To make this a reality by default.

15:24.400 --> 15:30.340
And so with that, I would like to thank you for hearing me.

15:30.340 --> 15:35.680
You can get in touch with us at the Confidential Computing Consortium using this email.

15:35.680 --> 15:38.840
And I invite you to join our tech meetings.

15:38.840 --> 15:41.560
It happens every other week.

15:41.560 --> 15:45.080
And also our outreach meetings.

15:45.080 --> 15:52.720
If you want to really learn or share your technical ideas, I recommend joining the tech

15:52.720 --> 15:59.320
committee and outreach if you want to expand this idea and promote it.

15:59.320 --> 16:00.920
So thank you very much.

16:00.920 --> 16:01.920
And that's it.

16:01.920 --> 16:12.560
Do we have some time for questions?

16:12.560 --> 16:13.560
Yes, we have.

16:13.560 --> 16:14.560
The first block is a little bit cramped.

16:14.560 --> 16:17.560
So there's a little bit less time for questions in the first block.

16:17.560 --> 16:22.080
But can you feel free to ask some?

16:22.080 --> 16:28.120
And I think you're also around the rest of today to answer any questions.

16:28.120 --> 16:33.200
So with TLS, I have the feeling that the infrastructure was already there.

16:33.200 --> 16:37.280
It was just a problem of it was too complicated.

16:37.280 --> 16:42.600
And with Confidential Computing as a developer, I don't really even know where to start.

16:42.600 --> 16:45.120
The infrastructure is coming.

16:45.120 --> 16:50.200
The CSPs, they're really adopting Confidential Computing.

16:50.200 --> 16:56.000
We had heard some announcements, especially last year, of making this technology generally

16:56.000 --> 16:57.640
available.

16:57.640 --> 17:00.440
Really, the prices need to drop.

17:00.440 --> 17:04.280
You must make it really easy for people to adapt this.

17:04.280 --> 17:09.760
I currently can't use it on my laptop, for example.

17:09.760 --> 17:19.360
Confidential Computing is mostly targeted for the server side or the edge or IoT.

17:19.360 --> 17:26.440
There are some, the Intel SGX for the PC or for the laptop.

17:26.440 --> 17:31.360
In fact, they were degraded.

17:31.360 --> 17:34.000
Intel's not supporting this anymore.

17:34.000 --> 17:37.360
But yeah, you're right.

17:37.360 --> 17:38.360
So one second.

17:38.360 --> 17:44.360
Andrew, the next speaker could maybe already set up while we have the next question.

17:44.360 --> 17:46.360
Maybe go ahead.

17:46.360 --> 17:50.360
Thank you for a very nice talk.

17:50.360 --> 17:55.360
So you were talking about this definition of Confidential Computing, that Confidential

17:55.360 --> 18:00.200
Computing Consortium had decided on the kind of mentioned entity.

18:00.200 --> 18:03.200
One year, you had attested this definition.

18:03.200 --> 18:04.200
Why was that?

18:04.200 --> 18:06.280
Why was it there in the first?

18:06.280 --> 18:07.280
Yeah.

18:07.280 --> 18:12.800
So attestation was not part of the first definition.

18:12.800 --> 18:18.080
The reason why is because attestation is really complex and maybe it wasn't given as much

18:18.080 --> 18:26.320
importance as before, but once attestation became a really big discussion after.

18:26.320 --> 18:30.280
In fact, they created a special interest group around attestation.

18:30.280 --> 18:48.800
And that's when they decided to add it.
