WEBVTT

00:00.000 --> 00:09.680
Okay, so we are going to start the next talk.

00:09.680 --> 00:14.800
The next talk is about optimizing your qualifications for integration, learning from integrating

00:14.800 --> 00:18.280
open projects with Nextcloud.

00:18.280 --> 00:19.280
Thank you.

00:19.280 --> 00:20.280
Hello everyone.

00:20.280 --> 00:21.280
My name is Willem Lindeheil.

00:21.280 --> 00:27.040
I am one of the lucky co-founders of OpenProject and today I'm here because I'm also the managing

00:27.040 --> 00:31.000
engineer of the OpenProject Nextcloud integration.

00:31.000 --> 00:36.520
And just to get the first things, the most important message is out right now.

00:36.520 --> 00:40.840
I assume that here are more core developers of open source software, collaboration software

00:40.840 --> 00:43.440
and also product managers here in the room.

00:43.440 --> 00:48.920
So for you, please take home this message, prioritize integrations on your roadmap.

00:48.920 --> 00:49.920
Okay?

00:49.920 --> 00:56.040
So right now is a great moment where the public sector, not only the public sector but many

00:56.040 --> 01:04.520
people ask for integrations that we integrate our open source software together to provide

01:04.520 --> 01:11.560
an alternative to the Office 365, to the Google Cloud, Google applications and so on.

01:11.560 --> 01:18.520
Right now, people ask us that we join together forces so that together that we are stronger

01:18.520 --> 01:23.760
and become stronger in each single application so that we provide an alternative to the big

01:23.760 --> 01:24.760
tax.

01:24.760 --> 01:25.760
Okay?

01:25.760 --> 01:28.480
So integrations are really important.

01:28.480 --> 01:33.520
And with that, every single application, if we integrate, every single application doesn't

01:33.520 --> 01:36.720
need to do what the other application does.

01:36.720 --> 01:43.200
So we can focus on our own stuff and get better in our own silo, on our own puzzle piece of

01:43.200 --> 01:47.320
the big picture.

01:47.320 --> 01:48.840
Now the bad news.

01:48.840 --> 01:53.360
Building integrations is unnecessarily hard.

01:53.360 --> 01:59.040
We always, what the good news is, you always encounter the same problems again and again.

01:59.040 --> 02:04.720
So that kind of predictable what is going to fail when you do an integration.

02:04.720 --> 02:10.280
So my call out here is please drink your own champagne and participate as core developers

02:10.280 --> 02:15.720
in the integration projects that integrate into your system because then you see the

02:15.720 --> 02:19.880
issues that people face when integrating.

02:19.880 --> 02:21.800
Because integrations are amazing, right?

02:21.800 --> 02:26.120
Just imagine what the web would be without a link or a browser would be without extension

02:26.120 --> 02:28.160
or a mobile phone without application.

02:28.160 --> 02:30.160
It would be boring, right?

02:30.160 --> 02:36.200
And it's just unpredictable what integrations come out if you just let people do.

02:36.200 --> 02:37.960
And people have great ideas.

02:37.960 --> 02:43.360
So one example of such a great idea was the public sector.

02:43.360 --> 02:48.200
The city of Cologne and the University of DÃ¼sberg-Eisen approached us with the idea

02:48.200 --> 02:51.420
of hey, you had open project.

02:51.420 --> 02:57.160
We like you really much for organizing work, organizing tasks, organizing our teams.

02:57.160 --> 03:03.360
And we also use Nextcloud for organizing our files to share the files with our people.

03:03.360 --> 03:06.080
And we always find the same problem again and again.

03:06.080 --> 03:08.500
Where are the files for our tasks?

03:08.500 --> 03:10.640
So when you do some work, you do a real job.

03:10.640 --> 03:16.880
You usually need some files as input to work on the task and then at the end you need to

03:16.880 --> 03:19.840
deliver some files and put them somewhere.

03:19.840 --> 03:22.920
And you need to communicate somewhere where the files are.

03:22.920 --> 03:27.200
So why not tracking that at the same entity, which is the ticket.

03:27.200 --> 03:33.400
We call it a work package and solve that problem and have some real integrity between the two

03:33.400 --> 03:40.160
systems like work package and real ID linking to the files in Nextcloud.

03:40.160 --> 03:43.840
So for the last year, roughly eight people were working on this deep integration.

03:43.840 --> 03:46.840
There's a lot of people because it's pretty hard.

03:46.840 --> 03:54.440
But anyway, so what we got is what you can see here is like an open project with a work

03:54.440 --> 03:59.240
package and you can see there's some tasks, like second fermentation dough.

03:59.240 --> 04:00.240
You want to do this.

04:00.240 --> 04:02.040
You want to have a nice pizza.

04:02.040 --> 04:08.320
And on the right hand side, you have the files tab where you see all the files that are related.

04:08.320 --> 04:12.280
And now it's not only that you have attachments, which were there already, not open project

04:12.280 --> 04:13.280
before.

04:13.280 --> 04:19.720
You can also add multiple Nextcloud instances to your open project and say, okay, these

04:19.720 --> 04:23.080
files should be stored here with that contributor.

04:23.080 --> 04:28.840
These files should be stored there with this client, with this subcontractor.

04:28.840 --> 04:33.720
So you can have multiple next cloud instances connected to open project.

04:33.720 --> 04:42.320
And you will always see which files are relevant for finishing a task and where you should

04:42.320 --> 04:44.080
put the files when you're ready and done.

04:44.080 --> 04:49.640
And you hand over the task to the next one, the next assignee, let's say, and you follow

04:49.640 --> 04:53.600
workflow process with an open project.

04:53.600 --> 04:58.960
And on the other side, or Nextcloud, when you're on a file or you're on a folder, you

04:58.960 --> 05:04.600
can see where these files or folders are relevant and which task, which business processes they

05:04.600 --> 05:05.600
come up.

05:05.600 --> 05:09.360
So you can see here on the right hand side, we have this open project tab.

05:09.360 --> 05:16.440
So you can see, okay, this file is relevant in two places and two work packages.

05:16.440 --> 05:19.760
You can quickly see what status they are in.

05:19.760 --> 05:27.400
So the problem of where the files for my task are finally solved.

05:27.400 --> 05:32.600
Now I want to get a little bit deeper into the architecture of that thing because we

05:32.600 --> 05:37.260
want to talk about problems that come with integrations.

05:37.260 --> 05:40.360
So it's a very, very high level architecture picture.

05:40.360 --> 05:44.240
As you can see, there's an open project server, there's an Nextcloud server, there's an open

05:44.240 --> 05:49.080
project front end that runs in the same browser that runs the Nextcloud front end, same different

05:49.080 --> 05:50.960
browser windows.

05:50.960 --> 05:54.400
And for this integration, we extended the open project core.

05:54.400 --> 05:55.960
So it's not a plugin.

05:55.960 --> 06:00.240
It's right in the open project core, which extends the open project front end.

06:00.240 --> 06:06.840
And on the Nextcloud side, we put everything into a Nextcloud app, which is basically a

06:06.840 --> 06:09.680
bundle of code that you execute within Nextcloud.

06:09.680 --> 06:14.160
Or we could call it a plugin or extension.

06:14.160 --> 06:20.100
So that plugin extends the Nextcloud server and also the Nextcloud front end.

06:20.100 --> 06:25.560
What we chose for the communication between the two systems is that we want that every

06:25.560 --> 06:29.820
user, because users have permissions on the one system and users have permissions on the

06:29.820 --> 06:33.440
other system, we wanted to make sure that these things match up.

06:33.440 --> 06:38.800
So that an open project user that is looking for a file can only see files of, can only

06:38.800 --> 06:45.320
select files to link them that he or she has access to.

06:45.320 --> 06:49.920
But at the same time, we wanted to make sure that all linked files are visible to all users

06:49.920 --> 06:53.640
because someone says, like, this is the relevant file, maybe you don't have access, but you

06:53.640 --> 06:55.100
should know that these files exist.

06:55.100 --> 07:02.060
So we have these references by file ID from open project to Nextcloud.

07:02.060 --> 07:05.980
And the other way around, of course, as well, when you're in Nextcloud and you saw these

07:05.980 --> 07:11.360
files linked, the work packages linked, you also should only link those work packages

07:11.360 --> 07:12.800
that you have access to.

07:12.800 --> 07:17.060
So work packages are organized in projects, you're a member of a project or not.

07:17.060 --> 07:18.960
So depending on this, you have access or not.

07:18.960 --> 07:21.640
So we need to have some one-on-one matching between the users.

07:21.640 --> 07:25.800
So we use OAuth for this one-on-one matching.

07:25.800 --> 07:30.400
So users are always authenticated and don't need to re-authenticate every time they log

07:30.400 --> 07:31.400
in.

07:31.400 --> 07:32.400
Okay.

07:32.400 --> 07:40.680
So, but there's one thing on this architecture you can already spot maybe that smells like

07:40.680 --> 07:42.080
trouble.

07:42.080 --> 07:46.400
That is the arrow in the middle that goes from the open project front and directly to

07:46.400 --> 07:47.680
Nextcloud.

07:47.680 --> 07:52.800
Because that is a request, a cross-site request in the browser between two domains.

07:52.800 --> 07:54.280
And here's where trouble starts.

07:54.280 --> 07:57.960
We'll come to this later.

07:57.960 --> 08:02.520
So clippinger.

08:02.520 --> 08:06.520
So yeah, from this work, I just want to come up with a couple of things that are lessons

08:06.520 --> 08:11.360
learned and I would just like point them out for you to think and digest a little bit what

08:11.360 --> 08:14.240
it means to your project.

08:14.240 --> 08:19.960
So of course, okay, if you want to have integrations, of course, provide an API, that's obvious.

08:19.960 --> 08:22.280
Nextcloud and open project does that pretty well, I think.

08:22.280 --> 08:25.400
We have docs and examples.

08:25.400 --> 08:28.960
But then the tiny things start, you know, like, okay, you have an API, you think it's

08:28.960 --> 08:30.460
cool and safe.

08:30.460 --> 08:38.440
But in the example of this direct access that I set on the architecture image, this is about

08:38.440 --> 08:41.320
direct file upload and downloads.

08:41.320 --> 08:45.640
So this is something that is kind of obvious that you don't want to send the data through

08:45.640 --> 08:50.740
the open project server, like let's say if you want to get a movie and then to Nextcloud,

08:50.740 --> 08:57.680
you want to upload this directly or download this directly to the open project front end.

08:57.680 --> 09:08.320
So it turns out the API that Nextcloud provides for this thing is working-ish, but not, you

09:08.320 --> 09:14.000
know, in a way that it did not work, okay?

09:14.000 --> 09:20.680
But it was really unfortunate because they had everything in place, but I bet they never

09:20.680 --> 09:26.840
had this scenario in their own company to use that in a cross-site domain environment.

09:26.840 --> 09:35.320
And so they didn't come across like two, twice, course problems, you know, your course security

09:35.320 --> 09:41.480
in the browser that prevents you to do stuff that you shouldn't do in the browser, like,

09:41.480 --> 09:43.920
browser security features.

09:43.920 --> 09:48.560
And if you just have non-browser clients, these things don't show up.

09:48.560 --> 09:52.080
If you just have a Nextcloud client on your desk, these things don't show up.

09:52.080 --> 09:54.000
They are not browser context.

09:54.000 --> 09:58.040
So my lessons learned is here also for us, open project.

09:58.040 --> 10:02.000
We are not saving these fields neither.

10:02.000 --> 10:06.120
Make sure that if you provide an API, also test it in a browser setting, right?

10:06.120 --> 10:08.080
And not just write it and hope it works.

10:08.080 --> 10:10.040
You have these course preflights.

10:10.040 --> 10:14.280
You need to check if the course preflight itself doesn't fail, right?

10:14.280 --> 10:16.240
There can be issues.

10:16.240 --> 10:17.640
Okay.

10:17.640 --> 10:21.000
Another one, a tiny one, but I need to say this.

10:21.000 --> 10:23.720
You know, we as open project, we want to link files.

10:23.720 --> 10:28.440
And these files we don't reference by path because the path is different for every user

10:28.440 --> 10:30.240
or can be different for every user.

10:30.240 --> 10:34.080
Because if you get a file shared with you and you save it in your Nextcloud with a different

10:34.080 --> 10:36.640
file name, the path is completely different.

10:36.640 --> 10:38.000
And it doesn't work for the other user.

10:38.000 --> 10:41.760
They say another user, there's an open project project.

10:41.760 --> 10:44.280
So we need to reference the file.

10:44.280 --> 10:47.960
But there's no API for getting files.

10:47.960 --> 10:48.960
Thanks.

10:48.960 --> 10:51.720
For getting files by ID.

10:51.720 --> 10:57.600
Especially if you want to know what is the original file name that the owner of the file

10:57.600 --> 11:04.400
gave to the file, or if you want to know if the file was already deleted, if it was trashed,

11:04.400 --> 11:07.080
it was in the trash bin.

11:07.080 --> 11:11.480
Information like this, we want to ask them frequently in order to update our knowledge

11:11.480 --> 11:13.760
about the file on open project.

11:13.760 --> 11:14.760
It wasn't there.

11:14.760 --> 11:16.880
Probably never needed on the Nextcloud side.

11:16.880 --> 11:17.880
So that's cool.

11:17.880 --> 11:18.880
They don't need it.

11:18.880 --> 11:23.360
But, yeah, kind of obvious, there's the main objects of Nextcloud.

11:23.360 --> 11:24.360
And we need them.

11:24.360 --> 11:26.400
We need the information.

11:26.400 --> 11:31.360
And yeah, this problem became visible here.

11:31.360 --> 11:38.920
If you want to build, allow, if you want to allow integrations into your system while

11:38.920 --> 11:41.580
creating a plugin interface is a great idea.

11:41.580 --> 11:43.680
Open project has a plugin interface.

11:43.680 --> 11:46.960
You can extend open project code as you like.

11:46.960 --> 11:50.560
You need to be the server admin in order to make it run.

11:50.560 --> 11:52.600
Nextcloud is much ahead in that sense.

11:52.600 --> 11:53.600
They have the app store.

11:53.600 --> 11:59.480
You just can click from a catalog and as a, not as a server administrator, but as an application

11:59.480 --> 12:03.360
administrator who doesn't like to talk to server administrators.

12:03.360 --> 12:09.520
You can simply download, download, install extensions to Nextcloud.

12:09.520 --> 12:11.360
It's in the core of Nextcloud.

12:11.360 --> 12:12.960
That's really, really cool.

12:12.960 --> 12:16.320
It's amazing and I'm jealous I would love to have this open project.

12:16.320 --> 12:17.320
Yeah.

12:17.320 --> 12:18.960
So PHP, you know.

12:18.960 --> 12:19.960
Is it?

12:19.960 --> 12:20.960
Yeah.

12:20.960 --> 12:23.960
Okay, tomorrow it's done.

12:23.960 --> 12:26.640
No, okay.

12:26.640 --> 12:32.160
Okay, thank you.

12:32.160 --> 12:44.880
Okay, so once you have, you have this plugin interface built in your application, then

12:44.880 --> 12:51.360
that the typical things that every, every person that is, that is implementing this

12:51.360 --> 12:53.560
interface comes across.

12:53.560 --> 13:01.080
For example, if you want to have cross site fetching, cross site calls, you need to allow

13:01.080 --> 13:06.800
in that application, extend the content security policy for cross site requests.

13:06.800 --> 13:11.440
And there's something, for example, that we discovered that open project did not allow

13:11.440 --> 13:14.360
or make easy in the first place.

13:14.360 --> 13:15.520
So we had to extend that.

13:15.520 --> 13:17.120
It's a typical one.

13:17.120 --> 13:20.560
It only, you know, in the theory, everything is working and then you run it in your browser

13:20.560 --> 13:26.640
and in the very last moment of implementing all the features, you see, oh, it's not working

13:26.640 --> 13:28.320
because of content security policy.

13:28.320 --> 13:32.000
Okay, that's a nice one.

13:32.000 --> 13:36.480
So when you're like a application administrator, an open project, and you're also an application

13:36.480 --> 13:40.760
administrator in Nextcloud and you want to set up the connection, the integration, the

13:40.760 --> 13:45.120
first thing that you do is you put in the URL of the other system, right?

13:45.120 --> 13:50.800
And you want to know if you put, or you should get some feedback if the, actually, if the

13:50.800 --> 13:51.800
URL is valid.

13:51.800 --> 13:56.280
Let's say you're Nextcloud, you want to know that open project is actually responding.

13:56.280 --> 14:00.360
Open project is responding in the necessary version.

14:00.360 --> 14:01.360
We don't have that.

14:01.360 --> 14:04.320
We don't expose that information.

14:04.320 --> 14:09.240
You want to know if the setup is complete.

14:09.240 --> 14:10.360
There's more about the other way.

14:10.360 --> 14:14.960
Like, let's say from open project you want to connect to Nextcloud.

14:14.960 --> 14:19.360
Of course, we also want to know if our extension is installed.

14:19.360 --> 14:25.400
So it would be great if you have an API endpoint that gives you information saying, nah, it's

14:25.400 --> 14:28.880
not installed, so the validation of the URL is failing.

14:28.880 --> 14:34.240
That's something that is very, very useful for the administrators to get relevant feedback

14:34.240 --> 14:36.640
for why things are not working.

14:36.640 --> 14:39.800
Because if you just put in a URL, you don't have any idea why it's not working.

14:39.800 --> 14:41.040
You need to get feedback.

14:41.040 --> 14:46.360
And this is something I think every core developer should think of as providing a super nice

14:46.360 --> 14:50.200
candy for developers.

14:50.200 --> 14:54.640
Another one that is, that's a topic.

14:54.640 --> 14:58.240
So we're working a lot with OAuth.

14:58.240 --> 15:03.080
Setting up OAuth, I don't know if you know what, it has basically a lot of fears, like

15:03.080 --> 15:09.280
a secret, an ID, it has the redirect URL, and so on and so on.

15:09.280 --> 15:12.880
If you are a hoster or a tester, you would like to script that stuff.

15:12.880 --> 15:17.200
So you would like to have an API to set this stuff up.

15:17.200 --> 15:21.200
And it's great if you provide an API for setting up OAuth.

15:21.200 --> 15:26.760
Also, if you have an API, you can do stuff like having one button in some setting and

15:26.760 --> 15:30.480
say disconnect integration all over the place.

15:30.480 --> 15:31.480
Delete it.

15:31.480 --> 15:32.480
I want to start again.

15:32.480 --> 15:33.480
I screwed up.

15:33.480 --> 15:34.480
I don't know what.

15:34.480 --> 15:41.720
I screwed up.

15:41.720 --> 15:47.920
So for this you need a API so that you can do this.

15:47.920 --> 15:53.360
And if you actually delete an OAuth connection, then please also make sure that the tokens

15:53.360 --> 15:54.360
are deleted.

15:54.360 --> 15:55.360
Right?

15:55.360 --> 16:00.680
So that was something that we discovered with Nextcloud, that the tokens were still around

16:00.680 --> 16:02.680
for quite some time.

16:02.680 --> 16:06.960
And the good thing is it came up and we could provide tickets and these things could get

16:06.960 --> 16:11.480
solved.

16:11.480 --> 16:14.800
That's also another one, nice one.

16:14.800 --> 16:21.080
Just imagine you do the OAuth connection, so there's one user in Nextcloud and connects

16:21.080 --> 16:26.680
as the user in an open project and that user happens to be admin in an open project.

16:26.680 --> 16:31.220
Suddenly the access as an admin comes to Nextcloud.

16:31.220 --> 16:32.220
So there's a lot of powers.

16:32.220 --> 16:33.220
You can create projects.

16:33.220 --> 16:35.240
You can delete users.

16:35.240 --> 16:39.440
And maybe for the integration that is not needed and vice versa.

16:39.440 --> 16:43.740
Open project might not need complete administrator rights on Nextcloud.

16:43.740 --> 16:54.800
So there's like opening the surface for attacks or the opening for problems to vulnerabilities

16:54.800 --> 16:55.800
by a lot.

16:55.800 --> 17:04.800
And I think open project at Nextcloud we could do better in having scoped OAuth access control

17:04.800 --> 17:09.520
so that you don't allow creating or deleting projects or that you don't allow deleting

17:09.520 --> 17:11.200
users and so on.

17:11.200 --> 17:16.720
So limiting just for the user scope actions.

17:16.720 --> 17:18.360
We can do better.

17:18.360 --> 17:20.000
We can.

17:20.000 --> 17:25.400
Also what is nice, what I really enjoyed about working with Nextcloud is that they provide

17:25.400 --> 17:26.400
a design system.

17:26.400 --> 17:32.600
They have frontend components and that allowed us to have more consistent UI that look and

17:32.600 --> 17:38.480
feel like the Nextcloud and also increase the development speed for us.

17:38.480 --> 17:41.600
At open project we also are working in design system and co-UI components.

17:41.600 --> 17:44.160
So if you want to have a talk, listen to a talk about this.

17:44.160 --> 17:45.760
Parima, where are you?

17:45.760 --> 17:46.760
Tomorrow?

17:46.760 --> 17:47.760
Same time?

17:47.760 --> 17:48.760
Yeah.

17:48.760 --> 17:49.760
Okay.

17:49.760 --> 17:51.760
Have fun.

17:51.760 --> 17:52.760
Yeah.

17:52.760 --> 18:03.480
Then also what is really handy for developers that develop integrations for your system is

18:03.480 --> 18:12.080
if you have containerized development environments already at hand, so it's easier to check out

18:12.080 --> 18:16.960
your code with the latest supported versions.

18:16.960 --> 18:19.200
For example, Nextcloud has multiple versions.

18:19.200 --> 18:22.240
Need to support, you need to check, you want to find out if it's still working.

18:22.240 --> 18:26.720
And of course the current main branch to see what is actually changing in the main branch

18:26.720 --> 18:31.900
is my code still alive or it's already dying.

18:31.900 --> 18:36.480
So it's really nice to have, for example, Docker compose files that help you setting

18:36.480 --> 18:43.760
up and lower the barrier to get started in developing an integration for your application.

18:43.760 --> 18:45.760
Yeah.

18:45.760 --> 18:53.400
Also as a bonus on this, if you can provide examples how to set up your CI quickly so

18:53.400 --> 18:55.880
that you don't need to fiddle around with that.

18:55.880 --> 19:01.400
If you just have good standard practices, how to have CI running with that and that

19:01.400 --> 19:08.520
core image and with a plugin, it would be also very, very handy for developers to have.

19:08.520 --> 19:17.920
I think we could sneak into other integrations and we could see how they did it in Nextcloud.

19:17.920 --> 19:20.200
So it wasn't such a big trouble.

19:20.200 --> 19:24.680
But if you have a good example that is really, really helpful.

19:24.680 --> 19:31.560
Yeah, so with all these small like spots of lessons learned that we have had in the last

19:31.560 --> 19:39.960
year, I just want to send you home, let it sink in and just remember integrated we're

19:39.960 --> 19:40.960
stronger.

19:40.960 --> 19:41.960
Thank you.

19:41.960 --> 19:55.160
We have six minutes for questions.

19:55.160 --> 20:22.160
So the question is why we need to deal with multiple Nextcloud versions.

20:22.160 --> 20:30.200
I think Nextcloud has multiple versions in production like supported.

20:30.200 --> 20:34.960
So it's like I think 23, 24, 25, maybe 22 still.

20:34.960 --> 20:37.080
I'm not sure.

20:37.080 --> 20:39.840
And they have different code.

20:39.840 --> 20:42.300
But we just provide one currently.

20:42.300 --> 20:48.280
We just provide one piece of code that is the Nextcloud app, our Nextcloud app.

20:48.280 --> 20:50.800
And we don't want to provide three different ones.

20:50.800 --> 20:56.760
So we want to make sure that in that app all versions are supported.

20:56.760 --> 20:57.760
It's different for Open Project.

20:57.760 --> 21:01.280
Open Project always has just one running, one up to date version.

21:01.280 --> 21:07.600
So you'd always need to update to the latest version unless you want to get into trouble.

21:07.600 --> 21:13.840
So this is why you need multiple versions.

21:13.840 --> 21:15.840
More questions?

21:15.840 --> 21:17.800
Okay.

21:17.800 --> 21:18.800
Thank you.

21:18.800 --> 21:20.800
Ben?

21:20.800 --> 21:22.800
Yeah.

21:22.800 --> 21:25.800
I want to add another question.

21:25.800 --> 21:27.800
I want to add onto this.

21:27.800 --> 21:29.800
I think declarative configuration is always better than scripting.

21:29.800 --> 21:35.800
So if you can, if it's possible in the application for example to provide OAuth configuration

21:35.800 --> 21:39.800
statically instead of via the spreads, I think that's always better.

21:39.800 --> 21:45.800
Because it allows you to basically state this deploys of your applications including the

21:45.800 --> 21:47.800
whole OAuth context.

21:47.800 --> 21:48.800
Yeah.

21:48.800 --> 21:50.800
It's just a comment I wanted to...

21:50.800 --> 21:51.800
Yeah.

21:51.800 --> 21:57.080
So the comment was just if you can provide it as a, let's say YAML file or something

21:57.080 --> 22:01.000
like this, a declaration, it's better than to have an API.

22:01.000 --> 22:06.320
I'm not so sure about OAuth in that moment because then you would need to have a center

22:06.320 --> 22:08.280
when you set up both systems at the same time.

22:08.280 --> 22:14.040
You wouldn't need to have a center that decides on the OAuth client ID and client secret and

22:14.040 --> 22:18.040
make it configurable from a center.

22:18.040 --> 22:19.040
Yeah.

22:19.040 --> 22:25.800
If these IDs and secrets there get actually generated by the applications itself because

22:25.800 --> 22:29.240
they get updated and maybe your center is not getting updated, maybe you create just

22:29.240 --> 22:31.040
a vulnerability here.

22:31.040 --> 22:36.840
So we were discussing this forth and back, but we believe that next had an O project

22:36.840 --> 22:42.340
that continuously update and maybe some central distribution software might not get touched

22:42.340 --> 22:47.480
in three years and then it's outdated and the algorithms are not secure anymore or whatever.

22:47.480 --> 22:48.480
Yeah.

22:48.480 --> 22:56.480
So Trent, yeah, I'm not sure maybe you talked about it or I probably was not listening.

22:56.480 --> 23:01.080
I think you mentioned files as an example for the actual what is integrated between

23:01.080 --> 23:02.080
both systems.

23:02.080 --> 23:05.600
Was the scope broader than that or was it primarily that?

23:05.600 --> 23:09.920
And was it any discussion because they put multiple things that could be integrated in

23:09.920 --> 23:11.920
a sense, right?

23:11.920 --> 23:12.920
Yeah.

23:12.920 --> 23:17.480
I mean, this integration basically focuses on files and folders, right?

23:17.480 --> 23:23.040
Because you want to, it's about integrating digital assets into work packages, right?

23:23.040 --> 23:24.960
So you have this links.

23:24.960 --> 23:27.000
So that's the example I chose.

23:27.000 --> 23:33.440
Actually, it would be interesting to have some standards also for API standards.

23:33.440 --> 23:34.440
Why not?

23:34.440 --> 23:36.960
Let's say every system has users.

23:36.960 --> 23:40.240
Why does a user need to be represented different in every system?

23:40.240 --> 23:44.520
Why can't we have standard on that or the avatar or, you know, it's like there's stuff

23:44.520 --> 23:45.520
of permissions.

23:45.520 --> 23:48.960
Why can't we have permission standard somehow for all open source vendors?

23:48.960 --> 23:49.960
I don't know.

23:49.960 --> 23:52.560
Let's think about it.

23:52.560 --> 23:56.840
But I don't see a reason why it needs to be so different.

23:56.840 --> 24:00.440
Permissions have been around for so long.

24:00.440 --> 24:02.440
Yeah.

24:02.440 --> 24:05.440
More questions?

24:05.440 --> 24:12.440
Yes, that's my pizza.

24:12.440 --> 24:13.440
Pizza Napolitana.

24:13.440 --> 24:14.440
VLAN style.

24:14.440 --> 24:15.440
Okay.

24:15.440 --> 24:16.440
Thank you very much.

24:16.440 --> 24:37.120
Thank you.
