1
0:00:00.000 --> 0:00:09.200
I'm talking about migrating from proprietary to open source knowledge management tools.

2
0:00:09.200 --> 0:00:13.280
I'll talk a bit in general about the migration process and then demonstrate

3
0:00:13.280 --> 0:00:18.060
two migrations, one from Confluence and one from SharePoint,

4
0:00:18.060 --> 0:00:24.440
with different technologies just to see what's possible on our side and in general.

5
0:00:24.440 --> 0:00:28.120
So first, why migrate from proprietary to open source?

6
0:00:28.120 --> 0:00:31.440
I'm sure everyone has lots of good reasons for that in mind,

7
0:00:31.440 --> 0:00:34.800
but some that we have identified as well.

8
0:00:34.800 --> 0:00:37.400
Would be first for privacy and security concerns.

9
0:00:37.400 --> 0:00:39.600
Of course, with open source software,

10
0:00:39.600 --> 0:00:42.280
you have more flexibility in where you host your data,

11
0:00:42.280 --> 0:00:48.160
how you host it, the environment and access that you set up.

12
0:00:48.160 --> 0:00:52.480
Two other concerns that are related and we have also seen

13
0:00:52.480 --> 0:00:56.680
some important examples in the recent years are vendor and data lock-in.

14
0:00:56.680 --> 0:00:59.960
So when you're using a proprietary software,

15
0:00:59.960 --> 0:01:04.960
you're a bit more vulnerable to the vendor than when you're using

16
0:01:04.960 --> 0:01:07.520
an open source software in the sense that if they make

17
0:01:07.520 --> 0:01:10.520
any significant strategy or pricing changes,

18
0:01:10.520 --> 0:01:14.740
you may find yourself in a situation where you need to migrate quickly,

19
0:01:14.740 --> 0:01:18.680
or you need to quickly adjust to that change.

20
0:01:18.680 --> 0:01:20.500
A recent example is Confluence.

21
0:01:20.500 --> 0:01:23.040
Maybe some of you have stumbled across it.

22
0:01:23.040 --> 0:01:28.880
They had a Cloud version and a Server version and a Data Center,

23
0:01:28.880 --> 0:01:31.680
but that's usually for larger teams.

24
0:01:31.680 --> 0:01:34.560
The Server version was used by

25
0:01:34.560 --> 0:01:38.240
smaller teams that wanted to host the data on their premise.

26
0:01:38.240 --> 0:01:43.720
In late 2020, Confluence decided to stop the Server version.

27
0:01:43.720 --> 0:01:47.480
So because of that, a lot of small companies had to either move to Cloud,

28
0:01:47.480 --> 0:01:48.920
so host their data in the States,

29
0:01:48.920 --> 0:01:52.060
which wasn't possible for a lot of people,

30
0:01:52.060 --> 0:01:53.480
or move to Data Center,

31
0:01:53.480 --> 0:01:57.240
which was much more expensive and difficult to handle.

32
0:01:57.240 --> 0:02:01.800
That was an example of how using proprietary software

33
0:02:01.800 --> 0:02:04.840
can make you quite vulnerable to their changes.

34
0:02:04.840 --> 0:02:08.120
One other thing that is important is the data lock-in.

35
0:02:08.120 --> 0:02:10.720
So using open source software usually allows you

36
0:02:10.720 --> 0:02:14.440
to migrate easier and integrate with

37
0:02:14.440 --> 0:02:18.040
certain tools due to open standards and protocols and formats.

38
0:02:18.040 --> 0:02:21.080
So if you're using an open source tool at some point and then you want to

39
0:02:21.080 --> 0:02:25.440
migrate to another, it may be easier than migrating from

40
0:02:25.440 --> 0:02:30.440
proprietary tools to other proprietary tools or open source ones.

41
0:02:30.440 --> 0:02:32.200
Then of course, accessibility,

42
0:02:32.200 --> 0:02:35.720
having access to the code and all the features may allow us

43
0:02:35.720 --> 0:02:40.480
to further extend it or contribute to it and implement other features.

44
0:02:40.480 --> 0:02:44.760
Finally, from a values or ethical point of view,

45
0:02:44.760 --> 0:02:47.920
when we are using open source,

46
0:02:47.920 --> 0:02:49.880
we facilitate the integration and

47
0:02:49.880 --> 0:02:53.400
technological growth for everyone rather than focusing

48
0:02:53.400 --> 0:02:57.600
on products and standards that just have

49
0:02:57.600 --> 0:03:01.560
a small benefit or a benefit for one company.

50
0:03:01.560 --> 0:03:06.320
So with all these good reasons, I hope, in mind,

51
0:03:06.320 --> 0:03:09.680
I'm going to talk about how to approach migration.

52
0:03:09.680 --> 0:03:15.320
So in general, as a plan,

53
0:03:15.320 --> 0:03:18.360
when we migrate from one knowledge

54
0:03:18.360 --> 0:03:23.920
management tool to another but this can be extended to other software as well,

55
0:03:23.920 --> 0:03:27.320
we first need to think about data format and dependencies.

56
0:03:27.320 --> 0:03:28.440
What type of data do we have?

57
0:03:28.440 --> 0:03:29.920
Do we have flat HTML pages?

58
0:03:29.920 --> 0:03:31.120
Do we have structured pages?

59
0:03:31.120 --> 0:03:32.720
Do we have animated data tags?

60
0:03:32.720 --> 0:03:34.920
All that needs to be considered.

61
0:03:34.920 --> 0:03:38.520
Then we also need to look at the other extensions that we're using.

62
0:03:38.520 --> 0:03:40.480
What type of authentication do we have?

63
0:03:40.480 --> 0:03:44.440
Are we integrating with anything else that needs to be kept?

64
0:03:44.440 --> 0:03:47.440
Then once we have that listed,

65
0:03:47.440 --> 0:03:51.080
based on that we can identify and set up the new software.

66
0:03:51.080 --> 0:03:56.760
For example, let's say that we have identified that on the confidence side,

67
0:03:56.760 --> 0:03:58.440
we can export to XML.

68
0:03:58.440 --> 0:04:03.440
XWIKI supports that and we want to do this migration.

69
0:04:03.440 --> 0:04:07.600
We need to set up the new software in the environment that works for us.

70
0:04:07.600 --> 0:04:11.400
Then we need to make the migration plan and clean up.

71
0:04:11.400 --> 0:04:13.200
This is, of course, quite specific to

72
0:04:13.200 --> 0:04:16.920
the software that you're migrating to and from.

73
0:04:16.920 --> 0:04:19.680
But in general, it's also interesting to

74
0:04:19.680 --> 0:04:22.440
know that it can be a good moment to clean up your data.

75
0:04:22.440 --> 0:04:25.600
For example, if you have a system that you have been using for 10 years,

76
0:04:25.600 --> 0:04:30.080
you may have a lot of obsolete data that can be cleaned up at this moment.

77
0:04:30.080 --> 0:04:32.920
Aside from the plan of migrating,

78
0:04:32.920 --> 0:04:39.760
you can also eliminate some pages or even reorganize the content if possible.

79
0:04:39.760 --> 0:04:42.840
Then of course, we need to execute the migration.

80
0:04:42.840 --> 0:04:45.520
Again, depends on each organization or company.

81
0:04:45.520 --> 0:04:48.120
If they executed with a team,

82
0:04:48.120 --> 0:04:51.040
if they executed with other services.

83
0:04:51.040 --> 0:04:55.720
But this is an important step that also needs to be planned and

84
0:04:55.720 --> 0:05:02.040
realistically planned in time as well to say so.

85
0:05:02.040 --> 0:05:05.000
When we migrate itself,

86
0:05:05.000 --> 0:05:07.920
we also need to try to map the data and its structure.

87
0:05:07.920 --> 0:05:09.040
As I said previously,

88
0:05:09.040 --> 0:05:10.920
if you have some type of structured data,

89
0:05:10.920 --> 0:05:13.040
you will want to map that.

90
0:05:13.040 --> 0:05:19.520
Also, you will want to create the new integrations or dependencies or install them.

91
0:05:19.520 --> 0:05:23.880
Then finally, once that is done,

92
0:05:23.880 --> 0:05:29.160
we need to do a thorough testing of course before releasing the new system.

93
0:05:29.160 --> 0:05:32.680
Finally, delivering and production and a step that is

94
0:05:32.680 --> 0:05:35.280
quite commonly skipped would be the user training.

95
0:05:35.280 --> 0:05:37.920
So if you have any organization,

96
0:05:37.920 --> 0:05:41.840
you may have been in the situation where you had to change the software and

97
0:05:41.840 --> 0:05:45.720
people may have been resistant to using the new software or

98
0:05:45.720 --> 0:05:51.480
became bit less efficient or didn't really know how to handle certain aspects.

99
0:05:51.480 --> 0:05:55.400
So a bit of user training can be very helpful as well

100
0:05:55.400 --> 0:06:00.080
if you're changing your knowledge management tools.

101
0:06:00.080 --> 0:06:05.760
Now we know the general plan and we can see two examples in action.

102
0:06:05.760 --> 0:06:08.360
So for the complex to execute migration,

103
0:06:08.360 --> 0:06:12.520
I'm going to demonstrate the XML export way.

104
0:06:12.520 --> 0:06:18.680
For the SharePoint, we're going to see an example of CSV export.

105
0:06:18.680 --> 0:06:25.440
So let me go to this one.

106
0:06:28.680 --> 0:06:33.440
So on the migration from Confluence to XVK,

107
0:06:33.440 --> 0:06:39.880
we already had a lot of tools available to migrate.

108
0:06:39.880 --> 0:06:41.320
However, in recent years,

109
0:06:41.320 --> 0:06:47.400
we've dedicated a bit more efforts to trying to make them as easy to use as possible.

110
0:06:47.400 --> 0:06:53.280
We had before the Filter Streams Converter that also supported the Confluence format.

111
0:06:53.280 --> 0:06:59.880
Nowadays, we have an integrated migrator that has a couple of steps.

112
0:06:59.880 --> 0:07:01.760
We'll see them right away.

113
0:07:01.760 --> 0:07:05.920
For the macros, so in Confluence,

114
0:07:05.920 --> 0:07:14.680
we have some macros like we have in other WikiSystems or knowledge management tools.

115
0:07:14.680 --> 0:07:24.080
One concern while migrating were the macros that had to be supported or migrated properly.

116
0:07:24.080 --> 0:07:27.640
So because of that, we also developed a package of

117
0:07:27.640 --> 0:07:34.120
bridge macros how we call them or macros that were identical to what exists in Confluence,

118
0:07:34.120 --> 0:07:36.760
and that would support migration.

119
0:07:36.760 --> 0:07:41.480
Of course, we don't have all the macros that exist in Confluence because

120
0:07:41.480 --> 0:07:44.520
both XVK and Confluence are products that have been around

121
0:07:44.520 --> 0:07:48.480
for a really long time and they have their own specificities.

122
0:07:48.480 --> 0:07:52.000
But that is a concern to keep in mind,

123
0:07:52.000 --> 0:07:55.400
not only when migrating from Confluence to XVK,

124
0:07:55.400 --> 0:07:57.000
but from any software.

125
0:07:57.000 --> 0:08:03.040
Again, this fits into the dependencies or applications that you're using part.

126
0:08:03.040 --> 0:08:06.800
So let's see how a migration works.

127
0:08:06.800 --> 0:08:09.360
Again, I'm going to use the integrated one,

128
0:08:09.360 --> 0:08:14.720
the integrated migrator which reuses the original filter streams.

129
0:08:14.720 --> 0:08:20.760
So what we did for this migrator itself to make it again a bit nicer to use,

130
0:08:20.760 --> 0:08:26.280
we created this concept of a profile in which you can basically import

131
0:08:26.280 --> 0:08:29.040
each space separately and you'll have a bit of

132
0:08:29.040 --> 0:08:31.960
an analysis on what pages were imported,

133
0:08:31.960 --> 0:08:39.160
if you had any pages that caused issues and you're able to follow the process a bit better.

134
0:08:39.160 --> 0:08:42.320
So you can name your profile however you want.

135
0:08:42.320 --> 0:08:46.240
If you want, you can also connect to the Confluence instance.

136
0:08:46.240 --> 0:08:47.720
This is not mandatory,

137
0:08:47.720 --> 0:08:50.440
but if you connect to the Confluence instance,

138
0:08:50.440 --> 0:08:56.080
it also gives you a pre-analysis of the pages that were already imported into XVK.

139
0:08:56.080 --> 0:08:58.880
So that can be useful.

140
0:08:58.880 --> 0:09:01.440
If you're having Confluence Cloud,

141
0:09:01.440 --> 0:09:07.440
your username and token would be username and the token that you get the API tokens.

142
0:09:07.440 --> 0:09:10.680
Sorry. If you're running Confluence server,

143
0:09:10.680 --> 0:09:16.240
the username would be your administrator username and the token will be your password.

144
0:09:16.240 --> 0:09:18.920
So we have here,

145
0:09:18.920 --> 0:09:22.360
of course, a demo purpose Confluence instance.

146
0:09:22.360 --> 0:09:26.360
It's not what we use internally.

147
0:09:26.360 --> 0:09:30.240
The token I just saved it here.

148
0:09:32.400 --> 0:09:42.040
Okay. Then we need to put the URL as well in order to map the URL schema.

149
0:09:42.040 --> 0:09:44.960
So let's take that as well.

150
0:09:44.960 --> 0:09:47.960
We don't have a custom URL path.

151
0:09:47.960 --> 0:09:55.440
This is important again for the URL schema and for their adaptation.

152
0:09:55.440 --> 0:09:57.960
If you have Wiki in the path,

153
0:09:57.960 --> 0:10:00.440
that will be a standard URL.

154
0:10:00.440 --> 0:10:04.160
If you don't, if you have things like display or something else that would be a custom URL,

155
0:10:04.160 --> 0:10:05.960
in this case, it's not applied.

156
0:10:05.960 --> 0:10:10.440
Then we need to mention the name or the key of the space that we're migrating.

157
0:10:10.440 --> 0:10:17.000
In this case, I made this dummy text demo space called FOS.

158
0:10:17.000 --> 0:10:19.960
So this is the space that I want to import.

159
0:10:19.960 --> 0:10:22.400
Okay. So now I have my profile.

160
0:10:22.400 --> 0:10:24.120
Let's see if I'm connected.

161
0:10:24.120 --> 0:10:28.000
Yes, I can start the migration.

162
0:10:28.000 --> 0:10:32.960
The way in which the migration works is that you have a couple of steps.

163
0:10:32.960 --> 0:10:35.480
The first one is just a prerequisites.

164
0:10:35.480 --> 0:10:40.880
It would tell you what would be the requirements for migration.

165
0:10:40.880 --> 0:10:43.640
They usually apply for larger imports.

166
0:10:43.640 --> 0:10:47.320
In our case, we're just going to do like a seven megabyte zip,

167
0:10:47.320 --> 0:10:48.320
so it's not that large.

168
0:10:48.320 --> 0:10:50.120
We don't need to adapt everything.

169
0:10:50.120 --> 0:10:51.600
But of course, in general,

170
0:10:51.600 --> 0:10:52.800
when you're running a migration,

171
0:10:52.800 --> 0:10:55.880
you need to have enough resources on the machine,

172
0:10:55.880 --> 0:11:00.280
enough memory, disk space, and all that.

173
0:11:00.280 --> 0:11:02.680
Specifically on the XFiki side,

174
0:11:02.680 --> 0:11:06.640
you can also disable notifications in the XFiki properties file,

175
0:11:06.640 --> 0:11:09.440
and you can also disable some listeners if you know that you will

176
0:11:09.440 --> 0:11:14.640
be importing very large packages.

177
0:11:14.640 --> 0:11:20.000
Okay. The second step that I told you about previously with that analysis,

178
0:11:20.000 --> 0:11:22.720
if you're connected to the Confluence instance,

179
0:11:22.720 --> 0:11:25.440
you can see if you have onXFiki,

180
0:11:25.440 --> 0:11:28.880
any pages that already exists,

181
0:11:28.880 --> 0:11:32.080
so that if you have in the package that you're trying to import from

182
0:11:32.080 --> 0:11:34.840
Confluence pages that exist onXFiki.

183
0:11:34.840 --> 0:11:36.960
So we have some logs here.

184
0:11:36.960 --> 0:11:39.120
We can see that it looked at all the pages,

185
0:11:39.120 --> 0:11:45.840
and we don't have onXFiki pages that we're trying to import right now.

186
0:11:45.840 --> 0:11:51.680
In the third step, it's just to tell you to go to Confluence and export.

187
0:11:51.680 --> 0:11:56.600
It depends on what server version or Confluence or Cloud version you have.

188
0:11:56.600 --> 0:12:04.280
In this case, it's a Cloud version with XML, full or custom export.

189
0:12:04.280 --> 0:12:06.640
You can choose again between those two.

190
0:12:06.640 --> 0:12:10.720
I already have it downloaded, so I'm not going to download it again.

191
0:12:10.720 --> 0:12:17.560
At this step, you just have to import your export file.

192
0:12:18.240 --> 0:12:22.960
So let me show you the example to import.

193
0:12:26.960 --> 0:12:32.800
Or if you have it on the same server,

194
0:12:32.800 --> 0:12:38.080
you can also specify the source in the server.

195
0:12:38.080 --> 0:12:41.680
So if you have XFiki running on the same server that you have the files in,

196
0:12:41.680 --> 0:12:44.280
you can also specify directly.

197
0:12:44.280 --> 0:12:50.000
All of this configuration is the filter streams configuration that you can adapt.

198
0:12:50.000 --> 0:12:53.200
It has some fields that are prefilled,

199
0:12:53.200 --> 0:12:58.360
but there's also a lot of power in other things that you can configure.

200
0:12:58.360 --> 0:13:01.880
For example, you can also import users,

201
0:13:01.880 --> 0:13:03.920
and you can do user ID mapping.

202
0:13:03.920 --> 0:13:07.640
For example, if you have an LDAP that has generated on

203
0:13:07.640 --> 0:13:11.600
the Confluence site some random number IDs and you want to map those

204
0:13:11.600 --> 0:13:17.680
to the new users that you have created on XFiki, that's something you can do.

205
0:13:17.680 --> 0:13:24.080
Also, you can choose if you want to keep the author and history metadata and so on.

206
0:13:24.080 --> 0:13:28.160
So you have some nice configuration that is quite granular.

207
0:13:28.160 --> 0:13:32.400
Once the configuration is done, you would import.

208
0:13:32.400 --> 0:13:37.800
This is the point where our documents are getting created.

209
0:13:37.800 --> 0:13:41.240
Because I configured it so we also have the history.

210
0:13:41.240 --> 0:13:46.600
For example, here you see this was created and then updated because on the Confluence side,

211
0:13:46.600 --> 0:13:51.120
I had multiple changes on those pages.

212
0:13:51.120 --> 0:13:58.400
Now, we see that we have the pages imported with no error.

213
0:13:58.400 --> 0:14:01.120
With no error is quite,

214
0:14:01.120 --> 0:14:07.040
it's of course a great thing but you can also have errors of course.

215
0:14:07.040 --> 0:14:11.160
Our experience, the most common errors are caused by

216
0:14:11.160 --> 0:14:16.440
unsupported characters or corrupted pages on the Confluence side.

217
0:14:16.440 --> 0:14:19.160
So if you are trying this out and you have some errors,

218
0:14:19.160 --> 0:14:23.640
the logs should tell you what is the page that is causing the issue

219
0:14:23.640 --> 0:14:27.400
and you can then fix it on the Confluence side and then

220
0:14:27.400 --> 0:14:33.120
re-import or fix it manually in XFiki, whatever suits you best.

221
0:14:33.120 --> 0:14:36.200
So now we have the pages imported.

222
0:14:36.200 --> 0:14:41.320
This is a post import fixes check that we can also perform in case we

223
0:14:41.320 --> 0:14:49.120
have pages that were imported that don't have a parent or pages that have corrupted parents.

224
0:14:49.120 --> 0:14:50.600
Both in Confluence and XFiki,

225
0:14:50.600 --> 0:14:55.080
we have the hierarchy system and XFiki we have nested pages.

226
0:14:55.080 --> 0:15:01.080
In Confluence, you may have situations where the parent pages are corrupted.

227
0:15:01.080 --> 0:15:03.240
So if you would have had that,

228
0:15:03.240 --> 0:15:05.600
you would see it in these reports.

229
0:15:05.600 --> 0:15:07.520
It's not the case here.

230
0:15:07.520 --> 0:15:12.680
Finally, we would need to recreate the hierarchy that we had in Confluence.

231
0:15:12.680 --> 0:15:15.840
You can see now that the pages that I have imported are flat.

232
0:15:15.840 --> 0:15:20.280
So we have just one level hierarchy here.

233
0:15:20.280 --> 0:15:30.040
So now I'm going to execute the nested pages migration tool that we also have at XFiki.

234
0:15:30.040 --> 0:15:33.640
The pages will be moved into their parents

235
0:15:33.640 --> 0:15:36.160
according to the hierarchy that they had in Confluence.

236
0:15:36.160 --> 0:15:38.240
As you see, it's converting all the pages

237
0:15:38.240 --> 0:15:42.640
and they will be moved in the right place.

238
0:15:42.640 --> 0:15:46.440
Okay, cool. So now we have a migration done.

239
0:15:46.440 --> 0:15:50.920
You can look at the pages to see all of your content.

240
0:15:50.920 --> 0:15:53.760
You also have, again,

241
0:15:53.760 --> 0:15:58.960
a lot of the macros that are also installed and can be reused.

242
0:15:58.960 --> 0:16:04.120
For the macros, the pro macros that I told you about,

243
0:16:04.120 --> 0:16:07.680
the bridge macros on our side are packaged.

244
0:16:07.680 --> 0:16:09.720
So they are open source.

245
0:16:09.720 --> 0:16:15.600
They are public here if you want to check them out or repackage them.

246
0:16:15.600 --> 0:16:19.120
On our side, they are packaged as

247
0:16:19.120 --> 0:16:24.120
under a license to be able to further support the development of the product.

248
0:16:26.040 --> 0:16:29.400
If you want to check them out or contribute to them,

249
0:16:29.400 --> 0:16:32.880
you can see them on our Git.

250
0:16:33.160 --> 0:16:38.560
We have here a Confluence migration done very quickly

251
0:16:38.560 --> 0:16:40.480
and without much hassle.

252
0:16:40.480 --> 0:16:43.280
Okay. We saw the Confluence migration.

253
0:16:43.280 --> 0:16:46.560
Now, let's see the SharePoint one.

254
0:16:46.560 --> 0:16:52.640
So the way in which we migrate from Confluence is based on the XML export.

255
0:16:52.640 --> 0:16:55.480
From SharePoint, it's very different.

256
0:16:55.480 --> 0:17:00.720
In SharePoint, you have the option to export to CSV.

257
0:17:00.720 --> 0:17:04.880
So if you're using SharePoint as a knowledge management tools and you

258
0:17:04.880 --> 0:17:07.320
have your documents with a bit of metadata,

259
0:17:07.320 --> 0:17:09.000
so like we have in this case,

260
0:17:09.000 --> 0:17:13.320
department could be considered metadata or structured data.

261
0:17:13.320 --> 0:17:19.360
A field that you can check or uncheck and change,

262
0:17:19.360 --> 0:17:22.320
and the pages have a form structure.

263
0:17:22.320 --> 0:17:24.680
So if you have this type of data,

264
0:17:24.680 --> 0:17:27.600
one thing that you can do is to export to CSV,

265
0:17:27.600 --> 0:17:31.720
then create the same data structure on XVQ.

266
0:17:31.720 --> 0:17:36.560
So on XVQ, we have an application that is called App Within Minutes,

267
0:17:36.560 --> 0:17:41.120
that allows you to create structured data systems.

268
0:17:41.120 --> 0:17:43.640
Here, I already have an example made,

269
0:17:43.640 --> 0:17:45.560
but we can look at the structure.

270
0:17:45.560 --> 0:17:51.760
Basically, I just created the same structure that I had in the SharePoint example.

271
0:17:51.760 --> 0:17:54.440
So title, department, reviewed,

272
0:17:54.440 --> 0:17:59.200
and find the content of my documents.

273
0:17:59.200 --> 0:18:03.320
Then once I have that structure done,

274
0:18:03.320 --> 0:18:07.040
I can use the batch import application.

275
0:18:07.040 --> 0:18:09.760
Sorry, not here.

276
0:18:12.680 --> 0:18:16.520
With the batch import application,

277
0:18:18.360 --> 0:18:24.600
I would import the CSV that I have just got from SharePoint,

278
0:18:24.600 --> 0:18:31.880
and I'm able to map the columns from the CSV to fields in XVQ that I have just created.

279
0:18:31.880 --> 0:18:34.720
Here is the mapping that I just did before.

280
0:18:34.720 --> 0:18:36.520
You can choose whatever you want,

281
0:18:36.520 --> 0:18:40.440
even exclude some columns if it's the case.

282
0:18:40.440 --> 0:18:42.880
Then we preview the mapping,

283
0:18:42.880 --> 0:18:47.840
and this is what they would look like on the XVQ side.

284
0:18:47.840 --> 0:18:52.560
So you can see that all the content is getting migrated.

285
0:18:52.560 --> 0:18:55.360
Let's just see a page.

286
0:18:55.440 --> 0:19:01.760
Here, you can say what you want to happen if you have duplicates.

287
0:19:01.760 --> 0:19:05.440
Then we do the import,

288
0:19:05.440 --> 0:19:07.720
and the final result is something like this.

289
0:19:07.720 --> 0:19:09.520
So all the pages were imported,

290
0:19:09.520 --> 0:19:10.920
and if you go to a page,

291
0:19:10.920 --> 0:19:15.960
you can see that you have this structured form type,

292
0:19:15.960 --> 0:19:18.680
and you can further edit it.

293
0:19:19.880 --> 0:19:22.640
That's all for the two examples.

294
0:19:22.640 --> 0:19:25.720
Sorry, I had to go through them very quickly.

295
0:19:25.720 --> 0:19:28.840
There are other things that you can do to migrate,

296
0:19:28.840 --> 0:19:34.360
and of course, we're very happy to facilitate any migration from

297
0:19:34.360 --> 0:19:38.720
any other proprietary tool to get more users to open source.

298
0:19:38.720 --> 0:19:41.480
Thank you. If you have any question.

299
0:19:48.240 --> 0:19:51.040
No questions? That clear? Yes.

300
0:19:51.040 --> 0:20:00.320
Yes, please.

301
0:20:00.320 --> 0:20:04.840
So how do we deal with migration from directory of old Office documents?

302
0:20:04.840 --> 0:20:06.120
Yeah.

303
0:20:09.120 --> 0:20:12.840
So two things that we can do.

304
0:20:13.120 --> 0:20:16.360
So when you import Office documents into XVQ,

305
0:20:16.360 --> 0:20:18.840
we do have a bundled integration with

306
0:20:18.840 --> 0:20:23.720
LibreOffice that allows you to convert Office pages into XVQ pages,

307
0:20:23.720 --> 0:20:25.160
but that's page by page.

308
0:20:25.160 --> 0:20:29.160
Or if you have any directory of Office files,

309
0:20:29.160 --> 0:20:33.080
what you can do is to actually create manually this type of a CSV,

310
0:20:33.080 --> 0:20:35.440
where you put in a row the content,

311
0:20:35.440 --> 0:20:38.520
and in this way, you can also add some metadata.

312
0:20:38.520 --> 0:20:40.380
For example, if you want to organize them in

313
0:20:40.380 --> 0:20:43.200
some departments or responsible person, so on.

314
0:20:43.200 --> 0:20:46.640
You can do that, and then still use the batch import.

315
0:20:46.640 --> 0:20:51.680
At the moment, we don't have an existing tool for just feeding some files.

316
0:20:51.680 --> 0:20:55.320
We have something in progress also with batch import.

317
0:20:55.320 --> 0:20:59.800
But yeah, the one option is to either convert them one by one,

318
0:20:59.800 --> 0:21:01.480
or use the batch import,

319
0:21:01.480 --> 0:21:07.080
but you would still need to organize them in a list.

320
0:21:07.920 --> 0:21:11.200
That answers it. Yes, please.

321
0:21:11.200 --> 0:21:17.000
My experience with migration is that the technical migration is the easiest part.

322
0:21:17.000 --> 0:21:21.200
It's all the cleanup and the preparation by the users

323
0:21:21.200 --> 0:21:24.320
before the migration then the top part.

324
0:21:24.320 --> 0:21:25.920
I see two things.

325
0:21:25.920 --> 0:21:29.760
One is really cleanup like deciding what to migrate and what to migrate.

326
0:21:29.760 --> 0:21:34.040
The other is improving the quality of the data.

327
0:21:34.040 --> 0:21:39.720
Because the situation you often have in business is that there's backing metadata.

328
0:21:39.720 --> 0:21:42.360
So you want to enrich the documents in the migration.

329
0:21:42.360 --> 0:21:45.840
Is this something that your tool can do?

330
0:21:45.840 --> 0:21:52.520
So adding extra metadata or adding metadata values where they are missing?

331
0:21:52.520 --> 0:21:54.840
Yeah. So thank you for the question.

332
0:21:54.840 --> 0:21:57.080
Just to repeat it, if it's the case,

333
0:21:57.080 --> 0:22:01.760
the question is if we facilitate in any way

334
0:22:01.760 --> 0:22:05.280
the addition of metadata or the cleanup, I would assume.

335
0:22:05.280 --> 0:22:12.320
So on the metadata, as just mentioned now for the office part,

336
0:22:12.320 --> 0:22:14.600
if you have office documents in any way,

337
0:22:14.600 --> 0:22:18.520
you can adapt that CSV file before migrating.

338
0:22:18.520 --> 0:22:25.960
So for example, if you have office files or if you have an export from SharePoint,

339
0:22:25.960 --> 0:22:29.920
but not all documents have metadata,

340
0:22:29.920 --> 0:22:33.320
you can add them manually in the CSV that you do.

341
0:22:33.320 --> 0:22:37.200
On the conference side, not that much.

342
0:22:37.200 --> 0:22:39.600
You can of course,

343
0:22:39.600 --> 0:22:42.400
so the labels and everything are imported.

344
0:22:42.400 --> 0:22:45.640
But to be straight here,

345
0:22:45.640 --> 0:22:47.760
it depends more on what you have on conference.

346
0:22:47.760 --> 0:22:49.760
Because basically with the migration from conference,

347
0:22:49.760 --> 0:22:52.960
we just take everything that you have and put it into XVeeKey.

348
0:22:52.960 --> 0:22:55.480
We don't really facilitate any cleanup.

349
0:22:55.480 --> 0:23:02.600
But we allow you to migrate labels and macros that also do reports and all that.

350
0:23:02.600 --> 0:23:04.640
But for conference specifically,

351
0:23:04.640 --> 0:23:08.120
it's a bit difficult to add metadata.

352
0:23:08.120 --> 0:23:11.120
Do you also migrate pages and lists?

353
0:23:11.120 --> 0:23:12.080
Sorry?

354
0:23:12.080 --> 0:23:15.240
For SharePoint, do you also migrate pages and lists?

355
0:23:15.240 --> 0:23:17.000
So it will be not only documents?

356
0:23:17.000 --> 0:23:18.640
From SharePoint, at the moment,

357
0:23:18.640 --> 0:23:22.160
we migrate documents, so Word documents.

358
0:23:22.160 --> 0:23:25.280
There are other tools that we're working on with

359
0:23:25.280 --> 0:23:28.680
Office integrations and Microsoft integration.

360
0:23:28.680 --> 0:23:34.080
But at the moment, we only import documents.

361
0:23:34.080 --> 0:23:36.120
Thank you. Yes.

362
0:23:36.120 --> 0:23:37.480
Maybe you told it.

363
0:23:37.480 --> 0:23:43.120
What about users permission right to view document or part of document?

364
0:23:43.120 --> 0:23:44.440
Are they integrated too?

365
0:23:44.440 --> 0:23:46.720
Thank you. That's a really good question.

366
0:23:46.720 --> 0:23:51.720
So the question is for user rights or permissions.

367
0:23:51.720 --> 0:23:57.920
That's in the part of the dependencies or integrations that we need to

368
0:23:57.920 --> 0:24:02.120
mind at XVeeKey if you migrate from conference,

369
0:24:02.120 --> 0:24:04.920
for example, and you have native conference users.

370
0:24:04.920 --> 0:24:07.040
Yes, we have the option to import them.

371
0:24:07.040 --> 0:24:10.640
You just need to configure that in the filter streams,

372
0:24:10.640 --> 0:24:14.680
and you can import the users, but not the permissions.

373
0:24:14.680 --> 0:24:18.600
The issue with the permissions is that the systems are very different.

374
0:24:18.600 --> 0:24:21.000
In conference, you have a very different system

375
0:24:21.000 --> 0:24:23.280
of access permissions compared to XVeeKey.

376
0:24:23.280 --> 0:24:24.720
You can do that custom.

377
0:24:24.720 --> 0:24:29.000
Like if you do a script that maps the rights and tries to set up some rights,

378
0:24:29.000 --> 0:24:30.520
we can imagine that,

379
0:24:30.520 --> 0:24:32.000
but at the moment it's not possible.

380
0:24:32.000 --> 0:24:34.400
It's very difficult to do it generically.

381
0:24:34.400 --> 0:24:39.200
The alternative or the best case scenario is if you have something like

382
0:24:39.200 --> 0:24:43.240
an LDAP or even an unnecessary system that you have connected to your current tool,

383
0:24:43.240 --> 0:24:44.840
and when you migrate,

384
0:24:44.840 --> 0:24:48.000
you connect that same user directory to the new tool,

385
0:24:48.000 --> 0:24:53.040
such as XVeeKey, and you just have the users created that at the first login.

386
0:24:53.040 --> 0:24:55.920
That's of course the best case scenario.

387
0:24:55.920 --> 0:24:59.920
It's also actually possible to migrate users with the batch import.

388
0:24:59.920 --> 0:25:03.400
So you can do a bit of a hack there and import users as well.

389
0:25:03.400 --> 0:25:05.960
But for permissions, it's generally very

390
0:25:05.960 --> 0:25:08.480
complicated and it's a case-by-case situation.

391
0:25:08.480 --> 0:25:12.560
You can import groups from LDAP.

392
0:25:12.560 --> 0:25:17.120
We're also working on importing groups from Azure SSO.

393
0:25:17.120 --> 0:25:19.880
But permissions, it's not yet

394
0:25:19.880 --> 0:25:26.760
generic enough done in our extensions. Yes.

395
0:25:26.760 --> 0:25:30.680
What about the addition history of the document?

396
0:25:30.680 --> 0:25:35.560
Is it too reserved to the moment migration or is it too kept?

397
0:25:35.560 --> 0:25:38.040
So thank you. Also a great question.

398
0:25:38.040 --> 0:25:43.480
If the history of additions is kept for the conference migration,

399
0:25:43.480 --> 0:25:47.320
yes, or for the XML migrations in general, yes.

400
0:25:47.320 --> 0:25:53.640
We do have that and you can also see in our example here.

401
0:25:53.640 --> 0:25:56.720
I'm not sure if this one has enough history, but yes.

402
0:25:56.720 --> 0:25:58.960
Okay. So just a quick example,

403
0:25:58.960 --> 0:26:00.240
the history is retained.

404
0:26:00.240 --> 0:26:03.520
Again, if you configure the filter to do so,

405
0:26:03.520 --> 0:26:05.560
and if you have this history retained,

406
0:26:05.560 --> 0:26:08.360
you can also see the changes within the versions.

407
0:26:08.360 --> 0:26:11.560
So that's something very nice.

408
0:26:11.560 --> 0:26:15.600
For SharePoint, we don't have that at the moment because we're not taking

409
0:26:15.600 --> 0:26:18.960
all the metadata from the documents.

410
0:26:19.160 --> 0:26:25.000
Also on other tools that support this type of filter streams migration,

411
0:26:25.000 --> 0:26:28.120
you may also get the history.

412
0:26:28.120 --> 0:26:44.880
Okay. Thank you very much. Thanks.

