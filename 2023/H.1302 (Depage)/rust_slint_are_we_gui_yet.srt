1
0:00:00.000 --> 0:00:09.640
So now we have Olivier, he's going to talk about Slint.

2
0:00:09.640 --> 0:00:10.640
Hello.

3
0:00:10.640 --> 0:00:11.640
Yeah.

4
0:00:11.640 --> 0:00:18.960
So about me, I started open source working on contributing to the KD project, which is

5
0:00:18.960 --> 0:00:20.760
a project made with Qt.

6
0:00:20.760 --> 0:00:25.240
So that led me to be hired as my first job at Trolltech, which was a company making Qt,

7
0:00:25.240 --> 0:00:27.480
later bought by Nokia.

8
0:00:27.480 --> 0:00:33.380
But in 2000, so 10 years ago, I left to create my own company, Software Services.

9
0:00:33.380 --> 0:00:38.320
And still I was still a bit in the Qt ecosystem.

10
0:00:38.320 --> 0:00:41.280
And I was talking with Simon Hossmann, also from Qt.

11
0:00:41.280 --> 0:00:46.200
And we were like the sad state of current desktop UI.

12
0:00:46.200 --> 0:00:47.640
Can we do better?

13
0:00:47.640 --> 0:00:51.720
What would happen if we would create a new UI to create from scratch?

14
0:00:51.720 --> 0:00:55.520
And in 2020, then, we created Slint.

15
0:00:55.520 --> 0:01:02.960
So this is implemented 100% almost in Rust.

16
0:01:02.960 --> 0:01:04.640
Most of it is implemented in Rust.

17
0:01:04.640 --> 0:01:07.320
It's a native toolkit.

18
0:01:07.320 --> 0:01:09.700
So native as opposed to runs in a browser.

19
0:01:09.700 --> 0:01:11.800
So it really runs natively.

20
0:01:11.800 --> 0:01:20.360
And it's aiming at desktop and embedded at first.

21
0:01:20.360 --> 0:01:26.480
And so it uses its own domain-specific language.

22
0:01:26.480 --> 0:01:28.720
So it's like a macro.

23
0:01:28.720 --> 0:01:34.760
And you might say, wait, is this, I wanted to develop in Rust.

24
0:01:34.760 --> 0:01:37.920
And now you're saying I need to learn a new language to do UI.

25
0:01:37.920 --> 0:01:39.680
And it's, yeah.

26
0:01:39.680 --> 0:01:45.160
But fortunately, learning this language is not more difficult than just learning the

27
0:01:45.160 --> 0:01:47.720
API of any other library.

28
0:01:47.720 --> 0:01:50.960
So just like learning an API.

29
0:01:50.960 --> 0:01:53.400
And Rust is not really meant for UI.

30
0:01:53.400 --> 0:01:58.240
There is a lot of ways that Rust is a bit too explicit in some cases where for UI, you

31
0:01:58.240 --> 0:02:08.000
just want to describe the UI in a way that all languages is much better at.

32
0:02:08.000 --> 0:02:11.760
And then this thing is only to describe the user interface.

33
0:02:11.760 --> 0:02:15.320
But all the logic, of course, is written in a programming language.

34
0:02:15.320 --> 0:02:22.080
So for example, Rust, but we also have bindings to various languages like C++ or JavaScript.

35
0:02:22.080 --> 0:02:25.560
And we tend to add more.

36
0:02:25.560 --> 0:02:28.200
So let's try to make a short demo.

37
0:02:28.200 --> 0:02:30.720
I cannot do the demo because it's a lightning talk.

38
0:02:30.720 --> 0:02:33.020
But I just took some screenshots.

39
0:02:33.020 --> 0:02:36.840
So let's just create a new project at Slint as a dependency.

40
0:02:36.840 --> 0:02:39.840
There is an extension.

41
0:02:39.840 --> 0:02:43.000
So this is Visual Studio Code where we can install an extension.

42
0:02:43.000 --> 0:02:45.000
We search Slint there.

43
0:02:45.000 --> 0:02:46.280
And one click install.

44
0:02:46.280 --> 0:02:50.120
And if you don't have Visual Studio Code, it's OK because this is just a wrapper around

45
0:02:50.120 --> 0:02:52.240
a language server protocol, just an LSP.

46
0:02:52.240 --> 0:02:57.440
So that works with most editors.

47
0:02:57.440 --> 0:03:01.400
And if you don't want to use it, it's all optional.

48
0:03:01.400 --> 0:03:06.240
But let's go back to main.rs and add some code.

49
0:03:06.240 --> 0:03:08.240
Here we add our little macro.

50
0:03:08.240 --> 0:03:11.720
It shows a small window with a text and a button.

51
0:03:11.720 --> 0:03:15.880
By typing that, of course, I had the full power of this extension.

52
0:03:15.880 --> 0:03:20.400
That includes auto completion, go to symbol, and everything else.

53
0:03:20.400 --> 0:03:27.520
We even have this little property editor there that we added.

54
0:03:27.520 --> 0:03:32.720
But the coolest thing here is that we have this codelens.

55
0:03:32.720 --> 0:03:33.720
Show preview.

56
0:03:33.720 --> 0:03:34.720
Let's click on this.

57
0:03:34.720 --> 0:03:37.680
It can be a correction as well on other editors.

58
0:03:37.680 --> 0:03:40.280
And a window up here.

59
0:03:40.280 --> 0:03:44.160
So the LSP server behind the scene opens a new window.

60
0:03:44.160 --> 0:03:47.080
And this is the preview of what you just typed.

61
0:03:47.080 --> 0:03:49.240
And if you type, it updates life.

62
0:03:49.240 --> 0:03:55.240
So this is really interesting because when you do UI, you really want to see what happens

63
0:03:55.240 --> 0:03:56.240
as you do.

64
0:03:56.240 --> 0:03:59.760
You don't want to spend a long time compiling and stuff.

65
0:03:59.760 --> 0:04:04.160
Let's add a callback here, btn underscore clicked.

66
0:04:04.160 --> 0:04:09.040
And in the Rust code, we will instantiate our main window that we created from this

67
0:04:09.040 --> 0:04:15.800
macro and connect to it with the generated unbtn clicked.

68
0:04:15.800 --> 0:04:18.160
So this is generated by the macro.

69
0:04:18.160 --> 0:04:20.840
And to have some Rust code, it can be called.

70
0:04:20.840 --> 0:04:26.800
So if we click and run the code, that's it.

71
0:04:26.800 --> 0:04:28.960
We have the thing.

72
0:04:28.960 --> 0:04:34.000
Here we see that the two windows on the screenshot have different styles.

73
0:04:34.000 --> 0:04:36.260
That's because it's styleable.

74
0:04:36.260 --> 0:04:39.840
So we have, for example, the front style, or we also have here a native style because

75
0:04:39.840 --> 0:04:43.560
we really want to be native to a kit.

76
0:04:43.560 --> 0:04:49.320
So using the native style.

77
0:04:49.320 --> 0:04:55.960
Let's add a property that we can set with a, now in the callback, we say set count get

78
0:04:55.960 --> 0:04:56.960
count plus one.

79
0:04:56.960 --> 0:05:01.600
So we added this property that we use in the text.

80
0:05:01.600 --> 0:05:02.600
Properties are reactive.

81
0:05:02.600 --> 0:05:09.960
So what we do is that when you change them, they automatically change.

82
0:05:09.960 --> 0:05:19.000
And Slint knows what to refresh.

83
0:05:19.000 --> 0:05:20.120
So what can we do?

84
0:05:20.120 --> 0:05:22.800
So here is a little demo.

85
0:05:22.800 --> 0:05:23.800
Okay.

86
0:05:23.800 --> 0:05:26.640
Yeah, that works.

87
0:05:26.640 --> 0:05:33.040
So this is apparently not working really good in this presentation.

88
0:05:33.040 --> 0:05:39.660
But the idea here that you will see the demo running on WebAssembly in the browser.

89
0:05:39.660 --> 0:05:47.880
So it's meant to be a desktop framework, but it also runs for the demo on the browser.

90
0:05:47.880 --> 0:05:50.080
And now.

91
0:05:50.080 --> 0:05:52.080
Okay.

92
0:05:52.080 --> 0:05:54.520
So this doesn't look good with this projector.

93
0:05:54.520 --> 0:06:00.640
But again, this is a gallery which show a few controls.

94
0:06:00.640 --> 0:06:01.640
So what about the performance?

95
0:06:01.640 --> 0:06:02.720
How lightweight is it?

96
0:06:02.720 --> 0:06:11.480
So here I have with me this microcontroller.

97
0:06:11.480 --> 0:06:13.440
So this is a Raspberry Pi Pi Co.

98
0:06:13.440 --> 0:06:15.920
It has less than three kilobytes of RAM.

99
0:06:15.920 --> 0:06:18.440
I said kilobyte, not megabyte.

100
0:06:18.440 --> 0:06:23.760
And yes, it's working.

101
0:06:23.760 --> 0:06:27.360
We have scrolling, some animations.

102
0:06:27.360 --> 0:06:35.600
So that shows what we can do.

103
0:06:35.600 --> 0:06:38.000
So the project is open source.

104
0:06:38.000 --> 0:06:40.360
It's entirely developed on GitHub.

105
0:06:40.360 --> 0:06:43.280
We have set pull requests.

106
0:06:43.280 --> 0:06:46.440
We also accept, of course, bug reports.

107
0:06:46.440 --> 0:06:51.080
Please send GitHub issues, open GitHub issues.

108
0:06:51.080 --> 0:06:53.880
The license is GPL for open source projects.

109
0:06:53.880 --> 0:06:56.000
And we also accompany, so we want to make money out of it.

110
0:06:56.000 --> 0:06:57.760
So that's why we have multiple license.

111
0:06:57.760 --> 0:07:00.560
So GPL for open source project.

112
0:07:00.560 --> 0:07:04.120
And we also have an ambassador license, as we call it.

113
0:07:04.120 --> 0:07:09.600
It's a free license which you can use for proprietary software.

114
0:07:09.600 --> 0:07:13.600
You just have to say that you're using Slint.

115
0:07:13.600 --> 0:07:20.720
And there is also a commercial license with support and so on.

116
0:07:20.720 --> 0:07:23.640
So in the future, we've planned after already three years

117
0:07:23.640 --> 0:07:24.280
of development.

118
0:07:24.280 --> 0:07:27.280
We are now almost ready to release the version 1.0.

119
0:07:27.280 --> 0:07:30.920
So if all goes well, it should be released this month,

120
0:07:30.920 --> 0:07:33.720
end of February.

121
0:07:33.720 --> 0:07:35.040
And the other thing we're working on

122
0:07:35.040 --> 0:07:37.400
is to improve our little preview there

123
0:07:37.400 --> 0:07:41.200
and to make it that you could drag and drop things, drag

124
0:07:41.200 --> 0:07:46.760
and drop widgets, and have actually a design tool where

125
0:07:46.760 --> 0:07:50.160
so even design, you could do the design

126
0:07:50.160 --> 0:07:53.320
without even touching this Slint language.

127
0:07:53.320 --> 0:07:56.640
So that's our hope for the future.

128
0:07:59.360 --> 0:08:01.280
So that's the end of my presentation.

129
0:08:01.280 --> 0:08:07.360
I hope that it made you want to try Slint.

130
0:08:07.360 --> 0:08:11.760
And please do contact me if you have any question

131
0:08:11.760 --> 0:08:14.520
or if you're wondering if you can use Slint.

132
0:08:14.520 --> 0:08:15.480
I'll be around.

133
0:08:15.480 --> 0:08:16.880
Please ask questions.

134
0:08:16.880 --> 0:08:19.360
Thank you.

135
0:08:19.360 --> 0:08:20.360
Thank you.

136
0:08:20.360 --> 0:08:47.880
Thank you.

