WEBVTT

00:00.000 --> 00:10.980
Hello, folks. Welcome to my talk. I'm Akashdeep Dhair. Today I'm going to talk about Linux

00:10.980 --> 00:17.240
distribution state of gaming. I'll talk a little bit about myself first. So, basically,

00:17.240 --> 00:21.600
I'm someone who has been contributing to Fedora project for around a couple of years before

00:21.600 --> 00:26.720
they taught, you know, the folks who actually help the Fedora distribution as a corporate

00:26.720 --> 00:29.840
entity. They thought, well, I'm not going to leave anyway, so they might as well hire

00:29.840 --> 00:35.440
me. So, the next thing that I find myself doing is actually working as a software engineer

00:35.440 --> 00:40.560
for a team that manages infrastructure for Fedora as well as CentOS. It's called the

00:40.560 --> 00:45.060
community platform engineering team. As well as, you know, just because Fedora is kind

00:45.060 --> 00:50.720
of close to my heart, I mean, it's kind of CentOS at this point in time, but misappropriation.

00:50.720 --> 00:54.960
I work for Fedora council as well as being the objective representative for the Fedora

00:54.960 --> 01:01.360
website synapse team. Gaming has been a prime concern for me, especially having laptops

01:01.360 --> 01:06.400
that don't quite run games. So, the thing that I used to do is have distributions that

01:06.400 --> 01:12.680
can actually have a greater headroom assigned to that game instead of running some fancy

01:12.680 --> 01:17.560
stuff in the background. So, that is what has been the entry point for Linux distributions

01:17.560 --> 01:23.160
for me. So, over the course of last five years, I have written and demonstrated multiple talks,

01:23.160 --> 01:29.960
multiple articles around how to be able to run video games on GNU Linux distributions,

01:29.960 --> 01:35.920
how to be able to benchmark them, and what driver install is to while we're at it. Right.

01:35.920 --> 01:41.480
So, I watched this movie called Zootopia, and there's this fox character that I can't

01:41.480 --> 01:46.600
remember the name of. So, he tells that, you know, the best way of giving a talk is to

01:46.600 --> 01:53.200
ask a question to themselves first, and then answering that question. So, I guess I'll

01:53.200 --> 01:58.120
do that. So, we're going to ask ourselves three questions about the state of gaming

01:58.120 --> 02:03.800
in Linux distributions. The first being, is it popular? The second being, is it convenient

02:03.800 --> 02:08.760
to make happen? And the third being, is it performant? Like, why even consider gaming

02:08.760 --> 02:13.480
on Linux distributions when there is some other consoles, there are other platforms

02:13.480 --> 02:21.480
which are actually willing to do that. So, it certainly is popular. I mean, we can totally

02:21.480 --> 02:26.480
thank our friends at WALB for the Steam Deck and for other people who run a lot of games

02:26.480 --> 02:32.040
on their Android iPhones. I mean, Android is Linux, all right. But then again, is it

02:32.040 --> 02:36.960
the way we kind of want it to be popular? So, there's small asterisks over there. We

02:36.960 --> 02:42.240
have things for emulation. We have things operating systems dedicated for running video

02:42.240 --> 02:48.680
games like distributions like Bartosail Linux, Laka, which runs RetroArch, and nothing else

02:48.680 --> 02:53.840
on the bottom of it. Then there's this thing called RetroPie, which runs emulation stations.

02:53.840 --> 02:58.640
So, if you must have gotten yourself a Raspberry Pi and looked for something in the internet,

02:58.640 --> 03:03.040
some DIY tutorial, it's probably one of the first five things you will end up seeing.

03:03.040 --> 03:11.000
And finally, consoles that actually use Linux on the top of them. Speaking of convenience,

03:11.000 --> 03:16.840
that is convenient. Is it convenient to run Linux distributions for gaming? And you most

03:16.840 --> 03:22.440
certainly will have different opinions regarding the kind of configurations that you want to

03:22.440 --> 03:26.520
do. If you want to tailor-fit your stuff, get the frame rates that you want and the

03:26.520 --> 03:32.560
quality that you need, there are more configurations too, like Bare-Bones Wine, RetroArch, so that

03:32.560 --> 03:37.200
you can tailor-fit your stuff, or something like Android phones or Steam Deck, which can

03:37.200 --> 03:45.160
do that for you. And finally, we have performance. Now, I have seen this over the course of years,

03:45.160 --> 03:49.600
running video games on Linux, those things that are supposed to run on Windows, that

03:49.600 --> 03:56.280
if the games run, well, if they do, they usually end up being 15 to 30 percent more performant.

03:56.280 --> 04:00.720
You can totally find the references in the slide deck if the font's a bit too small,

04:00.720 --> 04:08.680
but yeah, this thing is actually the case. But what exactly is the sacrifice here? Also,

04:08.680 --> 04:13.040
I mean, I can pass through a GPU. If I have this big GPU, I can pass it through virtual

04:13.040 --> 04:19.040
machines and have near-native performances, instead of doing, say, on a hardware that

04:19.040 --> 04:26.000
is totally not okay for a certain game to run. But yeah, why exactly do I have those

04:26.000 --> 04:32.440
asterisks out there? If it's performant, if it's convenient, if it's popular, then what's

04:32.440 --> 04:39.080
with the terms and conditions supply kind of thing that I have over there? And well,

04:39.080 --> 04:43.440
there are things that we're missing out. So one of the first things that we do is it is

04:43.440 --> 04:49.480
popular. People are enthusiastic about it, but less people are enthusiastic about it.

04:49.480 --> 04:55.040
And it's usually the people who would like to spend their hours configuring things, writing

04:55.040 --> 05:01.600
config files, hacking stuff to be able to run some games on their desktop or their handheld

05:01.600 --> 05:08.800
devices that run Linux distributions. And that's barely around 1.38%. And that's the

05:08.800 --> 05:14.600
space about where I got that 1.38% from. It is something that has been going up since

05:14.600 --> 05:19.840
the last couple of years. Here again, we have the friends at work to thank for, for this

05:19.840 --> 05:25.520
team that we are getting increased usage. But a lot of these users are totally going

05:25.520 --> 05:30.680
unaccounted for because telemetry is a big no-no for us. And we definitely advertise

05:30.680 --> 05:38.080
telemetry as something that we should not do. And well, when there are things like Luthrys,

05:38.080 --> 05:45.760
things like RetroPy, RetroArch, then Play on Linux, Wine, these tools are doing the

05:45.760 --> 05:51.480
best that they can do. But guess what? We don't get to know how exactly are these being

05:51.480 --> 05:57.440
used. And as a result, the publishers, they think that, well, Linux distributions, who

05:57.440 --> 06:02.520
uses Linux distributions? Why should we port our games to Linux distributions? Better not.

06:02.520 --> 06:09.120
We might as well create them for other platforms. Well, I won't name any, but with comparatively

06:09.120 --> 06:13.760
higher market share, right, of our consoles. Because guess what? Consoles are supposed

06:13.760 --> 06:19.680
to be for gaming, not for writing code. And then, you know, third-party developers, they

06:19.680 --> 06:24.720
don't bother. They don't really care. They are like, ah, fine. They'll use their stuff

06:24.720 --> 06:31.600
to emulate our games on their platform. They call Wine an emulator. We know the difference.

06:31.600 --> 06:39.200
They probably don't. So I go, have my friends have a conversation with my friends that,

06:39.200 --> 06:44.400
yeah, you play this game on Windows, here's how it can run on Linux. And they're like,

06:44.400 --> 06:50.200
oh, my God. That's too many configuration files. That's too many hours of work. And

06:50.200 --> 06:54.120
all my friends are on Windows. So sorry about that, brother. But I'm going to be at Windows

06:54.120 --> 07:00.720
as well. And the other person, they try installing games. But guess what? It's a multiplayer

07:00.720 --> 07:06.960
game. And it's like, oh, no. We don't recognize this platform. So you're cheating. That kind

07:06.960 --> 07:11.200
of stuff. That totally puts people off. They don't want them to be here, even though they

07:11.200 --> 07:20.800
totally are not. Talking about convenience. It's, well, it's convenient for some people.

07:20.800 --> 07:25.360
The some, you know, I kind of count myself in the minority because I can totally go behind

07:25.360 --> 07:30.080
the screen, do hours of stuff. But for what about others? You know, what about the folks

07:30.080 --> 07:35.160
who just want to spend some time playing games on a weekend? You know? Someone who have a

07:35.160 --> 07:39.840
busy life. So you don't expect them to actually sit behind their computer screens for like

07:39.840 --> 07:44.400
five hours configuring stuff, right? You want them to actually be able to play games on

07:44.400 --> 07:50.680
the get go. It does not quite happen that way for the most parts. Few games work as

07:50.680 --> 07:56.680
it is. Some of them require minimal configuration, like some slides here, some slides there,

07:56.680 --> 08:03.840
maybe some versions of DXVK. But others, they don't work at all. And, you know, you don't

08:03.840 --> 08:08.280
get to know that they don't work unless you spend hours of it banging your head on the

08:08.280 --> 08:16.600
wall, trying to make them work, and then you realize that they really don't. So, the convenience.

08:16.600 --> 08:22.680
Like they follow through steps, but just because the Linux distributions are so fragmented,

08:22.680 --> 08:27.840
we have a certain version of package manager in a certain distribution. There's a certain

08:27.840 --> 08:33.320
way certain rootfs are installed. Stuff like that. So you can't quite expect a certain

08:33.320 --> 08:39.400
steps to actually work on one distributions and to be replicated on something else. There

08:39.400 --> 08:44.160
would be certain steps that would be required in between, and it only comes with experience.

08:44.160 --> 08:52.160
But can we expect experience? Of course not. So people have difficulties with doing that,

08:52.160 --> 08:56.680
and then people don't really want to spend time, and it's all valid because guess what?

08:56.680 --> 09:04.400
People are there to play games, not to become contributors in an open source software, right?

09:04.400 --> 09:09.120
Finally about performance. Right? So one of the things that happens with performance is

09:09.120 --> 09:17.040
the fact that there are games that run comfortably, right? All fine, good frame rates, good graphics,

09:17.040 --> 09:21.880
whatsoever. At the very same time, if you use that same distribution, you thought that,

09:21.880 --> 09:28.600
this runs Final Fantasy. I might as well run Warframe with that. Bam. It won't happen.

09:28.600 --> 09:32.720
It won't even load up, let alone have good frame rates in that. So there is some tailor

09:32.720 --> 09:37.760
fitting required, but that tailor fitting works for one thing, but it does not work

09:37.760 --> 09:44.480
for something else. So you don't have this one size fits all kind of a solution for gaming,

09:44.480 --> 09:50.400
which is sad, but then again, it is what it is right now. And well, there are some publishers

09:50.400 --> 09:56.720
who do not even support these environments. They are like, nope, not this, not that, nothing

09:56.720 --> 10:04.400
at all. We won't let Linux users play our games because that's not how we do things.

10:04.400 --> 10:10.840
And look, people are able to get frame rates. I was able to get a lot of frame rates, good

10:10.840 --> 10:16.780
performance, but there have been times when it has been all inconsistent. The such thing

10:16.780 --> 10:21.440
has happened with my friends as well, using a variety of Linux distributions. So it's

10:21.440 --> 10:25.920
definitely not just for all Linux, but my friends who actually use PopOS because it

10:25.920 --> 10:31.160
allows for having NVIDIA drivers installed from a get-go. So you don't really have to

10:31.160 --> 10:38.720
pop open a terminal and do some crazy voodoo according to my non-technical friends to be

10:38.720 --> 10:42.960
able to install drivers. It just works from the get-go, but guess what? Even they have

10:42.960 --> 10:49.040
some inconsistent performances. And then there are ports that are for Linux, but just because

10:49.040 --> 10:55.240
they are not a lot of takers, here again, telemetry. Just because people don't get to

10:55.240 --> 11:00.240
know that there are actually people playing their games trying hard to actually make them

11:00.240 --> 11:07.240
compatible. People pull them out, even if there was a version at some point in time.

11:07.240 --> 11:13.960
Right. So if all I have are complaints, is it all bad? Is it something that does not

11:13.960 --> 11:22.560
run at all? What is it like? You know, it's quite the opposite. It's not bad. The community

11:22.560 --> 11:29.000
has been doing a great job. If I were to look back 10 years ago, people had to use wine

11:29.000 --> 11:35.960
as it is, right? And it's a tool that gets things done, but then again, if you want things

11:35.960 --> 11:41.080
to be done, things need to be abstracted for you to be able to understand it. And if someone

11:41.080 --> 11:46.600
of a web developer is made to understand the things that go behind the scene, oh, my God.

11:46.600 --> 11:51.960
Then it's totally not worth doing. So there are tools like Lutris, Play on Linux that

11:51.960 --> 11:57.440
abstract the stuff that wine do. So it's a lot better right now than it has ever been

11:57.440 --> 12:03.400
before. But then again, there are things that we can totally do to make things a lot more

12:03.400 --> 12:09.800
better than they are right now. So there's a silver lining. It's a small market share.

12:09.800 --> 12:15.480
People can be unsatisfied with big config files and stuff like that. But here are six

12:15.480 --> 12:21.240
ways that I think, you know, it's all subjective. There can be other things that people can

12:21.240 --> 12:26.840
think as well that I can add my list and make it 60 probably. But one of the things that

12:26.840 --> 12:33.680
people need to understand is if it were really a technical challenge, right, say we have

12:33.680 --> 12:40.760
a lot of people working hard to make these things work. Drivers, no matter how hard it

12:40.760 --> 12:47.080
can be, for the property drivers, the property blocks, the kernel modules to be loaded up,

12:47.080 --> 12:53.240
people are working hard. But people are not understanding how exactly is it affecting

12:53.240 --> 12:58.880
or influencing the gamers, the folks who actually use Linux distributions to be able to play

12:58.880 --> 13:05.280
these games. So there should be some way of open metrics, you know, some kind of telemetry

13:05.280 --> 13:10.440
that is not shady. It does not look through your contacts and understand, oh, this person

13:10.440 --> 13:14.800
reaches out to this at a certain point in time. Not that kind of metrics, but rather

13:14.800 --> 13:20.840
what exactly is the tool, what exactly are the workflows that are used in order to make

13:20.840 --> 13:26.520
these video games work. So these level metrics should be implemented for the developers to

13:26.520 --> 13:31.400
understand that, yeah, their works are indeed worth it. And for the publishers, because,

13:31.400 --> 13:36.400
oh, boy, they think that the market share is small. So in order for the rise in market

13:36.400 --> 13:41.960
share, which has been for the most parts the ones that we get to see from Steam, we should

13:41.960 --> 13:50.080
have more than that. So I don't know if there are metrics in Lutris, bottles or emulators

13:50.080 --> 13:54.800
and I guess there's not apart from the ones that they themselves collect because guess

13:54.800 --> 14:00.320
what, they really want to see if their stuff works or not and how exactly can they improve

14:00.320 --> 14:06.880
their own software. But does it like add up to the entire Genio Linux gaming metrics and

14:06.880 --> 14:12.160
make people understand that, yeah, folks using Lutris, folks using bottles, folks using Steam

14:12.160 --> 14:17.920
Deck, folks using Android, they all combine together as being a market share for this

14:17.920 --> 14:22.720
entire gaming. I don't think so at this point in time, but this is something that we should

14:22.720 --> 14:30.720
definitely consider. The next thing, of course, is to account for feedback and promote participation.

14:30.720 --> 14:36.720
So I have seen in the course of the last many years that if you make people feel like they

14:36.720 --> 14:41.760
are being heard, no matter what kind of project it is, if it's just creating some websites

14:41.760 --> 14:47.440
or deploying things on the infrastructure or be it about gaming, if people are heard,

14:47.440 --> 14:53.120
if the features that they suggest, if the bugs that they tell is bothering them are

14:53.120 --> 14:58.960
implemented, chances are that they will tell their friends that this is some kind of tool

14:58.960 --> 15:03.640
that they make use of and they should make use of as well. And I like to think that reporting

15:03.640 --> 15:11.320
for bugs is also a very valuable contribution. Being empathetic to the users, understanding

15:11.320 --> 15:17.480
by putting themselves on their shoes, what kind of issues that they end up facing. And

15:17.480 --> 15:23.400
finally, understanding the tools that people make use of. If there are a lot of dials,

15:23.400 --> 15:27.400
if there are a lot of drop downs, if there are a lot of things that people have to do

15:27.400 --> 15:33.000
before they are able to run their games, it's probably not the most convenient way of doing

15:33.000 --> 15:37.600
so. So you can't quite expect a person coming back home after a long day to be able to tweak

15:37.600 --> 15:44.360
those stuffs and make them work. So the usability of them, how do we make it more convenient,

15:44.360 --> 15:48.680
should be something that we should look into in these distributions, you know, kind of

15:48.680 --> 15:52.880
streamline the entire workflow in order to make sure that people know where exactly they

15:52.880 --> 16:00.440
need to go to, to get a certain function, to get a certain settings applied. And that's

16:00.440 --> 16:04.680
more about the convenience of, you know, so that people can focus solely on the video

16:04.680 --> 16:10.160
games and not around the operating system that's built for the sake of running games.

16:10.160 --> 16:15.560
Because trust me, if you have a PC, operating system, you know, video games are the one

16:15.560 --> 16:20.480
thing out of thousand things that you will do. So it just makes it a lot easier to focus

16:20.480 --> 16:27.840
on what they want. For convenience, we totally should be able to abstract complex things

16:27.840 --> 16:33.200
when we need to. So customization is fine. It's one of the reasons why we are fragmented

16:33.200 --> 16:38.120
and I'm kind of thankful for it so that I have a choice that I can customize the distribution

16:38.120 --> 16:45.000
of my own kind to be able to make something to serve a certain purpose. But for the folks

16:45.000 --> 16:50.520
who don't need, it's going to be overwhelming. They're going to be really scared of all those

16:50.520 --> 16:55.240
options put out there in front of them and they'll be like, oh, my God, no, definitely

16:55.240 --> 17:00.160
not. And they'll run back to the thing that they were playing games on. So it's definitely

17:00.160 --> 17:06.200
not something that we would want to do. Being able to provide a balance between the two

17:06.200 --> 17:11.200
of them and, you know, organically finding, oh, fine, this person is crawling down the

17:11.200 --> 17:16.280
menu so probably is looking for something that's a lot more extensive than what we are

17:16.280 --> 17:21.760
provided for. Some kind of organic way to find it and to be able to demonstrate how

17:21.760 --> 17:27.240
they can do it is a way that would strike a good balance between the complicated looking

17:27.240 --> 17:34.120
stuff and the people who really want to get their job done as quick as possible.

17:34.120 --> 17:45.360
Finally, for distributions that actually prioritize these tools, these workflows, these applications,

17:45.360 --> 17:50.840
these should be available, like, natively in their own repositories or there should

17:50.840 --> 17:55.440
be a way to be able to install them and not, like, build from source or, like, dot-slashing

17:55.440 --> 17:59.560
them out of the blue because who runs shell-script files anyway, right? You should definitely

17:59.560 --> 18:05.040
read them. Drivers, codecs, kernel modules and things like that, if you don't have a

18:05.040 --> 18:12.680
way to update them natively, trust me, it's really a bad choice to be able to use in that

18:12.680 --> 18:17.800
distributions. Say, people are here to play games, not to build software from source.

18:17.800 --> 18:26.240
So definitely we should consider having all of these things packaged natively. And finally,

18:26.240 --> 18:31.560
to build standard workflows to be able to test and quantify that, yeah, what is good

18:31.560 --> 18:37.680
performance, what is bad. Now, me, I can be really biased towards good performance, even

18:37.680 --> 18:44.480
if I see 60 frames per second on a 165 hertz screen, I can tell that is good, but for someone

18:44.480 --> 18:49.080
else, it's like, oh, no, it's just like one-third of that frame rate. How do you call it a good

18:49.080 --> 18:55.520
performance? In that very case, we need to understand and tell that, yeah, this is the

18:55.520 --> 19:01.720
criteria that was used to tell that, yeah, this video game actually runs and this video

19:01.720 --> 19:07.040
game does not and could use some more work before it's able to be, well, executing the

19:07.040 --> 19:13.260
way it should be. And when we have all of these things in place, probably the publishers

19:13.260 --> 19:18.320
of AAA titles, popular ones like that, will be able to understand that, yeah, there is

19:18.320 --> 19:24.280
some kind of standards used in this fragmented world of distributions to be able to understand

19:24.280 --> 19:31.120
that, yeah, if we follow these rules to be able to create our games, it will have a compatibility

19:31.120 --> 19:37.160
with at least 85%, 75%, I'm saying this on the top of my head, but at least majority

19:37.160 --> 19:42.640
of distributions will not have a problem and you won't be actually told to use a certain

19:42.640 --> 19:49.880
version just because, well, your friend uses it. So let's have a case study of Fedora work

19:49.880 --> 19:58.000
station in the end. Say we have had distributions based on the top of Fedora Linux distribution.

19:58.000 --> 20:04.240
Nobara work station, they have added meaningful additions on the top, so to be able to make

20:04.240 --> 20:09.680
sure that people who really are willing to focus on video gaming, they don't have to

20:09.680 --> 20:14.840
install much stuff on the top of it. And, you know, it's heavily popular with the folks

20:14.840 --> 20:19.960
who develop bottles and looters because they get the latest and greatest stuff in the official

20:19.960 --> 20:24.760
repository, so they don't really have to go out of their way to do so. And then the required

20:24.760 --> 20:31.440
tooling to be able to run these games drivers and the ability to install them from RPM fusion

20:31.440 --> 20:36.520
just in case they are proprietary in nature is totally possible. And the fact that the

20:36.520 --> 20:43.320
GNOME desktop, well, what can I say? It's just one of the great ones. I'm a bit biased.

20:43.320 --> 20:50.200
Say, you know, it totally keeps the workflows aligned and, well, unintrusive. And finally

20:50.200 --> 20:55.400
talking about the consistent performance, well, let's just say that the configurations

20:55.400 --> 21:00.040
should be done in a modular manner so as to make sure that if I do certain thing, I can

21:00.040 --> 21:04.240
copy that stuff and give it to my friend. Here's, you know, you don't have to spend

21:04.240 --> 21:08.960
many hours like I did, paste that stuff and this should be running. Or something a bit

21:08.960 --> 21:14.080
more polished than that, but basically no more repeating of efforts. And, you know,

21:14.080 --> 21:20.320
customizable enough to be actually minimize the footprint of the operating system, distribution

21:20.320 --> 21:27.240
itself, to be able to dedicate more of that performance over to the actual video games.

21:27.240 --> 21:30.400
And that's pretty much about it. I'm totally open to your questions.

21:30.400 --> 21:37.400
Thank you for your talk. I got the impression that you're pushing for telemetry to be used

21:49.440 --> 21:54.560
more. Would that be right? Well, let's just say I'm pushing for an open telemetry. So

21:54.560 --> 22:00.720
you get to see what kind of information is being shared with the folks and what folks

22:00.720 --> 22:05.680
are you sharing that with so you don't think that, oh, it's a shady number of information

22:05.680 --> 22:11.240
and with a shady number of folks that it is shared with, right? So telemetry is important.

22:11.240 --> 22:16.640
There are software that have telemetry like pre-built and they have it natively done,

22:16.640 --> 22:22.120
but then again, it's just a limited set of telemetry people. Once we unify this and have

22:22.120 --> 22:26.000
a place where we can say that, yeah, it's coming from them. So there's something that

22:26.000 --> 22:30.400
we can improve upon in the distributions level so that we can understand that, yeah, a certain

22:30.400 --> 22:37.400
application or an emulator is acting up and there's something to do that we can act on.

22:37.400 --> 22:47.400
Any more questions?

23:07.400 --> 23:14.400
Thank you very much. I think on the telemetry side, there is a fundamental metric that the

23:17.800 --> 23:23.640
developers look at, which is sales. So I think the main thing is like there is a sort of

23:23.640 --> 23:29.520
one to 2% audience on Linux that will buy games. I think that's pretty clear. I think

23:29.520 --> 23:33.520
there are other advantages for developers having Linux users in early. We tend to report

23:33.520 --> 23:38.560
bugs and if we do that in a helpful and non-annoying way, then we can be an asset, particularly

23:38.560 --> 23:44.600
to the trend of people doing early access releases and wanting engaged users. So I think

23:44.600 --> 23:49.040
that's the thing that you can think about supporting early access games, supporting

23:49.040 --> 23:53.800
stuff on itch, I think is helpful. The other side is like if you just want to play games,

23:53.800 --> 23:58.760
by far the easiest thing to do is ignore your distribution, install Steam, Proton handles

23:58.760 --> 24:04.560
the config wrapping around wine really conveniently and the best game of the last five years was

24:04.560 --> 24:08.440
released natively on Linux anyway. So play Slay the Spire. Thank you.

24:08.440 --> 24:12.640
Thank you so much. One of the things that you mentioned that probably we could have

24:12.640 --> 24:18.120
some kind of telemetry done in a central basis and the fact that early access can be something

24:18.120 --> 24:22.160
that we can provide to people using Linux. It's one of the things that we can totally

24:22.160 --> 24:26.160
use to actually increase our market share and make people feel like that it's worth

24:26.160 --> 24:32.600
it if you give it a try and people might end up actually buying it. When it comes to Proton,

24:32.600 --> 24:37.960
I mean, geez, they have done a marvelous job by abstracting what's not important or what's

24:37.960 --> 24:43.240
totally really, really scary, might scare people away out of the room, leave their Steam decks

24:43.240 --> 24:47.680
that they have purchased with their hard-earned money and to be able to play games while they're

24:47.680 --> 24:54.040
on the go. So it's some kind of abstraction that, you know, keeps things convenient that

24:54.040 --> 24:57.680
we are all looking for. And there should be a balance. So people should be like, oh, geez,

24:57.680 --> 25:01.800
it's so abstracted that I can't do anything anymore, right? So that should definitely

25:01.800 --> 25:05.640
not happen. All right, folks, I'm going to give way to our next talk. Please find me

25:05.640 --> 25:26.360
over here if you have more questions. Thank you so much again.
