1
0:00:00.000 --> 0:00:09.520
Hopefully, yeah, I will wait. I just want to test the sound that it works on the other

2
0:00:09.520 --> 0:00:15.120
side. One, two, three. Web light, web light, web

3
0:00:15.120 --> 0:00:18.640
light, pontoon, web light, web light, web light, pontoon, web light, web light, web

4
0:00:18.640 --> 0:00:24.640
light, web light, web light, web light. Yeah. It works like that. This is how you

5
0:00:24.640 --> 0:00:37.840
celebrate. You just say it a lot of times. Yeah. Great.

6
0:00:37.840 --> 0:00:45.440
So long two days, right? And a lot of to come. I just want to ask you if you can all do a

7
0:00:45.440 --> 0:00:53.240
frowny face. Like you just ate something weird. Yeah. Test it. Test it on yourself because

8
0:00:53.240 --> 0:00:58.760
you will need it throughout the talk because you are from different backgrounds.

9
0:00:58.760 --> 0:01:03.960
Somebody is a developer. Somebody is not a developer. Somebody knows web light very well.

10
0:01:03.960 --> 0:01:10.600
And somebody came here to get to know web light. Somebody was on my talk yesterday who

11
0:01:10.600 --> 0:01:21.840
was not, can watch probably tomorrow or the after the recording. But I didn't get the

12
0:01:21.840 --> 0:01:28.560
link yet. So probably soon it will be. So the frowny face will be in use if you don't

13
0:01:28.560 --> 0:01:34.240
like something, if you feel like you are bored here. Just do your frowny face so I know that

14
0:01:34.240 --> 0:01:41.440
I should go a little bit quicker to what I am just talking about. Yeah? Okay.

15
0:01:41.440 --> 0:01:50.760
So I'm Benjamin. I'm from web light. I do the talking and Michael there do the coding.

16
0:01:50.760 --> 0:02:00.160
So yeah. That's the web light team. And we also have a teammate named part. And he does

17
0:02:00.160 --> 0:02:11.400
the coding part time. So what's web light? And okay. Web light is a liberal localization

18
0:02:11.400 --> 0:02:17.760
platform. It's well documented piece of software. I want to point it out because sometimes if

19
0:02:17.760 --> 0:02:23.880
you want to get to know the software, you get to ask a lot of questions other people.

20
0:02:23.880 --> 0:02:29.280
With web light you don't have to. But yeah, you can still ask me if you don't find your

21
0:02:29.280 --> 0:02:37.040
answer in the documentation. It's a couple of software. It's licensed under GPL 3. And

22
0:02:37.040 --> 0:02:49.320
all the development is public on GitHub. We started as an open source project. And it's

23
0:02:49.320 --> 0:02:56.520
not going to change. Because yeah, it's the best way to develop software. What web light

24
0:02:56.520 --> 0:03:02.120
should do is to make the tough process of localization and coordination of a lot of

25
0:03:02.120 --> 0:03:13.720
people and having so many things at so many places just easy. And it's for developers.

26
0:03:13.720 --> 0:03:19.640
It's for translators. It's for managers. It's for everyone that's involved in the project

27
0:03:19.640 --> 0:03:28.560
of localization. And wow. It's a weird color. But on X2logo you will read it's a verb. And

28
0:03:28.560 --> 0:03:33.640
yeah, some of our users started using to web light. Which means I'm going to translate

29
0:03:33.640 --> 0:03:44.400
something on web light. So we are a verb too. Web light works or is aimed that you will

30
0:03:44.400 --> 0:03:53.280
just set it once or tell it that it needs to be set in some way in the future. And it

31
0:03:53.280 --> 0:03:58.240
will do itself. So you just set it and forget it and let it work for you. Because you don't

32
0:03:58.240 --> 0:04:05.840
want to do the work if it can be done by a great piece of software. It's supposed to

33
0:04:05.840 --> 0:04:13.720
be having all translations. So not just one platform. Not just your website or your app.

34
0:04:13.720 --> 0:04:21.200
Everything in one place. Many, many fans of localization file formats are supported. So

35
0:04:21.200 --> 0:04:26.440
you don't have to use web light just for part of your workflow. Put there everything. And

36
0:04:26.440 --> 0:04:35.040
it will give you a free time. Once you have it there, have your translations there, you

37
0:04:35.040 --> 0:04:40.100
probably want to give it a context and communicate with other users. You can do that. If you

38
0:04:40.100 --> 0:04:44.600
find that search string weird, you can just add a comment, notify the maintainers and

39
0:04:44.600 --> 0:04:53.080
they will know it. Once you have it integrated, which means in the best way integrated with

40
0:04:53.080 --> 0:04:58.320
your version control system, because that's why Michael started web light 11 years ago

41
0:04:58.320 --> 0:05:05.200
to have some kind of translation software integrated to what you love to do. You love

42
0:05:05.200 --> 0:05:11.320
to develop software. Not to send back and forth or use API calls or write scripts. You

43
0:05:11.320 --> 0:05:17.240
just want to develop your software and let some other software do the parts you don't

44
0:05:17.240 --> 0:05:26.400
fancy that much. Once you have your translations there, then you go to the editor if you are

45
0:05:26.400 --> 0:05:32.520
a translator, which is a lovely part of web light where you can see all the context, all

46
0:05:32.520 --> 0:05:37.760
the screenshots, all the communication with other translators, and where you can localize

47
0:05:37.760 --> 0:05:44.520
the string to your desired language out of the search language or multiple languages.

48
0:05:44.520 --> 0:05:51.200
Once that's done, web light does the magic, as Jean Baptiste from Fedora said, because

49
0:05:51.200 --> 0:05:57.240
there are all the checks and fix-ups so you don't have to control the quality of your

50
0:05:57.240 --> 0:06:06.200
I shouldn't be in front of that. You have the quality you want to, not some messy translations

51
0:06:06.200 --> 0:06:15.640
that can be understood differently in the app in the end. Once this is done, or while

52
0:06:15.640 --> 0:06:26.440
this has been happening, you have it in a database. We prefer the elephant, but you

53
0:06:26.440 --> 0:06:33.760
can also use MariaDB, but elephant has more power, more strength for the best performance.

54
0:06:33.760 --> 0:06:40.160
Once you finish there, web light stores it in the underlying Git repository. That's part

55
0:06:40.160 --> 0:06:47.200
of the magic, because that's a tool you already know how to work with. If you are a little

56
0:06:47.200 --> 0:06:53.480
bit lost about, let's say you got a merge conflict because you added the same thing

57
0:06:53.480 --> 0:06:57.720
in web light and in your repository, because, yeah, you don't want to wait. You want to

58
0:06:57.720 --> 0:07:03.120
have everything continuous. You just solve a merge conflict. If you don't know how to,

59
0:07:03.120 --> 0:07:08.800
it's described in the documentation of web light. That's the easy part. That's the way

60
0:07:08.800 --> 0:07:17.120
how to make it continuous with as fast as possible. Basically, you need to get your

61
0:07:17.120 --> 0:07:27.040
translations in, then do as less work with help of machine translation and stuff, and

62
0:07:27.040 --> 0:07:32.680
then get it out. In and out is very easy, because it's just syncing one Git repository

63
0:07:32.680 --> 0:07:38.260
with the other. Or if you prefer work with the API, web light has it, so you can do that.

64
0:07:38.260 --> 0:07:45.720
Or if you like to translate in some offline tool, in desktop application, you just download

65
0:07:45.720 --> 0:07:53.480
the localization files in the file format you like, because web light can converse this

66
0:07:53.480 --> 0:08:00.580
for you and then you can upload it back without being afraid of making the file invalid. Once

67
0:08:00.580 --> 0:08:06.240
you have that everything set up, you can reuse your translations, because there is a translation

68
0:08:06.240 --> 0:08:15.320
memory which you improved by your manual translations and with machine translation. So if you are,

69
0:08:15.320 --> 0:08:22.240
let's say, translating the same project over and over again for new versions, like LibreOffice,

70
0:08:22.240 --> 0:08:26.360
you can build your translation memory with help of machine translation, with help of

71
0:08:26.360 --> 0:08:32.480
your community, and in the end you don't need that much of manual work, you don't need that

72
0:08:32.480 --> 0:08:38.920
much questions to the machine translation engine, because you already have your core,

73
0:08:38.920 --> 0:08:46.600
your basis in the translation memory which you can use as a source for the machine translation.

74
0:08:46.600 --> 0:08:53.720
So that's the reuse. And as a result, what you want to get out of Web Light is your software

75
0:08:53.720 --> 0:09:01.840
in your language, because, yeah, then you truly don't own it. You want to reduce as

76
0:09:01.840 --> 0:09:09.720
much work as possible, because everybody wants to work on what they desire to do, not the

77
0:09:09.720 --> 0:09:16.200
manual work that's again and again the same. So let translators do their work, let developers

78
0:09:16.200 --> 0:09:25.280
do their work and happily be co-dependent. You want high quality translators, translations,

79
0:09:25.280 --> 0:09:31.320
and you want the engagement from the community, because if they have the easy way, if they

80
0:09:31.320 --> 0:09:39.300
figure out in their UI they are just watching, there is a mistake. And then they probably

81
0:09:39.300 --> 0:09:47.040
know the best how to correct that mistake. But if they won't find the way how to correct

82
0:09:47.040 --> 0:09:52.200
it, where, they won't send you an email. If they have the tool, it's their software, they

83
0:09:52.200 --> 0:09:58.080
can make it better, very easy way, make it themselves, it's their software, so they

84
0:09:58.080 --> 0:10:05.920
can work for the whole community and attract more translators, more users, because that's

85
0:10:05.920 --> 0:10:12.800
how you do it. You, of course, want to free the time of developers. I think I already

86
0:10:12.800 --> 0:10:19.200
said much about it. And you want to be prepared for the future versions and for the future

87
0:10:19.200 --> 0:10:24.240
project, because usually you use the same translation, so you can be very well prepared

88
0:10:24.240 --> 0:10:29.240
for that, too. Weblight as a project started, yeah, 11 years

89
0:10:29.240 --> 0:10:35.520
ago as a part-time project, but now I will probably talk more about it if we have time

90
0:10:35.520 --> 0:10:42.560
and the app. But now it's sustainable on itself without any venture funding or something like

91
0:10:42.560 --> 0:10:52.120
that. How we get the funding, these are the four ways. We offer the hosting services to

92
0:10:52.120 --> 0:11:05.080
commercial customers or to lovely projects like Fedora or some other projects like Open

93
0:11:05.080 --> 0:11:11.560
SUSE because Michael started it while working in Open SUSE, are using Weblight for long

94
0:11:11.560 --> 0:11:14.960
years, but they hosted themselves and just pay for the support because sometimes they

95
0:11:14.960 --> 0:11:19.760
need a little bit of help with something. We also offer custom development because as

96
0:11:19.760 --> 0:11:26.320
we are a small team, we are very flexible in delivering new features. And as we have

97
0:11:26.320 --> 0:11:30.840
the same code base for everyone, no matter if you are a commercial customer of Weblight

98
0:11:30.840 --> 0:11:40.600
services or if you are small or large, you have the same features. So if a very big corporate

99
0:11:40.600 --> 0:11:46.360
like some Siemens company will pay for a nice feature, you as an Android developer of a

100
0:11:46.360 --> 0:11:51.920
small podcast app can use it, too, and that's great. Or you can contribute to the code and

101
0:11:51.920 --> 0:11:56.320
they will get it, too, because you want to support big companies, too. Give them something

102
0:11:56.320 --> 0:12:05.960
back, maybe. And, of course, as every Libra project, we also accept donations. Then you

103
0:12:05.960 --> 0:12:11.200
came here probably if you know Weblight to listen about the plans, what we plan for this

104
0:12:11.200 --> 0:12:21.440
year, and this is it. We want to become more enterprise ready. The current state, because

105
0:12:21.440 --> 0:12:29.720
some of you we met at GNU HealthCon, the good thing is that more of large parts of the work

106
0:12:29.720 --> 0:12:35.760
at the backend is done. What means enterprise ready? At this moment, Weblight, as it started

107
0:12:35.760 --> 0:12:42.600
as a small project and not aimed to be something that influential and that important to large

108
0:12:42.600 --> 0:12:49.560
groups of people, to large projects, there is currently just a project and a component,

109
0:12:49.560 --> 0:12:55.480
and that's it. But you will be able to create multiple levels of grouping, let's say, for

110
0:12:55.480 --> 0:13:02.440
different versions. Yay! Fedora is happy. And we are happy, too. But give us time, give

111
0:13:02.440 --> 0:13:10.120
us time, a little bit. And, of course, when you have the large group, large community,

112
0:13:10.120 --> 0:13:15.040
you need to manage them, you need to give them access, and at this moment it's possible

113
0:13:15.040 --> 0:13:22.600
in Weblight, you can connect your single sign-on method, like SAML or GitHub or GitLab, and

114
0:13:22.600 --> 0:13:29.480
manage them there, or you can do it in Django admin, some strange thing. But this is a history

115
0:13:29.480 --> 0:13:34.160
now. Now you can manage it fully inside Weblight, and there will be even more, so you can use

116
0:13:34.160 --> 0:13:40.080
Weblight similarly like you are used to with GitLab, GitHub and other tools where you can

117
0:13:40.080 --> 0:13:45.520
create the teams, organisations, and let them do their work without you having to pay attention

118
0:13:45.520 --> 0:13:56.280
to that. All good? Yeah. Okay. Then, as Weblight, again,

119
0:13:56.280 --> 0:14:03.720
most of the things are something we didn't plan in the original way, so now Weblight is

120
0:14:03.720 --> 0:14:11.320
a little bit rusty to play the big part for large projects, and some of those is also

121
0:14:11.320 --> 0:14:19.840
universal search hints, because at this moment search is on some levels or on the whole level,

122
0:14:19.840 --> 0:14:29.000
but it's not that convenient, and it would search from one place, everything in between,

123
0:14:29.000 --> 0:14:33.600
so you need to click through and then search for something. This will be changed also to

124
0:14:33.600 --> 0:14:39.680
make it easier to navigate, because from our operating system, from our cooperative tools,

125
0:14:39.680 --> 0:14:46.160
we got used to a nice universal search on every platform, so you will find that in Weblight

126
0:14:46.160 --> 0:14:55.080
too. And, yeah, that's it. Of course, the UX can be better every time. We really want

127
0:14:55.080 --> 0:15:01.320
to grow the team, so, yeah, if you know a developer, tell them it's a great project,

128
0:15:01.320 --> 0:15:06.280
they can contribute, and they can get paid for it, which is really nice in open source

129
0:15:06.280 --> 0:15:15.520
world. And, yeah, we want to continue organic growth, and after yesterday's talk, we got

130
0:15:15.520 --> 0:15:19.800
to some talking, maybe we will do something with pontoon, maybe not, because there won't

131
0:15:19.800 --> 0:15:27.920
be time, maybe it will make sense, maybe it will not, but we would like to be to investigate

132
0:15:27.920 --> 0:15:37.560
that way too. And, yeah, as we still have some time, maybe we can talk about how Weblight

133
0:15:37.560 --> 0:15:46.000
began. This is where Weblight began. This is Michael's office, who was on yesterday's

134
0:15:46.000 --> 0:15:54.560
talk, lightning talk. Okay, good. So, this is small room on top of the large concrete

135
0:15:54.560 --> 0:16:02.520
building we built in the Czech Republic, and it's like three to four metres, something

136
0:16:02.520 --> 0:16:08.480
like that, and there used to be all the machinery for the elevators. So, it's not a garage project,

137
0:16:08.480 --> 0:16:16.200
it's basically the elevator project, and it's weird because it was like on top of the elevator,

138
0:16:16.200 --> 0:16:23.120
there was no elevator at the time when Michael was coding there, so, yeah, we need, like,

139
0:16:23.120 --> 0:16:28.560
fire elevator or just use the steps and build them before, so, yeah, it takes time. And,

140
0:16:28.560 --> 0:16:36.240
yeah, this is a website of Weblight where you can see all the translations that are happening

141
0:16:36.240 --> 0:16:45.880
on hosted Weblight. These are some of our lovely users from the open source community.

142
0:16:45.880 --> 0:16:56.640
What pushed us into big feeling of responsibility was when a few years ago, Fedora approached

143
0:16:56.640 --> 0:17:03.200
us and realised that they want to use Weblight because it makes sense, and it doesn't make

144
0:17:03.200 --> 0:17:08.360
sense if they want to create a great Linux distributions and they have a lot of other

145
0:17:08.360 --> 0:17:13.840
work, they don't want to maintain Xanata because they don't have time. That's not their main

146
0:17:13.840 --> 0:17:20.760
process. So, they switched to Weblight, they did it really, really well in the migration

147
0:17:20.760 --> 0:17:28.000
process. Of course, they found a lot of bugs. We were able to fix them, thanks to them,

148
0:17:28.000 --> 0:17:33.240
because, yeah, once a developer finds your bug, they are usually or technically skilled

149
0:17:33.240 --> 0:17:42.520
people great to describe what's the problem, and then it's very easy to fix it. And, yeah,

150
0:17:42.520 --> 0:17:52.120
that's what got us to the current state. And if you want to hear more about this thing,

151
0:17:52.120 --> 0:17:58.520
why we feel that there should be something to connect Weblight with other tools and make

152
0:17:58.520 --> 0:18:03.480
it easier for all the communities, you can listen to yesterday's talk why the recording

153
0:18:03.480 --> 0:18:08.040
will be available. We will definitely let you know on our website, we will definitely

154
0:18:08.040 --> 0:18:18.360
let you know about everything on our Mustanum account. And I think we don't need to take

155
0:18:18.360 --> 0:18:24.520
the time about my story, just a funny part, my story with Weblight became we first met

156
0:18:24.520 --> 0:18:35.160
with Michal at Fosdam in 2017, and I was here with a different project and another Michal,

157
0:18:35.160 --> 0:18:40.840
yeah, popular name in the Czech Republic, introduced me to this Michal. That was my

158
0:18:40.840 --> 0:18:45.880
colleague that time and that project, that was tourists, open source router, and then

159
0:18:45.880 --> 0:18:54.000
we didn't see with Michal for two more years, and then in 2019, I came here looking for

160
0:18:54.000 --> 0:19:00.260
a job. In 2018, I came here with a different project, and 2019, I just wanted to return

161
0:19:00.260 --> 0:19:07.720
to Fosdam and be in the atmosphere, and that time I was living in Prague, we knew each

162
0:19:07.720 --> 0:19:14.320
other, but we met here again and we started working together, so, yeah, tell that to people,

163
0:19:14.320 --> 0:19:21.840
just come to Fosdam, but, yeah, you already tell them. So, yeah, I think we have like

164
0:19:21.840 --> 0:19:31.240
12 minutes now for questions, so, yeah, let's talk, and you probably, you are all smiling.

165
0:19:31.240 --> 0:19:40.240
There was no frowny faces. Okay, who has the question? Hello, Jean Baptiste.

166
0:19:40.240 --> 0:19:54.240
The user experience for an end user is a system-wide, so when the user is using Linux and is using

167
0:19:54.240 --> 0:20:03.240
strings translating from many different software, right now, Weblane can use a solution to allow

168
0:20:03.240 --> 0:20:15.240
them to do a different collaboration, but we have some kind of a plan so that in the

169
0:20:15.240 --> 0:20:22.240
future, we can search for translation coming from whatever data source, because we have

170
0:20:22.240 --> 0:20:29.240
Weblane hosted for the federal project, we have the Weblane for LibreOffice, the one that

171
0:20:29.240 --> 0:20:35.240
we have, and there are many other places where you can find the use for translation, but

172
0:20:35.240 --> 0:20:40.240
as a translator, I would like to search for every existing translation of some terms,

173
0:20:40.240 --> 0:20:45.240
and I want to see, okay, what is all consistent in my translation at the moment, and should

174
0:20:45.240 --> 0:20:51.240
I align on the current way it is translated, or maybe it's wrongly translated in most places,

175
0:20:51.240 --> 0:20:57.240
and I should go fix the translation. Okay. I would love to see something that helps us

176
0:20:57.240 --> 0:21:02.240
to at least federate the knowledge, not having some kind of magic tool that we want to be

177
0:21:02.240 --> 0:21:09.240
using for our translation, but just to know what's the trans state of translation, and

178
0:21:09.240 --> 0:21:16.240
I think the Mozilla people have some tools that allow them to search for existing translation.

179
0:21:16.240 --> 0:21:23.240
I would love to see some kind of tool that allows me to search for a string across all

180
0:21:23.240 --> 0:21:31.240
the translation coming from any Weblane instance, or even from Mozilla.

181
0:21:31.240 --> 0:21:34.240
Okay. I will try to sum up the question.

182
0:21:34.240 --> 0:21:44.240
Now we will see if I was paying attention. So, the question was, if we plan to introduce

183
0:21:44.240 --> 0:21:50.240
some place, it's slightly related. Yesterday, when I had my lightning talk about possible

184
0:21:50.240 --> 0:21:58.240
translation MD, something like that, I meant to show people, show translators one place

185
0:21:58.240 --> 0:22:02.240
where they can find the project they want to translate, and Jean Baptist would like

186
0:22:02.240 --> 0:22:08.240
to take, to elevate it to another level, to have some kind of shared translation memory

187
0:22:08.240 --> 0:22:18.240
or shared glossary where translators can go to and check how to translate the best, the

188
0:22:18.240 --> 0:22:29.240
thing they are currently working on. Yesterday on my talk, I was trying to be not very imaginative

189
0:22:29.240 --> 0:22:37.240
because I usually am very excited about everything, and then there is no time to do that.

190
0:22:37.240 --> 0:22:43.240
I can imagine something like you just proposed, but I can't imagine anybody doing it because

191
0:22:43.240 --> 0:22:50.240
that would just mean a lot of people working on it, and then we would need to help with

192
0:22:50.240 --> 0:22:59.240
some licensing and stuff. So, yeah. It would be nice. I'm not opposed, but I can't imagine

193
0:22:59.240 --> 0:23:05.240
at the moment I would start with what I was talking yesterday and then maybe on top of

194
0:23:05.240 --> 0:23:11.240
that might be something to build on. Currently, you can search on hosted Weblight, which is

195
0:23:11.240 --> 0:23:17.240
a pretty large base of open source projects. You can search through their translations because

196
0:23:17.240 --> 0:23:27.240
they are open. You can search on Discover Weblight for the project so you can realize

197
0:23:27.240 --> 0:23:34.240
through there, oh, I want to see how SUSE or Fedora is translating that. Or SUSE or

198
0:23:34.240 --> 0:23:43.240
Fedora is translating that. You can go from there, but every time you have to go to that

199
0:23:43.240 --> 0:23:49.240
particular space and search it there. So, yeah, maybe we will just, once we have the

200
0:23:49.240 --> 0:23:55.240
translation MD, we think about for two years and not doing anything on it, and also

201
0:23:55.240 --> 0:24:04.240
universal search, then we will just maybe throw it to some clever people with AI, but

202
0:24:04.240 --> 0:24:10.240
I'm scared of what would happen from there. So, yeah, there is another question.

203
0:24:10.240 --> 0:24:27.240
I'm looking for translation software and I'm using Android strings which can have like

204
0:24:27.240 --> 0:24:42.240
template values that are automatically inserted to see the end result of the string with those

205
0:24:42.240 --> 0:24:45.240
values. Say for instance I add another name or something and I can see how that looks

206
0:24:45.240 --> 0:24:56.240
in the image results. So, some kind of a, okay, the question was if there is any plan to provide,

207
0:24:56.240 --> 0:25:04.240
some kind of live preview of the strings that are translated. The answer is another thing

208
0:25:04.240 --> 0:25:10.240
we were talking about through recent years and that's quite large to develop. So, again,

209
0:25:10.240 --> 0:25:20.240
we would like to do that and you can support this effort if you help to find us frontend developers.

210
0:25:20.240 --> 0:25:39.240
So, it's kind of you can do it, but it's not quite, it doesn't feel like a button wants

211
0:25:39.240 --> 0:25:50.240
to turn the string and this was not the plan by intention of the feature. Okay. But we

212
0:25:50.240 --> 0:25:57.240
can do it with the word. I'll find later or on the PNA. Okay, I will play a little bit

213
0:25:57.240 --> 0:26:03.240
like a sports commentator. On the right we have, what's your name? Tobias. Tobias? Yes.

214
0:26:03.240 --> 0:26:08.240
And on the left we have Michael from Weblade and Tobias is having an Android app and needs

215
0:26:08.240 --> 0:26:15.240
to see it before he commits to the version and Michael is saying it's partially possible

216
0:26:15.240 --> 0:26:26.240
and you can talk after the talk into the deep of this topic and we still have more time.

217
0:26:26.240 --> 0:26:39.240
Thank you very much for Weblade and I apologize. Last week I opened a duplicated issue and

218
0:26:39.240 --> 0:26:42.240
I'm so sorry. I will stop you here. It's not a problem. It's not a problem. It's a thing

219
0:26:42.240 --> 0:26:47.240
that can be solved very easily. We will just tell you, go here, follow there. That's not

220
0:26:47.240 --> 0:27:16.240
a problem. You can actually do this.

221
0:27:16.240 --> 0:27:22.240
You can actually do this. Weblade uses translation memory. Once you have it, you can export it,

222
0:27:22.240 --> 0:27:29.240
import it in TBX, which is a standard format and you can also use Weblade translation memory

223
0:27:29.240 --> 0:27:37.240
as a source for I will repeat the questions at the end. Sorry. You can use also Weblade

224
0:27:37.240 --> 0:27:43.240
as a source for your machine translation. So it's just clicking in the UI and it should

225
0:27:43.240 --> 0:27:53.240
serve your needs. The question was if it's possible to use Weblade as a source for machine

226
0:27:53.240 --> 0:28:04.240
translation. We still have time. Is there any other question?

227
0:28:04.240 --> 0:28:25.240
Okay. Yeah.

228
0:28:25.240 --> 0:28:35.240
So, we are not yet connected with the community and we will be happy to connect with them

229
0:28:35.240 --> 0:28:41.240
and maybe figure out some deeper integration and more promotion in the community. Yeah.

230
0:28:41.240 --> 0:28:45.240
I will get back to you after the talk. There was one more question.

231
0:28:45.240 --> 0:29:06.240
I'm sorry. I have to stop you. I will go closer to you. Yeah. Or if you. Yeah.

232
0:29:06.240 --> 0:29:32.240
Yes. It's in a context in the editor of Weblade. They're under the source and the field for

233
0:29:32.240 --> 0:29:40.000
the translation. There are a few tabs like comments, like other translations in neighboring

234
0:29:40.000 --> 0:29:49.800
projects and also or projects and components and also if you set up your machine translation

235
0:29:49.800 --> 0:29:55.280
engines, they will see it there. So they don't have to look for it. They will your translators

236
0:29:55.280 --> 0:30:07.520
will see it there and they will just click to copy it into the translation. And.

237
0:30:07.520 --> 0:30:20.400
Like without offering translators to copy it, just translate everything through machine

238
0:30:20.400 --> 0:30:37.520
translation. Yes. You can. Yes. Yes. There is an add-on called automatic translation

239
0:30:37.520 --> 0:30:46.840
and you just install this add-on and instruct it to use particular or machine translation

240
0:30:46.840 --> 0:30:55.120
engines you set up at your Weblade instance or for your project to insert translations

241
0:30:55.120 --> 0:31:03.400
or suggestions for untranslated for or for all strings. So it is possible the add-on

242
0:31:03.400 --> 0:31:09.320
is called automatic translations and you will find more info in the Weblade documentation.

243
0:31:09.320 --> 0:31:22.400
Okay. We will get there after the talk. Thank you very much for being here. Thank you for

244
0:31:22.400 --> 0:31:28.600
your time and enjoy rest of your FOSDEM experience. And see you next year.

245
0:31:28.600 --> 0:31:50.200
Okay. Okay. Okay. I can do that. It's not all. It's just some. And there is the next

246
0:31:50.200 --> 0:32:00.920
speaker is not here yet. So here we go. You can do it. You can do it. He will just take

247
0:32:00.920 --> 0:32:06.080
a picture and we are setting off. I have no problem. I don't care. He's the one in charge.

248
0:32:06.080 --> 0:32:26.420
Okay.

