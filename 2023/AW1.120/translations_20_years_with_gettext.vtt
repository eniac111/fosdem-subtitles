WEBVTT

00:00.000 --> 00:10.520
Okay. Hello. Bonjour.

00:10.520 --> 00:12.800
Who did our good talk?

00:12.800 --> 00:17.120
I think that's sort of the Brussels welcome.

00:17.360 --> 00:20.040
Yeah. So I want to talk about

00:20.040 --> 00:21.920
what we're doing in the Postgres project

00:21.920 --> 00:23.600
with respect to translation.

00:23.600 --> 00:25.880
It seems like the last two talks already

00:25.880 --> 00:27.960
solved 50 percent of my problems.

00:27.960 --> 00:31.680
So there was already a good outcome of coming here.

00:31.680 --> 00:33.440
I want to talk a little bit more sort of

00:33.440 --> 00:37.440
the lower levels of what GetTAC specifically does,

00:37.440 --> 00:38.840
but I'll also goes kind of through

00:38.840 --> 00:41.160
what other things we're doing.

00:41.320 --> 00:46.000
So I am in the Postgres project.

00:46.000 --> 00:47.960
I'm just a C programmer.

00:47.960 --> 00:52.840
It's my job really to do the translation sort of as a hobby on the side.

00:52.840 --> 00:57.600
I have done initially sort of most of the setup.

00:57.600 --> 01:03.160
So of the source code level,

01:03.160 --> 01:05.840
what he called internationalization at that case.

01:05.840 --> 01:08.680
Then I'm also doing some of the translation.

01:09.280 --> 01:13.480
Yeah. It turns out also

01:13.480 --> 01:16.880
the first faucet I went to was 20 years ago.

01:16.880 --> 01:19.520
I like coming here because there's

01:19.520 --> 01:21.080
a Postgres dev room happening at

01:21.080 --> 01:22.240
the same time in a different building,

01:22.240 --> 01:25.160
but I like to come to all the other places

01:25.160 --> 01:26.960
and sort of intersect with other communities and learn

01:26.960 --> 01:28.920
about other kind of stuff that's happening.

01:28.920 --> 01:32.880
So it's kind of a good benefit of FOSDEM.

01:32.880 --> 01:34.640
So what's Postgres?

01:34.640 --> 01:36.960
Don't need to go into details,

01:36.960 --> 01:40.840
but it's a little bit different.

01:40.840 --> 01:42.360
It has different requirements.

01:42.360 --> 01:43.360
It's a database system.

01:43.360 --> 01:47.040
It's fairly big and fairly old,

01:47.040 --> 01:51.840
but it's different from like a GUI program, let's say.

01:51.840 --> 01:54.480
Something we've leave office

01:54.480 --> 01:56.680
or hear from KDE later on things like that.

01:56.680 --> 02:00.520
I think it just lives much longer

02:00.520 --> 02:06.760
and has longer stability requirements and things like that.

02:06.760 --> 02:10.560
That also kind of makes the maintenance of everything

02:10.560 --> 02:11.880
a little bit more complicated.

02:11.880 --> 02:14.520
We also maintain back branches.

02:14.520 --> 02:16.400
So we have a yearly release,

02:16.400 --> 02:21.400
but we still maintain the old releases for at least five years.

02:21.400 --> 02:22.600
So at any given moment,

02:22.600 --> 02:26.920
we have four or five or six releases live.

02:26.920 --> 02:29.480
That gives it interesting challenges

02:29.480 --> 02:30.720
with back-patching stuff.

02:30.720 --> 02:33.400
Just I was quite interested in the last question we had

02:33.400 --> 02:35.440
in the previous talk about this translation memory

02:35.440 --> 02:37.040
and sort of that rung through.

02:37.040 --> 02:39.840
Can we automatically apply the memory

02:39.840 --> 02:43.560
to the previous branches and stuff like that?

02:43.560 --> 02:47.960
So this sort of stuff is a practical challenge

02:47.960 --> 02:50.080
because you have to keep copying the same thing

02:50.080 --> 02:52.840
to all the different branches and so on.

02:56.840 --> 03:00.200
Any case, so what are we doing in Postgres?

03:00.200 --> 03:03.640
You know we use GetX as in the title.

03:04.800 --> 03:07.840
Now put this sort of standard new question mark.

03:07.840 --> 03:10.960
It's kind of weird because again Postgres is old

03:10.960 --> 03:14.320
and runs on servers is a little bit different

03:14.320 --> 03:17.480
from sort of what runs on a laptop or an app.

03:17.480 --> 03:21.200
Because for example, we also support operating systems

03:21.200 --> 03:25.120
that might still already be forgotten like AIX and Solaris.

03:25.120 --> 03:28.800
And they have GetXed originally came from the sort of

03:28.800 --> 03:33.800
solaris sphere somehow and there's still a,

03:36.800 --> 03:37.720
well I don't know what it is now,

03:37.720 --> 03:41.720
but like a Solaris native Solaris GetXed exists.

03:41.720 --> 03:44.640
It's you know, that's distinct from new.

03:44.640 --> 03:48.400
But it's sort of old has bugs and doesn't parse stuff

03:48.400 --> 03:52.400
correctly sometimes so when you just sort of use

03:52.400 --> 03:55.200
you use the new version then sometimes the files

03:55.200 --> 03:58.240
you distribute don't work on old Solaris for some reason

03:58.240 --> 04:00.920
and then this is sort of just a weird situation.

04:00.920 --> 04:03.760
You have to like then fix these things

04:03.760 --> 04:07.960
and then or hope that Solaris dies at some point, right?

04:07.960 --> 04:08.800
Stuff like that.

04:08.800 --> 04:10.780
So it's like that.

04:10.780 --> 04:15.280
So we have, I mean, you know, we hear from KDE Next.

04:15.280 --> 04:17.380
I already looked at Hetzel at their abstract.

04:17.380 --> 04:20.380
This is obviously not a lot in terms of how many languages

04:20.380 --> 04:22.080
and message catalogs and strings we have,

04:22.080 --> 04:26.560
but it's more than something you can just deal with

04:26.560 --> 04:27.720
in an afternoon, right?

04:27.720 --> 04:29.720
It's just a lot of stuff to move around.

04:29.720 --> 04:32.320
I mentioned with the different branches,

04:32.320 --> 04:34.480
we also have it in a separate Git repository.

04:34.480 --> 04:36.920
I think that's kind of common, I think,

04:36.920 --> 04:38.960
so that you can manage access to translators

04:38.960 --> 04:40.680
separate from the source repository

04:40.680 --> 04:42.680
and then you just move it back and forth.

04:43.880 --> 04:46.880
Again, maybe the web label will help with that

04:46.880 --> 04:50.460
and we have also sort of other projects in the vicinity

04:50.460 --> 04:54.400
of the core server projects such as JDBC driver,

04:54.400 --> 04:57.520
which is obviously in Java, which is slightly different

04:57.520 --> 04:58.920
sort of tooling and stuff like that.

04:58.920 --> 05:01.540
And PG Admin is a GUI.

05:01.540 --> 05:02.680
They have their own workflow.

05:02.680 --> 05:04.440
So it's all a little bit all over the place

05:04.440 --> 05:07.880
and it's hard to kind of keep that all moving

05:07.880 --> 05:10.200
in the same way.

05:12.240 --> 05:14.980
And there's also some documentations are being translated,

05:14.980 --> 05:17.200
but that's also handled completely separately.

05:17.200 --> 05:18.480
We were actually just talking to break.

05:18.480 --> 05:21.000
We could use Libra Translate for that maybe at some point.

05:21.000 --> 05:24.000
So all kinds of interesting ideas already coming up here.

05:27.020 --> 05:32.020
All right, so this is my like web late, but terrible job.

05:32.020 --> 05:37.020
This is kind of how we handle it.

05:37.180 --> 05:42.180
The web interface is under bobble.postgresql.org.

05:42.480 --> 05:44.380
And that just gives you sort of the status, right?

05:44.380 --> 05:47.900
Of what languages and what the message catalogs are.

05:47.900 --> 05:52.900
And it does sort of the string extraction,

05:53.460 --> 05:56.860
the merging in the background as you would do, you know,

05:56.860 --> 05:59.060
in the make file, but it just kind of runs it for you

05:59.060 --> 05:59.900
from a cron job.

05:59.900 --> 06:01.180
Again, it's just sort of really old,

06:01.180 --> 06:02.180
but it does the job.

06:02.180 --> 06:05.620
And then the workflow is, yeah, you go like, you know,

06:05.620 --> 06:08.920
you pick your language, pick what you want to work on.

06:08.920 --> 06:10.300
You click on it, you download it,

06:10.300 --> 06:13.180
you do the translation with the, you know,

06:13.180 --> 06:15.380
the get text tools, whatever editor you want to use,

06:15.380 --> 06:17.180
different people use different things.

06:18.340 --> 06:20.420
And then you commit it back, right?

06:20.420 --> 06:24.160
And there's different, all the branches are available here.

06:24.160 --> 06:27.220
So you can scroll down and you're just going to fill these

06:27.220 --> 06:32.220
up and so, yeah, these are the languages across here.

06:32.700 --> 06:36.480
What the colors mean is that green is 100% translated.

06:37.480 --> 06:40.500
And then one thing we did, which I don't,

06:40.500 --> 06:45.500
we just kind of made up, but we decided if a message catalog

06:46.260 --> 06:48.620
is not translated to at least 80%, we're not going to ship

06:48.620 --> 06:50.320
it, right?

06:50.320 --> 06:52.860
You don't want to just ship like one string.

06:52.860 --> 06:54.700
I mean, you could, but it would be weird for a user

06:54.700 --> 06:57.140
that all of a sudden the translated string pops up

06:57.140 --> 06:58.860
and nothing else is translated, right?

06:58.860 --> 07:00.140
It's maybe a little bit weird.

07:00.140 --> 07:03.620
So that's something we sort of decided on until randomly

07:03.620 --> 07:05.620
and it seems to actually kind of work pretty well.

07:05.620 --> 07:08.260
So the yellow ones are the ones that we would ship

07:09.500 --> 07:11.460
and then the white ones are just the ones

07:11.460 --> 07:13.320
that are not complete at all.

07:16.740 --> 07:21.740
All right, so workflow is the usual get text workflow

07:21.780 --> 07:23.260
for at least C programs, you know,

07:23.260 --> 07:24.460
there's other stuff happening nowadays.

07:24.460 --> 07:27.020
So if the developer marks up the messages

07:27.020 --> 07:30.700
with this kind of underscore thing that they recommend

07:30.700 --> 07:34.620
and our developers are totally good about that, right?

07:34.620 --> 07:36.780
They're all aware of that you need to do that.

07:36.780 --> 07:41.700
And for the most part, it's wrapped into things like this.

07:41.700 --> 07:44.300
So you don't actually have to manually mock up everything.

07:44.300 --> 07:46.500
If you use like this sort of standard internal API,

07:46.500 --> 07:50.180
say print an error, log an error, whatever the case may be,

07:50.180 --> 07:51.340
then it's already done for you.

07:51.340 --> 07:52.700
So that works pretty well.

07:52.700 --> 07:56.620
It's, you know, every once in a while something gets missed,

07:56.620 --> 07:57.500
but it's not a big problem.

07:57.500 --> 07:59.940
All the developer group is aware of that.

08:00.940 --> 08:05.940
Then I mentioned the website uses those standard tools

08:08.140 --> 08:12.180
to give you something you just have to download

08:12.180 --> 08:15.980
and then you just translated and upload it back.

08:17.300 --> 08:21.660
Then at release time, someone, often me,

08:21.660 --> 08:24.100
just then runs a script to copy that over,

08:24.100 --> 08:26.500
which could be automated, but you know,

08:26.500 --> 08:31.020
it's one of those things we have releases four times a year

08:31.020 --> 08:33.460
and you just do it manually four times a year

08:33.460 --> 08:36.260
or you could spend X hours automating it, right?

08:36.260 --> 08:38.180
So usually it's just done manually.

08:41.980 --> 08:44.660
All right, so this is our tool chain at the moment.

08:46.260 --> 08:48.660
Again, GNU, question mark, get text.

08:48.660 --> 08:51.780
We have a pretty standard sort of configure,

08:51.780 --> 08:55.300
make, make, install, build system.

08:55.300 --> 08:57.620
We don't use any of these make file templates

08:57.620 --> 08:59.140
and things like that, that ship it, get text,

08:59.140 --> 09:04.140
because we have our own sort of very convoluted build system

09:04.220 --> 09:06.020
based on GNU make.

09:06.020 --> 09:07.660
We're also in the process of getting rid of that.

09:07.660 --> 09:10.600
So we're moving to, to Mason now,

09:11.580 --> 09:15.060
which has some support for that built in,

09:15.060 --> 09:16.900
but it's kind of incomplete.

09:16.900 --> 09:21.540
So we're sort of stuck sort of halfway here, halfway there.

09:21.540 --> 09:22.380
I have to kind of work,

09:22.380 --> 09:24.820
that's kind of work we're doing right now.

09:24.820 --> 09:26.020
I have to figure that out.

09:28.100 --> 09:31.200
So people use whatever editor they want to use.

09:32.340 --> 09:34.420
Poet it seems to be somewhat popular.

09:34.420 --> 09:35.860
I use just Emacs.

09:36.740 --> 09:40.300
Some teams have used, by teams I mean sort of language teams.

09:40.300 --> 09:42.780
They have used crowd in,

09:42.780 --> 09:47.340
which I suppose is sort of similar to Webblade maybe.

09:48.160 --> 09:50.100
But again, we were just talking to break,

09:50.100 --> 09:51.860
maybe we'll look at Webblade.

09:51.860 --> 09:56.780
And then a horrible bag of shell scripts and pro scripts

09:56.780 --> 10:00.120
and make files that sort of hold it all together,

10:01.340 --> 10:03.720
which again could be replaced by something better.

10:03.720 --> 10:06.620
It's just never really figured out what that could be.

10:09.060 --> 10:12.800
So pros and cons of doing any of this.

10:12.800 --> 10:15.640
One thing I obviously we want to translate

10:15.640 --> 10:16.700
because we want to translate, right?

10:16.700 --> 10:20.520
So that's sort of the ultimate requirement.

10:20.520 --> 10:22.380
But what I found interesting

10:22.380 --> 10:25.900
as a sort of secondary benefits is actually that

10:28.020 --> 10:31.340
by putting all your messages of your programs

10:31.340 --> 10:32.700
through a translation process,

10:32.700 --> 10:36.420
you get an automatic review of every message string.

10:38.100 --> 10:40.540
Because every thing you put in the source code

10:40.540 --> 10:43.780
is looked again later by at least one more person

10:43.780 --> 10:45.860
or several all the translators.

10:45.860 --> 10:49.020
And you catch like typos and stuff like that,

10:49.020 --> 10:50.900
but also if something doesn't make any sense, right?

10:50.900 --> 10:55.420
Maybe some developer wrote it and it makes sense to them,

10:55.420 --> 10:58.420
but then someone else who is not that very developer

10:58.420 --> 10:59.260
looks at it again, it's like,

10:59.260 --> 11:00.740
okay, I don't really understand this.

11:00.740 --> 11:03.220
I can't translate it because I don't understand it.

11:03.220 --> 11:04.760
Or it looks weird, could we look at it again?

11:04.760 --> 11:06.020
So you get this review process

11:06.020 --> 11:10.060
and we've gotten really good in Postgres

11:11.220 --> 11:13.640
about really tuning error messages.

11:13.640 --> 11:15.220
Because it's a complicated piece of software

11:15.220 --> 11:18.420
and you get all these little weird scenarios

11:18.420 --> 11:21.940
with sort of transaction processing

11:21.940 --> 11:24.540
and weird little write ahead log and replication

11:24.540 --> 11:25.660
and all these kinds of things.

11:25.660 --> 11:27.580
And so you wanna be really good and precise

11:27.580 --> 11:30.460
to explain to you, okay, this failed because of this.

11:30.460 --> 11:32.900
And you could try this, but don't try that.

11:34.800 --> 11:36.980
So this is really, I think people appreciate it.

11:36.980 --> 11:38.540
Independent of translation and everything else,

11:38.540 --> 11:39.740
I think people appreciate that.

11:39.740 --> 11:41.740
And this process actually helps that

11:41.740 --> 11:46.380
because you sort of refine your program's messages

11:46.380 --> 11:47.980
through this process as well.

11:49.940 --> 11:51.580
And secondly, actually it also turned out

11:51.580 --> 11:56.180
that sometimes people come in, do some translation,

11:56.180 --> 11:59.520
maybe find a bug or wanna look something up in a source code,

11:59.520 --> 12:01.900
go into the source code and then become a programmer.

12:01.900 --> 12:03.620
So you can also kind of recruit people that way.

12:03.620 --> 12:05.520
It's kind of interesting.

12:05.520 --> 12:10.520
So, but then there are many challenges, right?

12:15.040 --> 12:16.720
So first of all, you wanna get people in there

12:16.720 --> 12:17.880
to use the translation, right?

12:17.880 --> 12:22.880
And it's just this, because Postgres is not sort of,

12:22.880 --> 12:24.640
or similar systems as well, right?

12:24.640 --> 12:26.640
It's not end user facing.

12:26.640 --> 12:29.920
It's not used by sort of random average people, right?

12:29.920 --> 12:33.760
It's used by technically minded people,

12:33.760 --> 12:35.720
experts, database administrators and so on.

12:35.720 --> 12:40.320
So a lot of those people, there's not too much pressure

12:40.320 --> 12:41.600
to actually have things translated.

12:41.600 --> 12:44.720
People will be, okay, it's not translated, it's fine, right?

12:44.720 --> 12:48.320
Which is different from if LibreOffice or Firefox

12:48.320 --> 12:50.000
is not translated and you install it in the school,

12:50.000 --> 12:50.840
it wouldn't work.

12:50.840 --> 12:51.680
It's just, you can't do that, right?

12:51.680 --> 12:55.360
But here it's like, okay, if it's not,

12:55.360 --> 12:57.400
if it doesn't get done, it's not a problem in a way,

12:57.400 --> 13:00.120
but we just wanna do it because we like it.

13:00.120 --> 13:02.080
But if it doesn't get done, it's like, okay,

13:02.080 --> 13:03.000
then we'll just move on, right?

13:03.000 --> 13:07.560
So you gotta kind of, it relies on a lot of enthusiasm,

13:07.560 --> 13:09.000
individual enthusiasm, right?

13:11.600 --> 13:15.240
A lot of the, yeah, I found also, at least personally,

13:15.240 --> 13:17.640
as doing some of the translation work myself,

13:17.640 --> 13:20.560
terminology is hard sometimes, right?

13:20.560 --> 13:23.760
Because again, I just mentioned something like that.

13:23.760 --> 13:26.280
It's not just press this button to download a thing.

13:26.280 --> 13:29.880
Okay, you can translate that in any language probably by now.

13:29.880 --> 13:32.400
But what if you get into terms like, you know,

13:32.400 --> 13:35.520
sub-transaction rollback or incremental

13:35.520 --> 13:38.040
materialized view maintenance, you know?

13:38.040 --> 13:41.320
Some languages might not even have terms for that, maybe.

13:41.320 --> 13:43.200
You know, sometimes when I do the work,

13:43.200 --> 13:46.320
I pick, you know, I have some textbooks,

13:46.320 --> 13:50.480
like academic textbooks in German in my case.

13:50.480 --> 13:53.200
And I just go through them, like, anybody in here

13:53.200 --> 13:54.640
talk about materialized views?

13:54.640 --> 13:56.360
What kind of terminology are they using?

13:56.360 --> 13:59.960
And then I have like six books and three do it this way,

13:59.960 --> 14:02.480
three do it that way, and then I just pick something

14:02.480 --> 14:03.480
at some point, right?

14:05.160 --> 14:08.000
So in some way, we have to kind of define,

14:08.000 --> 14:10.520
make up the terminology in some cases, even, right?

14:13.640 --> 14:18.480
And as I alluded to, the workflow is not as cool

14:18.480 --> 14:20.160
as what we saw in the previous talk,

14:20.160 --> 14:21.640
so maybe we can improve that.

14:24.480 --> 14:26.600
So here's some sort of source code level challenges.

14:26.600 --> 14:31.600
Some of those are solvable, some of those are not.

14:32.320 --> 14:34.280
People who work in translation know about, like,

14:34.280 --> 14:35.400
plural issues, right?

14:35.400 --> 14:36.400
We do handle that.

14:37.320 --> 14:39.400
Works fine, but then if you, I've never figured out

14:39.400 --> 14:40.880
how to handle the first one.

14:40.880 --> 14:45.880
Like, if you have two or more numbers in a sentence,

14:47.760 --> 14:50.520
like, then you would have to have some combinatorial

14:51.520 --> 14:53.880
sort of list of translations.

14:53.880 --> 14:56.080
What if the first one is singular and the last one

14:56.080 --> 14:58.560
is five, and what if the first one is two

14:58.560 --> 15:02.120
and the last one is 18, you know?

15:02.120 --> 15:03.440
I don't think you can really solve that,

15:03.440 --> 15:05.720
then you start rephrasing things in weird ways.

15:06.840 --> 15:08.320
Well, we have the second one, which obviously

15:08.320 --> 15:11.080
everybody knows you shouldn't do, if you sort of

15:11.080 --> 15:13.480
paste terms together, that doesn't work, right?

15:13.480 --> 15:15.880
Let's say you're just gonna make something up,

15:15.880 --> 15:18.560
like, you cannot apply a generation expression

15:18.560 --> 15:20.760
to a materialized view, let's say, something like that.

15:20.760 --> 15:23.480
That's a thing that could happen in Postgres,

15:23.480 --> 15:24.560
more or less, right?

15:24.560 --> 15:27.280
It's like, okay, you shouldn't do that,

15:27.280 --> 15:29.000
you shouldn't sort of stick that into the middle

15:29.000 --> 15:30.360
of the sentence because then the grammar

15:30.360 --> 15:33.520
doesn't match in some languages.

15:34.360 --> 15:35.600
So you write those out.

15:36.720 --> 15:39.400
But what if you have, like, five options here

15:39.400 --> 15:40.560
and six options there?

15:40.560 --> 15:43.160
Are you gonna make 30 strings in your source code?

15:45.040 --> 15:47.200
At some point, probably not, right?

15:47.200 --> 15:52.200
So, at some point then, developers,

15:52.200 --> 15:55.000
the actual developers do get annoyed if you tell them,

15:55.000 --> 15:56.760
like, no, you can't do that, you have to write

15:56.760 --> 15:58.600
actually 35 error messages by hand,

15:58.600 --> 16:00.320
so not gonna do that.

16:00.320 --> 16:04.480
So in some cases, we did have 20 messages for some stuff

16:04.480 --> 16:07.440
and we had to rephrase so that we only had

16:07.440 --> 16:08.680
the number of answers.

16:08.680 --> 16:13.280
You start then tweaking it, can you say something,

16:13.280 --> 16:15.880
something, semicolon, something, something,

16:15.880 --> 16:18.040
and then maybe at that point it's okay, I don't know,

16:18.040 --> 16:19.660
but yeah, exactly.

16:19.660 --> 16:23.660
So you have to make, use some judgment calls in these cases.

16:26.160 --> 16:27.760
One thing that sometimes happens if developers

16:27.760 --> 16:30.160
add a new file to source code, then it has to be added

16:30.160 --> 16:32.680
somewhere else also to make sure the translation system

16:32.680 --> 16:35.760
catches it and that sometimes gets forgotten.

16:35.760 --> 16:37.280
It's just one of those things, I don't know

16:37.280 --> 16:40.640
if there's a solution for that, you just gotta do it.

16:40.640 --> 16:42.820
There's also some weird thing, we have, like, files

16:42.820 --> 16:44.880
that get compiled into multiple components

16:44.880 --> 16:48.960
and then you kind of have to add them to all of those

16:48.960 --> 16:53.400
components and retranslate everything in each component

16:53.400 --> 16:55.600
which could be handled with some of those translation

16:55.600 --> 16:57.680
memory things and stuff like that, but it's just kind of

16:57.680 --> 17:02.680
weird the way we have it laid out and kind of makes it annoying.

17:05.560 --> 17:10.560
Yeah, so this is maybe specific to something like,

17:12.720 --> 17:16.000
postcodes being A, a client server system, B, a database,

17:16.000 --> 17:20.520
and C having its own sort of ideas about what encoding

17:20.520 --> 17:23.080
on locale and stuff like that means, right?

17:23.080 --> 17:28.080
So in, you know, a database stores data which is often text

17:30.180 --> 17:35.180
which has encoding and because of, you know, nowadays

17:37.680 --> 17:40.740
you think everything's UTF-8, but in a database

17:40.740 --> 17:42.280
you can also store things in other encodings

17:42.280 --> 17:45.420
for historical reasons, but, or in some cases

17:45.420 --> 17:48.540
because UTF-8 doesn't actually match what doesn't support

17:48.540 --> 17:51.680
what you want to store which sounds maybe bizarre

17:51.680 --> 17:54.880
but happens especially in sort of Japanese

17:54.880 --> 17:58.360
and things like that, so we do support automatic encoding

17:58.360 --> 18:01.340
conversion between client and server so that all works

18:01.340 --> 18:06.340
and happens, but then this also, what if you have,

18:06.960 --> 18:08.580
you know, your strings, your translated strings

18:08.580 --> 18:10.700
or in a file, they also have an encoding,

18:10.700 --> 18:13.200
they then get loaded into the server process,

18:13.200 --> 18:16.280
the server process, prints stuff to its own log

18:16.280 --> 18:18.980
but also sends error messages to the client.

18:18.980 --> 18:22.080
All of those things could have different ideas

18:22.080 --> 18:22.920
of what they want, right?

18:22.920 --> 18:26.280
You might want to log stuff in English to your server log

18:26.280 --> 18:30.280
but the client wants the error message in French,

18:30.280 --> 18:33.320
but, or for some, it maybe it's like legacy client

18:33.320 --> 18:37.360
that wants it, you know, transcoded to Latin nine

18:39.320 --> 18:41.440
or, and then at the same time there's a different client

18:41.440 --> 18:43.560
connected that also is doing things

18:43.560 --> 18:45.680
and is sent to a different language,

18:45.680 --> 18:47.520
you want to log it to the same server log

18:47.520 --> 18:49.080
in the same language and the same encoding

18:49.080 --> 18:50.440
hopefully as the other guy.

18:51.360 --> 18:56.360
All of this works quite poorly the way the get text

18:56.760 --> 19:01.760
or the INTL APIs work, you can sort of have some subsets

19:02.000 --> 19:03.960
with this working but if you really try hard,

19:03.960 --> 19:07.040
it's a total mess and it just basically doesn't work.

19:07.040 --> 19:10.480
And so that's a real problem really

19:10.480 --> 19:15.480
and we'd have to really redesign some of this

19:15.800 --> 19:18.160
to support all of these combinations.

19:20.600 --> 19:25.600
Yeah, also the tools, well the tools are fine,

19:27.440 --> 19:31.520
they're actually quite cool and get text has some internal

19:31.520 --> 19:34.320
sort of optimizations that are quite interesting,

19:34.320 --> 19:36.200
has like sort of internal parallelization

19:36.200 --> 19:37.920
and stuff like that so work has been done

19:37.920 --> 19:40.560
but I still find it quite slow, you know,

19:41.480 --> 19:45.280
even on our scale I'm interested to see what the KDE report

19:47.280 --> 19:48.760
is gonna be later on how they handle that

19:48.760 --> 19:50.840
but it is still quite slow, right?

19:50.840 --> 19:52.640
This sort of website thing I showed,

19:52.640 --> 19:54.640
if you just do a full rebuild of that,

19:54.640 --> 19:56.520
it takes like 20 minutes or something, right?

19:56.520 --> 19:59.320
Just to re-merge and re-extract and recombine everything.

19:59.320 --> 20:06.320
So also the format, the PO format is sort of pre-source control,

20:11.760 --> 20:14.880
I find, because it has all these like dates

20:14.880 --> 20:16.880
and time stems in it and which you don't need

20:16.880 --> 20:18.760
because you have it in your source control management

20:18.760 --> 20:21.680
but these, hello.

20:21.680 --> 20:23.720
Can you be more explicit on the 20 minutes?

20:23.720 --> 20:25.720
What do you do in these 20 minutes

20:25.720 --> 20:27.240
because it sounds very slow?

20:27.240 --> 20:31.400
Well, it runs a loop, it extracts,

20:32.480 --> 20:35.520
runs xgettext over the source code

20:37.600 --> 20:42.280
and then it runs message merge against all these catalogs

20:43.480 --> 20:46.000
which are, you know, sort of this many by that many

20:47.160 --> 20:48.720
times that many branches

20:50.200 --> 20:55.280
and you run that on just a machine, right?

20:55.280 --> 20:57.760
So, I mean, you could optimize this

20:57.760 --> 20:59.440
by maybe a beefier machine

20:59.440 --> 21:01.680
and you can probably parallelize this a little bit

21:01.680 --> 21:04.520
but it's still, you know, the main message catalog

21:04.520 --> 21:07.120
for the actual server has like, you know, 5,000 strings

21:07.120 --> 21:09.720
and that is still gonna run like,

21:11.520 --> 21:14.560
I don't really know why but it runs like a couple of minutes.

21:15.440 --> 21:19.760
It's just, it's not, we're doing this build system work now,

21:19.760 --> 21:22.840
right, when we go from make to mason or mason or ninja

21:22.840 --> 21:27.520
because make is too slow

21:27.520 --> 21:29.920
even if you don't have to do anything, right?

21:29.920 --> 21:32.560
So we're trying to sort of go from,

21:32.560 --> 21:34.800
I can rebuild everything in five seconds to two seconds

21:34.800 --> 21:36.080
and this thing takes like 10 minutes

21:36.080 --> 21:38.080
so that's just kind of annoying, right?

21:40.440 --> 21:42.200
Yeah, and I mentioned sort of the back patching,

21:42.200 --> 21:46.400
sort of you, oftentimes what happens is that

21:46.400 --> 21:47.800
there's like a bug fix, right?

21:47.800 --> 21:51.760
And because of the bug fix, there's a new message changes

21:51.760 --> 21:54.400
and one new one is added and then,

21:54.400 --> 21:59.080
so that then pops up in your website

21:59.080 --> 22:01.280
but then it gets back patched,

22:01.280 --> 22:02.640
the same bug fix gets back patched

22:02.640 --> 22:05.080
so the same message has to then also be updated

22:05.080 --> 22:07.080
in the back branches so you just kind of

22:08.000 --> 22:09.640
have to like download this, upload this,

22:09.640 --> 22:11.360
then it gets added to the translation memory,

22:11.360 --> 22:13.320
then you can do this, I have a bunch of shell scripts

22:13.320 --> 22:16.320
to kind of make this work, it's just all, could be better.

22:16.320 --> 22:21.320
All right, so a lot of people know this chart here.

22:27.520 --> 22:32.520
So, you know, some of the projects that we know,

22:33.320 --> 22:34.740
maybe Postgres is somewhere in here,

22:34.740 --> 22:36.680
KDE, LibreOffice, they're all pretty good

22:36.680 --> 22:39.680
but then there's maybe things like that down here

22:39.680 --> 22:44.680
that everybody builds on but they're sort of maintained by,

22:44.680 --> 22:48.920
by a few people in there sort of on the side, right?

22:48.920 --> 22:53.440
And this way, I mean, this is sort of a general problem.

22:53.440 --> 22:57.440
I gave the same, I gave a talk,

22:57.440 --> 22:59.560
it was the online one two years ago

22:59.560 --> 23:02.160
about the documentation tool chain Postgres,

23:02.160 --> 23:04.100
same problem, right?

23:05.640 --> 23:07.760
We have, you know, open source,

23:07.760 --> 23:09.400
everything's very successful but then there's like

23:09.400 --> 23:12.280
these little tools you need just to make your build run,

23:12.280 --> 23:16.560
right, and then there's, they don't have the same

23:16.560 --> 23:19.000
necessarily amount of staffing and funding

23:19.000 --> 23:21.280
and things like that but you still kind of rely on them

23:21.280 --> 23:22.840
and they just barely sort of chug along.

23:22.840 --> 23:27.280
So, that's a sort of general concern, right?

23:27.280 --> 23:28.600
But it's, it applies here.

23:30.760 --> 23:32.360
All right, so what are we doing?

23:33.840 --> 23:34.680
What do we plan to do?

23:34.680 --> 23:36.520
I mentioned we're in the middle, right now,

23:36.520 --> 23:38.480
we're sort of redoing our build system

23:38.480 --> 23:43.480
that is kind of a good reason to clean up some of that

23:45.160 --> 23:47.000
old stuff that we don't need anymore.

23:47.000 --> 23:50.000
We're also moving more to using ICU which is, you know,

23:50.000 --> 23:55.000
internationalization library that does lots of good things

23:56.200 --> 24:00.360
but then it adds another dimension to this issue of,

24:00.360 --> 24:02.120
you know, locale encoding and then there's sort of

24:02.120 --> 24:04.520
another dimension of what ICU thinks the current locale

24:04.520 --> 24:07.640
and encoding is, it just gets ever more messy

24:07.640 --> 24:12.240
and complicated and then one sort of important issue

24:12.240 --> 24:14.080
in databases is the sort order, right?

24:14.080 --> 24:15.440
That's a lot of people care about that,

24:15.440 --> 24:17.160
what the sort order of your data is

24:17.160 --> 24:20.280
and different collations have to be supported

24:20.280 --> 24:24.360
and that's another kind of sort of localization

24:24.360 --> 24:26.120
kind of work we do.

24:26.120 --> 24:28.240
But all of this is sort of weirdly connector, right?

24:28.240 --> 24:31.040
If you configure one part of the system to be

24:31.040 --> 24:33.000
in this language then all of a sudden get text

24:33.000 --> 24:34.960
also thinks that this is the same but maybe

24:34.960 --> 24:35.880
you don't even want that, right?

24:35.880 --> 24:38.240
You might want to error messages in French

24:38.240 --> 24:40.240
but you want to sort something in Swedish, right?

24:40.240 --> 24:41.400
That's why not.

24:42.440 --> 24:46.520
But because of these APIs the way they're historically built

24:46.520 --> 24:49.460
it just doesn't quite work smoothly.

24:52.760 --> 24:56.440
But again, we want to modernize the workflows.

24:56.440 --> 24:58.000
Again, maybe web late.

24:58.000 --> 25:00.640
I heard of Omega T here also this weekend

25:00.640 --> 25:03.440
and there's Crowdin but,

25:03.440 --> 25:08.440
so the issue I had, I mean I heard of Web late

25:08.480 --> 25:11.320
some years ago too but again the issue is sort of

25:11.320 --> 25:14.480
we can't just adopt like the hottest new thing, right?

25:14.480 --> 25:17.480
Because again, whatever the way I always think about it

25:17.480 --> 25:22.160
is whatever I sort of do today in Postgres, right?

25:22.160 --> 25:24.440
Some piece of code or make some infrastructure change

25:24.440 --> 25:27.440
still has to work in 10 years, right?

25:27.440 --> 25:29.800
And it doesn't, meaning it also has to like build

25:29.800 --> 25:30.640
from source, right?

25:30.640 --> 25:32.340
Because that's the way open source works, right?

25:32.340 --> 25:36.560
So I can't just use a tool that was just invented yesterday

25:36.560 --> 25:38.520
and I don't know if it's still gonna be here in two years.

25:38.520 --> 25:42.000
Now they mentioned Web late is 11 years old

25:42.000 --> 25:44.800
so that's pretty good so I think we can maybe look into that.

25:46.800 --> 25:49.440
All right, so this is something maybe a question

25:49.440 --> 25:52.240
anybody knows is GetX still the thing

25:52.240 --> 25:53.760
or is it something totally different

25:53.760 --> 25:54.880
that everybody should be using now

25:54.880 --> 25:58.880
as part of those sort of the low level API of how this works?

25:58.880 --> 26:00.840
I don't know.

26:00.840 --> 26:05.400
Well, sort of half hoping that's from the ICU ecosystem

26:05.400 --> 26:07.680
something would be evolving or it's sort of emerging

26:07.680 --> 26:08.880
but I haven't seen anything like that

26:08.880 --> 26:10.480
so I don't know if there's anything

26:12.280 --> 26:14.080
or is this still the thing to use?

26:14.080 --> 26:15.080
I don't know.

26:15.080 --> 26:17.480
So maybe somebody has a, yes, please.

26:17.480 --> 26:21.720
The ICU upcoming solution is Mesut format two.

26:21.720 --> 26:26.720
It's currently in the ICU4J72 that came out in October

26:26.720 --> 26:30.960
and it's in tech preview there but it's gonna progress

26:30.960 --> 26:33.720
from there it's not yet in ICU4C.

26:34.680 --> 26:36.880
It's effectively Mesut format two

26:36.880 --> 26:40.080
is a new Mesut format syntax.

26:40.920 --> 26:43.120
The resource level syntax for that

26:43.120 --> 26:46.120
is a little bit more still in progress

26:46.120 --> 26:49.720
but if you're moving towards more of an ICU world

26:49.720 --> 26:54.000
that's likely going to provide a decent future thing

26:54.000 --> 26:56.480
for you to migrate to from GetX.

26:56.480 --> 26:59.800
It's not that yet but it's becoming that.

26:59.800 --> 27:02.400
That is excellent news.

27:02.400 --> 27:04.400
Thank you, I'll definitely look into that.

27:12.200 --> 27:14.880
Webulate is adopting that as well or supporting that?

27:14.880 --> 27:16.640
It's all compatible.

27:17.520 --> 27:19.600
It seems like it supported a bunch of things.

27:19.600 --> 27:22.360
So yeah, this is wonderful and useful information

27:22.360 --> 27:23.200
we can like.

27:23.200 --> 27:24.880
No message format two.

27:24.880 --> 27:25.720
It does.

27:25.720 --> 27:26.560
It's not there yet.

27:26.560 --> 27:29.360
The specifications are two-point-four.

27:29.360 --> 27:32.280
So yeah, this is good, thank you.

27:32.280 --> 27:35.440
So this is also the end of my presentation.

27:35.440 --> 27:38.840
So I just wanted to sort of say what we're doing

27:38.840 --> 27:40.920
and what sort of the some of the unique challenges are.

27:40.920 --> 27:42.200
I've got some good feedback here.

27:42.200 --> 27:43.560
I'm gonna look into Weblate.

27:43.560 --> 27:48.560
We're gonna look into sort of emerging ICU things,

27:49.560 --> 27:51.200
update some of our infrastructure.

27:52.720 --> 27:55.080
We have a few minutes for questions.

27:55.080 --> 27:57.400
Otherwise, thank you very much for listening.

27:57.400 --> 27:58.240
Yeah.

27:58.240 --> 28:00.920
So if you're worried about Weblate,

28:05.840 --> 28:07.880
it doesn't really interact with,

28:09.280 --> 28:12.160
it doesn't go to the new automation system

28:12.160 --> 28:16.240
because the way you communicate with Weblate

28:16.240 --> 28:19.200
with the world and the translators is files.

28:19.200 --> 28:24.200
Yeah.

28:39.920 --> 28:41.040
Yeah, it sounds like it.

28:41.040 --> 28:51.800
Yeah, it was kind of funny

28:51.800 --> 28:54.400
because I had submitted various bugs

28:54.400 --> 28:57.040
to savannah.new.org over the years.

28:57.040 --> 28:59.720
Also feature requests and stuff like that.

28:59.720 --> 29:03.640
And it just like two or three weeks ago,

29:03.640 --> 29:05.200
all of these bugs were like updated

29:05.200 --> 29:06.520
and some of them closed and it's like,

29:06.520 --> 29:09.720
whoa, somebody know that I'm gonna complain

29:09.720 --> 29:10.920
about them at first.

29:10.920 --> 29:11.760
I don't know.

29:11.760 --> 29:13.000
Is the person here in any case?

29:13.000 --> 29:14.480
I don't know who is, no.

29:16.520 --> 29:18.920
Well, I guess it's just sort of,

29:18.920 --> 29:21.760
I mean, this is a problem or I guess it is a problem

29:21.760 --> 29:24.600
in sort of some of these people maintain

29:24.600 --> 29:25.920
some of these specially new tools

29:25.920 --> 29:26.880
and some of these older tools

29:26.880 --> 29:28.160
that are sort of on maintenance.

29:28.160 --> 29:30.160
I mean, we don't need tons of new features,

29:30.160 --> 29:32.560
but you don't really know, right?

29:32.560 --> 29:34.360
It could just be that that person changed his job

29:34.360 --> 29:37.440
and then nothing happens again for five years, right?

29:37.440 --> 29:40.920
But well, got some good new information here, thank you.

29:40.920 --> 30:06.920
All right, then we'll move on to the next one.
