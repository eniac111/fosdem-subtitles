1
0:00:00.000 --> 0:00:10.240
So happily, my talk is going to build a little bit on the talk that you just saw.

2
0:00:10.240 --> 0:00:13.840
The difference being that I'm making proposals and they actually built things.

3
0:00:13.840 --> 0:00:16.000
So it's a little different.

4
0:00:16.000 --> 0:00:17.720
My name is Robert Reed.

5
0:00:17.720 --> 0:00:20.680
I am the founder of Public Invention.

6
0:00:20.680 --> 0:00:23.680
But what I'm presenting today is not a public invention project.

7
0:00:23.680 --> 0:00:28.520
This is co-work with two other people, Victoria, Jacqueline, and Christina Cole, of open source

8
0:00:28.520 --> 0:00:30.240
medical supplies.

9
0:00:30.240 --> 0:00:35.940
Open source medical supplies and public invention are both US 501c3 organizations.

10
0:00:35.940 --> 0:00:42.560
So what I'd like to talk about is global open source quality assurance of emergency supplies.

11
0:00:42.560 --> 0:00:48.600
And we call this GOSQOS, or the Global Open Source Quality Assurance System.

12
0:00:48.600 --> 0:00:52.000
And I'm making a proposal today for this.

13
0:00:52.000 --> 0:00:59.760
Now open source manufacturer has rapidly responded in a number of important cases to things that

14
0:00:59.760 --> 0:01:00.760
have happened.

15
0:01:00.760 --> 0:01:05.800
Like open source software responded to contract tracing in the previous talk.

16
0:01:05.800 --> 0:01:12.720
In particular, 3D printers can represent sort of an army for good that can immediately do

17
0:01:12.720 --> 0:01:17.340
things to help in a man-made or natural disaster.

18
0:01:17.340 --> 0:01:21.960
In particular, we're working with some people to make tourniquets for the crisis in Ukraine.

19
0:01:21.960 --> 0:01:22.960
Right now.

20
0:01:22.960 --> 0:01:30.960
And of course, if you saw my other talk, we've also made human ventilation products and other

21
0:01:30.960 --> 0:01:32.040
things.

22
0:01:32.040 --> 0:01:35.720
But when you do this, you have this fundamental problem.

23
0:01:35.720 --> 0:01:41.480
You have a widely distributed supply chain of people attempting to make useful products.

24
0:01:41.480 --> 0:01:43.280
But how do you trust them?

25
0:01:43.280 --> 0:01:45.660
And the trust can be broken down into two issues.

26
0:01:45.660 --> 0:01:49.040
How do you trust that the design itself is useful?

27
0:01:49.040 --> 0:01:53.960
And then even if the design is a good design, how do you trust that the manufacturer is

28
0:01:53.960 --> 0:01:56.200
in fact a good manufacturer?

29
0:01:56.200 --> 0:02:02.320
Because of course, we all know, for example, 3D printing requires tuning and so forth.

30
0:02:02.320 --> 0:02:09.200
Well, if you imagine using a tourniquet, which is a simple physical device, but can easily

31
0:02:09.200 --> 0:02:14.400
be mismanufactured, especially if it's 3D printed, you're using it in a life-saving

32
0:02:14.400 --> 0:02:17.340
situation where you're trying to stop bleeding.

33
0:02:17.340 --> 0:02:21.040
If it breaks, you have a real serious problem.

34
0:02:21.040 --> 0:02:27.600
And so even though a tourniquet only costs $20 and it's a relatively simple device, ensuring

35
0:02:27.600 --> 0:02:30.000
the quality of that is very important.

36
0:02:30.000 --> 0:02:35.600
It's almost better not to have a tourniquet than to have a faulty tourniquet.

37
0:02:35.600 --> 0:02:41.960
Now I am a humanitarian engineer and I consider humanitarian engineering the space that I

38
0:02:41.960 --> 0:02:43.520
work in.

39
0:02:43.520 --> 0:02:48.480
Most of the people who worked for this that I know of were not making money from it.

40
0:02:48.480 --> 0:02:53.920
They didn't have a financial incentive to try to sell products to address these things.

41
0:02:53.920 --> 0:02:57.680
But nonetheless, engineers have a psychological problem, right?

42
0:02:57.680 --> 0:03:00.480
Nobody wants their baby to be called ugly.

43
0:03:00.480 --> 0:03:06.240
And so all of us wanted to be heroes and we wanted to save the world and save lives.

44
0:03:06.240 --> 0:03:11.800
And for that reason, engineers cannot be trusted to evaluate their own work.

45
0:03:11.800 --> 0:03:13.200
Okay?

46
0:03:13.200 --> 0:03:17.520
But of course, this is a problem that the open source software community has dealt with

47
0:03:17.520 --> 0:03:19.240
already and I'll deal with that.

48
0:03:19.240 --> 0:03:25.400
So in October of 2022, just four or five months ago, many non-governmental organizations in

49
0:03:25.400 --> 0:03:31.120
the humanitarian engineering space got together for three hours and we had really a surprisingly

50
0:03:31.120 --> 0:03:37.280
unanimous agreement that we needed quality assurance for rapidly manufactured open source

51
0:03:37.280 --> 0:03:38.280
devices.

52
0:03:38.280 --> 0:03:44.080
And we needed an alliance of NGOs to try to address this.

53
0:03:44.080 --> 0:03:49.760
And so Christine and Victoria and I formed a new informal organization we haven't incorporated

54
0:03:49.760 --> 0:03:55.080
that we call GOSCOS or the Global Open Source Quality Assurance System.

55
0:03:55.080 --> 0:03:59.160
So the open source software movement knows how to do testing.

56
0:03:59.160 --> 0:04:00.160
Okay?

57
0:04:00.160 --> 0:04:04.380
Of course, it's easier to test software than to test hardware devices.

58
0:04:04.380 --> 0:04:09.160
With software, you normally have automated tests that anyone is empowered to run.

59
0:04:09.160 --> 0:04:13.880
You download the Git repository, you run the test and you have an independent verification

60
0:04:13.880 --> 0:04:16.520
of the quality of the code.

61
0:04:16.520 --> 0:04:23.120
So in a sense, what we want to do for hardware devices is what's already been done for software

62
0:04:23.120 --> 0:04:25.720
devices or software systems.

63
0:04:25.720 --> 0:04:30.460
So fundamentally to this for hardware devices is to show the data.

64
0:04:30.460 --> 0:04:35.600
So you want a test procedure that's sort of a named standard test procedure and then you

65
0:04:35.600 --> 0:04:37.600
want to record a test result.

66
0:04:37.600 --> 0:04:43.240
You want to say what was done, when was it done, how was it done and who did it.

67
0:04:43.240 --> 0:04:48.000
And you may have obviously an analysis of either you pass the test or you fail and if

68
0:04:48.000 --> 0:04:50.800
you fail in what way do you fail.

69
0:04:50.800 --> 0:04:56.560
And finally, you want a discoverable publication of those tests for the particular device.

70
0:04:56.560 --> 0:05:02.480
Now there are examples of testing organizations like Underwriters Laboratory and ASTM and other

71
0:05:02.480 --> 0:05:03.480
things.

72
0:05:03.480 --> 0:05:08.320
Often what happens is an industry begins its own testing procedures and then later they

73
0:05:08.320 --> 0:05:11.540
become adopted into governmental regulation.

74
0:05:11.540 --> 0:05:16.320
So it's actually the case that many industries are sort of self-policing and then they become

75
0:05:16.320 --> 0:05:20.720
part of a governmental structure later.

76
0:05:20.720 --> 0:05:28.720
So what we propose is asset provenance tracking as the fundamental way that we can improve

77
0:05:28.720 --> 0:05:32.360
the quality of rapidly manufactured devices.

78
0:05:32.360 --> 0:05:36.800
So when I say provenance what I mean is the history of the device in the same way that

79
0:05:36.800 --> 0:05:42.280
an art object has a provenance, right, who owned it, what happened to it, where was it

80
0:05:42.280 --> 0:05:44.520
physically throughout time.

81
0:05:44.520 --> 0:05:52.640
Now this is a way to fight counterfeiting which is a serious problem for medical devices

82
0:05:52.640 --> 0:05:58.280
particularly in low and middle income countries but even in other situations.

83
0:05:58.280 --> 0:06:02.840
It's also a way to organize documentation on behalf of makers.

84
0:06:02.840 --> 0:06:07.640
So it's not necessarily that you're doing anything that couldn't be done some other

85
0:06:07.640 --> 0:06:12.680
way but you could be relieving the burden of the makers themselves from having to do

86
0:06:12.680 --> 0:06:18.480
all of the documentation and distributing the documentation across a number of parties.

87
0:06:18.480 --> 0:06:25.160
So this would allow third party quality assurance testing, relatively simple to implement, can

88
0:06:25.160 --> 0:06:30.400
use minimal well understood cryptography, I'm going to talk about that in a minute.

89
0:06:30.400 --> 0:06:34.800
Now of course people will say well there exists asset tracking systems.

90
0:06:34.800 --> 0:06:38.580
There is an open source asset tracking system called SnipeIt.

91
0:06:38.580 --> 0:06:42.720
It's possible that this should be a fork of SnipeIt.

92
0:06:42.720 --> 0:06:48.120
There are some ways in which it's different, what I'm proposing is different than SnipeIt.

93
0:06:48.120 --> 0:06:51.440
I don't have time in this talk to discuss that issue.

94
0:06:51.440 --> 0:06:54.140
But this is what we would like to produce.

95
0:06:54.140 --> 0:07:00.880
So you can imagine a box of tourniquets having a gas cost seal printed on it, literally a

96
0:07:00.880 --> 0:07:03.720
sticker is put on it.

97
0:07:03.720 --> 0:07:10.680
And the person who manufactures the tourniquets gets a unique key for this box of tourniquets

98
0:07:10.680 --> 0:07:13.600
which either they generate or we generate for them.

99
0:07:13.600 --> 0:07:18.520
We describe the product which is actually more important than you might think and then

100
0:07:18.520 --> 0:07:24.200
we can give certain certifications if they have actually occurred for the object so that

101
0:07:24.200 --> 0:07:29.360
anyone who holds the box in their hands can get some useful information about what's in

102
0:07:29.360 --> 0:07:30.580
the box.

103
0:07:30.580 --> 0:07:36.520
But more importantly every box will have a key that you can use to look up in a public

104
0:07:36.520 --> 0:07:44.160
open access online database stuff about the particular object.

105
0:07:44.160 --> 0:07:47.760
Now it's kind of easy to understand how this would work.

106
0:07:47.760 --> 0:07:52.040
Imagine that it's made in Prague, it gets a private key, someone else in Prague does

107
0:07:52.040 --> 0:07:55.120
a third party test on it that goes into the database.

108
0:07:55.120 --> 0:07:57.640
It's then purchased by a middle man in Egypt.

109
0:07:57.640 --> 0:08:00.800
The person in Egypt transfers it to Tanzania.

110
0:08:00.800 --> 0:08:07.640
In Tanzania someone verifies that it's in inventory and a potential buyer in Kagoma

111
0:08:07.640 --> 0:08:13.680
then looks at the key, takes the box in their hand and points their phone at it and says

112
0:08:13.680 --> 0:08:21.120
this claims to be a box of mask or tourniquets or electronics or whatever and they look

113
0:08:21.120 --> 0:08:24.760
up in the website the complete history of the device.

114
0:08:24.760 --> 0:08:32.200
Now just as we use for intellectual property and other art objects if you can see the complete

115
0:08:32.200 --> 0:08:36.160
history of the device it's very difficult to fake that.

116
0:08:36.160 --> 0:08:43.200
Not impossible but it's quite quite difficult to fake a chronologically accurate history

117
0:08:43.200 --> 0:08:44.840
for a device.

118
0:08:44.840 --> 0:08:50.240
And so in this way it provides great confidence to the person in Kagoma that this product

119
0:08:50.240 --> 0:08:51.600
is what it says it is.

120
0:08:51.600 --> 0:08:54.600
Thank you sir.

121
0:08:54.600 --> 0:08:59.480
Okay now I assume most of the people in this room are computer programmers and they can

122
0:08:59.480 --> 0:09:03.400
probably have already imagined how this would be implemented.

123
0:09:03.400 --> 0:09:05.800
From a programmatic point of view it's very simple.

124
0:09:05.800 --> 0:09:11.320
You just have a database, you assign keys, you use one way encryption.

125
0:09:11.320 --> 0:09:16.380
Much easier than the sort of public key encryption and the other kinds of things that are necessary

126
0:09:16.380 --> 0:09:18.280
today in the cryptocurrency world.

127
0:09:18.280 --> 0:09:28.100
You just do a simple one way encryption of the key so that you allow a public access

128
0:09:28.100 --> 0:09:31.480
where anyone can write into the database.

129
0:09:31.480 --> 0:09:42.240
Okay now there are a number of things that you would think are security flaws in this.

130
0:09:42.240 --> 0:09:46.920
We don't have time in this talk to go over them but I hold that the following principle

131
0:09:46.920 --> 0:09:48.840
is simple enough and good enough.

132
0:09:48.840 --> 0:09:52.360
It's not perfect but it's good enough to build a workable system.

133
0:09:52.360 --> 0:09:58.320
If you have the device in your hand you have a right to see the provenance.

134
0:09:58.320 --> 0:10:02.680
Now there are ways in which that differs from our norm today.

135
0:10:02.680 --> 0:10:07.320
For example in the United States if I have a box of something in my hand I do not have

136
0:10:07.320 --> 0:10:12.560
a legal right to see where it physically was located before I got it.

137
0:10:12.560 --> 0:10:18.680
And if I have a box in my hand I do not have a right to see the provenance in the future.

138
0:10:18.680 --> 0:10:23.440
Nonetheless seeing those things is not particularly harmful.

139
0:10:23.440 --> 0:10:28.320
You can imagine that being a right and it wouldn't really hurt anything if that were

140
0:10:28.320 --> 0:10:29.320
true.

141
0:10:29.320 --> 0:10:33.420
And so I consider this to be a great simplifying assumption.

142
0:10:33.420 --> 0:10:39.400
If you have the physical device you have the right to see the provenance.

143
0:10:39.400 --> 0:10:42.200
And that simplifies an enormous number of things.

144
0:10:42.200 --> 0:10:48.160
Now what you're not allowed to do is even though the database is in a sense public you're

145
0:10:48.160 --> 0:10:54.540
not allowed to scrape it and see the history of all of the devices which are in the database.

146
0:10:54.540 --> 0:10:59.360
But you won't be able to do that unless you have the keys because it's encrypted.

147
0:10:59.360 --> 0:11:00.360
Okay.

148
0:11:00.360 --> 0:11:03.720
Therefore the database can be made a public database.

149
0:11:03.720 --> 0:11:09.120
This is very very simple but I claim it's going to be good enough for us to really provide

150
0:11:09.120 --> 0:11:11.220
quality insurance.

151
0:11:11.220 --> 0:11:16.880
So if you imagine this system existing and you have a GOSQOS seal that can be put on

152
0:11:16.880 --> 0:11:21.720
objects you can ask well does it apply to medical devices or does it apply to non-medical

153
0:11:21.720 --> 0:11:22.720
devices.

154
0:11:22.720 --> 0:11:29.640
Does it interact with the CE stamp used in Europe to authorize medical devices or with

155
0:11:29.640 --> 0:11:31.840
the USFDA.

156
0:11:31.840 --> 0:11:36.360
And the answer is it can overlap all of those in a complicated way.

157
0:11:36.360 --> 0:11:39.720
It really doesn't require the approval of a government.

158
0:11:39.720 --> 0:11:45.440
It can be a completely open provenance tracking system which is used or not used as people

159
0:11:45.440 --> 0:11:50.700
see fit in a voluntary way.

160
0:11:50.700 --> 0:11:58.000
Now the idea of open source devices are a threat to monopolies but they're not a threat

161
0:11:58.000 --> 0:11:59.520
to large firms.

162
0:11:59.520 --> 0:12:05.360
There's no reason large firms could not use open source designs and use the same provenance

163
0:12:05.360 --> 0:12:11.880
tracking system that we are suggesting here in order to give buyers confidence in their

164
0:12:11.880 --> 0:12:12.880
system.

165
0:12:12.880 --> 0:12:18.920
Today very large firms have their own internal provenance tracking systems.

166
0:12:18.920 --> 0:12:23.720
They have asset tracking systems that they use for their own inventory purposes but they

167
0:12:23.720 --> 0:12:29.200
do not expose those and make them public to people and would consider them a trade secret.

168
0:12:29.200 --> 0:12:35.920
But there's no reason why they don't use an open source provenance tracking to add confidence

169
0:12:35.920 --> 0:12:40.600
to their products.

170
0:12:40.600 --> 0:12:47.640
So I claim that there's no reason anyone ought to particularly oppose this system.

171
0:12:47.640 --> 0:12:51.580
Now we have started writing technical papers about this.

172
0:12:51.580 --> 0:12:53.760
These are very much in a draft form.

173
0:12:53.760 --> 0:13:00.720
They're not super great but they're publicly available and we invite comment on them.

174
0:13:00.720 --> 0:13:05.020
We are actively trying to build this system.

175
0:13:05.020 --> 0:13:11.240
And so today in this very small room I'd like to publicly launch the free global asset provenance

176
0:13:11.240 --> 0:13:14.080
tracking idea.

177
0:13:14.080 --> 0:13:19.760
I would like to be the technical lead of the new open source project system to build a

178
0:13:19.760 --> 0:13:25.280
website to provide this technology but I can't do it completely by myself.

179
0:13:25.280 --> 0:13:28.040
For one thing I run public invention which is a non-profit.

180
0:13:28.040 --> 0:13:29.640
It takes up a lot of my time.

181
0:13:29.640 --> 0:13:36.520
So I'd like to call for volunteers both computer programmers and non-computer programmers who

182
0:13:36.520 --> 0:13:42.520
can handle business and communications and other things that we need to make this a reality.

183
0:13:42.520 --> 0:13:47.440
There's going to be a lot of work convincing people to voluntarily use this system until

184
0:13:47.440 --> 0:13:51.800
it becomes respected enough that people start to demand it.

185
0:13:51.800 --> 0:13:55.520
Thank you.

186
0:13:55.520 --> 0:13:57.240
So that ends my talk.

187
0:13:57.240 --> 0:13:58.240
Thank you.

188
0:13:58.240 --> 0:14:00.520
And I'm happy to take questions.

189
0:14:00.520 --> 0:14:11.120
If anybody has a question I'll repeat it into the microphone.

190
0:14:11.120 --> 0:14:12.120
Yes sir.

191
0:14:12.120 --> 0:14:19.120
Actually, do you want to achieve with this system, I mean if you notice that something

192
0:14:19.120 --> 0:14:27.280
was touched in some previous step of the system, then what happens then?

193
0:14:27.280 --> 0:14:30.520
So the question is if you notice that something was previously touched.

194
0:14:30.520 --> 0:14:40.120
Yeah, so for example this middle man in Egypt took a few odd or screwed it up and then after

195
0:14:40.120 --> 0:14:45.320
five steps the guy in Tanzania noticed that something is wrong.

196
0:14:45.320 --> 0:14:46.320
What happens?

197
0:14:46.320 --> 0:14:54.280
Well, so there's no guarantee that the entries in the database are completely accurate.

198
0:14:54.280 --> 0:15:01.040
But it is the case that you can make an entry saying it looks to me as if the device was

199
0:15:01.040 --> 0:15:03.080
tampered with.

200
0:15:03.080 --> 0:15:07.800
Now the people downstream of the provenance can decide what to do with that information

201
0:15:07.800 --> 0:15:09.480
or not.

202
0:15:09.480 --> 0:15:14.440
They can ignore it or they can say, well so and so says the box was tampered with.

203
0:15:14.440 --> 0:15:20.120
I'm going to begin a legal proceeding with someone earlier in the provenance train or

204
0:15:20.120 --> 0:15:28.680
I'm going to ignore it or I'm going to believe that that was entered for some nefarious purpose

205
0:15:28.680 --> 0:15:31.040
to sabotage my system.

206
0:15:31.040 --> 0:15:38.320
Or I will use it to repair the device and inspect it and make sure that it's good.

207
0:15:38.320 --> 0:15:44.120
It's already the case that the US FDA requires market surveillance of objects for the purpose

208
0:15:44.120 --> 0:15:48.320
of doing recalls as well as for other safety purposes.

209
0:15:48.320 --> 0:15:55.880
So in a sense the fact that you have that potential information is a positive thing

210
0:15:55.880 --> 0:16:00.200
about the provenance tracking, not a negative thing.

211
0:16:00.200 --> 0:16:02.560
Yes, sir.

212
0:16:02.560 --> 0:16:08.760
So maybe you suggest that anybody can just add information to this whole database.

213
0:16:08.760 --> 0:16:13.720
How does that build on trust of suppliers or how do you get the key recognition of who

214
0:16:13.720 --> 0:16:15.200
actually supplied this information?

215
0:16:15.200 --> 0:16:20.880
Yes, the question is can anybody add information to the record for a device and the answer

216
0:16:20.880 --> 0:16:24.080
is yes if you have the key.

217
0:16:24.080 --> 0:16:29.520
So a bad actor can't pollute the entire database.

218
0:16:29.520 --> 0:16:36.080
But if I broke into your warehouse and took a photocopy of a box I could create a record

219
0:16:36.080 --> 0:16:37.160
for that.

220
0:16:37.160 --> 0:16:43.000
So anyone can claim that they have this device if they have the key for the device and they

221
0:16:43.000 --> 0:16:47.160
can make a false claim about it or an accurate claim.

222
0:16:47.160 --> 0:16:54.080
But just as with art objects and other kinds of things I think false claims will be relatively

223
0:16:54.080 --> 0:16:56.760
easy to sort out in the system.

224
0:16:56.760 --> 0:17:02.400
And so the great simplicity of this is that it's a completely open database that doesn't

225
0:17:02.400 --> 0:17:07.600
require any security beyond maintaining the individual keys.

226
0:17:07.600 --> 0:17:14.560
And if a key for an individual object is corrupted, like for example suppose I took a photo of

227
0:17:14.560 --> 0:17:17.680
your box and published it on the internet.

228
0:17:17.680 --> 0:17:24.320
Well bad actors could likely disrupt the provenance of that box but they could not disrupt the

229
0:17:24.320 --> 0:17:27.720
provenance of the rest of your inventory.

230
0:17:27.720 --> 0:17:33.960
So I claim this is the correct balance between simplicity and security and we don't have

231
0:17:33.960 --> 0:17:35.920
to go overboard on it.

232
0:17:35.920 --> 0:17:36.920
Thank you.

233
0:17:36.920 --> 0:17:39.120
I think that's all the questions we have.

234
0:17:39.120 --> 0:17:55.000
Okay, thank you very much.

