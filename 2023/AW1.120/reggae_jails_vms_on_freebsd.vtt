WEBVTT

00:00.000 --> 00:13.640
Hello and welcome to my talk about a tool called Rege.

00:13.640 --> 00:20.360
It has something to do with a beehive and jail and I'm going to explain what it actually

00:20.360 --> 00:29.680
does, why it does it that way, what are the goals and what's the initiative behind it.

00:29.680 --> 00:41.720
So a relevant thing about me is I'm a co-founder of Hackerspace in my hometown.

00:41.720 --> 00:53.160
I was lucky enough to marry this girl and she supports me in all my crazy IT endeavors

00:53.160 --> 01:02.200
so Hackerspace was founded by us and it's a place where I do most of my development

01:02.200 --> 01:06.000
in the open source community.

01:06.000 --> 01:09.080
I've been a free business user since 2016.

01:09.080 --> 01:16.760
I used it briefly before 5.0 came out.

01:16.760 --> 01:28.520
And I'm somewhat involved in FreeBSD but I'm not a developer yet.

01:28.520 --> 01:37.480
I'm a FreeBSD contributor and for those of you that don't know what cBSD is, it's a

01:37.480 --> 01:39.600
jail and beehive manager.

01:39.600 --> 01:49.640
It can also manage Zen and VirtualBox but Rege doesn't support these two.

01:49.640 --> 01:58.360
I decided to have only FreeBSD native technologies supported.

01:58.360 --> 02:05.120
And obviously I'm an author of the software I'm about to talk about.

02:05.120 --> 02:13.360
So you might have seen similar tools like Vagrant and Docker Compose if you come from

02:13.360 --> 02:18.440
the Linux world like I do.

02:18.440 --> 02:26.640
And in that regard it's not revolutionary, it's actually pretty same thing.

02:26.640 --> 02:35.280
It's a manual development in a virtual machine or the jail.

02:35.280 --> 02:42.360
And currently jail has a really good support.

02:42.360 --> 02:49.360
Beehive is worked on because it has different distributions of Linux, different operating

02:49.360 --> 02:59.320
systems, versions and so on and it's a little bit harder to support because of those differences.

02:59.320 --> 03:08.960
And Oleg, who is a lead developer of cBSD decided to create a cBSD file which resembles

03:08.960 --> 03:16.760
somewhat Vagrant file in ideas and not the syntax.

03:16.760 --> 03:19.760
And I decided to take a different approach.

03:19.760 --> 03:29.360
So it's kind of a silly situation currently that there are two cBSD DevOps tools but we

03:29.360 --> 03:35.840
were trying out things and whatever works best is gonna stay.

03:35.840 --> 03:40.200
I'm rooting for the Rege of course.

03:40.200 --> 03:48.600
So the concept is that, well before I start with this, it would say the name of the project

03:48.600 --> 03:49.880
is Rege.

03:49.880 --> 03:53.680
I have a dreadlocks and I'm a musician.

03:53.680 --> 03:58.240
But I don't play Rege.

03:58.240 --> 04:01.680
It comes from a totally different idea.

04:01.680 --> 04:08.000
I have quite a few projects before this one that are all open source and now dead that

04:08.000 --> 04:16.600
had somehow referenced some songs or ideas from the Rege movement and music.

04:16.600 --> 04:26.320
And I said, okay how about I name this one Rege and stop the streak of resembling something

04:26.320 --> 04:29.640
I actually don't want to resemble.

04:29.640 --> 04:32.440
So that's where the name comes from.

04:32.440 --> 04:41.280
It's me trying to come up with a name to stop the Rege streak.

04:41.280 --> 04:52.520
So the basic concept behind Rege is that it uses cBSD for all heavy lifting.

04:52.520 --> 04:56.720
All jail and beehive management is done with it.

04:56.720 --> 05:04.640
Some of the networking is done with cBSD, some with RC.conf.

05:04.640 --> 05:11.720
I'm gonna get to that a bit later.

05:11.720 --> 05:15.840
And Rege has two entities.

05:15.840 --> 05:18.920
One is a service, one is a project.

05:18.920 --> 05:25.840
I intentionally called it a service because it can be a virtual machine or the jail.

05:25.840 --> 05:35.400
And the project is you might want to have different jails for different stuff.

05:35.400 --> 05:44.320
Let's say you're working with WordPress as a hoster and you know you need the PHP with

05:44.320 --> 05:48.800
WordPress, Nginx on one side and MySQL on the other.

05:48.800 --> 05:56.320
You probably don't want all of that to be inside the same container so you can split

05:56.320 --> 05:58.120
those up.

05:58.120 --> 06:07.560
You can influence the order of creation and booting and everything.

06:07.560 --> 06:15.560
We still don't have dependencies between jails but we might have in the future because it's

06:15.560 --> 06:22.320
a really nice feature.

06:22.320 --> 06:29.880
You probably are not gonna type all the commands to create the jail and then all the services

06:29.880 --> 06:33.040
inside of it.

06:33.040 --> 06:43.840
You're gonna use some of the provisioners and I'm gonna talk about that in a while.

06:43.840 --> 06:52.360
Where I come from, that's basically Serbia, we don't have IPv6.

06:52.360 --> 07:00.600
Forgive me if I didn't implement IPv6 properly because I have a really limited resources

07:00.600 --> 07:02.600
in testing that.

07:02.600 --> 07:10.920
There is of course tunnels that I use and I try to combine stuff but yeah, I'm basically

07:10.920 --> 07:14.080
with one hand behind the back.

07:14.080 --> 07:20.000
So I really try to support it, I just don't know if I've done it properly.

07:20.000 --> 07:25.280
Technologies, well, it's a mouthful.

07:25.280 --> 07:35.120
With vNet jails you can use DHCP and I almost insist on using vNet because for me as a system

07:35.120 --> 07:46.640
administrator it's easier than jails, I just fire up DHCP server, the DNS server, they

07:46.640 --> 07:58.080
are interconnected and to be specific DHCP is ICS, DNS server is NSD and there's one

07:58.080 --> 08:08.200
more DNS caching which is unbound.

08:08.200 --> 08:16.640
There are, well, all these technologies you probably know what they are.

08:16.640 --> 08:34.560
RTA, DVD is for IPv6 as I mentioned and PF, I would love to add IPFW, that's the future.

08:34.560 --> 08:43.640
So I don't cut off, I don't know what percentage of free BSD people but yeah, we wanna support

08:43.640 --> 08:48.920
everyone and everything ideally.

08:48.920 --> 09:00.400
And these two make and POSIX shell are the only languages used to implement reggae.

09:00.400 --> 09:09.360
I could get away with it because the CBSD is doing the whole stuff and I just need to

09:09.360 --> 09:16.960
script a few things, right.

09:16.960 --> 09:20.360
As I said, provisioners are supported.

09:20.360 --> 09:25.960
You don't have to use them, you can still just create a jail and do your, maybe it's

09:25.960 --> 09:34.520
a lab and you're playing with it, experimenting and whatnot but if you want you can run quite

09:34.520 --> 09:46.600
a few automation scripts and you can even have multiple provisioners for a single jail.

09:46.600 --> 09:53.920
That sounds crazy but if you think about it, sorry, wrong operating system.

09:53.920 --> 10:01.400
Free BSD doesn't come with a pre-installed Python and if you want to use Ansible you

10:01.400 --> 10:08.720
are gonna install Python first then the Ansible later.

10:08.720 --> 10:15.360
And for situations like that it's really, really nice to have shell provisioner doing

10:15.360 --> 10:23.080
like a first stage of the rocket launch and then Ansible does all the rest.

10:23.080 --> 10:32.560
I use shell and Ansible extensively and the rest of the provisioners, I really try to

10:32.560 --> 10:33.560
support them.

10:33.560 --> 10:42.480
I used all of them or am using them at work or somewhere else but I'm not using them as

10:42.480 --> 10:48.760
extensively as the first two so if you find a bug please report it.

10:48.760 --> 10:53.240
I will be nice and fix it if I know how to.

10:53.240 --> 11:02.040
So really it brings some things to the table that CBSD alone doesn't.

11:02.040 --> 11:09.920
I mean that's the reason it's created because it builds on top of something I personally

11:09.920 --> 11:13.480
consider a good software.

11:13.480 --> 11:16.560
And what it brings is in order to run let's say Win

11:16.560 --> 11:29.840
and Jails you will probably need a bridge and then some e-pairs and so on but bridge

11:29.840 --> 11:39.800
interface has to be created or at least allowed different administrators to have their own

11:39.800 --> 11:50.640
configuration of a bridge and not actually enforce what the CBSD comes with by default.

11:50.640 --> 12:00.040
And it's initializing network in such a way that PF is already configured, bridge is configured,

12:00.040 --> 12:11.080
IPv4 and IPv6 demons are stored and it's unbound and what not.

12:11.080 --> 12:23.160
So it initializes quite a lot and you might not like it and if you don't you have quite

12:23.160 --> 12:28.680
a few variables to disable stuff.

12:28.680 --> 12:37.840
For example you can disable IPv6 or have your projects resigned in a different directory

12:37.840 --> 12:41.400
not the default one and so on.

12:41.400 --> 12:49.960
So there's quite a financialization that it does because if you currently read how to

12:49.960 --> 13:01.320
start VNet jail in FreeBSD it's not really easy if you read it in different jail managers

13:01.320 --> 13:03.120
it might be better.

13:03.120 --> 13:09.680
I didn't check other documentation so I don't know but currently FreeBSD documentation

13:09.680 --> 13:18.240
around jail is kind of scarcin, not really depicting at all.

13:18.240 --> 13:25.880
And one of the things that it helps you with is how do you even start with it.

13:25.880 --> 13:34.200
Because I come from a Linux world in 2016 I was like how am I doing stuff, what do I

13:34.200 --> 13:41.160
do, how do I configure it and that was actually the reason I chose CBSD.

13:41.160 --> 13:55.520
At the time it made most logic, it was most intuitive tool for me to run my jails.

13:55.520 --> 14:00.440
Since then I discovered it's good for other things not just intuition right.

14:00.440 --> 14:06.000
But yeah I just love the software.

14:06.000 --> 14:14.000
The same as with the CBSD initialization because CBSD can do quite a lot.

14:14.000 --> 14:23.560
It can track resources, it can give you the usage of network per jail, it can do stuff

14:23.560 --> 14:29.360
and in order to do that it has to ask you things.

14:29.360 --> 14:39.000
For example are you using IPFW or PF and things like that are you using ZFS or UFS, what should

14:39.000 --> 14:46.120
I do, create clones or directories and so on.

14:46.120 --> 14:50.920
Regga chose a different path or I chose it for it.

14:50.920 --> 15:01.320
You can say use ZFS, yes or no and if it's no luckily we only have two file systems so

15:01.320 --> 15:07.400
either you use ZFS or the other one UFS.

15:07.400 --> 15:18.560
So the initial configuration is quite easier with Regga and CBSD and maybe if you're starting

15:18.560 --> 15:31.320
with the stack it's going to help you on your way from infancy to pro how to even start

15:31.320 --> 15:35.200
with CBSD and Regga.

15:35.200 --> 15:42.160
There is one decision to, okay let me take a step back.

15:42.160 --> 15:51.880
I try to create everything as the code but some things are just not meant to be like

15:51.880 --> 15:54.880
how do you assign addresses.

15:54.880 --> 16:04.840
CBSD has two, let's say two DHCP implementations.

16:04.840 --> 16:14.800
One is DHCP, it's called DHCP and what it does is run through all the IP addresses and

16:14.800 --> 16:22.120
finds the first free one and assign it to jail only on creation so it's not going to

16:22.120 --> 16:29.640
scan every time just when the jail is created it's going to scan them.

16:29.640 --> 16:39.360
So existing IP addresses and the configured IP addresses of jails that are not stored.

16:39.360 --> 16:49.360
So there is a second implementation of the recipe, it's called real DHCP.

16:49.360 --> 16:58.280
The idea is to have one master jail that has the CPU and DNS in it, authoritative DNS in

16:58.280 --> 17:09.000
it and there is local unbound outside of jail that says okay if you want zone that your

17:09.000 --> 17:12.960
jails are belonging to then look at here.

17:12.960 --> 17:23.400
It's from the Regga and CBSD perspective it's not so much about caching, actually it's not

17:23.400 --> 17:30.200
at all about caching although unbound is known for it and created for that purpose.

17:30.200 --> 17:43.000
It's more like how to call it a cop at the junction you go over here and it's redirecting

17:43.000 --> 17:46.320
the queries.

17:46.320 --> 17:53.480
So the idea is that probably while developing with Regga you're going to have a private

17:53.480 --> 18:05.280
IP address range and you want to still ask the DNS hey where is stuff because one thing

18:05.280 --> 18:13.840
that's actually two things are annoying to me about Docker at least when I used it.

18:13.840 --> 18:19.760
Docker containers know by name where other Docker containers are but you don't.

18:19.760 --> 18:27.920
You have to use either IP addresses or etc host hackery or something.

18:27.920 --> 18:34.600
And the second thing that really annoyed me is that I cannot have a user on this laptop

18:34.600 --> 18:45.520
with I don't know UID of 1001 and have the same user in a Docker container and do development

18:45.520 --> 18:48.400
inside of Docker container.

18:48.400 --> 18:55.200
It just matching the IDs was really terrible.

18:55.200 --> 19:07.960
I at least hope it was, it's not pertained but the idea behind that kind of frustration

19:07.960 --> 19:11.520
led to okay how about I have a DNS server.

19:11.520 --> 19:19.880
I mean it's what it's for to tell you where the IP address of this name is and so on.

19:19.880 --> 19:23.960
So yeah I couldn't create just the code.

19:23.960 --> 19:34.920
I still need one jail to do some maintenance stuff and some networking stuff.

19:34.920 --> 19:43.920
The nice thing about IPFW is that you can insert a rule whenever you want.

19:43.920 --> 19:50.800
If you're coming from Linux world that means it behaves like IP tables but PF doesn't.

19:50.800 --> 19:59.480
And PF has a pretty static set of rules unless you're using anchors.

19:59.480 --> 20:07.200
Anchors are a way to say okay this is a sub rule of the main rule and anchors can be changed

20:07.200 --> 20:14.480
and they are per jail called cbsd slash your jail name.

20:14.480 --> 20:25.760
So it's easier to see which rules are for which jails and I don't want to trash Docker

20:25.760 --> 20:38.800
too much but if you ever seen IP tables rules after the Docker mangles them it's a mess.

20:38.800 --> 20:40.100
It's a huge mess.

20:40.100 --> 20:54.560
So I try to be nicer as much as technologies and freebies they allow just don't be sorry

20:54.560 --> 21:01.920
don't be so negative towards developers and administrators they're gonna hate you.

21:01.920 --> 21:10.680
And so yeah when I say late these anchors are created after the jail is stored so it

21:10.680 --> 21:19.760
already has an IP address and can use the port redirection and whatever you need.

21:19.760 --> 21:29.160
And yeah because until the jail is stored it already registered itself.

21:29.160 --> 21:37.200
So it's a lease and DHCP registered in an NSD zone.

21:37.200 --> 21:46.920
So these anchors can use host names instead of IP addresses and if you're using DHCP you

21:46.920 --> 21:50.460
probably have no idea what's the IP address.

21:50.460 --> 22:02.440
So the nice thing is that you can use names to really sort your networking and firewalling

22:02.440 --> 22:06.880
I would say in a proper way in a more readable way.

22:06.880 --> 22:16.740
And there is a concept of in something called DevOps that I still don't know what it means.

22:16.740 --> 22:27.200
They say the DevOps is IP accounting they know what not to click on AWS otherwise it's

22:27.200 --> 22:31.780
gonna cost you.

22:31.780 --> 22:40.960
So it's like a administrator plus accounting right.

22:40.960 --> 22:48.760
But yeah in a DevOps world you want your production to resemble development or maybe the other

22:48.760 --> 22:50.560
way around.

22:50.560 --> 22:59.160
But yeah the fewer the differences between your development and your production the bigger

22:59.160 --> 23:05.000
the chances that you're gonna catch bugs in development not in production.

23:05.000 --> 23:12.160
Also users are the best monitoring system in the world.

23:12.160 --> 23:25.320
Okay so because of the vNet just the vNet implies that you're going to have to use some custom

23:25.320 --> 23:40.640
VFS rules because you want access to BPF you want access to PF so it can have its own firewall.

23:40.640 --> 23:47.240
And naturally DevFS rules are supported in reggae.

23:47.240 --> 23:55.000
Unfortunately by number not by name but hopefully that will change.

23:55.000 --> 24:06.320
Net warrior is integer or should I say unsigned integer it works like nice the bigger the

24:06.320 --> 24:10.320
number the later you're going to boot.

24:10.320 --> 24:19.760
So it's not a perfect solution but it's a solution to start your WordPress after the

24:19.760 --> 24:24.480
MySQL for example.

24:24.480 --> 24:31.320
And it even works if you remove the reggae you create everything with reggae remove it

24:31.320 --> 24:34.440
it still works the boot order works.

24:34.440 --> 24:43.560
So that I really try to make booting really really work even if I did something naughty

24:43.560 --> 24:46.880
to my code and it breaks.

24:46.880 --> 24:53.800
So I kind of have a fail safe.

24:53.800 --> 25:06.320
I didn't know where majority of you are from but for some reason in Serbia package repository

25:06.320 --> 25:08.200
is extremely slow.

25:08.200 --> 25:14.280
If I get two mbits that's like wow that's a light speed.

25:14.280 --> 25:20.560
I don't know why it works like that maybe it's our providers because I talk to different

25:20.560 --> 25:23.720
people and they don't have that problem.

25:23.720 --> 25:30.320
So I came up with solution work around.

25:30.320 --> 25:37.400
What if all my gels just use proxy and first one is going to download everything and it's

25:37.400 --> 25:39.360
going to be painfully slow.

25:39.360 --> 25:47.480
But the next one all the next ones for just going to use the cached.

25:47.480 --> 25:57.160
Just files and there is a reggae recipe for proxy.

25:57.160 --> 26:05.240
So you don't have to type in a bunch of commands you just go to the repo download it type make

26:05.240 --> 26:09.080
and you're going to have a proxy.

26:09.080 --> 26:15.600
You're going to have to change the configuration to tell it to use it but it's as simple as

26:15.600 --> 26:20.320
it gets.

26:20.320 --> 26:29.520
In my open source career I mostly work with audio and that's mostly graphical.

26:29.520 --> 26:36.560
So I needed something like don't pollute my host and let me use jail for development.

26:36.560 --> 26:41.320
But on the other hand let me click on the buttons because I need to.

26:41.320 --> 26:48.440
So reggae has a really easy way of forwarding.

26:48.440 --> 26:55.400
I think it's called forwarding in X. Open the port and all the X applications are connected

26:55.400 --> 26:57.120
to that port.

26:57.120 --> 27:06.320
So X is on the X org is on host and your X client is inside the jail so you can interact

27:06.320 --> 27:08.320
with it.

27:08.320 --> 27:16.440
And yeah it supports both but I'm going to have to work real hard on this one as the

27:16.440 --> 27:28.240
newest addition to the source code so it received the least amount of love and currently it

27:28.240 --> 27:33.240
only supports free BSD virtual machines.

27:33.240 --> 27:41.720
What's beneath it is C-BSD is using cloud in it to do your bootstrapping of a virtual

27:41.720 --> 27:51.560
machine to have the initial configuration and then your provisioner or provisioners

27:51.560 --> 27:55.040
can kick in and do whatever you like.

27:55.040 --> 27:58.320
Whatever you told them to.

27:58.320 --> 28:02.200
So what does development mean?

28:02.200 --> 28:13.720
There is a devil mode because it's exposing so many things and doing it rather insecurely

28:13.720 --> 28:19.440
for the sake of a developer being able to do stuff.

28:19.440 --> 28:24.840
I kind of think the devil mode is pretty good.

28:24.840 --> 28:31.720
It's so close to the devil, right?

28:31.720 --> 28:43.560
So it has this development mode where you, for example, share your directory where the

28:43.560 --> 28:48.000
services with the jail.

28:48.000 --> 28:56.360
I borrowed this idea from Vagrant having a slash Vagrant being a mount point of your

28:56.360 --> 29:06.120
project and you can interact with it either through the host or through the container.

29:06.120 --> 29:10.280
And yeah, it's a mountain and slash user slash source.

29:10.280 --> 29:21.760
It kind of made sense because I kind of expect people not to do free BSD kernel or user space

29:21.760 --> 29:26.080
development inside a jail.

29:26.080 --> 29:37.080
You might find that an obstacle, but you can still mount your own stuff on top of whatever

29:37.080 --> 29:39.920
reggae and C-BSD do.

29:39.920 --> 29:43.320
So you can add your mount points and stuff.

29:43.320 --> 29:49.480
So it's not limiting if you're doing free BSD development, which I expect some of you

29:49.480 --> 29:50.680
do.

29:50.680 --> 29:58.240
It's not going to be in the way.

29:58.240 --> 30:10.080
This user is in the jail and has the same user ID and group ID as the user and host

30:10.080 --> 30:17.960
that executed make inside of a reggae service.

30:17.960 --> 30:31.360
So that slash user slash source is all owner is the devil user and you can interact with

30:31.360 --> 30:32.360
it.

30:32.360 --> 30:33.360
It's read, write.

30:33.360 --> 30:41.920
So the only difference is that the user name and group name is probably going to be different.

30:41.920 --> 30:49.760
I say probably because I expect you not to name your user devil.

30:49.760 --> 30:58.560
And there are, while I was working on this, I was pretty active for quite a few years

30:58.560 --> 31:10.640
as a web developer, which is kind of strange for a free BSD guy, free BSD contributor.

31:10.640 --> 31:19.240
And what I realized is how about I have one line saying, okay, I'm going to, in these

31:19.240 --> 31:30.220
jails I'm going to use like Django or something as my framework that I'm going to use.

31:30.220 --> 31:40.880
So it does a few alterations of how it does things, so it lets you run your frameworks

31:40.880 --> 31:41.880
more easily.

31:41.880 --> 31:48.360
And I shouldn't actually use plural because the only framework that's currently supported

31:48.360 --> 31:54.560
is called print and guess who the author is.

31:54.560 --> 32:02.800
But the idea is that you have a directory in your service called bin and inside of it

32:02.800 --> 32:08.560
you have a devil.sh and Regga doesn't know what's inside of it.

32:08.560 --> 32:11.120
It's just going to run it inside the jail.

32:11.120 --> 32:19.040
And usually for the web development I like to have a T-max with split pane, back-end,

32:19.040 --> 32:27.720
front-end, and it knows how to tell front-end where the back-end API is if you need to integrate

32:27.720 --> 32:31.320
and you do.

32:31.320 --> 32:41.960
But basically you can create your own devil script and the Regga will be happy about it.

32:41.960 --> 32:46.320
So it can do much more than just one framework.

32:46.320 --> 32:57.360
But in the future I'm going to add quite a few to make people not so much involved with

32:57.360 --> 33:04.160
jails, easier to start using it.

33:04.160 --> 33:08.320
So production is totally different thing.

33:08.320 --> 33:10.080
I mean the opposite.

33:10.080 --> 33:16.200
It's going to say, okay, this jail is going to start with the boot of the machine.

33:16.200 --> 33:24.720
It's also going to try its best to remove everything this created like the user source

33:24.720 --> 33:36.880
mount, some of the scripts that are installed for devil to work easily and so on.

33:36.880 --> 33:47.840
So what's the idea here is that if you want to create like a build server or maybe on

33:47.840 --> 33:54.200
your machine you're using devil mode and you created it like that and then afterwards you

33:54.200 --> 34:02.600
say devil mode equals no, make down, make up, and make up is going to clean everything

34:02.600 --> 34:11.440
that devil created and then you can make export and create an image, move it to some other

34:11.440 --> 34:21.840
server import it there and it just means so that you can have like either your development

34:21.840 --> 34:26.640
container productionized, not a good idea.

34:26.640 --> 34:30.200
Don't do it if you can avoid it.

34:30.200 --> 34:35.840
But sometimes you can't and it works on my machine so ship it.

34:35.840 --> 34:45.840
But the more serious use case for it is to have your build server build the image of

34:45.840 --> 34:52.720
a jail and then you deploy it somewhere.

34:52.720 --> 35:05.360
So this is an example of, so up to here, first three commands are creating the project and

35:05.360 --> 35:12.880
the project name is going to be as the directory you created.

35:12.880 --> 35:23.080
So the project containing multiple services, well in this instance just want to make it

35:23.080 --> 35:24.080
compact.

35:24.080 --> 35:32.120
So up to here it's creating the project and then project expects services directory to

35:32.120 --> 35:37.400
contain your jail or beehive definitions.

35:37.400 --> 35:43.040
And the definitions are created with this, you can omit this part and it's not going

35:43.040 --> 35:51.360
to create any provisioner for you or you can say here Ansible shall puppet and that's the

35:51.360 --> 35:55.880
order of provisioners that are going to be run.

35:55.880 --> 36:03.720
It has a few more expectations where things are going to be for a certain provisioner

36:03.720 --> 36:09.400
but it's going to create a skeleton for you so you don't have to create them by yourself

36:09.400 --> 36:15.160
and it's a, well read the code.

36:15.160 --> 36:21.400
If you have the skeleton it's going to be more intuitive what you should do next with

36:21.400 --> 36:25.160
your own code with your own development.

36:25.160 --> 36:30.400
And it's pretty slick.

36:30.400 --> 36:38.880
It can be done differently I just think to me this was most intuitive and I'm trying

36:38.880 --> 36:43.720
not to go against intuition.

36:43.720 --> 36:55.180
So there is, let's say all of us need something I don't know like MySQL.

36:55.180 --> 37:05.480
We all here in this room are hosting WordPress and we all need MySQL WordPress and Nginx.

37:05.480 --> 37:08.440
But you don't have to create it on your own.

37:08.440 --> 37:13.880
There are pre-made recipes for that.

37:13.880 --> 37:20.600
They are not images, they are still in this instance they are all Ansible.

37:20.600 --> 37:31.840
And you can combine jails and beehives provision with different provisioners and in this case

37:31.840 --> 37:41.240
it's going to download these three jails, configure them and interconnect them because

37:41.240 --> 37:49.600
Nginx has to know where WordPress is and WordPress needs to know where the database is.

37:49.600 --> 37:52.120
But it's not going to create a database for you.

37:52.120 --> 37:57.240
It's still like okay I don't know what you want.

37:57.240 --> 38:05.240
Is it a single instance or you're hosting multiple WordPress instances and you need

38:05.240 --> 38:08.400
multiple databases and so on.

38:08.400 --> 38:11.440
So that's left up to you.

38:11.440 --> 38:24.240
But if you go to the MySQL everything is, if you want to look at code of this just add

38:24.240 --> 38:30.680
jail-myscale and you're going to have the repository.

38:30.680 --> 38:35.720
And there's a readme which tells you okay this is how you create a database in this

38:35.720 --> 38:47.080
jail so you can do it differently of course but if you're coming from different environment

38:47.080 --> 38:52.960
I try to hold your hand as much as I can but you can ignore it.

38:52.960 --> 38:59.280
The same is for the WordPress and Nginx has a directory with quite a few examples how

38:59.280 --> 39:09.920
you create your own hosts inside the Nginx configuration but it's not going to configure

39:09.920 --> 39:11.280
it for you.

39:11.280 --> 39:19.440
It's a recommendation and not much, okay you have to do it this way.

39:19.440 --> 39:29.320
And this URL is probably the most complex project I did with Rege.

39:29.320 --> 39:39.880
Most complex in a sense that it has the biggest number of jails and services inside of it

39:39.880 --> 39:42.840
that need to talk to each other.

39:42.840 --> 39:54.000
And well if you try to manage Jabber and Mail and do it responsibly you know that you need

39:54.000 --> 39:58.320
all the help you can get.

39:58.320 --> 40:08.760
So I try to create this service that creates the Mail and Jabber communication server it

40:08.760 --> 40:17.040
gives you the documentation on how you should configure your DNS, what's inside of it, the

40:17.040 --> 40:24.600
links towards specific services and their own configurations and examples and so on.

40:24.600 --> 40:30.200
So it's my way of avoiding writing documentation.

40:30.200 --> 40:33.800
I mean we all do that.

40:33.800 --> 40:37.960
We have better things to do or better things to do.

40:37.960 --> 40:45.320
So if you have an example it's a documentation on its own.

40:45.320 --> 40:49.720
And yeah the future.

40:49.720 --> 40:53.080
What can be better than documentation, right?

40:53.080 --> 41:03.080
But what I want to say is that Oleg who is CBSD lead developer is Russian and I'm going

41:03.080 --> 41:12.160
to quote him, my English is terrible so our documentation currently is not good.

41:12.160 --> 41:19.840
I'm not going to say terrible but it's not good as it can be and that's literally our

41:19.840 --> 41:21.440
next assignment.

41:21.440 --> 41:28.880
We already talked a few months before about it and documentation is really killing us

41:28.880 --> 41:38.440
or the lack of good documentation and way of searching it and browsing it and finding

41:38.440 --> 41:40.680
what you need.

41:40.680 --> 41:52.640
There is quite a few documents that describe how specific scenarios should be executed

41:52.640 --> 41:54.800
or specific commands.

41:54.800 --> 41:57.360
What options do they have?

41:57.360 --> 42:07.120
It just still needs to be worded better and more coherent and connected better so that

42:07.120 --> 42:15.280
you can say okay if I read this, this and this I know where I'm going to be and then

42:15.280 --> 42:20.360
I know how to manage WordPress for example.

42:20.360 --> 42:28.120
So documentation is a really big thing that maybe it's going to be the only thing that

42:28.120 --> 42:32.280
we are going to work on besides the bugs.

42:32.280 --> 42:43.760
So yeah sorry about not being very good with documents but we promise we will improve.

42:43.760 --> 42:51.760
Now these two I hope they are not mutually exclusive.

42:51.760 --> 42:55.560
Jail Conf is a much much simpler way.

42:55.560 --> 42:58.040
It's in the base.

42:58.040 --> 43:05.360
It really works wonderful and it can even manage your Beehive because today I don't

43:05.360 --> 43:12.760
know with which version it's for but you can have a Beehive inside your jail and if you

43:12.760 --> 43:19.720
have that you can only manage jail and that's kind of wonderful.

43:19.720 --> 43:31.040
What we really need or at least I would like to have is Jail Conf D working really great.

43:31.040 --> 43:33.600
Currently it doesn't.

43:33.600 --> 43:44.080
One of the obstacles, well two of the obstacles, in Jail Conf you can define dependencies between

43:44.080 --> 43:49.800
jails and that's how it's going to boot, it's going to create a tree and then go from the

43:49.800 --> 43:53.400
leaves to the root.

43:53.400 --> 44:03.680
But you can do that with Jail Conf D and there is a patch coming from a developer I know

44:03.680 --> 44:13.480
from Yerevan called Antranik and he promised he's going to upstream that patch this weekend

44:13.480 --> 44:17.800
so we are watching you.

44:17.800 --> 44:22.520
But yeah it's almost there.

44:22.520 --> 44:31.320
The second obstacle with Jail Conf D is that you cannot have common configuration like

44:31.320 --> 44:37.840
you can in a Jail Conf because Jail Conf is one file with multiple jails.

44:37.840 --> 44:46.520
Jail Conf D is multiple jails, sorry, multiple files, one jail profile.

44:46.520 --> 44:57.560
You can probably have multiple jails per file but that kind of kills the idea.

44:57.560 --> 45:10.600
The idea is to have better service jails start or stop or whatever and then probably most

45:10.600 --> 45:17.960
of us jail managers, developers are going to unite in it and say okay this is how we

45:17.960 --> 45:18.960
use it.

45:18.960 --> 45:23.880
Now you can criticize us and why didn't you do that in the first place?

45:23.880 --> 45:33.480
But I guess we needed to experiment and learn and see what works and what not so that we

45:33.480 --> 45:43.040
know once we upstream it to Jail Conf it's going to be what we expect it to be.

45:43.040 --> 45:53.840
And Kubernetes, all jokes aside, I don't know if you're following but there is more and

45:53.840 --> 46:01.400
more Kubernetes support in Potsfry and there is, I hope I'm going to pronounce the name

46:01.400 --> 46:13.400
properly, Doug Robson is working on Kubernetes support, Podman is already there and Doug

46:13.400 --> 46:27.480
has a pretty initial version of Kubernetes working on FreeBSD with VNet and jails.

46:27.480 --> 46:38.080
Why I'm hoping for this to happen is so that we can have easier transition from Linux to

46:38.080 --> 46:50.240
FreeBSD and honestly there's a friend of mine who promised me that we are going to try mixed

46:50.240 --> 46:59.160
Kubernetes data centers is Linux Freak, I'm a FreeBSD Freak so let's try to create one

46:59.160 --> 47:05.200
domain that is going to be mixed operating systems in Kubernetes.

47:05.200 --> 47:07.280
Who knows where it leads us?

47:07.280 --> 47:17.200
Maybe we just lose our hair but if we do succeed it's a really easy way to switch to migrate

47:17.200 --> 47:24.120
from one operating system to the other because realistically maybe you want to switch from

47:24.120 --> 47:27.880
FreeBSD to Linux, please don't.

47:27.880 --> 47:36.760
But yeah, who knows what's your use case and maybe your workplace is such that it simply

47:36.760 --> 47:39.440
has to be like that.

47:39.440 --> 47:48.920
So yeah, I'm hoping this will not live because it leaves more space for this and so I'm kind

47:48.920 --> 47:57.720
of like a split brain person, I really don't know what I want with Kubernetes.

47:57.720 --> 48:07.960
It's probably here to stay so we need to support it in order to be kinder towards other developers

48:07.960 --> 48:13.280
and system administrators, maybe DevOps.

48:13.280 --> 48:21.040
So I would like to thank a few communities and persons.

48:21.040 --> 48:29.160
Telesenter for supporting my crazy ideas and testing everything I do.

48:29.160 --> 48:37.600
At least few of the people are testing my crazy ideas and reporting back and sometimes

48:37.600 --> 48:40.600
in doing slight development.

48:40.600 --> 48:48.920
I'm really grateful to be physically in an environment that is supporting me in such

48:48.920 --> 48:57.440
a way because usually I don't know about you but I suspect we're the crazy ones.

48:57.440 --> 49:05.560
Why don't you use drugs like all normal kids or the Docker or whatever, right?

49:05.560 --> 49:10.560
So yeah, it's really nice to be supported.

49:10.560 --> 49:16.840
The FreeBSD community, I don't know how to say this enough.

49:16.840 --> 49:25.320
They've been supportive and helpful and I didn't encounter a question that somebody

49:25.320 --> 49:30.400
didn't answer if I was persistent enough.

49:30.400 --> 49:43.560
In the FreeBSD community, all again in particular, he created cbsd by himself and it's an enormous

49:43.560 --> 49:44.560
task.

49:44.560 --> 49:51.480
It even has end curses commands to make it easier for you.

49:51.480 --> 50:03.920
So it's enormous task that started 10 years ago, 2013, and so it's our big anniversary

50:03.920 --> 50:04.920
this year.

50:04.920 --> 50:13.360
I think it's somewhere during the summer but I will have to check that.

50:13.360 --> 50:22.280
Usually we announced that on a cbsd site and I'm afraid I didn't remember it.

50:22.280 --> 50:30.880
It was a few days before the FOSDEM and I was doing a bunch of things to basically prepare.

50:30.880 --> 50:38.440
So these are, if you want to ask something, contribute whatever is on your mind around

50:38.440 --> 50:43.360
regi cbsd or whatever music maybe.

50:43.360 --> 50:50.040
These are my contacts and now is the right time to ask questions.

50:50.040 --> 50:54.600
Thank you.

50:54.600 --> 51:01.720
Oh, he's going to die.

51:01.720 --> 51:04.080
He's going to die.

51:04.080 --> 51:08.920
I have a question.

51:08.920 --> 51:20.520
You spoke about order and it's just that you put, for example, mysec for WordPress or there

51:20.520 --> 51:28.520
is also a mechanism that allows you like a readiness probe to check if the database is

51:28.520 --> 51:31.520
ready to serve.

51:31.520 --> 51:40.880
Okay, so the question was, if I understood correctly, if boot order can also check if

51:40.880 --> 51:44.880
the database is stored before it stores the WordPress?

51:44.880 --> 51:56.760
No, it cannot do that but it will at some point because the jail conf can have dependencies

51:56.760 --> 52:06.440
and at some point I'm really hoping to switch to dependencies instead of boot order because

52:06.440 --> 52:08.760
who likes boot order?

52:08.760 --> 52:13.560
If you have like 200 jails, who knows what stores when?

52:13.560 --> 52:20.840
But with dependencies it's much easier.

52:20.840 --> 52:21.840
Any more questions?

52:21.840 --> 52:42.920
Yes, mostly for cbsd but you can find one for the regi that depicts mostly how to initialize

52:42.920 --> 52:50.320
it and start the really dumb project that almost has nothing in it.

52:50.320 --> 53:04.080
Sorry, the question was, I didn't catch that second one.

53:04.080 --> 53:13.000
Yes, so the question was, are there any demos and they're on YouTube.

53:13.000 --> 53:23.480
Some of them are on Russian and some of them are on, it's called Askinema.

53:23.480 --> 53:32.200
So even from the demo you can copy paste the text and do it yourself or commands or whatever.

53:32.200 --> 53:37.320
Okay, anyone else?

53:37.320 --> 53:47.160
Okay, then I'm going to have to say goodbye with the famous words, no ducker, no cry.

53:47.160 --> 53:48.160
Thank you.

53:48.160 --> 54:08.000
Thank you.
