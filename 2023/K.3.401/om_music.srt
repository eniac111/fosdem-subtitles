1
0:00:00.000 --> 0:00:11.280
Okay, then we continue with music with the next talk which is Become a Rockstar using

2
0:00:11.280 --> 0:00:12.280
3n.2 software.

3
0:00:12.280 --> 0:00:13.280
Please welcome Lorenzo.

4
0:00:13.280 --> 0:00:14.280
Thank you.

5
0:00:14.280 --> 0:00:15.280
Thank you very much.

6
0:00:15.280 --> 0:00:23.120
And it's going to be a hard job following up a guy that brought a synthesizer and an

7
0:00:23.120 --> 0:00:24.120
amplifier.

8
0:00:24.120 --> 0:00:27.720
I didn't bring anything to the table, so you'll just have to endure me talking about it.

9
0:00:27.720 --> 0:00:29.240
I hope it's fine anyway.

10
0:00:29.240 --> 0:00:33.040
And first of all, this is my first talk in open media and I already feel like a fraud

11
0:00:33.040 --> 0:00:36.560
because clickbait alert, I'm not a rockstar at all.

12
0:00:36.560 --> 0:00:39.280
I mean, this is an image that I got from Spotify last month.

13
0:00:39.280 --> 0:00:41.080
I got two listeners last month.

14
0:00:41.080 --> 0:00:42.280
One of those was me.

15
0:00:42.280 --> 0:00:45.960
So I think on average, you need a bit more than that.

16
0:00:45.960 --> 0:00:48.280
We actually call the rockstar, but it doesn't really matter.

17
0:00:48.280 --> 0:00:52.880
I had a lot of fun in the past few years just playing with music and open source.

18
0:00:52.880 --> 0:00:58.320
I mean, and I had to use this for something rather than just show them around the home.

19
0:00:58.320 --> 0:01:01.120
And for a living, of course, I don't do any music at all.

20
0:01:01.120 --> 0:01:04.720
I'm just a hobbyist musician and that's what I've been talking about today.

21
0:01:04.720 --> 0:01:06.680
In the real world, I am a WebRTC developer.

22
0:01:06.680 --> 0:01:10.560
I'm, for instance, involved in some of the things that Dan mentioned in his previous

23
0:01:10.560 --> 0:01:11.640
talk.

24
0:01:11.640 --> 0:01:17.480
I love a lot hard rock, metal, orchestral music, symphonic music when they work together

25
0:01:17.480 --> 0:01:18.480
as well.

26
0:01:18.480 --> 0:01:21.920
And this is something that I've been trying to do in my own music as well.

27
0:01:21.920 --> 0:01:24.280
And here you can find some links if you want to get in touch.

28
0:01:24.280 --> 0:01:28.280
For instance, you can get in touch on Mastodon, a couple of links to my music as well.

29
0:01:28.280 --> 0:01:29.880
And so on and so forth.

30
0:01:29.880 --> 0:01:33.920
And this is just a very basic and completely out of order table of content.

31
0:01:33.920 --> 0:01:37.960
So I talk about a few different things and I will not follow this order because I will

32
0:01:37.960 --> 0:01:43.120
mostly follow the order by which I learned how to do things with music and Linux in the

33
0:01:43.120 --> 0:01:44.120
first place.

34
0:01:44.120 --> 0:01:50.280
So how I tried to dip my toes into a few different things and how I eventually learned how to

35
0:01:50.280 --> 0:01:53.160
do some more complex things in the process.

36
0:01:53.160 --> 0:01:58.040
And of course, it will be a very, if you pass the term, a very dumb presentation because

37
0:01:58.040 --> 0:01:59.640
I will only scratch the surface.

38
0:01:59.640 --> 0:02:03.520
I'll try to introduce several different concepts.

39
0:02:03.520 --> 0:02:07.920
And really just to tickle your interest enough so that maybe you have your own guitar getting

40
0:02:07.920 --> 0:02:09.120
dusted home.

41
0:02:09.120 --> 0:02:13.160
You don't know how to get it started with, for instance, using your laptop to do some

42
0:02:13.160 --> 0:02:17.400
music and maybe this presentation will tickle your interest and you start doing something.

43
0:02:17.400 --> 0:02:21.040
And besides, there is a very good chance that I'll say something dumb as well.

44
0:02:21.040 --> 0:02:22.280
Or maybe something incorrect.

45
0:02:22.280 --> 0:02:24.200
So if I do, please bear with me.

46
0:02:24.200 --> 0:02:28.320
It's really a high level presentation and something that's really meant as an introduction,

47
0:02:28.320 --> 0:02:32.200
not really something that goes very much in detail.

48
0:02:32.200 --> 0:02:37.460
And when I first started learning about all this, I was really surprised by how mature,

49
0:02:37.460 --> 0:02:42.200
for instance, Linux and the audio ecosystems was to actually do music production on those

50
0:02:42.200 --> 0:02:47.880
machines because you always assumed the world around was Linux is not good enough to do

51
0:02:47.880 --> 0:02:48.880
real time music.

52
0:02:48.880 --> 0:02:51.480
You have to use Windows or MacOS or whatever.

53
0:02:51.480 --> 0:02:54.840
And I disagree with that because especially when I started with Jack at the time, I found

54
0:02:54.840 --> 0:02:57.600
a very interesting ecosystem to do things.

55
0:02:57.600 --> 0:03:02.820
And especially I really loved the port based approach that allowed you not to use monolithic

56
0:03:02.820 --> 0:03:07.200
applications to do things, but you have different applications that you can just connect arbitrarily

57
0:03:07.200 --> 0:03:08.800
any way you want.

58
0:03:08.800 --> 0:03:13.720
Possibly use the same source for multiple to connect to multiple applications, implement

59
0:03:13.720 --> 0:03:18.840
very complex workflows and all in real time and very low latency, which was really amazing.

60
0:03:18.840 --> 0:03:24.080
And the fact that you can have all these different applications to talking to each other means

61
0:03:24.080 --> 0:03:28.680
that you also often have a lot of different applications implementing more or less the

62
0:03:28.680 --> 0:03:29.680
same requirements.

63
0:03:29.680 --> 0:03:34.600
So you will have different synthesizers or different ways of implementing effects for

64
0:03:34.600 --> 0:03:36.280
your guitars and so on.

65
0:03:36.280 --> 0:03:40.960
And often they don't really need to be a substitution for one or the other.

66
0:03:40.960 --> 0:03:45.240
Maybe for one genre, it's better to use some applications, for some others, it's better

67
0:03:45.240 --> 0:03:46.240
using others.

68
0:03:46.240 --> 0:03:50.960
It's really up to your preference and how you like to work with music.

69
0:03:50.960 --> 0:03:55.840
And some tools may make sense more than others in that sense.

70
0:03:55.840 --> 0:04:00.800
And it's probably useless to make this distinction right now because we just had a very interesting

71
0:04:00.800 --> 0:04:05.040
presentation by Ernst who explained a bit what MIDI signals are.

72
0:04:05.040 --> 0:04:11.160
So when we talk about music production, especially on Linux and Jack, you do have to know basically

73
0:04:11.160 --> 0:04:15.420
that you have audio signals, so a sound that is that has already been processed, record

74
0:04:15.420 --> 0:04:20.600
or something, a waveform of some sort, and MIDI signals that just carry information that

75
0:04:20.600 --> 0:04:22.800
is then used to produce sounds.

76
0:04:22.800 --> 0:04:26.760
And so of course these two can go through very different workflows.

77
0:04:26.760 --> 0:04:32.480
Different applications can handle just one or both or maybe none at all.

78
0:04:32.480 --> 0:04:36.360
What's really important though is, again, how you can actually have different applications

79
0:04:36.360 --> 0:04:38.280
that you connect arbitrarily on your own way.

80
0:04:38.280 --> 0:04:42.720
And that was at the very basis of how Jack was conceived at the very beginning.

81
0:04:42.720 --> 0:04:47.880
And Jack, a few years ago, was really the way to do very low latency audio on Linux

82
0:04:47.880 --> 0:04:48.880
systems.

83
0:04:48.880 --> 0:04:53.160
The downside of that, it was that it was a bit complex to set up and manage.

84
0:04:53.160 --> 0:04:57.680
And luckily, and we've seen a presentation by wind this morning, PyPaw has made this

85
0:04:57.680 --> 0:04:58.680
so much simpler.

86
0:04:58.680 --> 0:05:00.720
So I was a bit skeptical at the beginning.

87
0:05:00.720 --> 0:05:05.480
I just jumped the wagon a couple of weeks ago.

88
0:05:05.480 --> 0:05:11.240
And basically, PyPaw comes with an implementation of Jack that basically hides all the complex.

89
0:05:11.240 --> 0:05:15.320
I mean, the applications stick, they're still using Jack, but in practice you are using

90
0:05:15.320 --> 0:05:20.760
PyPaw instead, which means that you can start using also applications that were not specifically

91
0:05:20.760 --> 0:05:26.240
conceived for Jack purposes and work on them together while you work on music production

92
0:05:26.240 --> 0:05:27.600
of some sort.

93
0:05:27.600 --> 0:05:31.520
And all of these small boxes that you see over there are basically different processes.

94
0:05:31.520 --> 0:05:36.480
And you see that some of them have inputs, some of them have outputs, either one or both,

95
0:05:36.480 --> 0:05:37.800
these sort of things.

96
0:05:37.800 --> 0:05:41.880
And this is what allows you to basically just arbitrarily connect different applications

97
0:05:41.880 --> 0:05:47.440
to each other to, again, create more complex workflows that you can get out of what a single

98
0:05:47.440 --> 0:05:48.640
application can do.

99
0:05:48.640 --> 0:05:51.280
And I'll show a couple of practical examples in a minute.

100
0:05:51.280 --> 0:05:56.240
So let's assume that you have that home guitar getting dusted home and now you want to get

101
0:05:56.240 --> 0:05:57.240
some noise.

102
0:05:57.240 --> 0:05:59.640
You want to connect it to your laptop and do something.

103
0:05:59.640 --> 0:06:04.720
So what you don't do is, of course, just plug it in the microphone slot because that will

104
0:06:04.720 --> 0:06:06.080
cause problems.

105
0:06:06.080 --> 0:06:08.760
What you need is some sort of an audio interface instead.

106
0:06:08.760 --> 0:06:14.360
So something like an external sound card that has some inputs that do accept your instrument

107
0:06:14.360 --> 0:06:15.680
instead.

108
0:06:15.680 --> 0:06:21.440
And often these interfaces come with USB interfaces and so are very easy to plug.

109
0:06:21.440 --> 0:06:25.080
Your operating system will very likely recognize them out of the box.

110
0:06:25.080 --> 0:06:30.080
And they will be available as a system capture and so as one of these boxes that we saw over

111
0:06:30.080 --> 0:06:31.080
there.

112
0:06:31.080 --> 0:06:34.240
So something that you can connect to something else.

113
0:06:34.240 --> 0:06:37.560
And the one that I have at home, and spoiler alert, it didn't come with the cat.

114
0:06:37.560 --> 0:06:40.960
The cat came with something else.

115
0:06:40.960 --> 0:06:47.120
I personally bought this Focusrite Scarlett Solo because it's quite inexpensive.

116
0:06:47.120 --> 0:06:52.800
It's very common among hobbyists because it already provides decent enough quality for

117
0:06:52.800 --> 0:06:53.920
recording at home.

118
0:06:53.920 --> 0:06:56.920
It's very flexible and I really like it a lot.

119
0:06:56.920 --> 0:07:00.880
And basically, the one that I bought basically comes with two separate inputs.

120
0:07:00.880 --> 0:07:05.320
So it has a USB interface so it recognizes an external USB sound card by the operating

121
0:07:05.320 --> 0:07:06.720
system.

122
0:07:06.720 --> 0:07:11.240
And mine in particular, I think later versions changed this a bit, but it comes with one

123
0:07:11.240 --> 0:07:16.240
input that is XLR, the typical cable that you use for microphones, for instance.

124
0:07:16.240 --> 0:07:20.760
And another one is the cable that the typical guitar jack slot.

125
0:07:20.760 --> 0:07:25.200
And since it's two different inputs, when you connect it to the operating system, the

126
0:07:25.200 --> 0:07:29.280
box that you see, which may have this name or entirely different name depending on what

127
0:07:29.280 --> 0:07:33.920
you're using, shows two different channels, which means that depending on where you are

128
0:07:33.920 --> 0:07:38.720
actually plugging what you want to plug, it will come out of one of those two different

129
0:07:38.720 --> 0:07:42.880
channels for what you want to do, which opens the door to a lot of different things that

130
0:07:42.880 --> 0:07:43.880
you can do.

131
0:07:43.880 --> 0:07:49.000
Because for instance, I could plug my guitar directly into this external sound card.

132
0:07:49.000 --> 0:07:54.480
In this case, I'm plugging it into the jack slot, that's chapter number two, which means

133
0:07:54.480 --> 0:07:57.120
that I can then use this chapter number two to do something.

134
0:07:57.120 --> 0:08:02.320
The dumbest thing that I can do is just connect it to the playback system so that I hear what

135
0:08:02.320 --> 0:08:05.840
I'm playing just unencoded.

136
0:08:05.840 --> 0:08:08.160
So I don't hear any effects.

137
0:08:08.160 --> 0:08:11.840
It's just the raw sound of the guitar, but it's something that I can do.

138
0:08:11.840 --> 0:08:15.640
Of course, I can do something more interesting and we'll show an example later.

139
0:08:15.640 --> 0:08:19.680
Or maybe you have a very good amplifier at home and a very good microphone.

140
0:08:19.680 --> 0:08:23.680
You put the microphone in front of the amplifier.

141
0:08:23.680 --> 0:08:30.760
You connect it to the first slot and what you get on your laptop is an already distorted,

142
0:08:30.760 --> 0:08:34.360
for instance, sound of your guitar out of your amplifier.

143
0:08:34.360 --> 0:08:38.040
Or maybe you can use them both at the same time, which is what I do often for classical

144
0:08:38.040 --> 0:08:44.920
and acoustic guitars, for instance, where I attach both the pickup of the guitar, whether

145
0:08:44.920 --> 0:08:50.240
it's integrated or added, and I put the microphone in front of the guitar just so that I capture

146
0:08:50.240 --> 0:08:52.160
different frequencies, different sounds.

147
0:08:52.160 --> 0:08:56.080
And together they give me a more full sound than they would give me individually.

148
0:08:56.080 --> 0:09:00.960
I mean, again, it's just very simple examples that show you that before you couldn't do

149
0:09:00.960 --> 0:09:05.880
anything with an external sound card like this, now you have ways to put your instrument

150
0:09:05.880 --> 0:09:11.440
and get it part of a workflow in your own laptop and do something cool.

151
0:09:11.440 --> 0:09:14.240
One cool thing that you could do, for instance, is just launch Gita Rix.

152
0:09:14.240 --> 0:09:20.600
Gita Rix is a very complex and effective guitar simulator, basically.

153
0:09:20.600 --> 0:09:25.200
So it has different beats that you can, it's very configurable, so you can create your

154
0:09:25.200 --> 0:09:31.000
own configuration, you can choose the different beats, how you want your amplifier to look

155
0:09:31.000 --> 0:09:32.000
like.

156
0:09:32.000 --> 0:09:34.720
I'm really stupid in that sense, so I never really tried to do it myself.

157
0:09:34.720 --> 0:09:39.600
I work a lot with presets shared by the community, but if you are savvy enough, you can just

158
0:09:39.600 --> 0:09:44.640
do things on your own to create, to really shape your own sound so that the guitar sounds

159
0:09:44.640 --> 0:09:47.960
exactly how you want it to sound like.

160
0:09:47.960 --> 0:09:52.520
And when you launch Gita Rix, it basically spawns two different boxes as far as jack

161
0:09:52.520 --> 0:09:57.560
or slash pipe, where I'm, again, when I'm seeing jack, you can assume I'm also just

162
0:09:57.560 --> 0:10:01.840
implying pipe or usage as a consequence.

163
0:10:01.840 --> 0:10:05.840
Basically it comes with two different boxes, one as an amplifier and one for effects.

164
0:10:05.840 --> 0:10:11.600
And then it means that since we had the jack in my Scarlett Focusrite was capture number

165
0:10:11.600 --> 0:10:16.080
two, I connect that to the amplifier, I connect the amplifier to the effects, I connect the

166
0:10:16.080 --> 0:10:20.280
effects to whatever I want, playback, something that records it.

167
0:10:20.280 --> 0:10:21.520
It's really that simple.

168
0:10:21.520 --> 0:10:28.360
So you have already created a workflow out of that beat that you managed to capture thanks

169
0:10:28.360 --> 0:10:30.800
to the external audio interface.

170
0:10:30.800 --> 0:10:35.040
Another application that I love a lot as a guitar player is Raka Raka, I'm not sure if

171
0:10:35.040 --> 0:10:40.440
I'm pronouncing it correctly or not, which is not a guitar amplifier simulator as Gita

172
0:10:40.440 --> 0:10:41.520
Rix sees.

173
0:10:41.520 --> 0:10:45.360
It's basically a pedal board simulator instead.

174
0:10:45.360 --> 0:10:48.960
So it has a lot of different effects that you can use and combine.

175
0:10:48.960 --> 0:10:52.640
You can, it also comes with a lot of different presets.

176
0:10:52.640 --> 0:10:56.720
I particularly love the clean sounds that you can get out of Raka Raka.

177
0:10:56.720 --> 0:11:01.320
And again, similar approach, you connect your, whatever capture where you add your guitar

178
0:11:01.320 --> 0:11:04.120
on to Raka Raka and then the output of that.

179
0:11:04.120 --> 0:11:09.600
So the processed sound of the guitar will, it's something that you can end up using.

180
0:11:09.600 --> 0:11:15.240
You can do something more complex or in some cases also dumbed by just possibly using both

181
0:11:15.240 --> 0:11:17.320
Gita Rix and Raka Raka at the same time.

182
0:11:17.320 --> 0:11:19.120
So putting them one after the other.

183
0:11:19.120 --> 0:11:23.480
This is a very simple example and probably doesn't make sense to have the effects box

184
0:11:23.480 --> 0:11:24.520
in between there.

185
0:11:24.520 --> 0:11:30.160
But this is a similar approach is what I use, for instance, myself in one of the songs because

186
0:11:30.160 --> 0:11:34.480
I had an effect that I liked in Gita Rix, but I also need the sustainer effect in Raka

187
0:11:34.480 --> 0:11:35.480
Raka as well.

188
0:11:35.480 --> 0:11:38.640
So I basically just chained them in my workflow.

189
0:11:38.640 --> 0:11:43.200
I plugged my guitar in the sound card that Gita Rix distorted and then Raka Raka do some

190
0:11:43.200 --> 0:11:47.560
more things with the sound before I actually used it for something.

191
0:11:47.560 --> 0:11:51.840
And again, this is just very simple examples that are meant to show you how easy it is

192
0:11:51.840 --> 0:11:57.280
to create a workflow using different applications out of sounds that you have access to, to

193
0:11:57.280 --> 0:12:00.240
do some interesting and really cool things.

194
0:12:00.240 --> 0:12:05.720
And so let's assume that basically now we managed to get a decent sound.

195
0:12:05.720 --> 0:12:10.560
Now we just want to record something because we want to either write the song or whatever.

196
0:12:10.560 --> 0:12:14.440
And of course, if you want to do something very simple, so just record the sounds and

197
0:12:14.440 --> 0:12:20.560
then use them somewhere else, you can use any tool that is actually able of consuming

198
0:12:20.560 --> 0:12:21.560
these sources.

199
0:12:21.560 --> 0:12:25.560
And so Audacity or Gstreamer come to mind, but there's so many more.

200
0:12:25.560 --> 0:12:31.280
If you want to do something more complex, maybe work to write a song no matter how complex

201
0:12:31.280 --> 0:12:35.680
it is, you'll want to work within some sort of a project instead.

202
0:12:35.680 --> 0:12:40.200
So maybe in an application that is capable of handling multiple tracks at the same time

203
0:12:40.200 --> 0:12:45.120
and that maybe can add different filters to all these tracks that you're having.

204
0:12:45.120 --> 0:12:50.520
So because you need a compressor on one or maybe reverb on some tracks or you need equalization

205
0:12:50.520 --> 0:12:52.400
or something like this.

206
0:12:52.400 --> 0:12:56.320
And this is the kind of application that you use a digital audio workstation for.

207
0:12:56.320 --> 0:12:59.200
And DAB is a short term for that.

208
0:12:59.200 --> 0:13:03.560
And mostly because these kinds of applications are specifically conceived to do exactly that.

209
0:13:03.560 --> 0:13:10.080
So possibly record things in real time or use existing assets, edit and produce, although

210
0:13:10.080 --> 0:13:15.440
these are different audio files in different ways, they often support media as well.

211
0:13:15.440 --> 0:13:20.040
And especially most of them have a modular nature that allows you to use existing models

212
0:13:20.040 --> 0:13:27.160
that are part of the open source ecosystem to add different effects to any of those tracks,

213
0:13:27.160 --> 0:13:31.280
either as a whole, for instance, a filter that applies to multiple tracks at the same

214
0:13:31.280 --> 0:13:35.680
time or just one of them and so on and so forth, because you may want equalization,

215
0:13:35.680 --> 0:13:36.680
compression.

216
0:13:36.680 --> 0:13:42.680
I mean, whatever is part of the usual audio editing process in a regular music studio,

217
0:13:42.680 --> 0:13:46.640
if you want, is something that a digital audio workstation can provide for you.

218
0:13:46.640 --> 0:13:50.560
So if you're ever heard, for instance, of Pro Tools and stuff like this, this is exactly

219
0:13:50.560 --> 0:13:54.720
what a digital audio workstation can do for you.

220
0:13:54.720 --> 0:14:00.240
And the one that I personally use is called Dardour, which is a very powerful component.

221
0:14:00.240 --> 0:14:03.320
I personally use this because it was the first one I stumbled upon.

222
0:14:03.320 --> 0:14:07.240
I fell in love with it at the time and I just kept on learning.

223
0:14:07.240 --> 0:14:10.440
But again, there are more than that you can use out there.

224
0:14:10.440 --> 0:14:15.280
There's Kootractor, there's Reaper, which is not open source, but it's also very used

225
0:14:15.280 --> 0:14:19.560
in the open source applications as well.

226
0:14:19.560 --> 0:14:24.160
And one thing that you'll notice when you start using an application like this is that

227
0:14:24.160 --> 0:14:29.520
the boxes in that graph that I showed, for instance, on Jack or Pipe, are going to explode

228
0:14:29.520 --> 0:14:33.720
because a digital audio workstation is going to handle a lot of tracks and those tracks

229
0:14:33.720 --> 0:14:36.240
are going to be connected to a lot of things.

230
0:14:36.240 --> 0:14:39.560
And so you'll see a huge amount of connections out there.

231
0:14:39.560 --> 0:14:44.120
And luckily for you, you don't really have to create those connections on your own because

232
0:14:44.120 --> 0:14:46.080
otherwise you will go crazy.

233
0:14:46.080 --> 0:14:51.800
Often it's the digital audio workstation that does this for you and there are easier ways

234
0:14:51.800 --> 0:14:57.200
to change those connections if you need to from the user interfaces or all those applications.

235
0:14:57.200 --> 0:15:02.000
And most importantly, this shows that no matter how monolithic now this application can look

236
0:15:02.000 --> 0:15:06.600
like, it's still able to communicate with all those external applications that we mentioned.

237
0:15:06.600 --> 0:15:11.120
So you can still have, for instance, another session open, a guitar rig session open, you

238
0:15:11.120 --> 0:15:16.400
connect your guitar to guitar rigs and then you connect your guitar rigs to that in order

239
0:15:16.400 --> 0:15:18.160
for it to record it.

240
0:15:18.160 --> 0:15:21.760
Or maybe you have guitar rigs as a plugin so that you just record the clean sound and

241
0:15:21.760 --> 0:15:26.760
then you have it processed in different ways any time that you need it, these sort of things.

242
0:15:26.760 --> 0:15:31.440
And so let's assume that we have now bass and guitars.

243
0:15:31.440 --> 0:15:35.320
I am assuming that bass and guitars you can process them pretty much the same way.

244
0:15:35.320 --> 0:15:38.240
I'm sure that there are bass players that will disagree with me.

245
0:15:38.240 --> 0:15:40.360
The concept is like this.

246
0:15:40.360 --> 0:15:42.480
Let's say that you now need drums.

247
0:15:42.480 --> 0:15:45.120
And let's assume that you're like me.

248
0:15:45.120 --> 0:15:46.360
I'm a WebRTC developer.

249
0:15:46.360 --> 0:15:47.440
I have no friends.

250
0:15:47.440 --> 0:15:50.200
So I don't have any drummer friend either.

251
0:15:50.200 --> 0:15:52.960
So I have to create a virtual one instead.

252
0:15:52.960 --> 0:15:57.400
So something that plays drums for me because I am at home doing nothing.

253
0:15:57.400 --> 0:16:02.760
And which means that this is the very first good example of a virtual instrument.

254
0:16:02.760 --> 0:16:08.000
So I need to write the drum parts somehow and then I need to sequence them somehow,

255
0:16:08.000 --> 0:16:10.680
which means that the drum parts will be the instructions.

256
0:16:10.680 --> 0:16:14.880
So what I want to be played and then something will actually translate them to a kick sound

257
0:16:14.880 --> 0:16:17.440
as an air sound, this sort of things.

258
0:16:17.440 --> 0:16:21.880
And of course you can just play right the MIDI manually or use something like Mero's

259
0:16:21.880 --> 0:16:23.120
as we've seen.

260
0:16:23.120 --> 0:16:26.960
What I found out that is for drums it's much easier to work with a pattern based instead

261
0:16:26.960 --> 0:16:32.440
mostly because of the reach mechanism of the instrument and the fact that you can often

262
0:16:32.440 --> 0:16:37.640
do some repetitions, maybe some variations and then just play a bit with those instead.

263
0:16:37.640 --> 0:16:42.400
And personally I like hydrogen a lot in that sense because it's basically it allows you

264
0:16:42.400 --> 0:16:44.160
to create multiple patterns.

265
0:16:44.160 --> 0:16:47.200
For instance, it has all the different parts of a drum.

266
0:16:47.200 --> 0:16:52.720
You can say within the context of a measure play this there at this, this, this, and this

267
0:16:52.720 --> 0:16:54.840
point, a kick here and here and here.

268
0:16:54.840 --> 0:16:56.160
You create different patterns.

269
0:16:56.160 --> 0:17:00.980
You specify the sequence of those patterns or even some patterns in parallel if you use

270
0:17:00.980 --> 0:17:04.480
some patterns just to create variations, this sort of things.

271
0:17:04.480 --> 0:17:09.800
And then you basically hydrogen plays drums for you out of what you just wrote basically.

272
0:17:09.800 --> 0:17:14.860
And while hydrogen comes with its own sounds, which is really cool, I personally just use

273
0:17:14.860 --> 0:17:18.760
hydrogen to write the parts but then use drum gizmo to actually render them mostly because

274
0:17:18.760 --> 0:17:24.880
drum gizmo is probably the most advanced drum renderer that is out there because it's basically

275
0:17:24.880 --> 0:17:30.680
a lot of drum keys that were captured and recorded by professional drummers.

276
0:17:30.680 --> 0:17:37.800
They created samples and then using drum gizmo you can replay them also using, I mean, I'm

277
0:17:37.800 --> 0:17:41.600
not even going to try and explain how drum gizmo works because it's very complex but

278
0:17:41.600 --> 0:17:46.160
it's, suffice it to say that it has so many channels that it's the best way to actually

279
0:17:46.160 --> 0:17:51.560
get drum sounds out there and also work with them within the mixing process.

280
0:17:51.560 --> 0:17:57.960
Which means that from a Jack perspective I just use hydrogen to generate the drum parts

281
0:17:57.960 --> 0:18:02.840
and then I connect the MIDI output of hydrogen to drum gizmo and then whatever drum gizmo

282
0:18:02.840 --> 0:18:06.880
generates I use within the context of my own application.

283
0:18:06.880 --> 0:18:09.160
That's basically how it works.

284
0:18:09.160 --> 0:18:13.480
And now that we've dipped our toe in the MIDI world, what can we do with other instruments?

285
0:18:13.480 --> 0:18:18.880
Because maybe we want a keyboard background, a pad or a piano solo or even a full orchestra

286
0:18:18.880 --> 0:18:22.080
behind our music.

287
0:18:22.080 --> 0:18:25.920
And again, this is what MIDI is for because basically we don't have access to a whole

288
0:18:25.920 --> 0:18:30.280
orchestra because I don't have 30,000 euros to pay a lot of players.

289
0:18:30.280 --> 0:18:35.120
So what I do is I just sketch and write the notes for all the different instruments that

290
0:18:35.120 --> 0:18:40.160
are involved and then those notes, that information will be translated to actual sounds.

291
0:18:40.160 --> 0:18:44.960
So something will be played by something that simulates strings, something else will simulate

292
0:18:44.960 --> 0:18:48.720
a trumpet, these sort of things.

293
0:18:48.720 --> 0:18:50.800
And of course these notes can come from different places.

294
0:18:50.800 --> 0:18:55.640
It can come from an hardware keyboard as we saw in the previous presentation with Melrose

295
0:18:55.640 --> 0:18:58.040
or it can come from something that you wrote.

296
0:18:58.040 --> 0:19:01.120
For instance using Melrose or other approaches.

297
0:19:01.120 --> 0:19:05.480
And I am not a keyboard player but I did buy this small tiny thing over here that again

298
0:19:05.480 --> 0:19:07.040
is just plug and play.

299
0:19:07.040 --> 0:19:12.600
You plug it in there, it becomes a MIDI input that you can use for different things.

300
0:19:12.600 --> 0:19:16.920
And once you have it, you can have a lot of different ways of rendering MIDI sounds.

301
0:19:16.920 --> 0:19:21.080
Sound fonts are historically the oldest and easiest way to do that.

302
0:19:21.080 --> 0:19:25.520
And the Q-seam, thanks to FluidSimt, is one of the most popular ways to actually play

303
0:19:25.520 --> 0:19:26.520
them.

304
0:19:26.520 --> 0:19:31.280
You can use a sound font from somewhere that contains all the sounds that are associated

305
0:19:31.280 --> 0:19:33.280
to different instruments.

306
0:19:33.280 --> 0:19:38.240
And then for instance you just connect your keyboard to FluidSimt using the MIDI part

307
0:19:38.240 --> 0:19:43.560
and that eventually gets generated to actual sounds that you can then use for something

308
0:19:43.560 --> 0:19:44.880
else.

309
0:19:44.880 --> 0:19:48.360
If you don't want to use sound fonts, maybe you want to use a synthesizer instead.

310
0:19:48.360 --> 0:19:49.560
There's plenty of those as well.

311
0:19:49.560 --> 0:19:52.760
I use Yoshimi a lot but there's also Zina's effects.

312
0:19:52.760 --> 0:19:59.280
That's a very complex name but they share a lot of code because Yoshimi was actually

313
0:19:59.280 --> 0:20:00.280
a fork of death.

314
0:20:00.280 --> 0:20:03.320
There is Surge which is also another excellent synthesizer.

315
0:20:03.320 --> 0:20:06.240
So in that case there is no sound bank they start from.

316
0:20:06.240 --> 0:20:09.400
They actually generate the sound depending on what you want to do.

317
0:20:09.400 --> 0:20:15.880
And again I'm dumb so I never aim at creating my own synthesized sounds but if you know

318
0:20:15.880 --> 0:20:18.560
more about that it's something that you can do.

319
0:20:18.560 --> 0:20:20.160
And again it works pretty much the same way.

320
0:20:20.160 --> 0:20:24.480
You can connect your keyboard to Yoshimi and Yoshimi you can directly connect the sound

321
0:20:24.480 --> 0:20:25.480
to that as well.

322
0:20:25.480 --> 0:20:29.520
And in this example I also wanted to highlight the fact that again you can connect the same

323
0:20:29.520 --> 0:20:31.000
source to multiple things.

324
0:20:31.000 --> 0:20:36.360
So in this example I'm connecting my keyboard to both Yoshimi and that sound from the application

325
0:20:36.360 --> 0:20:37.640
that I showed before.

326
0:20:37.640 --> 0:20:42.960
So that whatever I play sounds both like a synthesizer and a piano at the same time.

327
0:20:42.960 --> 0:20:50.560
Okay I'll just fly over the slides so for some files are also very interesting to do

328
0:20:50.560 --> 0:20:51.560
the same thing.

329
0:20:51.560 --> 0:20:56.600
You can use Windows VSTs over there as well via LinVST for instance.

330
0:20:56.600 --> 0:21:01.040
If you want to write music you can use Lillipone, Melrose, NuScore which I personally like a

331
0:21:01.040 --> 0:21:02.040
lot.

332
0:21:02.040 --> 0:21:05.360
If you don't know music notation you can use piano rolls.

333
0:21:05.360 --> 0:21:09.800
And if you want to then publish this you can there's a lot of places where you can publish

334
0:21:09.800 --> 0:21:13.600
your music but what I really encourage to do however you publish your music make sure

335
0:21:13.600 --> 0:21:16.840
that you engage the community in order to exchange information.

336
0:21:16.840 --> 0:21:22.240
So for instance I use a lot Linux musicians and the main author of Linux musicians is

337
0:21:22.240 --> 0:21:23.240
there as well.

338
0:21:23.240 --> 0:21:27.320
He asked me to tell you there's a lot of stickers that you can get from here if you want.

339
0:21:27.320 --> 0:21:31.160
It's an excellent place to get in touch with other musicians working in the open source

340
0:21:31.160 --> 0:21:32.840
space so that you exchange ideas.

341
0:21:32.840 --> 0:21:34.960
You publish a piece they give you advice.

342
0:21:34.960 --> 0:21:36.480
It's an excellent place to learn.

343
0:21:36.480 --> 0:21:40.360
You may want to add video like I did with my Viking Metal cover of All You Want For

344
0:21:40.360 --> 0:21:46.000
Christmas is by Mariah Carey and that's a fun watch if you want to see it.

345
0:21:46.000 --> 0:21:52.040
I talked also a bit about WebRTC used for musicians as well which in a previous presentation

346
0:21:52.040 --> 0:21:55.400
that you may want to look at and then that's basically it.

347
0:21:55.400 --> 0:21:58.560
These are again my contacts if you want to have a look at that.

348
0:21:58.560 --> 0:22:03.560
Unfortunately I didn't speak fast enough.

349
0:22:03.560 --> 0:22:10.560
I have a question for the wall.

350
0:22:10.560 --> 0:22:11.560
Question?

351
0:22:11.560 --> 0:22:12.560
Yeah.

352
0:22:12.560 --> 0:22:13.560
Thanks for the presentation.

353
0:22:13.560 --> 0:22:14.560
Oh no thank you.

354
0:22:14.560 --> 0:22:22.560
One basic question for the audio chain slides that you showed.

355
0:22:22.560 --> 0:22:23.560
Yeah.

356
0:22:23.560 --> 0:22:29.560
So a bike wire has a GUI content where you can actually do the chain or some other thing.

357
0:22:29.560 --> 0:22:31.560
Yeah basically I personally use.

358
0:22:31.560 --> 0:22:34.280
Oh sorry.

359
0:22:34.280 --> 0:22:39.560
The question was does pipe wire also have the way of showing those different boxes that

360
0:22:39.560 --> 0:22:42.520
you can connect in order to create a workflow.

361
0:22:42.520 --> 0:22:47.920
I personally still use QJAC control which was a front end specifically conceived for

362
0:22:47.920 --> 0:22:54.120
Jack mostly because pipe wire implements Jack as well and so QJAC controls allows you to

363
0:22:54.120 --> 0:22:58.840
create the same connections from the Jack perspective but there are some applications

364
0:22:58.840 --> 0:23:02.140
that are specifically conceived for pipe wire as well.

365
0:23:02.140 --> 0:23:03.320
It really works the same way.

366
0:23:03.320 --> 0:23:07.360
You have these different boxes and you can connect them any way that you want.

367
0:23:07.360 --> 0:23:09.840
And for Jack it's also a GUI or you script it?

368
0:23:09.840 --> 0:23:13.680
No no you can script it if you want but you can definitely use a GUI.

369
0:23:13.680 --> 0:23:15.680
I always use a GUI because otherwise you go crazy.

370
0:23:15.680 --> 0:23:16.680
Any other questions?

371
0:23:16.680 --> 0:23:17.680
I'm not sure which one yesterday is guys.

372
0:23:17.680 --> 0:23:18.680
Any other questions?

373
0:23:18.680 --> 0:23:31.040
Do you have a favorite from the other question?

374
0:23:31.040 --> 0:23:32.040
I'm sorry?

375
0:23:32.040 --> 0:23:38.400
Yeah the one that I use since I work a lot with metal the one that I prefer is called

376
0:23:38.400 --> 0:23:43.720
the Muldi or Kit which I personally love that one a lot but there are a lot of excellent

377
0:23:43.720 --> 0:23:44.720
tools out there.

378
0:23:44.720 --> 0:23:45.720
Good job.

379
0:23:45.720 --> 0:23:46.720
Thank you.

380
0:23:46.720 --> 0:23:49.440
Have you used the YABRIDGE?

381
0:23:49.440 --> 0:23:50.440
Which one sorry?

382
0:23:50.440 --> 0:23:52.440
Have you used YABRIDGE for Windows VSTs?

383
0:23:52.440 --> 0:23:53.440
YABRIDGE.

384
0:23:53.440 --> 0:24:00.760
No for Windows VSTs the one that I use the most are some free VSTs by Spitfire Audio

385
0:24:00.760 --> 0:24:02.720
the Spitfire Labs Audio.

386
0:24:02.720 --> 0:24:06.720
They have a lot of free different VSTs that are very interesting and experimental sounds

387
0:24:06.720 --> 0:24:08.400
and those are the ones that I like the most.

388
0:24:08.400 --> 0:24:12.720
I used it when I used it for YABRIDGE but that's the easiest way to use Windows VSTs.

389
0:24:12.720 --> 0:24:14.440
Yeah there are different ways.

390
0:24:14.440 --> 0:24:21.920
So LinVST is the one that I found to be the easiest but you can use DSSI, VOs for instance

391
0:24:21.920 --> 0:24:25.520
is another way to do that but there are different approaches.

392
0:24:25.520 --> 0:24:30.760
Personally the one that worked consistently for me was LinVST that's just why I used it.

393
0:24:30.760 --> 0:24:31.760
Sorry.

394
0:24:31.760 --> 0:24:38.040
If I install pipewire can I get rid of full-soudier?

395
0:24:38.040 --> 0:24:42.200
Yeah I know because pipewire is basically a replacement for both Full-soudier and Jack

396
0:24:42.200 --> 0:24:45.480
even though it's compliant with both of them so you can just...

397
0:24:45.480 --> 0:24:48.360
I can just play a video almost differently too.

398
0:24:48.360 --> 0:24:51.640
Yeah exactly while you record your guitar which is something that you couldn't do before

399
0:24:51.640 --> 0:24:57.080
and besides pipewire also does an excellent thing for instance with just playing Jack

400
0:24:57.080 --> 0:25:01.160
I couldn't attach two different audio interfaces to my computer.

401
0:25:01.160 --> 0:25:03.640
I had to choose one or use Zita to add another.

402
0:25:03.640 --> 0:25:09.640
Instead with pipewire I can plug as many as I want and they all appear which is great.

403
0:25:09.640 --> 0:25:16.360
I think I have to...

404
0:25:16.360 --> 0:25:18.360
Yeah, yeah, I'll come outside in a second.

405
0:25:18.360 --> 0:25:19.360
Yeah, sure.

406
0:25:19.360 --> 0:25:43.480
I'm going to go to the

407
0:25:43.480 --> 0:25:50.480
room.

408
0:25:50.480 --> 0:25:53.480
I'll just come and talk in a second because I think I should

409
0:25:53.480 --> 0:25:54.480
wait for him.

410
0:25:54.480 --> 0:25:56.480
Sorry, thank you.

411
0:25:56.480 --> 0:25:57.480
Sorry, no worries.

412
0:25:57.480 --> 0:25:58.480
Sorry, no worries.

413
0:25:58.480 --> 0:25:59.480
Sorry, sorry, sorry.

414
0:25:59.480 --> 0:26:00.480
Sorry, sorry, sorry.

415
0:26:00.480 --> 0:26:01.480
Sorry, sorry, sorry.

416
0:26:01.480 --> 0:26:14.480
Sorry, sorry.

