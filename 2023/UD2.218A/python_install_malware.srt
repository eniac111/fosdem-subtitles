1
0:00:00.000 --> 0:00:01.000
Welcome, Max.

2
0:00:01.000 --> 0:00:04.000
Can you hear me okay?

3
0:00:04.000 --> 0:00:05.000
Awesome.

4
0:00:05.000 --> 0:00:18.040
Hugo has warned me if I step here that it will no longer pick me up on the camera.

5
0:00:18.040 --> 0:00:21.160
I like to walk, so I'm going to do a little bit just to get out of my system if that's

6
0:00:21.160 --> 0:00:22.160
okay.

7
0:00:22.160 --> 0:00:28.320
I want to talk to you today about malware on the PyPy on the Python package index.

8
0:00:28.320 --> 0:00:31.240
More importantly than that, I'm going to run some malware on my own machine to show you

9
0:00:31.240 --> 0:00:34.320
what happens.

10
0:00:34.320 --> 0:00:37.320
If I do this, you don't have to, and you'll know what the dangers are, so you don't have

11
0:00:37.320 --> 0:00:38.320
to worry.

12
0:00:38.320 --> 0:00:41.600
I'm going to go here so people, if there's a live stream and I'm popular enough for anyone

13
0:00:41.600 --> 0:00:42.960
to look at it, they'll see me.

14
0:00:42.960 --> 0:00:43.960
Hello, everybody.

15
0:00:43.960 --> 0:00:45.960
I think we might be going to a normal mic stream here.

16
0:00:45.960 --> 0:00:47.960
How do I make it off?

17
0:00:47.960 --> 0:00:48.960
I don't know.

18
0:00:48.960 --> 0:00:49.960
I'm just going to hide it.

19
0:00:49.960 --> 0:00:50.960
I'll put it there.

20
0:00:50.960 --> 0:00:51.960
It's all good.

21
0:00:51.960 --> 0:00:52.960
Right.

22
0:00:52.960 --> 0:00:57.600
My name's Max, and I'm a developer advocate at Vonage, this company here, up there on the

23
0:00:57.600 --> 0:00:58.600
side.

24
0:00:58.600 --> 0:00:59.600
Hearing something?

25
0:00:59.600 --> 0:01:00.600
Okay.

26
0:01:00.600 --> 0:01:03.240
What I want to do first of all is just explain, because these guys have paid for me to come

27
0:01:03.240 --> 0:01:04.240
here.

28
0:01:04.240 --> 0:01:05.240
They've paid for my flight.

29
0:01:05.240 --> 0:01:07.760
I've come from the UK, so I'm going to do the bit where I tell you what they do.

30
0:01:07.760 --> 0:01:11.040
What we do is we make communications APIs.

31
0:01:11.040 --> 0:01:16.000
Things like SMS, voice calls, video chats, two-factor authentication, as a service, on

32
0:01:16.000 --> 0:01:17.000
demand.

33
0:01:17.000 --> 0:01:18.160
That's what we do, basically.

34
0:01:18.160 --> 0:01:20.880
What I actually do is I manage the Python tooling for that.

35
0:01:20.880 --> 0:01:25.160
In my role, I've done quite a lot of work to actually understand how I can not get myself

36
0:01:25.160 --> 0:01:28.920
screwed over with malware, which is where this kind of talk comes from.

37
0:01:28.920 --> 0:01:33.080
Unfortunately, my research of malware started to annoy some people.

38
0:01:33.080 --> 0:01:37.320
This is a colleague I actually work with who no longer trusts anything I send him, because

39
0:01:37.320 --> 0:01:39.600
he knows I've been researching malware and he gets annoyed now.

40
0:01:39.600 --> 0:01:41.480
He's like, hey, don't send me that weird stuff.

41
0:01:41.480 --> 0:01:43.440
Unfortunately, he's like, come on, man.

42
0:01:43.440 --> 0:01:45.640
Don't do this to me.

43
0:01:45.640 --> 0:01:49.200
He said this is not going to be a slide in your talk, and I was like, yes, it is.

44
0:01:49.200 --> 0:01:51.160
This is going to be a slide in my talk.

45
0:01:51.160 --> 0:01:52.840
That's what's going to happen.

46
0:01:52.840 --> 0:01:57.840
He didn't like it, because I'm going into the Vonage Python SDK, but I made a version

47
0:01:57.840 --> 0:02:00.600
called not the Vonage Python SDK that I uploaded to PyPy.

48
0:02:00.600 --> 0:02:02.560
I'm going to show you what happens if you install it.

49
0:02:02.560 --> 0:02:05.280
Please do not install it unless you want to have a bad time.

50
0:02:05.280 --> 0:02:07.640
It is live, and you could literally do it right now.

51
0:02:07.640 --> 0:02:09.480
Please don't, again, but you could.

52
0:02:09.480 --> 0:02:10.480
Maybe you should.

53
0:02:10.480 --> 0:02:11.560
It's up to you.

54
0:02:11.560 --> 0:02:14.200
That's where we are with this.

55
0:02:14.200 --> 0:02:17.600
Before we get there, that's the foreshadowing bit where I say, look, this is Chekhov's malware.

56
0:02:17.600 --> 0:02:18.600
We set it up at the start.

57
0:02:18.600 --> 0:02:19.600
We hit it at the end.

58
0:02:19.600 --> 0:02:20.600
That's what we do.

59
0:02:20.600 --> 0:02:21.600
I've just also hit that.

60
0:02:21.600 --> 0:02:22.600
That's a literal punch.

61
0:02:22.600 --> 0:02:25.400
Okay, so first question for you.

62
0:02:25.400 --> 0:02:28.120
Does anybody remember this website, this old font?

63
0:02:28.120 --> 0:02:29.120
Remember that?

64
0:02:29.120 --> 0:02:30.120
Quick question, yes?

65
0:02:30.120 --> 0:02:32.120
Anyone remember that?

66
0:02:32.120 --> 0:02:35.320
Who thought that said Google.com?

67
0:02:35.320 --> 0:02:36.320
It didn't.

68
0:02:36.320 --> 0:02:37.320
It didn't say Google.com.

69
0:02:37.320 --> 0:02:38.320
You're wrong.

70
0:02:38.320 --> 0:02:39.320
You're crazy.

71
0:02:39.320 --> 0:02:40.320
It says gobble.com.

72
0:02:40.320 --> 0:02:46.680
Actually, this was a real website that in the mid-2000s you might accidentally visit

73
0:02:46.680 --> 0:02:49.480
when you were typing in Google.com into your browser.

74
0:02:49.480 --> 0:02:51.400
If you did, I can see some nodding here.

75
0:02:51.400 --> 0:02:53.160
I can see some people might know about this website.

76
0:02:53.160 --> 0:02:57.600
But what would happen is it would do a drive-by download of malware onto your machine, and

77
0:02:57.600 --> 0:03:00.320
it would basically screw over your machine.

78
0:03:00.320 --> 0:03:04.320
This was one of the really prominent examples in the early 2000s of typo squatting, where

79
0:03:04.320 --> 0:03:07.640
just making one typo would absolutely destroy you.

80
0:03:07.640 --> 0:03:11.560
What's really nice is I managed to get some archive footage of a machine being infected

81
0:03:11.560 --> 0:03:13.200
with the gobble.com malware.

82
0:03:13.200 --> 0:03:15.560
I'll show it to you now.

83
0:03:15.560 --> 0:03:19.560
Here's the machine, and here it is after malware has actually infected it.

84
0:03:19.560 --> 0:03:28.040
I'm just going to drink some water because I'm on the line.

85
0:03:28.040 --> 0:03:31.440
What we're going to talk about today, hopefully we're not going to run on because I see panic

86
0:03:31.440 --> 0:03:32.840
looks over there from Hugo.

87
0:03:32.840 --> 0:03:33.840
Thank you very much.

88
0:03:33.840 --> 0:03:37.560
In this talk, we're going to talk about malware, as you might expect at this point, given the

89
0:03:37.560 --> 0:03:39.320
very obvious foreshadowing.

90
0:03:39.320 --> 0:03:42.720
We're also going to talk about how it gets onto your machine from PyPy.

91
0:03:42.720 --> 0:03:45.160
We're going to talk about how it gets made to look legitimate.

92
0:03:45.160 --> 0:03:49.100
We're going to talk about how it works, and we're going to talk about how we can protect

93
0:03:49.100 --> 0:03:54.360
ourselves from malware, as you can see now, because I'm reading my presenter view, not

94
0:03:54.360 --> 0:03:56.280
the actual view, and that's the issue.

95
0:03:56.280 --> 0:03:58.480
Does that sound good to everybody who's here?

96
0:03:58.480 --> 0:03:59.480
Open question.

97
0:03:59.480 --> 0:04:02.160
I'm seeing more of that, more energy.

98
0:04:02.160 --> 0:04:05.280
I love it.

99
0:04:05.280 --> 0:04:09.640
I feel like there's been some really very smart people giving talks, and I'm not that, so

100
0:04:09.640 --> 0:04:10.720
I'm just hyping you up.

101
0:04:10.720 --> 0:04:11.720
That's my job.

102
0:04:11.720 --> 0:04:13.560
I'm like that guy in the back who's like, come on, guys, let's get going.

103
0:04:13.560 --> 0:04:14.560
That's me.

104
0:04:14.560 --> 0:04:15.560
Okay.

105
0:04:15.560 --> 0:04:16.560
Quick disclaimer.

106
0:04:16.560 --> 0:04:19.280
First of all, I'm a freaking idiot, as you've now learned.

107
0:04:19.280 --> 0:04:21.840
More importantly, malware evolves and it changes.

108
0:04:21.840 --> 0:04:23.120
A lot of stuff happens here.

109
0:04:23.120 --> 0:04:24.680
A lot of stuff goes on.

110
0:04:24.680 --> 0:04:27.040
What I'm going to show you today is currently what I'm seeing.

111
0:04:27.040 --> 0:04:30.560
I'm reading a lot of research blogs and stuff from really smart people.

112
0:04:30.560 --> 0:04:35.720
But this is the kind of way that I'm... The malware I'll show you works in the way that

113
0:04:35.720 --> 0:04:38.680
it's currently working, but that will not be the same in a year's time, or a two year's

114
0:04:38.680 --> 0:04:39.680
time.

115
0:04:39.680 --> 0:04:43.240
This stuff is going to evolve, and it's going to change as bad actors get better at dealing

116
0:04:43.240 --> 0:04:45.240
with malware or hiding their malware.

117
0:04:45.240 --> 0:04:47.760
Also, I am not a security professional.

118
0:04:47.760 --> 0:04:48.760
I'm just a guy.

119
0:04:48.760 --> 0:04:49.760
I just woke up here.

120
0:04:49.760 --> 0:04:50.760
They just let me.

121
0:04:50.760 --> 0:04:51.760
I haven't even registered for this thing.

122
0:04:51.760 --> 0:04:55.440
I just showed up and was like, yeah, sure, we got a slot.

123
0:04:55.440 --> 0:05:01.080
Essentially, what I'm saying is the stuff that I found through my own research, but

124
0:05:01.080 --> 0:05:06.960
please don't yourself try and necessarily take what I say as gospel because I'm learning

125
0:05:06.960 --> 0:05:07.960
and sharing what I know.

126
0:05:07.960 --> 0:05:08.960
Is that cool?

127
0:05:08.960 --> 0:05:09.960
Is that cool with you?

128
0:05:09.960 --> 0:05:10.960
Yeah.

129
0:05:10.960 --> 0:05:11.960
Yeah.

130
0:05:11.960 --> 0:05:12.960
I love it.

131
0:05:12.960 --> 0:05:13.960
Okay.

132
0:05:13.960 --> 0:05:18.120
I'd like to show you an image I generated with Dolly because it's cute as heck.

133
0:05:18.120 --> 0:05:19.320
That's the only reason I included it.

134
0:05:19.320 --> 0:05:20.320
It's just really cute.

135
0:05:20.320 --> 0:05:21.320
Look at that little face.

136
0:05:21.320 --> 0:05:22.320
Look at those eyes.

137
0:05:22.320 --> 0:05:26.360
You get a 50% hit rate on eyes, which is why he's only showed one on there.

138
0:05:26.360 --> 0:05:27.600
But let's see.

139
0:05:27.600 --> 0:05:28.720
The cost of malware.

140
0:05:28.720 --> 0:05:31.720
This is important because this is big business.

141
0:05:31.720 --> 0:05:33.760
Malware is big business.

142
0:05:33.760 --> 0:05:38.400
The question, first of all... These stats I'm about to show you, they came from a research

143
0:05:38.400 --> 0:05:41.640
study that was done by the Poneman Research Institute last year.

144
0:05:41.640 --> 0:05:43.400
They studied 550 organizations.

145
0:05:43.400 --> 0:05:44.400
I've got to walk.

146
0:05:44.400 --> 0:05:45.400
I'm going to walk.

147
0:05:45.400 --> 0:05:49.280
I studied 550 organizations that have been infected with malware and how they dealt with

148
0:05:49.280 --> 0:05:50.280
that.

149
0:05:50.280 --> 0:05:52.280
They basically shared their findings.

150
0:05:52.280 --> 0:05:54.520
The question here, first of all, this is a genuine question.

151
0:05:54.520 --> 0:05:55.520
Shout out.

152
0:05:55.520 --> 0:05:59.560
What do you think the average cost of a data breach was for those organizations?

153
0:05:59.560 --> 0:06:00.560
Anybody shout at me.

154
0:06:00.560 --> 0:06:01.560
100,000.

155
0:06:01.560 --> 0:06:02.560
100,000.

156
0:06:02.560 --> 0:06:03.560
Keep going.

157
0:06:03.560 --> 0:06:04.560
300k.

158
0:06:04.560 --> 0:06:05.560
300k.

159
0:06:05.560 --> 0:06:06.560
Keep going.

160
0:06:06.560 --> 0:06:07.560
500k.

161
0:06:07.560 --> 0:06:08.560
Keep going.

162
0:06:08.560 --> 0:06:09.560
A million.

163
0:06:09.560 --> 0:06:10.560
A million.

164
0:06:10.560 --> 0:06:11.560
Keep going.

165
0:06:11.560 --> 0:06:12.560
A million.

166
0:06:12.560 --> 0:06:15.200
A million sold to the gentleman in the red shirt.

167
0:06:15.200 --> 0:06:19.520
4.35 million was the average cost of a data breach on PyPy.

168
0:06:19.520 --> 0:06:21.040
Sorry, that was not true.

169
0:06:21.040 --> 0:06:22.520
It's just a free breach in those organizations.

170
0:06:22.520 --> 0:06:24.120
I just did a spin and distracted myself.

171
0:06:24.120 --> 0:06:25.120
It's the blood flow.

172
0:06:25.120 --> 0:06:26.320
Another question here.

173
0:06:26.320 --> 0:06:28.880
This is slightly more relevant to our talk today.

174
0:06:28.880 --> 0:06:31.360
What percentage of breaches were caused by compromised credentials?

175
0:06:31.360 --> 0:06:32.640
I don't mean phishing scams.

176
0:06:32.640 --> 0:06:36.800
I mean some malware scraping your credentials and actually then using those credentials

177
0:06:36.800 --> 0:06:38.240
to infect a network.

178
0:06:38.240 --> 0:06:39.240
What percentage?

179
0:06:39.240 --> 0:06:40.240
70.

180
0:06:40.240 --> 0:06:41.240
70.

181
0:06:41.240 --> 0:06:42.240
A little lower.

182
0:06:42.240 --> 0:06:43.240
Three.

183
0:06:43.240 --> 0:06:44.240
Slightly higher.

184
0:06:44.240 --> 0:06:45.240
You know what?

185
0:06:45.240 --> 0:06:48.240
We can play this all day.

186
0:06:48.240 --> 0:06:49.240
I'll show you.

187
0:06:49.240 --> 0:06:50.240
It's 19%.

188
0:06:50.240 --> 0:06:53.600
About one in five breaches were caused by this exact thing.

189
0:06:53.600 --> 0:06:55.200
I love your enthusiasm as well.

190
0:06:55.200 --> 0:06:56.200
Dig it.

191
0:06:56.200 --> 0:06:57.200
I'm back here.

192
0:06:57.200 --> 0:06:59.960
If anybody is watching this can see me.

193
0:06:59.960 --> 0:07:04.240
The question I'd like us to think about is what does this mean?

194
0:07:04.240 --> 0:07:05.240
Thanks.

195
0:07:05.240 --> 0:07:07.240
That was my water break.

196
0:07:07.240 --> 0:07:10.200
I'll tell you what I think it means.

197
0:07:10.200 --> 0:07:13.560
Developers are now a target for this type of malware.

198
0:07:13.560 --> 0:07:14.560
Developers are a real target.

199
0:07:14.560 --> 0:07:18.720
There are two reasons a malware actor might want to target a developer.

200
0:07:18.720 --> 0:07:19.720
Hello new people.

201
0:07:19.720 --> 0:07:20.720
Welcome.

202
0:07:20.720 --> 0:07:22.520
There are two reasons.

203
0:07:22.520 --> 0:07:25.160
The first one is because developers are installing something.

204
0:07:25.160 --> 0:07:27.760
They're going to have stuff on their machine to exploit.

205
0:07:27.760 --> 0:07:31.200
But also because those developers might make software for end users and we might be able

206
0:07:31.200 --> 0:07:32.720
to screw them as well.

207
0:07:32.720 --> 0:07:33.720
That's awesome.

208
0:07:33.720 --> 0:07:34.720
For the malware.

209
0:07:34.720 --> 0:07:35.720
It's not good for us.

210
0:07:35.720 --> 0:07:36.720
I'm just enthusiastic.

211
0:07:36.720 --> 0:07:37.720
I don't love crime.

212
0:07:37.720 --> 0:07:42.920
First of all, let's talk about remote code execution.

213
0:07:42.920 --> 0:07:43.920
This is the gold standard.

214
0:07:43.920 --> 0:07:47.000
If an actor gets into your machine, they execute code on there.

215
0:07:47.000 --> 0:07:48.000
What can they do?

216
0:07:48.000 --> 0:07:50.080
We've talked about credential stealing.

217
0:07:50.080 --> 0:07:51.680
Also ransomware.

218
0:07:51.680 --> 0:07:54.240
Also things like crypto mining and crypto diversion.

219
0:07:54.240 --> 0:07:59.440
I saw a piece of malware that would siphon off payments that would go to your Bitcoin

220
0:07:59.440 --> 0:08:03.520
or Ethereum wallet and put it to a different wallet address and put it to the attacker's

221
0:08:03.520 --> 0:08:04.520
wallet.

222
0:08:04.520 --> 0:08:06.720
There are some quite interesting use cases for this.

223
0:08:06.720 --> 0:08:09.200
Again, I don't love crime.

224
0:08:09.200 --> 0:08:13.120
What's important is you can be a target as a developer but also your end users can be

225
0:08:13.120 --> 0:08:14.120
targeted.

226
0:08:14.120 --> 0:08:18.600
If you make software that's important that someone is using, you might download a dependency

227
0:08:18.600 --> 0:08:22.880
that behaves as expected except for the fact that it includes vulnerabilities.

228
0:08:22.880 --> 0:08:25.280
That means your users could be vulnerable.

229
0:08:25.280 --> 0:08:30.120
Alternatively, it could use outdated versions of dependencies itself or outdated version

230
0:08:30.120 --> 0:08:31.400
of the package.

231
0:08:31.400 --> 0:08:35.480
That means essentially your users will be vulnerable as well because it hasn't, for

232
0:08:35.480 --> 0:08:38.720
example, received updates or if there's a CVE that's come out saying, look, here's a

233
0:08:38.720 --> 0:08:39.720
threat advisory.

234
0:08:39.720 --> 0:08:40.920
We need to patch this.

235
0:08:40.920 --> 0:08:42.480
You won't get that patch.

236
0:08:42.480 --> 0:08:45.240
These kinds of things can be done to actually get your end users as well.

237
0:08:45.240 --> 0:08:46.960
Does that make sense?

238
0:08:46.960 --> 0:08:47.960
Good.

239
0:08:47.960 --> 0:08:51.320
Because this is the most dramatic slide I put in, or one of them, which is this.

240
0:08:51.320 --> 0:08:52.320
Python developers beware.

241
0:08:52.320 --> 0:08:53.720
I'd like to set the scene for you here.

242
0:08:53.720 --> 0:08:54.720
It's Stormy Night.

243
0:08:54.720 --> 0:08:56.080
It's a castle in Romania.

244
0:08:56.080 --> 0:08:59.360
A man in ragged clothes is running away from the castle.

245
0:08:59.360 --> 0:09:00.360
Bats chasing after him.

246
0:09:00.360 --> 0:09:03.280
He hears the howling of wolves in the distance and then lightning flashes.

247
0:09:03.280 --> 0:09:04.280
He says, stay away.

248
0:09:04.280 --> 0:09:05.280
He screams at you with wild eyes.

249
0:09:05.280 --> 0:09:06.280
Stay away.

250
0:09:06.280 --> 0:09:10.320
Stay away from the Python package index.

251
0:09:10.320 --> 0:09:11.320
I didn't rehearse that.

252
0:09:11.320 --> 0:09:12.320
I'm kind of proud, actually.

253
0:09:12.320 --> 0:09:14.320
That went pretty well.

254
0:09:14.320 --> 0:09:15.320
Okay.

255
0:09:15.320 --> 0:09:16.320
Three bomb.

256
0:09:16.320 --> 0:09:17.320
Okay.

257
0:09:17.320 --> 0:09:18.320
So, right.

258
0:09:18.320 --> 0:09:21.520
PyPy is what we're talking about today.

259
0:09:21.520 --> 0:09:24.880
Because whilst it's awesome, and I don't really think you should stay away, it's an awesome

260
0:09:24.880 --> 0:09:26.480
way to get our dependencies right.

261
0:09:26.480 --> 0:09:27.880
I couldn't live without this thing.

262
0:09:27.880 --> 0:09:31.520
Well, I could literally live, but I couldn't do my work without this thing.

263
0:09:31.520 --> 0:09:36.320
So I want to talk to you about why maybe it's not the safest place in the world in certain

264
0:09:36.320 --> 0:09:37.400
contexts.

265
0:09:37.400 --> 0:09:42.080
So the first thing is that if we talk about typersquatting, if you mistype something,

266
0:09:42.080 --> 0:09:46.680
you misremember something, you put it in wrong, this is the case, for example, with goggle.com,

267
0:09:46.680 --> 0:09:49.200
where a user would type it in wrong and would get screwed over.

268
0:09:49.200 --> 0:09:51.600
They would get that malware on their machine.

269
0:09:51.600 --> 0:09:53.240
But the same exists with PyPy.

270
0:09:53.240 --> 0:09:57.320
Because if you type in pip install and then a package, if you type that wrong, it doesn't

271
0:09:57.320 --> 0:09:58.320
check.

272
0:09:58.320 --> 0:09:59.320
It doesn't say, oh, did you mean requests?

273
0:09:59.320 --> 0:10:01.400
It says, okay, yeah, I'll install asdfj.

274
0:10:01.400 --> 0:10:02.400
You know, that's fine, too.

275
0:10:02.400 --> 0:10:06.080
As long as that package exists, you will get it.

276
0:10:06.080 --> 0:10:07.160
And that can be concerning.

277
0:10:07.160 --> 0:10:08.440
So quick question here.

278
0:10:08.440 --> 0:10:12.280
What percentage of PyPy packages are estimated to actually potentially be using a typersquatting

279
0:10:12.280 --> 0:10:13.280
technique?

280
0:10:13.280 --> 0:10:14.280
Five.

281
0:10:14.280 --> 0:10:16.080
That's a good number.

282
0:10:16.080 --> 0:10:17.080
Any other guesses?

283
0:10:17.080 --> 0:10:18.080
40, 20.

284
0:10:18.080 --> 0:10:19.080
42.

285
0:10:19.080 --> 0:10:20.080
42.

286
0:10:20.080 --> 0:10:21.080
42.

287
0:10:21.080 --> 0:10:22.080
Very specific.

288
0:10:22.080 --> 0:10:23.080
I love it.

289
0:10:23.080 --> 0:10:24.080
41.9.

290
0:10:24.080 --> 0:10:25.080
About 3%.

291
0:10:25.080 --> 0:10:29.960
So a lot closer this time.

292
0:10:29.960 --> 0:10:33.440
You redeemed yourself or respect it.

293
0:10:33.440 --> 0:10:35.880
So yeah, basically a little smaller.

294
0:10:35.880 --> 0:10:38.020
But still, there's millions of packages on there.

295
0:10:38.020 --> 0:10:39.720
So this is a big ass number.

296
0:10:39.720 --> 0:10:43.400
This is a big old number.

297
0:10:43.400 --> 0:10:47.440
So the next question, this is maybe relevant to us now, is what percentage of PyPy downloads

298
0:10:47.440 --> 0:10:50.600
are estimated to be of typersquatting packages?

299
0:10:50.600 --> 0:10:53.600
So in percent, how many times does someone download something where they maybe didn't

300
0:10:53.600 --> 0:10:54.600
mean to?

301
0:10:54.600 --> 0:10:55.600
10%.

302
0:10:55.600 --> 0:10:56.600
10%.

303
0:10:56.600 --> 0:10:57.600
Two.

304
0:10:57.600 --> 0:10:58.600
One percent.

305
0:10:58.600 --> 0:10:59.600
One percent.

306
0:10:59.600 --> 0:11:00.600
Two percent.

307
0:11:00.600 --> 0:11:01.600
Four percent.

308
0:11:01.600 --> 0:11:02.600
Four percent.

309
0:11:02.600 --> 0:11:03.600
Sold.

310
0:11:03.600 --> 0:11:06.560
So 0.5 is about the right answer.

311
0:11:06.560 --> 0:11:09.240
So again, we're getting to people who I just saw, yes.

312
0:11:09.240 --> 0:11:10.240
And I respect that as well.

313
0:11:10.240 --> 0:11:14.160
I love the enthusiasm that we're generating here because that's really the content.

314
0:11:14.160 --> 0:11:18.600
You guys are the product, right?

315
0:11:18.600 --> 0:11:19.600
So yeah.

316
0:11:19.600 --> 0:11:21.920
But 0.5 is not much, but it's 1 in 200.

317
0:11:21.920 --> 0:11:25.960
And if you think about how many millions of things are downloaded from PyPy every day,

318
0:11:25.960 --> 0:11:26.960
that's a big deal.

319
0:11:26.960 --> 0:11:27.960
That's a really big number.

320
0:11:27.960 --> 0:11:32.440
Easy photo, good, because I need to move on.

321
0:11:32.440 --> 0:11:35.280
Let's talk about types of squats.

322
0:11:35.280 --> 0:11:38.760
In fact, this is a type of squat of typersquat, which is a pun, and I'm so proud of it.

323
0:11:38.760 --> 0:11:41.320
I didn't sleep all night.

324
0:11:41.320 --> 0:11:42.640
Types of squats that you can get.

325
0:11:42.640 --> 0:11:44.160
So misspelling, pretty obvious.

326
0:11:44.160 --> 0:11:46.840
You mean to type something, you hit the wrong button, something goes wrong.

327
0:11:46.840 --> 0:11:49.960
For example, these are all real typersquats from the request module.

328
0:11:49.960 --> 0:11:52.320
We all know the request module, I hope, I assume.

329
0:11:52.320 --> 0:11:53.720
You send HCP requests?

330
0:11:53.720 --> 0:11:54.720
Awesome.

331
0:11:54.720 --> 0:12:01.120
Well, you might send requests or requests or equests, any of those.

332
0:12:01.120 --> 0:12:06.640
And those are real actual pieces of malware that were found on PyPy.

333
0:12:06.640 --> 0:12:11.760
So if you had mistyped, they would be on your machine.

334
0:12:11.760 --> 0:12:13.560
Which isn't ideal for you.

335
0:12:13.560 --> 0:12:18.080
There's another type, which is confusion typersquats, where the user misremembers the name of a

336
0:12:18.080 --> 0:12:21.240
package, and there may be some separated confusion or ordering confusion.

337
0:12:21.240 --> 0:12:24.840
For example, easy install, maybe there's an underscore, maybe there's a hyphen, maybe there's

338
0:12:24.840 --> 0:12:27.000
nothing, maybe it's install easy, who knows, right?

339
0:12:27.000 --> 0:12:32.720
So in this case, you might end up with some malware, but there's also version and confusion,

340
0:12:32.720 --> 0:12:37.400
where basically you think, oh, this is a certain version, or maybe like, you know, beautiful

341
0:12:37.400 --> 0:12:38.920
Super 4, BS 4.

342
0:12:38.920 --> 0:12:40.480
That's the kind of thing where, what, it's BS 4?

343
0:12:40.480 --> 0:12:41.480
I never scraped before.

344
0:12:41.480 --> 0:12:42.480
Sure.

345
0:12:42.480 --> 0:12:43.480
Okay.

346
0:12:43.480 --> 0:12:47.560
So there are some examples where you wouldn't actually want, you know, you'd want to basically

347
0:12:47.560 --> 0:12:48.760
consider these different versions.

348
0:12:48.760 --> 0:12:52.600
So for example, this is a real piece of malware that I saw on PyPy, request 3.

349
0:12:52.600 --> 0:12:56.360
You might think, oh, a beta version of version 3 of request, yeah, okay, I'll get that, I'll

350
0:12:56.360 --> 0:12:58.320
get that, that's good, that's good stuff.

351
0:12:58.320 --> 0:12:59.320
Do not do that.

352
0:12:59.320 --> 0:13:00.320
Do not do that.

353
0:13:00.320 --> 0:13:01.320
Get the request module.

354
0:13:01.320 --> 0:13:02.320
Okay.

355
0:13:02.320 --> 0:13:03.320
Right.

356
0:13:03.320 --> 0:13:07.520
Let's play a little game, because apparently all we do now is audience participation.

357
0:13:07.520 --> 0:13:09.640
So, which of these is the malware?

358
0:13:09.640 --> 0:13:10.640
Choose now.

359
0:13:10.640 --> 0:13:11.640
Top one or bottom one?

360
0:13:11.640 --> 0:13:12.640
Hands up for top one.

361
0:13:12.640 --> 0:13:14.640
Hands up for the bottom one.

362
0:13:14.640 --> 0:13:15.640
Heck yeah.

363
0:13:15.640 --> 0:13:16.640
Damn right.

364
0:13:16.640 --> 0:13:17.640
Okay.

365
0:13:17.640 --> 0:13:19.200
Another one here.

366
0:13:19.200 --> 0:13:20.960
Libkill or Pykill, which is the malware?

367
0:13:20.960 --> 0:13:22.040
This is a Python package.

368
0:13:22.040 --> 0:13:23.040
Which is the Python package?

369
0:13:23.040 --> 0:13:24.040
Top one?

370
0:13:24.040 --> 0:13:25.040
Bottom one.

371
0:13:25.040 --> 0:13:26.040
Top one.

372
0:13:26.040 --> 0:13:27.040
Aye.

373
0:13:27.040 --> 0:13:30.920
Really split on that one.

374
0:13:30.920 --> 0:13:34.760
So I think the confusion there is because the actual package that Pykill calls, that's

375
0:13:34.760 --> 0:13:38.440
the system package, but actually the actual Python package is called Pykill, and that's

376
0:13:38.440 --> 0:13:41.760
why if you would guess wrong, it's really sensible that you might guess Libkill, but

377
0:13:41.760 --> 0:13:42.920
it's actually malware.

378
0:13:42.920 --> 0:13:47.200
So once you've got some malware, how does it look legit?

379
0:13:47.200 --> 0:13:52.860
So one way is that you can have dependencies where basically you have a package itself

380
0:13:52.860 --> 0:13:57.200
that is innocent, doesn't do anything bad, but it includes a package as a dependency

381
0:13:57.200 --> 0:13:58.200
that is malicious.

382
0:13:58.200 --> 0:14:02.760
And in this situation, you might have the original package behaving as normal, but actually

383
0:14:02.760 --> 0:14:06.520
that's just to avoid suspicion, but the actual second package is the malware.

384
0:14:06.520 --> 0:14:09.800
And we'll see an example of that very soon, and we'll see a live example depending on

385
0:14:09.800 --> 0:14:11.840
how good the Wi-Fi is in here.

386
0:14:11.840 --> 0:14:15.000
So there's also malicious commits over time.

387
0:14:15.000 --> 0:14:18.600
And this is another real attack vector.

388
0:14:18.600 --> 0:14:20.540
This is not so based on type of squatting.

389
0:14:20.540 --> 0:14:24.080
This is based on other elements of trust and abuse.

390
0:14:24.080 --> 0:14:26.120
So first of all, the project might be safe.

391
0:14:26.120 --> 0:14:27.240
Nothing wrong with it.

392
0:14:27.240 --> 0:14:28.720
But then builds up a user base.

393
0:14:28.720 --> 0:14:29.720
It's a useful package.

394
0:14:29.720 --> 0:14:30.800
People start to use it.

395
0:14:30.800 --> 0:14:33.640
And eventually maybe malware gets added.

396
0:14:33.640 --> 0:14:36.140
And this was the case with a package called FastAPI Toolkit.

397
0:14:36.140 --> 0:14:39.720
So if we've heard of FastAPI, there was a toolkit package which was adding some useful

398
0:14:39.720 --> 0:14:40.720
stuff.

399
0:14:40.720 --> 0:14:46.520
And the toolkit package eventually in version 0.27 actually added some malware, which has

400
0:14:46.520 --> 0:14:47.520
now been rolled back.

401
0:14:47.520 --> 0:14:50.160
But as I'll show you later, that doesn't mean you don't get that malware.

402
0:14:50.160 --> 0:14:52.960
I had an ooh, yeah.

403
0:14:52.960 --> 0:14:55.520
Ooh, ooh, it got me to, it shot me to my core.

404
0:14:55.520 --> 0:14:57.840
It shot me to the very depths of my soul.

405
0:14:57.840 --> 0:15:00.560
I've gone very Manchester all of a sudden.

406
0:15:00.560 --> 0:15:01.560
Right.

407
0:15:01.560 --> 0:15:05.000
The other way this thing can work, come in, come in, join us, join us.

408
0:15:05.000 --> 0:15:06.000
Move that way.

409
0:15:06.000 --> 0:15:07.480
It's the shift left principle.

410
0:15:07.480 --> 0:15:11.760
Okay, so the other way this can work is that a repo might get a new maintainer.

411
0:15:11.760 --> 0:15:16.640
So somebody who's starting to contribute to the repo in a useful way.

412
0:15:16.640 --> 0:15:18.240
And they say, hey, can I just get some admin access?

413
0:15:18.240 --> 0:15:19.240
I want to maintain this repo.

414
0:15:19.240 --> 0:15:20.240
I want to take something over.

415
0:15:20.240 --> 0:15:21.240
Okay, awesome.

416
0:15:21.240 --> 0:15:22.240
Sure.

417
0:15:22.240 --> 0:15:23.840
Oh, oh no, this person added malware.

418
0:15:23.840 --> 0:15:24.840
What a surprise.

419
0:15:24.840 --> 0:15:26.840
What a coincidence.

420
0:15:26.840 --> 0:15:28.720
And this is a genuine and real thing that does happen.

421
0:15:28.720 --> 0:15:30.120
Now I want to drink some more water.

422
0:15:30.120 --> 0:15:32.160
So I'm going to show you a pretty slide with a cute snake on it.

423
0:15:32.160 --> 0:15:33.160
It's now jacking.

424
0:15:33.160 --> 0:15:34.160
Look at the cute snake.

425
0:15:34.160 --> 0:15:37.920
I'm going to get hypnotized by it while I drink this water.

426
0:15:37.920 --> 0:15:39.280
Sick.

427
0:15:39.280 --> 0:15:40.280
Thank you.

428
0:15:40.280 --> 0:15:41.280
Right.

429
0:15:41.280 --> 0:15:42.280
Have we heard of star jacking?

430
0:15:42.280 --> 0:15:43.280
Is that something that we're familiar with?

431
0:15:43.280 --> 0:15:44.280
Is it a term?

432
0:15:44.280 --> 0:15:45.280
Shaken heads.

433
0:15:45.280 --> 0:15:46.280
Okay, perfect.

434
0:15:46.280 --> 0:15:47.280
Ten minutes left.

435
0:15:47.280 --> 0:15:48.280
Really?

436
0:15:48.280 --> 0:15:49.280
Oh no.

437
0:15:49.280 --> 0:15:50.280
Okay, we're going to be hauling.

438
0:15:50.280 --> 0:15:51.280
Okay, right.

439
0:15:51.280 --> 0:15:52.280
Star jacking.

440
0:15:52.280 --> 0:15:53.280
What is it?

441
0:15:53.280 --> 0:15:54.280
I'll tell you what it is.

442
0:15:54.280 --> 0:15:56.720
On PyPy, they don't verify the URL that you give as the project URL.

443
0:15:56.720 --> 0:15:59.920
And that means you can exploit that.

444
0:15:59.920 --> 0:16:00.920
So quick one here.

445
0:16:00.920 --> 0:16:01.920
I'll tell you the answer.

446
0:16:01.920 --> 0:16:03.480
We don't have time.

447
0:16:03.480 --> 0:16:04.800
First tool belt or tool belt request.

448
0:16:04.800 --> 0:16:08.040
One of these is an actual tooling package for request.

449
0:16:08.040 --> 0:16:09.040
It's the top one.

450
0:16:09.040 --> 0:16:10.040
The bottom one is malware.

451
0:16:10.040 --> 0:16:11.040
How do I know?

452
0:16:11.040 --> 0:16:12.040
Because I made it.

453
0:16:12.040 --> 0:16:13.040
And it's on PyPy.

454
0:16:13.040 --> 0:16:14.040
That's how I know.

455
0:16:14.040 --> 0:16:17.000
But we can see here if we look at the page on PyPy, look at these stars.

456
0:16:17.000 --> 0:16:18.000
Look at them.

457
0:16:18.000 --> 0:16:19.000
I've got 900 stars.

458
0:16:19.000 --> 0:16:20.000
I only did it yesterday.

459
0:16:20.000 --> 0:16:21.000
I'm that popular.

460
0:16:21.000 --> 0:16:22.000
And you can see this is a real thing.

461
0:16:22.000 --> 0:16:23.960
So if you go and check out a package, you can get screwed this way.

462
0:16:23.960 --> 0:16:26.720
So think about it when you look at this, right?

463
0:16:26.720 --> 0:16:28.120
It's a real problem.

464
0:16:28.120 --> 0:16:29.120
Okay.

465
0:16:29.120 --> 0:16:30.120
Right.

466
0:16:30.120 --> 0:16:31.120
We are pushing for time.

467
0:16:31.120 --> 0:16:32.520
So I'll say a typical chain of events that happens.

468
0:16:32.520 --> 0:16:36.960
A user installs a dodgy package that's been type-exported or in other ways confused.

469
0:16:36.960 --> 0:16:38.880
It depends on a malicious one.

470
0:16:38.880 --> 0:16:39.880
That package runs.

471
0:16:39.880 --> 0:16:46.000
It decodes some basic code which downloads some true malware from a remote server.

472
0:16:46.000 --> 0:16:47.640
The upshot of it is very sad snake.

473
0:16:47.640 --> 0:16:48.640
Hello.

474
0:16:48.640 --> 0:16:50.840
The upshot of it is very sad snake.

475
0:16:50.840 --> 0:16:52.840
So let's show an example.

476
0:16:52.840 --> 0:16:53.840
That's what we're here for.

477
0:16:53.840 --> 0:16:54.840
We want to see my machine get screwed.

478
0:16:54.840 --> 0:16:55.840
That's why we're here.

479
0:16:55.840 --> 0:16:56.840
That's why we're all on this talk.

480
0:16:56.840 --> 0:16:57.840
That's why we're in the full room.

481
0:16:57.840 --> 0:16:58.840
Yeah.

482
0:16:58.840 --> 0:16:59.840
Yeah.

483
0:16:59.840 --> 0:17:00.840
Yeah.

484
0:17:00.840 --> 0:17:01.840
Come on, boys.

485
0:17:01.840 --> 0:17:02.840
So right.

486
0:17:02.840 --> 0:17:05.600
I said I work for this company, right?

487
0:17:05.600 --> 0:17:07.360
And I maintain this particular SDK.

488
0:17:07.360 --> 0:17:08.360
You can look at it if you want.

489
0:17:08.360 --> 0:17:10.520
I just put the QR code in again because they pay for my flight.

490
0:17:10.520 --> 0:17:11.520
That's why I did that.

491
0:17:11.520 --> 0:17:13.200
You can scan it if you want.

492
0:17:13.200 --> 0:17:15.680
But the reason my colleague didn't trust me earlier is because I made a version of this

493
0:17:15.680 --> 0:17:17.920
called not the Vonage Python SDK.

494
0:17:17.920 --> 0:17:22.000
I didn't want to make it too obviously type-awable because I actually don't want someone downloading

495
0:17:22.000 --> 0:17:23.000
this.

496
0:17:23.000 --> 0:17:24.000
But this is a real package.

497
0:17:24.000 --> 0:17:25.000
I uploaded.

498
0:17:25.000 --> 0:17:26.000
You can see it looks similar.

499
0:17:26.000 --> 0:17:29.200
It has the same number of stars as the actual package.

500
0:17:29.200 --> 0:17:31.600
So again, it looks pretty legit.

501
0:17:31.600 --> 0:17:33.720
But I want to show you what happens if you download that.

502
0:17:33.720 --> 0:17:34.720
So that's the plan.

503
0:17:34.720 --> 0:17:36.720
So just to summarize, we got these two.

504
0:17:36.720 --> 0:17:40.000
We got these two packages here that I've uploaded to PyPy.

505
0:17:40.000 --> 0:17:43.840
As of yesterday, I had to make a fake account because they deleted my first set.

506
0:17:43.840 --> 0:17:44.840
That's not a joke.

507
0:17:44.840 --> 0:17:45.840
I had a lot.

508
0:17:45.840 --> 0:17:48.920
I didn't get to go to this conference because I was redoing my malware.

509
0:17:48.920 --> 0:17:52.280
So anyway, the point is here, we've got these two packages.

510
0:17:52.280 --> 0:17:55.440
And what I want to do is show you what happens when you run them.

511
0:17:55.440 --> 0:17:56.440
Can you?

512
0:17:56.440 --> 0:17:57.440
Nope.

513
0:17:57.440 --> 0:17:58.440
I've got a...

514
0:17:58.440 --> 0:17:59.440
Oh, dear.

515
0:17:59.440 --> 0:18:00.440
We're going to have a problem.

516
0:18:00.440 --> 0:18:01.440
I'm going to drag you over there.

517
0:18:01.440 --> 0:18:02.440
It does.

518
0:18:02.440 --> 0:18:03.440
Great.

519
0:18:03.440 --> 0:18:04.960
There's a thing already.

520
0:18:04.960 --> 0:18:08.320
So we can see here, this is going to be very difficult to manage.

521
0:18:08.320 --> 0:18:10.320
Essentially, this is my Python SDK.

522
0:18:10.320 --> 0:18:13.080
And we can see here in the setup Py, it's normal.

523
0:18:13.080 --> 0:18:16.600
Except for the fact here, it includes tool belt requests, which is a new dependency that

524
0:18:16.600 --> 0:18:17.600
wasn't there before.

525
0:18:17.600 --> 0:18:20.800
And we can see in the client class here, I've got request util.

526
0:18:20.800 --> 0:18:22.640
This is a random function I've imported.

527
0:18:22.640 --> 0:18:23.640
It doesn't do anything.

528
0:18:23.640 --> 0:18:26.200
But what's important there is I've imported tool belt requests.

529
0:18:26.200 --> 0:18:27.200
Can we all see that?

530
0:18:27.200 --> 0:18:28.200
Is that big enough at the back?

531
0:18:28.200 --> 0:18:29.200
Great stuff.

532
0:18:29.200 --> 0:18:30.200
Okay.

533
0:18:30.200 --> 0:18:31.200
Awesome.

534
0:18:31.200 --> 0:18:33.080
So I can actually go and where's my mouse?

535
0:18:33.080 --> 0:18:34.080
I'll show you.

536
0:18:34.080 --> 0:18:35.760
I've got this one on here.

537
0:18:35.760 --> 0:18:37.960
This is going to be quite a lot of dragging and clicking.

538
0:18:37.960 --> 0:18:39.980
This is my malware package.

539
0:18:39.980 --> 0:18:41.920
This is tool belt requests.

540
0:18:41.920 --> 0:18:45.720
And we can see here that this setup Py looks normal.

541
0:18:45.720 --> 0:18:46.960
Request util looks fine.

542
0:18:46.960 --> 0:18:47.960
Nothing happens in here.

543
0:18:47.960 --> 0:18:50.120
If we go to init Py, again, looks normal.

544
0:18:50.120 --> 0:18:51.120
Where's the malware?

545
0:18:51.120 --> 0:18:55.760
Well, let's scroll over a little bit, shall we?

546
0:18:55.760 --> 0:18:56.760
And I say this.

547
0:18:56.760 --> 0:18:59.880
This is a legitimate technique that is used by bad actors.

548
0:18:59.880 --> 0:19:00.880
This is real.

549
0:19:00.880 --> 0:19:08.400
So if we scroll over, what do we see?

550
0:19:08.400 --> 0:19:10.440
Oh, look, a base 64 encoded payload.

551
0:19:10.440 --> 0:19:11.440
What could this be?

552
0:19:11.440 --> 0:19:12.440
Who knows?

553
0:19:12.440 --> 0:19:13.440
Right.

554
0:19:13.440 --> 0:19:17.000
So this is what we end up with, right?

555
0:19:17.000 --> 0:19:21.040
And what happens is this command will decode that and then it will run it.

556
0:19:21.040 --> 0:19:26.280
And so because of the first package what we had was this import statement here, it will

557
0:19:26.280 --> 0:19:28.040
run as soon as we import the first package.

558
0:19:28.040 --> 0:19:31.320
And the reason for that is that actually in the init Py file we've got this import of

559
0:19:31.320 --> 0:19:32.320
everything for clients.

560
0:19:32.320 --> 0:19:35.800
So basically when we import a package, we believe it's called Vonage, which inherently

561
0:19:35.800 --> 0:19:38.840
the module, the package itself is called Vonage still.

562
0:19:38.840 --> 0:19:41.940
So a user may not know that they've downloaded the wrong package at this point.

563
0:19:41.940 --> 0:19:45.820
You will download and install and then use and activate that malware.

564
0:19:45.820 --> 0:19:47.760
So what's left to do?

565
0:19:47.760 --> 0:19:48.760
Check off malware.

566
0:19:48.760 --> 0:19:50.520
Let's get some malware going.

567
0:19:50.520 --> 0:19:51.520
Right.

568
0:19:51.520 --> 0:19:54.120
And we've got this up here.

569
0:19:54.120 --> 0:19:57.560
So I've used a blank one because I'm hoping we can download it live.

570
0:19:57.560 --> 0:19:58.800
So let's do that.

571
0:19:58.800 --> 0:20:02.120
Can I try this while not looking?

572
0:20:02.120 --> 0:20:07.200
Not the Vonage Python SDK.

573
0:20:07.200 --> 0:20:08.200
Okay.

574
0:20:08.200 --> 0:20:10.640
Wi-Fi is working nice.

575
0:20:10.640 --> 0:20:11.640
Okay.

576
0:20:11.640 --> 0:20:14.160
So this is a blank VM that I've got here.

577
0:20:14.160 --> 0:20:18.100
We can now see if I do a pip list.

578
0:20:18.100 --> 0:20:21.760
We can see that I've got tool belt requests in here, which is my malware.

579
0:20:21.760 --> 0:20:25.040
And we can see here that I've got not the Vonage Python SDK.

580
0:20:25.040 --> 0:20:26.040
Okay.

581
0:20:26.040 --> 0:20:28.040
So now if I open up a Python shell, cool.

582
0:20:28.040 --> 0:20:32.560
And if I actually import that, what's going to happen?

583
0:20:32.560 --> 0:20:33.560
Import Vonage.

584
0:20:33.560 --> 0:20:36.560
What are we going to do?

585
0:20:36.560 --> 0:20:40.120
Oh, wait a minute.

586
0:20:40.120 --> 0:20:41.120
It's done it on my off.

587
0:20:41.120 --> 0:20:43.200
This demo would have been so cool if I just mirrored my screens.

588
0:20:43.200 --> 0:20:44.200
Where's my mouse?

589
0:20:44.200 --> 0:20:45.200
I'll show you what it did.

590
0:20:45.200 --> 0:20:46.200
I'll show you what it did.

591
0:20:46.200 --> 0:20:47.760
Can I do that?

592
0:20:47.760 --> 0:20:48.760
No, I can't.

593
0:20:48.760 --> 0:20:51.760
I need to do it this way.

594
0:20:51.760 --> 0:20:55.320
I'll show you right now.

595
0:20:55.320 --> 0:20:59.000
All righty.

596
0:20:59.000 --> 0:21:07.520
So that's what I want to show you for now with that.

597
0:21:07.520 --> 0:21:09.920
But because we don't have much time, I'm going to actually tell you now I've spent most of

598
0:21:09.920 --> 0:21:11.560
my time telling you what screws you up.

599
0:21:11.560 --> 0:21:14.440
I'm now going to tell you how you can protect yourself a little bit.

600
0:21:14.440 --> 0:21:18.080
So thank you, Mr. Ashley, for your once again, your dedicated service.

601
0:21:18.080 --> 0:21:21.360
It actually won't play because the Wi-Fi is not fast enough.

602
0:21:21.360 --> 0:21:26.600
But you can imagine it in your head if you want.

603
0:21:26.600 --> 0:21:28.360
So right.

604
0:21:28.360 --> 0:21:29.440
Now we're back here.

605
0:21:29.440 --> 0:21:30.440
Let's talk about protecting ourselves.

606
0:21:30.440 --> 0:21:31.440
Right.

607
0:21:31.440 --> 0:21:32.440
Again, adorable snake.

608
0:21:32.440 --> 0:21:33.440
That's my water break.

609
0:21:33.440 --> 0:21:35.040
Snake for the break.

610
0:21:35.040 --> 0:21:36.040
Okay.

611
0:21:36.040 --> 0:21:39.400
So as maintainers, if you maintain a package and you don't want your users to get the wrong

612
0:21:39.400 --> 0:21:41.400
thing like me, what can you do?

613
0:21:41.400 --> 0:21:44.360
Well, your dependencies might become compromised, right?

614
0:21:44.360 --> 0:21:48.200
So you need to think about how you can look for those compromises and deal with those.

615
0:21:48.200 --> 0:21:52.520
So this is the case where maybe a patchy, like fast API toolkit becomes malicious over

616
0:21:52.520 --> 0:21:54.600
time or there's some vulnerability that's discovered.

617
0:21:54.600 --> 0:21:57.200
In that case, automated scanning tools can help you, right?

618
0:21:57.200 --> 0:21:58.200
Five minutes left.

619
0:21:58.200 --> 0:21:59.200
Okay.

620
0:21:59.200 --> 0:22:00.200
No worries.

621
0:22:00.200 --> 0:22:01.200
We got this.

622
0:22:01.200 --> 0:22:02.200
We're a team.

623
0:22:02.200 --> 0:22:03.200
I appreciate you gave me a little more.

624
0:22:03.200 --> 0:22:04.200
I like that.

625
0:22:04.200 --> 0:22:05.200
Okay.

626
0:22:05.200 --> 0:22:06.200
So right.

627
0:22:06.200 --> 0:22:07.200
So first of all, there are things to use.

628
0:22:07.200 --> 0:22:08.200
We use this.

629
0:22:08.200 --> 0:22:09.520
We give these guys an awful lot of money.

630
0:22:09.520 --> 0:22:11.880
So if you want to do the same, please feel free.

631
0:22:11.880 --> 0:22:12.880
I don't know.

632
0:22:12.880 --> 0:22:13.880
I'm sponsored by them.

633
0:22:13.880 --> 0:22:14.880
There's also dependables.

634
0:22:14.880 --> 0:22:19.480
There's other services that will scan your repos and check and see if there's any malware

635
0:22:19.480 --> 0:22:23.280
or any CVs that might provide vulnerabilities.

636
0:22:23.280 --> 0:22:27.440
Also as maintainers, another cute snake, you might want to consider defensively type of

637
0:22:27.440 --> 0:22:31.240
squatting which is where you preemptively type of squat your own stuff like I did there

638
0:22:31.240 --> 0:22:33.120
with not the Vonage Python SDK.

639
0:22:33.120 --> 0:22:35.520
You might do that yourself with your own package.

640
0:22:35.520 --> 0:22:38.120
You might give something similar typos or confusions.

641
0:22:38.120 --> 0:22:39.680
You might want to make those yourself.

642
0:22:39.680 --> 0:22:42.680
Oh, now it plays.

643
0:22:42.680 --> 0:22:53.720
How do I actually turn it off?

644
0:22:53.720 --> 0:23:03.200
I actually don't know what that's up.

645
0:23:03.200 --> 0:23:04.200
Wow.

646
0:23:04.200 --> 0:23:05.200
Okay.

647
0:23:05.200 --> 0:23:06.200
Wow.

648
0:23:06.200 --> 0:23:08.760
I did not think it would go like this.

649
0:23:08.760 --> 0:23:10.480
This is my second proper talk.

650
0:23:10.480 --> 0:23:11.480
Right.

651
0:23:11.480 --> 0:23:15.440
When you preemptively type of squatting, that means you can save the packages that you're

652
0:23:15.440 --> 0:23:16.440
dealing with.

653
0:23:16.440 --> 0:23:17.440
Right.

654
0:23:17.440 --> 0:23:20.480
So there was a person, William Bernstein, who decided to take some of this into his

655
0:23:20.480 --> 0:23:24.200
own hands and he type of squatted 1,000 packages.

656
0:23:24.200 --> 0:23:28.640
In two years, they got over 500,000 downloads which shows how useful that technique was

657
0:23:28.640 --> 0:23:32.360
to stop those $500,000 potentially going to malware.

658
0:23:32.360 --> 0:23:33.360
Right.

659
0:23:33.360 --> 0:23:35.560
As package users, we've got other things we can do.

660
0:23:35.560 --> 0:23:39.720
The obvious one here, if you type something in, you're at risk.

661
0:23:39.720 --> 0:23:42.720
You might want to look at how you do that.

662
0:23:42.720 --> 0:23:45.960
What is obviously maybe a good practice is store from a file so you can check what you've

663
0:23:45.960 --> 0:23:46.960
written.

664
0:23:46.960 --> 0:23:47.960
Vet your dependencies if you can.

665
0:23:47.960 --> 0:23:52.440
And, again, you might want to use those automated scanning tools.

666
0:23:52.440 --> 0:23:55.560
Now if you're using a mirror, you might want to check the latest safe version.

667
0:23:55.560 --> 0:23:59.440
This is really important because if you're using a mirror, what can actually happen?

668
0:23:59.440 --> 0:24:01.800
I'll give you the fast API example again.

669
0:24:01.800 --> 0:24:03.320
Basically, a mirror site.

670
0:24:03.320 --> 0:24:05.720
For example, if you're in an enterprise and you download all your stuff that's cached

671
0:24:05.720 --> 0:24:11.120
at a mirror site, you can end up in a situation where, for example, 0.27 is malware, 0.26

672
0:24:11.120 --> 0:24:12.120
is not.

673
0:24:12.120 --> 0:24:16.840
When that was discovered, the whole on PyPy went back to 0.26, but in the mirrors, they

674
0:24:16.840 --> 0:24:19.960
often configured so they only take the latest version.

675
0:24:19.960 --> 0:24:22.280
In that case, you'd not get that safe version.

676
0:24:22.280 --> 0:24:24.720
It would keep the malware on your mirror.

677
0:24:24.720 --> 0:24:28.160
Just consider that as well if that is how you install stuff.

678
0:24:28.160 --> 0:24:31.760
Because I've got two minutes left, I'm going to sum up really quickly.

679
0:24:31.760 --> 0:24:36.200
First of all, type of squatting on PyPy is a real attack vector.

680
0:24:36.200 --> 0:24:39.760
So benign packages that become malicious, as we just said.

681
0:24:39.760 --> 0:24:44.080
So what you should do is vet your dependencies really carefully.

682
0:24:44.080 --> 0:24:47.400
And if you can, use automated vulnerability scanning tools.

683
0:24:47.400 --> 0:24:51.520
If you really have to, you might want to consider defensive type of squatting because that's

684
0:24:51.520 --> 0:24:52.920
a way to protect your users.

685
0:24:52.920 --> 0:24:56.240
But also be careful when you're using mirrors.

686
0:24:56.240 --> 0:24:59.120
So the final thing I just want to say, first of all, is never get security up.

687
0:24:59.120 --> 0:25:02.760
It will never let you down, run around, or even.

688
0:25:02.760 --> 0:25:04.360
And I quote, desert you.

689
0:25:04.360 --> 0:25:10.360
Thank you very much.

690
0:25:10.360 --> 0:25:14.760
Thank you.

691
0:25:14.760 --> 0:25:25.040
So, just quickly, if you want to see the slides or any resources, they are there.

692
0:25:25.040 --> 0:25:27.200
And this is just the summary because the other one wasn't super useful.

693
0:25:27.200 --> 0:25:29.160
If you want to tweet me and ask me questions, feel free.

694
0:25:29.160 --> 0:25:30.160
I'm an idiot.

695
0:25:30.160 --> 0:25:31.160
Tweet me, it's fine.

696
0:25:31.160 --> 0:25:32.160
Okay.

697
0:25:32.160 --> 0:25:33.160
That's me.

698
0:25:33.160 --> 0:25:34.720
If there is anything else, any questions, shout them out to me and I'll attempt to answer

699
0:25:34.720 --> 0:25:38.600
them.

700
0:25:38.600 --> 0:25:40.600
Thank you, Max.

701
0:25:40.600 --> 0:25:44.240
Now I really want to install your SDK.

702
0:25:44.240 --> 0:26:00.120
I haven't seen that video enough.

