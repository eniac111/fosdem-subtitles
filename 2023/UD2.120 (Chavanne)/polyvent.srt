1
0:00:00.000 --> 0:00:08.680
Thank you everybody for being here.

2
0:00:08.680 --> 0:00:10.520
I know it's the end of the day.

3
0:00:10.520 --> 0:00:12.520
It's been a long day.

4
0:00:12.520 --> 0:00:13.520
So thank you.

5
0:00:13.520 --> 0:00:18.360
I'd like to talk about the Polyvent Free Libre Open Source ventilator.

6
0:00:18.360 --> 0:00:22.080
This is hardware in a little different sense than is used in this room.

7
0:00:22.080 --> 0:00:26.080
Normally when you say hardware at this conference you mean chips and VLSI stuff, but this is

8
0:00:26.080 --> 0:00:29.440
an electromechanical hardware device.

9
0:00:29.440 --> 0:00:32.480
This talk is co-authored with Dr. Victor Soutrin.

10
0:00:32.480 --> 0:00:34.360
Victor, can you raise your hand?

11
0:00:34.360 --> 0:00:40.580
And Antal Zidarwick is our chief mechanical engineer for the chassis part.

12
0:00:40.580 --> 0:00:44.400
If you meet us after the talk we'll be happy to answer questions for you.

13
0:00:44.400 --> 0:00:48.800
And we are trying to recruit software engineers and electrical and mechanical engineers to

14
0:00:48.800 --> 0:00:52.520
work on the project as well.

15
0:00:52.520 --> 0:00:54.560
So I am Robert Reed.

16
0:00:54.560 --> 0:00:59.200
I'm the founder of Public Invention, which is a U.S. 501c3 public charity.

17
0:00:59.200 --> 0:01:02.280
Our motto is to invent in the public for the public.

18
0:01:02.280 --> 0:01:06.520
I think this conference will appreciate that we're trying to take the principles of open

19
0:01:06.520 --> 0:01:12.060
source software development and apply it not only to chip design but to actual hardware

20
0:01:12.060 --> 0:01:14.900
inventions.

21
0:01:14.900 --> 0:01:17.480
So I'd like to create a setting.

22
0:01:17.480 --> 0:01:25.200
In the spring of 2020 in the United States so many people had died of COVID-19 so quickly

23
0:01:25.200 --> 0:01:32.440
in New York that they had to use refrigerated trucks as temporary morgues for that purpose.

24
0:01:32.440 --> 0:01:38.280
At that time there was a genuine belief that the western world might need a million mechanical

25
0:01:38.280 --> 0:01:41.100
ventilators to try to keep people alive.

26
0:01:41.100 --> 0:01:46.560
That turned out not to be true but it wasn't erroneous at the time based on what we knew

27
0:01:46.560 --> 0:01:49.760
from the disease progression in northern Italy.

28
0:01:49.760 --> 0:01:56.760
What we didn't know at the time was that social distancing and lockdowns would work and also

29
0:01:56.760 --> 0:02:02.720
doctors decided they didn't need to ventilate people as early with COVID as they had previously

30
0:02:02.720 --> 0:02:03.720
thought.

31
0:02:03.720 --> 0:02:09.840
Nonetheless, a very large number of humanitarian engineering teams all over the world attempted

32
0:02:09.840 --> 0:02:13.600
to make emergency ventilators to solve this problem.

33
0:02:13.600 --> 0:02:21.800
It was kind of a global effort and Victor and a young man who was 16 at the time started

34
0:02:21.800 --> 0:02:26.480
working on their own ventilator in the same effort.

35
0:02:26.480 --> 0:02:29.600
Now they started with a bellows based design.

36
0:02:29.600 --> 0:02:31.600
We're going to talk about that.

37
0:02:31.600 --> 0:02:38.160
The thing they designed, the Polyvent was specifically designed to talk about fragile

38
0:02:38.160 --> 0:02:39.240
supply chains.

39
0:02:39.240 --> 0:02:44.040
So it was designed to be constructible within a low and middle income country.

40
0:02:44.040 --> 0:02:48.240
That's one reason they went with bellows in the initial design.

41
0:02:48.240 --> 0:02:53.640
Originally they weren't necessarily embracing open source licensing because they didn't

42
0:02:53.640 --> 0:02:55.240
know that much about it.

43
0:02:55.240 --> 0:02:59.480
Everyone sort of believed, well, we're going to need large firms to make a lot of money

44
0:02:59.480 --> 0:03:04.720
and if you have an open source license on it they won't want to use your product.

45
0:03:04.720 --> 0:03:09.640
How do we know that 100 humanitarian engineering teams started?

46
0:03:09.640 --> 0:03:16.760
We made a spreadsheet which evaluated all of the open source ventilators along a wide

47
0:03:16.760 --> 0:03:21.680
variety of dimensions here.

48
0:03:21.680 --> 0:03:27.240
Now, at the time and still today what we're trying to do is create open source medical

49
0:03:27.240 --> 0:03:28.740
devices.

50
0:03:28.740 --> 0:03:34.480
That is harder than making open source hardware, which is harder than making open source software,

51
0:03:34.480 --> 0:03:39.600
which is harder than copywriting text, both from a legal point of view and from an intellectual

52
0:03:39.600 --> 0:03:40.600
point of view.

53
0:03:40.600 --> 0:03:45.320
The cost of development for medical things goes up because you're attempting to produce

54
0:03:45.320 --> 0:03:47.160
regulated devices.

55
0:03:47.160 --> 0:03:54.120
Now originally the Polyvent team was attempting to do that, but at that time in the United

56
0:03:54.120 --> 0:03:57.360
States there was an emergency use authorization.

57
0:03:57.360 --> 0:04:03.080
So there was a belief that we might not need to do all the things that the FDA would normally

58
0:04:03.080 --> 0:04:07.080
require.

59
0:04:07.080 --> 0:04:12.880
So while this was going on, public invention published the Open Medical Technology Manifesto,

60
0:04:12.880 --> 0:04:18.560
which is the open, shareable, repairable medical technology will make us all healthier.

61
0:04:18.560 --> 0:04:25.200
The Polyvent ventilator is aligned with that and I invite you all to find this and sign

62
0:04:25.200 --> 0:04:28.320
it if you agree with it.

63
0:04:28.320 --> 0:04:36.320
So the Polyvent team began working on a ventilator and they had some success in LENSE and they

64
0:04:36.320 --> 0:04:41.200
designed a very extensible system that we're going to talk about.

65
0:04:41.200 --> 0:04:47.240
But the global pandemic urgency was dissipating by about six months from that spring.

66
0:04:47.240 --> 0:04:53.360
So by October of that first year people were no longer excited about the idea.

67
0:04:53.360 --> 0:04:57.600
So the thing that I'm most proud of, perhaps, of this team is that they just kept going

68
0:04:57.600 --> 0:05:01.680
and continued to develop the ventilator.

69
0:05:01.680 --> 0:05:05.640
So at that time they joined public invention.

70
0:05:05.640 --> 0:05:09.760
Basically in exchange for making it fully open source, public invention began to start

71
0:05:09.760 --> 0:05:15.360
paying for parts and manual labor to support the development of the ventilator.

72
0:05:15.360 --> 0:05:19.360
It's also the case that I'm mostly a software guy.

73
0:05:19.360 --> 0:05:23.080
Another nonprofit, Helpful Engineering, had the ventilest software, which we're going to

74
0:05:23.080 --> 0:05:26.620
talk about, and the existing team didn't have any software.

75
0:05:26.620 --> 0:05:29.160
So it was a nice alliance.

76
0:05:29.160 --> 0:05:30.620
This is their original system.

77
0:05:30.620 --> 0:05:32.400
This was a fully functional ventilator.

78
0:05:32.400 --> 0:05:36.240
It uses dual bellows here.

79
0:05:36.240 --> 0:05:41.560
Bellows can be manufactured with 3D printers, so they can presumably be made in any country,

80
0:05:41.560 --> 0:05:42.560
was the idea.

81
0:05:42.560 --> 0:05:44.040
However, there were some problems.

82
0:05:44.040 --> 0:05:50.560
The bearings to drive the bellows up and down tended to wear out and there were some other

83
0:05:50.560 --> 0:05:52.120
improvements possible.

84
0:05:52.120 --> 0:05:54.440
We started to make those improvements.

85
0:05:54.440 --> 0:05:59.280
The big switch we made was to switch to a proportional valve-based system that used

86
0:05:59.280 --> 0:06:03.320
pressurized air and pressurized oxygen.

87
0:06:03.320 --> 0:06:08.000
This was inspired by Smith College in the United States, which is probably the premier

88
0:06:08.000 --> 0:06:10.620
women's college in the United States.

89
0:06:10.620 --> 0:06:13.880
They had made an award-winning ventilator called the Smith vent.

90
0:06:13.880 --> 0:06:14.880
They stopped.

91
0:06:14.880 --> 0:06:22.080
I don't know why, but we continued and have used the same basic technology.

92
0:06:22.080 --> 0:06:27.400
Now we already had a spirometer, the vent lawn, which was made by public invention.

93
0:06:27.400 --> 0:06:34.080
We sort of used that as part of our system, and eventually we started to redesign for

94
0:06:34.080 --> 0:06:38.360
education.

95
0:06:38.360 --> 0:06:44.640
So we started with the proportional valve on the left, which is a Burkitt proportional

96
0:06:44.640 --> 0:06:45.640
valve.

97
0:06:45.640 --> 0:06:49.480
It was really kind of an engineering mistake because it was larger than what we needed

98
0:06:49.480 --> 0:06:52.840
and the airflow was not as precise as what we needed.

99
0:06:52.840 --> 0:06:55.200
The valve on the right is difficult to source.

100
0:06:55.200 --> 0:06:57.240
It's made in the United States by IQ valve.

101
0:06:57.240 --> 0:07:02.520
It's a very precisely controlled proportional valve.

102
0:07:02.520 --> 0:07:05.600
Like all projects, we learned as we went along.

103
0:07:05.600 --> 0:07:11.120
This was what we called the Polyvent 1, even though it's after the bellows module.

104
0:07:11.120 --> 0:07:13.400
This was, again, fully functional.

105
0:07:13.400 --> 0:07:20.040
We performed some tests with professors of education in biomedical engineering.

106
0:07:20.040 --> 0:07:28.960
This system worked, but we decided to redesign it for education.

107
0:07:28.960 --> 0:07:33.720
So while this was going on, the COVID pandemic continues.

108
0:07:33.720 --> 0:07:38.800
In India around this time, there was a terrible, terrible spike of death.

109
0:07:38.800 --> 0:07:42.000
Now this was not due to a lack of ventilators.

110
0:07:42.000 --> 0:07:46.080
People say it was due to a lack of oxygen.

111
0:07:46.080 --> 0:07:49.680
We have also, public convention, have also worked on an oxygen concentrated.

112
0:07:49.680 --> 0:07:56.480
The reason I bring it up is that what we're attempting to do and what many of you are attempting

113
0:07:56.480 --> 0:08:00.840
to do in the software that you produce is to make the world better for a lot of people.

114
0:08:00.840 --> 0:08:07.520
Making open source medical devices is a new way, a new avenue for open source philosophy

115
0:08:07.520 --> 0:08:10.960
to make the world better for a very large number of people.

116
0:08:10.960 --> 0:08:15.240
It's quite a technical challenge, but that's why we're doing it.

117
0:08:15.240 --> 0:08:21.000
So based on educator feedback, we made a lighter single deck design.

118
0:08:21.000 --> 0:08:22.560
We made a transparent case.

119
0:08:22.560 --> 0:08:28.080
We made the inside spacious and modular so that students could look at it and you could

120
0:08:28.080 --> 0:08:29.680
also repair it more easily.

121
0:08:29.680 --> 0:08:32.320
You didn't have to take the whole thing apart.

122
0:08:32.320 --> 0:08:37.880
That is very different than the way professionally designed medical equipment is made.

123
0:08:37.880 --> 0:08:39.840
It's not made to be easy to repair.

124
0:08:39.840 --> 0:08:41.960
It's not made to be easy to understand.

125
0:08:41.960 --> 0:08:53.400
So it's quite a departure from what you would see in a normal for-profit sort of made device.

126
0:08:53.400 --> 0:08:59.120
We also, Nathaniel, did a really good job designing a modular card-based electronic

127
0:08:59.120 --> 0:09:00.360
control system.

128
0:09:00.360 --> 0:09:05.840
And this actually paid off when a second public convention team created a card that we were

129
0:09:05.840 --> 0:09:11.080
able to put into the device to control a general purpose alarm device which we're working on.

130
0:09:11.080 --> 0:09:17.080
And he did that, that team did that with no interaction with Victor's team just based

131
0:09:17.080 --> 0:09:19.720
on the documentation that we have.

132
0:09:19.720 --> 0:09:25.720
So this is the timeline and we've been getting, you know, better and better as we go along

133
0:09:25.720 --> 0:09:27.520
like most projects.

134
0:09:27.520 --> 0:09:32.160
In October, we did a classroom evaluation with 12 biomedical engineering students at

135
0:09:32.160 --> 0:09:36.320
Rice University in Houston, Texas in the United States.

136
0:09:36.320 --> 0:09:38.760
This is the device as it stands today.

137
0:09:38.760 --> 0:09:40.240
This is the Polyvent 2.

138
0:09:40.240 --> 0:09:43.680
That's what the students looked, used.

139
0:09:43.680 --> 0:09:50.000
As you can see, it actually uses an acrylic case so you can see all of the components.

140
0:09:50.000 --> 0:09:54.760
And I don't have a good layout diagram, but it's laid out in a way where it's physically

141
0:09:54.760 --> 0:09:59.040
modular as well as being electronically modular.

142
0:09:59.040 --> 0:10:03.720
The software is 2, of course, because we learned a lot from the open source software community

143
0:10:03.720 --> 0:10:05.320
on how to do this.

144
0:10:05.320 --> 0:10:11.920
So it's now our intention with the Polyvent to continue to eventually make a design basis

145
0:10:11.920 --> 0:10:15.200
that can be used for a medical ventilator.

146
0:10:15.200 --> 0:10:22.840
But we believe that by sort of infiltrating the research and education community, we have

147
0:10:22.840 --> 0:10:25.280
a better shot of eventually accomplishing that.

148
0:10:25.280 --> 0:10:31.640
So the Polyvent platform right now is for medical and veterinary doctors, but really

149
0:10:31.640 --> 0:10:34.560
it's for biomedical engineering students.

150
0:10:34.560 --> 0:10:38.160
Even you can teach business school classes on it.

151
0:10:38.160 --> 0:10:42.280
You can certainly do mechanical, electrical engineering, software engineering, and we

152
0:10:42.280 --> 0:10:50.160
consider ourselves firmly part of the emerging discipline of humanitarian engineering.

153
0:10:50.160 --> 0:10:54.360
So what we did to make the classroom instructor.

154
0:10:54.360 --> 0:10:56.240
I am not a teacher.

155
0:10:56.240 --> 0:10:58.600
I'm mostly a computer programmer.

156
0:10:58.600 --> 0:11:02.600
We made fake broken parts and we asked the students to turn their backs and we would

157
0:11:02.600 --> 0:11:07.360
install a fake broken part and then they would attempt to find it.

158
0:11:07.360 --> 0:11:11.760
Now this class they were taking is in fact a troubleshooting class.

159
0:11:11.760 --> 0:11:19.000
So it worked rather well and of the 12 students who were there, they really strongly believed

160
0:11:19.000 --> 0:11:21.680
that this would be useful in other universities.

161
0:11:21.680 --> 0:11:28.920
So it's our hope to sort of sell this at cost even though it's completely open source.

162
0:11:28.920 --> 0:11:30.560
Somebody could make it if they wanted to.

163
0:11:30.560 --> 0:11:34.400
All the physical designs, all the software designs are completely open.

164
0:11:34.400 --> 0:11:40.200
But making things like this in hardware requires, as one of the gentlemen in the previous talk,

165
0:11:40.200 --> 0:11:42.280
a certain amount of tooling and so forth.

166
0:11:42.280 --> 0:11:47.640
So people like a graduate school may find it easier to pay us $5,000 for one of these,

167
0:11:47.640 --> 0:11:54.320
which is sort of the hardware costs are about $2,000 and it takes some labor to put it together.

168
0:11:54.320 --> 0:11:57.880
It's kind of the cost for us to make it rather than build one themselves.

169
0:11:57.880 --> 0:11:59.420
But they could.

170
0:11:59.420 --> 0:12:04.760
They can build it and modify it themselves based on licenses that I'm sure you're all

171
0:12:04.760 --> 0:12:06.480
familiar with.

172
0:12:06.480 --> 0:12:11.560
So this is kind of a schematic of the design that you saw there physically.

173
0:12:11.560 --> 0:12:15.560
And the thing that's most important is Nathaniel did a really good job designing an electronic

174
0:12:15.560 --> 0:12:17.960
extensible card system.

175
0:12:17.960 --> 0:12:21.600
And this is based on an IEEE standard I'm not familiar with.

176
0:12:21.600 --> 0:12:27.840
But basically you plug slots into it and it exposes pins of the ESP32.

177
0:12:27.840 --> 0:12:34.160
So if you have a device that you would like to add to the ventilator, like a humidifier,

178
0:12:34.160 --> 0:12:41.920
a nebulizer, a heater, an additional set of instrumentation, you can just design a card

179
0:12:41.920 --> 0:12:43.600
and stick it in there.

180
0:12:43.600 --> 0:12:48.080
And that's what the general purpose alarm device team of public invention did.

181
0:12:48.080 --> 0:12:53.080
This is a physical photograph of how those things slide in there.

182
0:12:53.080 --> 0:12:59.440
This card right here is a card with a bunch of power transistors which control the solenoid

183
0:12:59.440 --> 0:13:02.600
valves which are in the system.

184
0:13:02.600 --> 0:13:05.640
Because obviously it takes 24 volts to do that.

185
0:13:05.640 --> 0:13:09.720
So now I'd like to talk about software.

186
0:13:09.720 --> 0:13:13.160
The software system is called ventOS.

187
0:13:13.160 --> 0:13:14.560
I didn't name it.

188
0:13:14.560 --> 0:13:16.800
Really it's not an operating system.

189
0:13:16.800 --> 0:13:19.120
But we kind of think of it that way.

190
0:13:19.120 --> 0:13:24.840
It runs on an ESP32 and it was created by a different nonprofit which I'm a board member

191
0:13:24.840 --> 0:13:30.280
of helpful engineering and some other people worked on it in particular Ben Coons.

192
0:13:30.280 --> 0:13:35.600
Now interestingly this was forked to make an oxygen concentrator which we have since

193
0:13:35.600 --> 0:13:37.880
quit working on called the OX.

194
0:13:37.880 --> 0:13:46.520
But that was forked to be used by me for NASA, the US National Aeronautics and Space Administration,

195
0:13:46.520 --> 0:13:50.160
to make a control system for a high tech ceramic oxygen generator.

196
0:13:50.160 --> 0:13:56.400
So a lot of times as I'm sure you guys understand open source code lives even if its initial

197
0:13:56.400 --> 0:13:58.360
purpose is not met.

198
0:13:58.360 --> 0:14:02.960
If you write good code that's documented with a good license you can use it for some other

199
0:14:02.960 --> 0:14:05.560
purpose and we're trying to do that.

200
0:14:05.560 --> 0:14:10.240
In fact Ben made a number of improvements that really need to come back into ventOS

201
0:14:10.240 --> 0:14:15.120
and I kind of need a volunteer to help me do that because there's always more software

202
0:14:15.120 --> 0:14:16.760
work to be done.

203
0:14:16.760 --> 0:14:21.160
So the ventOS architecture and this is where we're really talking about an embedded system

204
0:14:21.160 --> 0:14:27.360
that you guys will understand is a simple Arduino platform compiled with platform I.O.

205
0:14:27.360 --> 0:14:31.400
Configuration modes in platform I.O. set preprocessed and compiled time switches which give us

206
0:14:31.400 --> 0:14:37.120
a wide variety of hardware architectures we can compile into although the poly vent is

207
0:14:37.120 --> 0:14:43.680
effectively the only machine on which it really runs today but we could support other architectures.

208
0:14:43.680 --> 0:14:48.280
It almost doesn't run on an Arduino UNO because it's too big but technically it will run on

209
0:14:48.280 --> 0:14:49.800
an UNO.

210
0:14:49.800 --> 0:14:55.400
We use an ESP32, we have a pretty good hardware abstraction layer, the basic architecture

211
0:14:55.400 --> 0:15:01.240
is what's called a super loop or simple loop architecture and we believe that's appropriate

212
0:15:01.240 --> 0:15:08.560
for a life critical medical device like the one that we're designing.

213
0:15:08.560 --> 0:15:16.800
So ventOS claims to be a operating system that is universal.

214
0:15:16.800 --> 0:15:21.200
It's a universal platform for mechanical human ventilation.

215
0:15:21.200 --> 0:15:23.800
How is that possible?

216
0:15:23.800 --> 0:15:28.800
Well it's possible because all ventilators do almost exactly the same thing.

217
0:15:28.800 --> 0:15:33.760
They're relatively straightforward, they're simple devices.

218
0:15:33.760 --> 0:15:37.920
Simple doesn't mean easy because if you do something wrong the patient dies but they

219
0:15:37.920 --> 0:15:40.880
are still relatively simple devices.

220
0:15:40.880 --> 0:15:42.720
Thank you.

221
0:15:42.720 --> 0:15:48.560
In particular doctors normally want to vary the breaths per minute.

222
0:15:48.560 --> 0:15:51.680
As you become sicker you require more breaths per minute.

223
0:15:51.680 --> 0:15:53.480
You hope that doesn't happen.

224
0:15:53.480 --> 0:16:00.840
The inhalation time and the exhalation time ratio is varied for the comfort of the patient.

225
0:16:00.840 --> 0:16:05.800
If you are approaching death they may have to make that what would be very uncomfortable

226
0:16:05.800 --> 0:16:10.960
for a healthy person to try to keep you alive.

227
0:16:10.960 --> 0:16:15.200
Pressure controlled ventilation keeps constant pressure through the inhalation.

228
0:16:15.200 --> 0:16:21.360
You want that pressure to be low because high pressure can cause damage to your lungs but

229
0:16:21.360 --> 0:16:26.200
as you approach death that pressure may have to go up to try to keep you alive.

230
0:16:26.200 --> 0:16:32.280
Doctors I'm not a medical doctor, Victor is a physiologist not a medical doctor.

231
0:16:32.280 --> 0:16:34.280
Clinicians know how to balance these things.

232
0:16:34.280 --> 0:16:37.520
It's our desire to give them the power to do that.

233
0:16:37.520 --> 0:16:45.280
So basically you just blow air into the patient's lungs and then you stop and the lungs deflate

234
0:16:45.280 --> 0:16:46.280
on their own.

235
0:16:46.280 --> 0:16:49.360
That's the way positive pressure ventilation works.

236
0:16:49.360 --> 0:16:59.360
It's simple but you have to control all these things.

237
0:16:59.360 --> 0:17:03.840
So this is sort of a diagram of a universal ventilator.

238
0:17:03.840 --> 0:17:06.960
All ventilators are sort of the same in this sense.

239
0:17:06.960 --> 0:17:12.800
There's an air drive which produces air in one way or another and that's the most mechanical

240
0:17:12.800 --> 0:17:14.320
system that's part of it.

241
0:17:14.320 --> 0:17:19.160
There's a sense module and ours is completely separated in the sense that we use the vent

242
0:17:19.160 --> 0:17:22.760
mon which is a separate device that we would like to productize.

243
0:17:22.760 --> 0:17:24.120
It's not really a product.

244
0:17:24.120 --> 0:17:29.840
We gave a bunch away because we had a grant to give them away but it's basically a spirometer.

245
0:17:29.840 --> 0:17:33.800
It measures everything about human breath and if you connect it to the ventilator it

246
0:17:33.800 --> 0:17:36.920
allows you to see what the ventilator is doing.

247
0:17:36.920 --> 0:17:41.280
A controller is what this room would think of as the embedded system.

248
0:17:41.280 --> 0:17:43.680
That's where VentOS runs.

249
0:17:43.680 --> 0:17:51.640
Our interface is we use an Internet of Things based public data cloud and we're still working

250
0:17:51.640 --> 0:17:57.260
on aspects of the clinical interface.

251
0:17:57.260 --> 0:18:03.120
So if we think about philosophy, the Unix way, and of course I didn't write this, this

252
0:18:03.120 --> 0:18:07.800
is on Wikipedia, you can find this, is to write programs that do one thing and do it

253
0:18:07.800 --> 0:18:08.800
well.

254
0:18:08.800 --> 0:18:13.240
Write programs to work together and write programs to handle text streams because they're

255
0:18:13.240 --> 0:18:14.600
a universal interface.

256
0:18:14.600 --> 0:18:16.080
This is from the 70s.

257
0:18:16.080 --> 0:18:23.020
This is very old philosophy which has served the world in good stead because Linux and

258
0:18:23.020 --> 0:18:26.380
open source software is eating the world.

259
0:18:26.380 --> 0:18:31.200
How do you apply the same things to the kind of electro-mechanical devices that we're building?

260
0:18:31.200 --> 0:18:32.460
There aren't even chips.

261
0:18:32.460 --> 0:18:34.440
They're moving air around.

262
0:18:34.440 --> 0:18:37.400
Well, you attempt to do the same thing.

263
0:18:37.400 --> 0:18:40.600
You build machines that do one thing and do it well.

264
0:18:40.600 --> 0:18:43.960
That is not the way Johnson & Johnson would build a ventilator.

265
0:18:43.960 --> 0:18:47.000
They would put everything in the same case.

266
0:18:47.000 --> 0:18:49.420
But we're not Johnson & Johnson.

267
0:18:49.420 --> 0:18:50.880
We can do something different.

268
0:18:50.880 --> 0:18:57.680
So we make a physically separated device where physical components handle one component at

269
0:18:57.680 --> 0:19:01.000
a time and then they're integrated in a soft way.

270
0:19:01.000 --> 0:19:07.440
So by using digital control, we make them all sort of roboticizable or controllable

271
0:19:07.440 --> 0:19:11.800
by a controller so that we can use them and they can be reused in that way.

272
0:19:11.800 --> 0:19:15.920
And then in my experience, instead of handling text streams, the modern way to do this is

273
0:19:15.920 --> 0:19:21.120
you handle JSON objects that are communicated either via SBI or I2C.

274
0:19:21.120 --> 0:19:26.760
And that's kind of a universal control language that's easy for both programmers and the

275
0:19:26.760 --> 0:19:30.680
hardware devices to understand.

276
0:19:30.680 --> 0:19:32.680
So how realistic is this?

277
0:19:32.680 --> 0:19:38.160
I mean, that's debatable because we're nowhere close to having an FDA-based ventilator at

278
0:19:38.160 --> 0:19:39.160
the moment.

279
0:19:39.160 --> 0:19:42.360
However, we have done a lot with very little money.

280
0:19:42.360 --> 0:19:49.040
We built the Ventmon, which is kind of our most realized device because it's much easier

281
0:19:49.040 --> 0:19:50.920
than a ventilator, right?

282
0:19:50.920 --> 0:19:54.160
VentOS is an existing operating system.

283
0:19:54.160 --> 0:19:56.160
PolyVent is a ventilator.

284
0:19:56.160 --> 0:20:01.260
I'm very proud that we've defined two data standards based on JSON, the public invention

285
0:20:01.260 --> 0:20:05.600
respiratory data standard and the public convention respiratory control standard.

286
0:20:05.600 --> 0:20:07.200
Now, as you guys...

287
0:20:07.200 --> 0:20:11.000
I'm going to come back to this, but as you guys know, progress is often made through

288
0:20:11.000 --> 0:20:12.640
defining standards.

289
0:20:12.640 --> 0:20:17.240
It's often not very glamorous to do so, but the work of defining the standards is really

290
0:20:17.240 --> 0:20:22.360
what allows other people to take your work and utilize it in a standard way.

291
0:20:22.360 --> 0:20:25.840
In this case, we've done work that has not been recognized.

292
0:20:25.840 --> 0:20:30.100
No one else is using these standards yet, but I hope that will change.

293
0:20:30.100 --> 0:20:32.440
We tried to build an oxygen concentrator.

294
0:20:32.440 --> 0:20:34.840
We sort of stopped working on that.

295
0:20:34.840 --> 0:20:41.560
We also have vent display, which gives a complete dynamic display of breath plots and the things

296
0:20:41.560 --> 0:20:44.760
that clinicians need to do.

297
0:20:44.760 --> 0:20:50.400
If we map that to our diagram here, what we find is that the device that we're calling

298
0:20:50.400 --> 0:20:54.160
the ventilator really could be thought of as an air drive.

299
0:20:54.160 --> 0:20:56.400
It's the part that makes the air.

300
0:20:56.400 --> 0:21:01.240
We have a separate device, the ventmon, which can be used as the sense module, and we have

301
0:21:01.240 --> 0:21:06.840
a separate set of programs, which happens to be an IoT-defined public lake and some

302
0:21:06.840 --> 0:21:17.880
JavaScript that runs in a browser to do the clinical GUI aspects of the system.

303
0:21:17.880 --> 0:21:24.140
We're also designing a general purpose alarm device, as I'm sure you understand, in any

304
0:21:24.140 --> 0:21:32.160
intensive care unit situation, you have to produce alarms when the patient needs care.

305
0:21:32.160 --> 0:21:37.720
Now, that can occur because your machine has broken, or the battery has failed, or you've

306
0:21:37.720 --> 0:21:42.680
run out of power, or someone has tripped over a hose.

307
0:21:42.680 --> 0:21:43.680
That happens a lot.

308
0:21:43.680 --> 0:21:49.640
But it also can occur simply because the patient's condition is deteriorating.

309
0:21:49.640 --> 0:21:54.880
In any case, you have to be able to produce a device which can generically alert people

310
0:21:54.880 --> 0:21:58.520
to the fact that something has to be done.

311
0:21:58.520 --> 0:22:03.160
Following the Unix way adopted the hardware, our idea is to make a separately packageable

312
0:22:03.160 --> 0:22:08.520
device that could be used for a cat door, or a burglar alarm, or all kinds of other

313
0:22:08.520 --> 0:22:14.080
devices in hopes that we can build a community of practice using that, which will strengthen

314
0:22:14.080 --> 0:22:25.480
the use for medical alerts.

315
0:22:25.480 --> 0:22:34.960
Okay.

316
0:22:34.960 --> 0:22:38.200
So this is the software that I was talking about.

317
0:22:38.200 --> 0:22:39.660
This runs in a driver.

318
0:22:39.660 --> 0:22:42.960
This is what a browser, this is what is produced by the Ventmon.

319
0:22:42.960 --> 0:22:46.440
I probably should be showing a video, but this is actually dynamic.

320
0:22:46.440 --> 0:22:52.000
As the machine breathes or the patient breathes, you're seeing the pressure flow and various

321
0:22:52.000 --> 0:22:57.360
events like the measurement of the humidity and temperature, the end of the breath, the

322
0:22:57.360 --> 0:22:58.480
beginning of the breath.

323
0:22:58.480 --> 0:23:03.240
What you have on the right here is what a doctor in an ICU would typically compute about

324
0:23:03.240 --> 0:23:04.400
the breath traces.

325
0:23:04.400 --> 0:23:05.400
Okay.

326
0:23:05.400 --> 0:23:10.400
This is not super sophisticated, but the thing that I really like about it is it runs in

327
0:23:10.400 --> 0:23:14.400
a browser, so it's distributed generally.

328
0:23:14.400 --> 0:23:18.880
And then secondly, the software functionality of doing all these computations completely

329
0:23:18.880 --> 0:23:20.920
separated from the ventilator.

330
0:23:20.920 --> 0:23:25.240
In most devices, this is built into the panel of the ventilator and cannot be reused in

331
0:23:25.240 --> 0:23:35.520
any other way.

332
0:23:35.520 --> 0:23:41.000
So because of the things we've been talking about, VentoS can claim to be a universal

333
0:23:41.000 --> 0:23:48.840
system because it implements a hardware abstraction layer that lets you interface to turbines,

334
0:23:48.840 --> 0:23:57.400
fans, in our case proportional valves, bellows, other ways of producing gas.

335
0:23:57.400 --> 0:24:03.400
So following the open source methodology, it's not so much a machine as an ecosystem.

336
0:24:03.400 --> 0:24:08.360
We're trying to build a respiration ecosystem.

337
0:24:08.360 --> 0:24:15.120
And so as we've said, we've already seen that one piece of functionality has been added

338
0:24:15.120 --> 0:24:21.680
as a PCB that's put into the control module, and that is an SBI interface to the general

339
0:24:21.680 --> 0:24:28.240
purpose alarm device, which I mentioned previously.

340
0:24:28.240 --> 0:24:33.800
So you might say, well, why on earth would we ever have a respiration ecosystem?

341
0:24:33.800 --> 0:24:39.080
Well, there's a good reason from kind of a patient point of view, which is all of these

342
0:24:39.080 --> 0:24:47.000
devices which accomplish various medical purposes, a ventilator, an O2 concentrator, a bi-level

343
0:24:47.000 --> 0:24:53.360
positive pressure airway machine, a CPAP machine, a PAPR, a back valve mass monitor, all of

344
0:24:53.360 --> 0:24:59.240
those essentially need standards of respiration data exchange, which we have developed but

345
0:24:59.240 --> 0:25:00.960
nobody else has used.

346
0:25:00.960 --> 0:25:05.480
And many of them need the same SINCE module that we've been talking about in the vent

347
0:25:05.480 --> 0:25:06.480
model.

348
0:25:06.480 --> 0:25:13.200
In that sense, if you think of the way open source software has made components that work

349
0:25:13.200 --> 0:25:19.640
together really effectively, what we're trying to do is to create hardware and software components

350
0:25:19.640 --> 0:25:26.640
integrated which work together as effectively in the realm of human respiration.

351
0:25:26.640 --> 0:25:32.400
So in a sense, we're trying to democratize the field of medical respiration and education

352
0:25:32.400 --> 0:25:33.680
around it.

353
0:25:33.680 --> 0:25:37.040
So open source software has already shown us the way.

354
0:25:37.040 --> 0:25:40.280
We're just taking things that were developed by open source software and attempting to

355
0:25:40.280 --> 0:25:42.440
apply them to hardware.

356
0:25:42.440 --> 0:25:47.960
In particular, as I'm sure you guys know, the development of standards like HTTP, HTML,

357
0:25:47.960 --> 0:25:55.160
JSON, et cetera, are absolutely critical to the progress and interaction of multiple components

358
0:25:55.160 --> 0:26:00.320
in the embedded architecture world, but open source software more generally.

359
0:26:00.320 --> 0:26:08.920
We're trying to accomplish the same thing by producing respiration standards.

360
0:26:08.920 --> 0:26:11.320
These of course exist in GitHub repos.

361
0:26:11.320 --> 0:26:12.320
Thank you very much.

362
0:26:12.320 --> 0:26:18.080
In short, we built the most open extensible ecosystem for a classroom.

363
0:26:18.080 --> 0:26:21.120
It's the most open, best documented system.

364
0:26:21.120 --> 0:26:24.520
I can claim that because I evaluated all of the other ones.

365
0:26:24.520 --> 0:26:29.280
There are other open source ventilators, but you cannot find their designs online.

366
0:26:29.280 --> 0:26:30.760
So they're not really open.

367
0:26:30.760 --> 0:26:34.240
They're just thinking about being open.

368
0:26:34.240 --> 0:26:35.720
And that concludes my talk.

369
0:26:35.720 --> 0:26:36.720
Thank you very much.

370
0:26:36.720 --> 0:26:45.880
Thank you.

