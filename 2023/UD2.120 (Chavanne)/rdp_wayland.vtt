WEBVTT

00:00.000 --> 00:20.000
the room. If no, you're staying towards the end of the lightning talks. One, two, three, four, five, six, seven, eight, nine, ten. And we are starting the next

00:20.000 --> 00:33.000
lightning talk by Leon. Thank you very much for joining. It's not the end of the world. It's just the lightning talk about

00:33.000 --> 00:59.000
Wayland, the project and RDP. So Wayland is a display protocol. It was started like 15 years ago with the idea to

00:59.000 --> 01:08.000
replace X11. And it's slowly getting there. How many of you are using Wayland on your desktop computers or trying to use it? All

01:08.000 --> 01:16.000
right. Pretty much all of us. All right. We're trying, right? I'm not a Wayland, neither a Western developer, but I'm a

01:16.000 --> 01:24.000
user. Actually, I'm a contributor to the Yachtel project and open embedded. So here I'm sharing ups and downs of the integration of

01:24.000 --> 01:35.000
the RDP. So Western is just one of the compositors for Wayland. There are so many different compositors. Probably Western is not

01:35.000 --> 01:43.000
the best one of them, actually. But for embedded systems, it's actually sometimes pretty useful because it's small and simple.

01:43.000 --> 01:55.000
And there are options how to share your screen when you're running Wayland and Western. And there is this protocol which is RDP,

01:55.000 --> 02:03.000
which stands for remote desktop protocol. It's an alternative to VNC. Basically, you are doing remote screen sharing with it.

02:03.000 --> 02:13.000
There are some ups and downs, like it's proprietary protocol. The ups is that it's actually a semantic protocol. So you are

02:13.000 --> 02:23.000
sharing the phones, the controls, all that kind of stuff with RDP. And the good thing about RDP is that you actually have an

02:23.000 --> 02:34.000
implementation for it in Western, the reference compositor of Wayland. So keep in mind that if you come into a situation where

02:34.000 --> 02:41.000
you're working on a better device, you have Wayland, you're using Western, and one moment you want to share screen for one

02:41.000 --> 02:53.000
reason or another, you can use RDP as an alternative of VNC. So you might have heard about the Yocto project if you attended

02:53.000 --> 03:02.000
some of the other talks earlier today. They're quite famous because they make really good hoodies that you can order online.

03:02.000 --> 03:09.000
But the Yocto project is not just about hoodies and t-shirts. It's a collaborative project of the Linux Foundation for

03:09.000 --> 03:17.000
building a custom embedded Linux distribution that is using the open embedded build framework and a tool for building images

03:17.000 --> 03:28.000
called BitBake. The Yocto project comes with reference Linux distribution, which is called Pocky. So basically, this is a way

03:28.000 --> 03:38.000
how you can get started relatively easy with some images that are out there, and you can pretty much build them out of the box if

03:38.000 --> 03:48.000
you have the right BSP for the hardware that you're touching. So I said relatively easy, but I have to say that the truth is the

03:48.000 --> 03:57.000
Yocto project has a steep learning curve. It has an amazing flexibility, but it takes some time to learn it. And it has

03:57.000 --> 04:05.000
releases twice per year, and nowadays there is a long term support release. So here's an example for the releases. This is

04:05.000 --> 04:15.000
the release that is going to be released in April, and we have Kirkstone, which is an LTS release, and we have Dunfa, which is

04:15.000 --> 04:24.000
also a long term release. It was released almost three years ago, and it will be supported for a year or more. So keep in

04:24.000 --> 04:31.000
mind that, especially in the terms of the things that we're talking here about Wayland and Weston and the BSPs, there are

04:31.000 --> 04:40.000
different versions of Wayland and Weston, depending on your BSP, but also on the Yocto release that you are using. So you

04:40.000 --> 04:49.000
might end up in this situation where a feature is missing from Weston because you are using an older version of Weston, and

04:49.000 --> 04:59.000
you are using this older version of Weston because you are using an older release of Yocto. So my personal recommendation is

04:59.000 --> 05:08.000
that if you are not sure, and if you can make a choice, go for the latest and greatest long term support release. But of

05:08.000 --> 05:18.000
course, that's not always true. It depends. So here is a simple example how to do a BBA pen file. This is basically

05:18.000 --> 05:27.000
extending the existing recipe for Weston so that we can build the module for screen sharing with RDP. Out of the box, it's

05:27.000 --> 05:33.000
not built, so we have to go one step further and make this configuration. It's just a built configuration to make sure

05:33.000 --> 05:43.000
that in core image Weston, which is a small image containing Wayland and Weston, we can have this module and we can

05:43.000 --> 05:59.000
enable after that screen sharing over RDP. And the RDP implementation in Wayland is based on free RDP, so we have to add it as

05:59.000 --> 06:09.000
a dependency. So after we have this, at run time, we need to do a little bit of more configuration. Well, actually, we

06:09.000 --> 06:16.000
have to do them unless we haven't done them as part of the automation of the recipes with Yocto and OpenEmbedded. But this is

06:16.000 --> 06:25.000
just a simple example how to generate appropriate keys. After that, to configure the Weston init file, this is the master

06:25.000 --> 06:35.000
configuration file of Weston with various configuration depending on your system. So there, you have to enable in the

06:35.000 --> 06:44.000
screen sharing section the command to be launched when you do screen sharing. And when this is done, remember to

06:44.000 --> 06:52.000
launch Weston or restart it just to make sure that the right configuration is loaded. But after that, there is one more

06:52.000 --> 06:59.000
thing you need to do. You need to press control out process. That's pretty cool if you have a keyboard. But some

06:59.000 --> 07:08.000
embedded devices don't have keyboards, right? So hold on, hold on. I've told you it's ups and downs, so sometimes

07:08.000 --> 07:20.000
they're downs. Newer versions of Weston actually have this option to put in Weston init which allows you to do automatic

07:20.000 --> 07:31.000
start-up of the screen sharing with Weston. And this has been added to Weston version 9. And I believe this feature

07:31.000 --> 07:39.000
was added by Marek who had a talk here earlier about U-Boot, so you probably know him. So thank you very much for

07:39.000 --> 07:46.000
doing this because this is a really useful feature if you are working on an embedded device that doesn't have a

07:46.000 --> 07:55.000
keyboard. And once you're ready with this from another computer in the same network, you can launch a client that

07:55.000 --> 08:03.000
supports RDP and you can connect remotely to your embedded device. Here are a couple of examples depending whether

08:03.000 --> 08:12.000
you're using Wayland and based on your response to my question at the beginning of the session, it looks like a lot of

08:12.000 --> 08:19.000
you are using Weston, so here you go, you just replace the IP and if everything is okay, you'll be able to connect to

08:19.000 --> 08:27.000
your embedded device remotely. And if you're still using X11, you're still in the game. So here is a very simple

08:27.000 --> 08:36.000
demonstration and what we see here is a screenshot from my computer. My computer is, I'm kind of a lazy Linux

08:36.000 --> 08:44.000
user, so it's just Ubuntu, it has support. So we have Ubuntu with Wayland and GNOME which we see on the back.

08:44.000 --> 08:53.000
And here in this screen we are seeing CoreImage Weston running on Raspberry Pi 4 with the configurations that you

08:53.000 --> 09:04.000
have seen in the previous slides. All right. So that's all. That's pretty much how it works. RDP has some ups and

09:04.000 --> 09:11.000
downs. I guess the major conclusion from this lightning talk is that if you come into a situation where you need to

09:11.000 --> 09:19.000
do screen sharing on embedded device that is running Wayland and Weston, as an alternative to VNC, you have RDP as

09:19.000 --> 09:26.000
an option and use the Octo project on OpenEmbedded. It's pretty cool and it's pretty much everywhere nowadays.

09:26.000 --> 09:35.000
Thank you very much for the attention.
