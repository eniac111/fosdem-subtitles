1
0:00:00.000 --> 0:00:10.920
Okay, I think we can start.

2
0:00:10.920 --> 0:00:16.480
Hello, my name is Shuman Kwas and I work for Collabora Productivity.

3
0:00:16.480 --> 0:00:22.320
Today I would like to talk about the LibreOffice kit.

4
0:00:22.320 --> 0:00:30.480
I named this presentation Bridge between your application and LibreOffice because LibreOffice

5
0:00:30.480 --> 0:00:38.680
kit is simply an API which provides a possibility to render the preview of the document.

6
0:00:38.680 --> 0:00:47.360
So if you want to build an app which requires rendering of some documents, you can use that.

7
0:00:47.360 --> 0:00:55.440
So that's the API which provides not only rendering of the documents but also we can

8
0:00:55.440 --> 0:01:02.040
manipulate the documents and also it gives us access to the UI components.

9
0:01:02.040 --> 0:01:09.120
We use LibreOffice kit in Collabora Online but also in the LibreOffice repository there

10
0:01:09.120 --> 0:01:17.520
is some sample application called gtki-tiled-viewer where we can see it in action.

11
0:01:17.520 --> 0:01:27.400
It renders the document from tiles and also allows us to do some simple modifications.

12
0:01:27.400 --> 0:01:35.620
The APIs are in LibreOffice kit directory and most of the crucial implementation is

13
0:01:35.620 --> 0:01:38.380
in desktop module.

14
0:01:38.380 --> 0:01:50.120
The most important part is class LibreOffice kit document which we can use to access all

15
0:01:50.120 --> 0:01:53.960
the functionality.

16
0:01:53.960 --> 0:02:03.120
Also when we get some notification from the LibreOffice code, some events because for

17
0:02:03.120 --> 0:02:13.240
example selection has been changed, we got the callbacks listed in LibreOffice kit.

18
0:02:13.240 --> 0:02:28.040
This should be completely transparent when we talk about rendering because it should

19
0:02:28.040 --> 0:02:33.000
be completely transparent when we compare to normal desktop application but sometimes

20
0:02:33.000 --> 0:02:34.480
it's not possible.

21
0:02:34.480 --> 0:02:42.200
So we use some conditional code for LibreOffice kit behind the Comp Helper LibreOffice kit

22
0:02:42.200 --> 0:02:44.280
is active flag.

23
0:02:44.280 --> 0:02:50.840
For example calling this mentioned callbacks is behind this guard.

24
0:02:50.840 --> 0:02:56.440
In this talk I would like to present some improvements in LibreOffice kit mostly in

25
0:02:56.440 --> 0:02:59.280
rendering the tiles.

26
0:02:59.280 --> 0:03:07.720
The biggest thing is the master page mode because there was a problem.

27
0:03:07.720 --> 0:03:14.800
In Impress we can open slides in edit mode but also we can design slides, how they look

28
0:03:14.800 --> 0:03:19.560
and this is called master page mode.

29
0:03:19.560 --> 0:03:26.560
There was a problem when we had multiple users in the same presentation and some of them

30
0:03:26.560 --> 0:03:37.920
were watching the master page and some of them were just editing the presentation.

31
0:03:37.920 --> 0:03:50.120
Sometimes we got the mixed tiles because in our API there was no explicit way to say that

32
0:03:50.120 --> 0:03:55.200
we want to render a tile for master page or for the normal mode.

33
0:03:55.200 --> 0:04:03.280
So depending on which view we selected for rendering it was completely not deterministic.

34
0:04:03.280 --> 0:04:10.760
So I introduced that parameter to our API so now we are sure that we will not mix tiles

35
0:04:10.760 --> 0:04:15.920
between different modes.

36
0:04:15.920 --> 0:04:21.360
Other problem I noticed was in CALC.

37
0:04:21.360 --> 0:04:29.680
Again it was not deterministic when we were rendering some piece of the spreadsheet because

38
0:04:29.680 --> 0:04:41.240
when we had two users editing content in a similar area which was covered by one tile,

39
0:04:41.240 --> 0:04:50.520
when one of these cells was overflowing because we had too much content to fit into the cell,

40
0:04:50.520 --> 0:04:57.320
it was rendered only when the view selected for rendering was the actual editor.

41
0:04:57.320 --> 0:05:08.040
But when other users were typing we sometimes refreshed the given fragment of the spreadsheet

42
0:05:08.040 --> 0:05:09.240
without that.

43
0:05:09.240 --> 0:05:17.400
So it was flickering and sometimes we got the right view and sometimes we got view without

44
0:05:17.400 --> 0:05:19.080
overflowing content.

45
0:05:19.080 --> 0:05:28.600
So I fixed that and now we are rendering always the same way, the same tile.

46
0:05:28.600 --> 0:05:37.400
So we got overflowing content in both cases and like we can see here there are two different

47
0:05:37.400 --> 0:05:41.720
views and both have the same content.

48
0:05:41.720 --> 0:05:53.080
It's very important because then client application can catch the tiles and they are the same.

49
0:05:53.080 --> 0:06:00.960
Other thing I improved was rendering the slide previews because in previews we don't want

50
0:06:00.960 --> 0:06:08.480
to attach any selections or draft changes in text fields.

51
0:06:08.480 --> 0:06:13.360
We want to just play plain preview of a slide.

52
0:06:13.360 --> 0:06:21.720
In the old code we always used one view, the first one for rendering this but it was not

53
0:06:21.720 --> 0:06:30.040
correct because when first user was typing something, for example in the text box, it

54
0:06:30.040 --> 0:06:39.520
was visible as well in the preview for other users.

55
0:06:39.520 --> 0:06:48.280
So now I modified the algorithm which selects a view for drawing and we prefer views which

56
0:06:48.280 --> 0:06:54.000
are not editing currently.

57
0:06:54.000 --> 0:07:01.800
Other functions which get improvements was render shape selection which is responsible

58
0:07:01.800 --> 0:07:12.200
for rendering the shape or image of element which is currently selected in the document.

59
0:07:12.200 --> 0:07:26.040
We used that for example for showing the rotation result in the real time so when user starts

60
0:07:26.040 --> 0:07:33.520
to drag something or rotate he see the potential results.

61
0:07:33.520 --> 0:07:41.720
The problem here was that when we selected some image with very very large size it was

62
0:07:41.720 --> 0:07:53.000
rendering the original image so it was taking sometimes few seconds and was sending megabytes

63
0:07:53.000 --> 0:07:55.960
just to render a preview.

64
0:07:55.960 --> 0:08:04.200
I optimized that a bit by setting maximal resolution we used for previews because they

65
0:08:04.200 --> 0:08:11.080
don't have to be as big as original images.

66
0:08:11.080 --> 0:08:21.200
And also from other things in the LibreOffice kit I added was exposing the formula bar widget

67
0:08:21.200 --> 0:08:24.120
which is present in calc.

68
0:08:24.120 --> 0:08:33.880
Now it sends all the events like selections or cursor movements to the client application

69
0:08:33.880 --> 0:08:38.880
so it can be handled there correctly because previously in Color

70
0:08:38.880 --> 0:08:48.960
Brown line we were using the tunneled pixel based formula bar which is not perfect for

71
0:08:48.960 --> 0:08:52.040
user experience.

72
0:08:52.040 --> 0:08:53.480
And that's all from me.

73
0:08:53.480 --> 0:08:54.480
Thank you.

74
0:08:54.480 --> 0:09:04.900
OW

