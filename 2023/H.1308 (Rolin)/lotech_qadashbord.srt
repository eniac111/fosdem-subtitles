1
0:00:00.000 --> 0:00:18.160
Okay, good. Hi, everyone. Welcome to this one. Hopefully it's not going to keep doing

2
0:00:18.160 --> 0:00:24.720
that. So today my talk is called putting the R in librofist's shiny dashboard for QA. My

3
0:00:24.720 --> 0:00:31.760
name is Stefan Guilloux. I joined the TDF team, the document foundation, just recently in November

4
0:00:31.760 --> 0:00:41.200
as a QA analyst. And this is about a little project recently started to create something

5
0:00:41.200 --> 0:00:47.040
that everyone can come to and to learn a bit more about QA numbers around the project,

6
0:00:47.040 --> 0:00:50.880
around librofist, but also everything else that's hosted by the document foundation.

7
0:00:50.880 --> 0:00:57.680
So just a little bit about where I come from because it matters in some way. Quickly, I studied

8
0:00:57.680 --> 0:01:02.400
plants, ecology, sustainability, that's my background, then moved on to working in agricultural

9
0:01:02.400 --> 0:01:07.280
research, and then finished the last four years working in the library as a research

10
0:01:07.840 --> 0:01:14.400
software trainer and in research support. But throughout the last 15 years, I've been a free

11
0:01:14.400 --> 0:01:19.680
libro and open source software user and advocate, trying to push for the solutions, especially in

12
0:01:19.680 --> 0:01:25.600
teaching, learning, research environment. And because of that, I've been a user of a few

13
0:01:25.600 --> 0:01:31.440
different tools, including the programming language R. This is what I use for this project.

14
0:01:32.800 --> 0:01:41.680
There's quite a few things already around QA and librofist. So quality assurance numbers and graphs

15
0:01:41.680 --> 0:01:46.480
can be found in lots of different places. Here I've listed a few. There's a wiki that has an

16
0:01:46.480 --> 0:01:52.320
absolute wealth of different pages and tables and links you can use and also stats about us,

17
0:01:53.280 --> 0:02:00.960
QA project, our QA team and community. There's a blog also that's a specific QA blog. It's not

18
0:02:00.960 --> 0:02:05.360
just one blog at the document foundation, around librofist. It's also the QA blog, there's a

19
0:02:05.360 --> 0:02:09.760
dev blog, there's a few different blogs. And I really recommend having a look at this one,

20
0:02:09.760 --> 0:02:14.720
whereas there's excellent monthly reports that are done with a few different graphs to explore

21
0:02:14.720 --> 0:02:21.120
and also updates on who has been working on what, so what new features and bug fixes are coming up.

22
0:02:21.120 --> 0:02:25.360
So it's a great read. I really think you should subscribe to that one if you're interested.

23
0:02:25.920 --> 0:02:31.840
Obviously, Bugzilla, this is where we report bugs and where we trash them and mark them as fixed

24
0:02:31.840 --> 0:02:39.360
eventually if someone's keen to take those ones. We've got QA scripts and our QA repository. Those

25
0:02:39.360 --> 0:02:45.280
are Python scripts to process the Bugzilla data. We've got a crash reports website that has some,

26
0:02:45.280 --> 0:02:50.960
for example, timeline graphs where you can see how numbers of crashes evolve throughout

27
0:02:52.400 --> 0:02:57.440
in different versions. And there's an interesting website as well called Dev Central which gives you

28
0:02:57.440 --> 0:03:05.520
quick links to different important tools for development around librofist. Just to give you

29
0:03:05.520 --> 0:03:10.880
a quick idea, this is the wiki page where you can also find ways to keep in touch with us.

30
0:03:12.880 --> 0:03:18.400
And there's going to be options for chat rooms but also the mailing list. So if you want to keep

31
0:03:18.400 --> 0:03:24.240
hearing about those things, do join that. This is the December 2022 blog post and you'll find a few

32
0:03:24.240 --> 0:03:29.840
graphs in there to see how things are evolving. But at the top, there's a lot about new features

33
0:03:29.840 --> 0:03:37.680
and new fixes by different developers and this is the crash report website. This is what I mentioned

34
0:03:37.680 --> 0:03:42.880
just before, Dev Central where you can find links directly to, for example, the wiki. Bugzilla to

35
0:03:42.880 --> 0:03:47.920
report a bug on the crash report website. But also other ones like Weblight for translation,

36
0:03:47.920 --> 0:03:58.400
Gerid for submitting your patches. Now, the idea of the QA dashboard, an extra tool that's not

37
0:03:58.400 --> 0:04:05.440
supposed to necessarily replace other things but complement them. I think I've used R and Shiny with

38
0:04:05.440 --> 0:04:11.920
it. So R, the R programming language. Very useful for data analysis, statistics. Shiny is the

39
0:04:11.920 --> 0:04:18.960
framework for creating web apps that goes on top. So interactive visualizations and tables using two

40
0:04:18.960 --> 0:04:24.240
packages called Plotly and DT. There's ggplot2 in the background too. Quite a few other packages

41
0:04:24.240 --> 0:04:31.680
are coming in in play there. And also very importantly, I don't want it to be just pictures,

42
0:04:31.680 --> 0:04:36.480
just nice pictures to look at, but it needs to also link to activities, to things that we can do.

43
0:04:36.480 --> 0:04:44.560
And it doesn't need to be this bottleneck or this dead end. So I'll show you what it looks like

44
0:04:44.560 --> 0:04:53.760
currently. This work in progress. We've got a few different files here that we will eventually

45
0:04:53.760 --> 0:05:00.800
share once we're happier with what we've got and we want everyone to use it. There's a few helper

46
0:05:00.800 --> 0:05:06.560
functions. A script to pre-process the data because it is currently based on a dump from

47
0:05:07.280 --> 0:05:14.480
Bugzilla. That's quite large. And finally, the app that has both the UI and the server

48
0:05:14.480 --> 0:05:23.760
functions on there. So I'll open this in the browser. Maybe a bit better.

49
0:05:26.320 --> 0:05:32.480
I'll quickly show you what we've got. So it starts with this page where it looks at the snapshot,

50
0:05:32.480 --> 0:05:39.920
the most recent data we've got, depending on what export we've used. And we can see, for example,

51
0:05:39.920 --> 0:05:46.480
the first graph here are the most important components of the project. And other projects,

52
0:05:46.480 --> 0:05:50.800
not just LibreOffice. But you can see that most reports will be related to writer,

53
0:05:50.800 --> 0:05:55.440
calc, LibreOffice in general. And then you've got impress. You'll see that base and draw

54
0:05:55.440 --> 0:06:01.120
probably attract a bit less attention. Looking at the importance of reports or how it's been

55
0:06:01.120 --> 0:06:08.640
classified, we've got a graph on severity. Thank you. And priority, which work together. You can

56
0:06:08.640 --> 0:06:12.640
learn a bit more about those ones with the links underneath if they don't necessarily mean that

57
0:06:12.640 --> 0:06:18.880
much. And you can see that obviously it's going to be bigger in the middle where there's the

58
0:06:18.880 --> 0:06:26.560
default fields that are used, normal severity and medium priority. Now, looking at how bugs have

59
0:06:26.560 --> 0:06:31.120
been classified, depending on what happens with them, you can see in general, green is what has

60
0:06:31.120 --> 0:06:36.400
been resolved for different reasons, what has been actually fixed by a commit, and what has been

61
0:06:36.400 --> 0:06:40.640
resolved with other resolutions. You can see that there's a few different categories where it might

62
0:06:40.640 --> 0:06:46.480
fall. And you can see the numbers by using your mouse going over them. It's looking also more

63
0:06:46.480 --> 0:06:53.840
precisely at just that green part that's up there, looking at how bugs were resolved. So you might be

64
0:06:53.840 --> 0:06:58.400
interested in knowing that most of them have been fixed, but then a lot of them have been closed

65
0:06:58.400 --> 0:07:03.600
because they've already been reported before duplicates. Quite a few are closed as works for

66
0:07:03.600 --> 0:07:09.840
me because it's been resolved without necessarily knowing how it has been resolved. We've got a

67
0:07:09.840 --> 0:07:15.120
graph on which is the first version that's been affected as far as we know. You've got all the

68
0:07:15.120 --> 0:07:20.560
major versions of LibreOffice here and the creation time as well as the last time of modification.

69
0:07:20.560 --> 0:07:24.880
But for example, here there's a link to action. A list of bugs that haven't changed for more than

70
0:07:24.880 --> 0:07:29.920
five years. This is where there's potentially bugs that we can very quickly close. You can use this

71
0:07:29.920 --> 0:07:37.600
date range picker to focus on one patch kill period. You can remove enhancement requests

72
0:07:37.600 --> 0:07:43.360
and automatically invalid reports are removed as well. But I also want to work with timelines.

73
0:07:43.360 --> 0:07:49.840
This is a fun, the graphs that we've got in the QA report, the monthly one. And here we can see how

74
0:07:49.840 --> 0:07:55.440
unconfirmed bugs have evolved over the last 13 years. If you're interested in just the last year,

75
0:07:55.440 --> 0:08:00.400
you can toggle those ones. And if you want to look good, you can remove the zero and it looks

76
0:08:00.400 --> 0:08:08.080
like it's really dropping. And then, thank you, I've got a table here that looks at that specific

77
0:08:08.080 --> 0:08:12.560
snapshot. So that stops on the second of Feb, I think. First of Feb maybe. There it is. There's

78
0:08:12.560 --> 0:08:18.000
the date. It tells you. And you can look for different bugs here. Bugzilla might be a bit

79
0:08:18.000 --> 0:08:23.520
daunting sometimes to do a search. This table is a condensed table. It doesn't have all the

80
0:08:23.520 --> 0:08:29.440
information. But if you're interested in, for example, dark mode bugs that have been, that are

81
0:08:29.440 --> 0:08:36.080
unconfirmed, you can use those filters at the top. It might take a bit of time because there's

82
0:08:36.080 --> 0:08:40.960
thousands of thousands of them. But it should come up with a short list of those unconfirmed

83
0:08:40.960 --> 0:08:46.640
bugs for dark mode. There we go. We've got four of them. You can click on that link and it takes you

84
0:08:46.640 --> 0:08:53.920
straight to Bugzilla. You can sort them by whatever you want or look at only a specific version of

85
0:08:54.960 --> 0:09:03.440
the brotheus. The next steps would be those ones. Thank you.

86
0:09:08.400 --> 0:09:12.560
And if you want to contact me or contact the QA team, there's options here.

87
0:09:12.560 --> 0:09:16.800
Yeah. Thanks. Have a great afternoon, everyone.

