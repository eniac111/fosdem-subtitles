WEBVTT

00:00.000 --> 00:08.920
Hello, so my name is Sisko Foley.

00:08.920 --> 00:15.000
I work for the Document Foundation as a keyway engineer, and today I'm going to explain how

00:15.000 --> 00:22.320
in the last month I cleaned up the unit as the code that we used.

00:22.320 --> 00:24.680
So it all started.

00:24.680 --> 00:33.400
So basically this is a report from Jenkins, and there was one test, this one CPP unit

00:33.400 --> 00:40.520
test SCVBA macro test failing on Windows.

00:40.520 --> 00:45.720
We didn't know it was failing for quite some time, and we didn't really know what was the

00:45.720 --> 00:46.720
problem.

00:46.720 --> 00:50.640
It was failing every now and then.

00:50.640 --> 00:58.440
And in the end it turned out that it was a problem that the teardown method disposing

00:58.440 --> 01:07.200
this MX component was missing, and well, eventually it was fixed thanks to Noelle.

01:07.200 --> 01:14.760
So I started to look at other places where these kinds of problems might happen in the

01:14.760 --> 01:16.960
unit test.

01:16.960 --> 01:26.600
So basically when we want to create a unit test class, these are the four main classes

01:26.600 --> 01:28.060
that we can use.

01:28.060 --> 01:34.780
So this one is the one inheriting directly from the library CPP unit test.

01:34.780 --> 01:41.720
So this is the basic one you use to create a basic test, and basically it handles the

01:41.720 --> 01:44.660
setup and teardown of the test.

01:44.660 --> 01:51.120
Then if you want to, let's say, work with documents to load them and so on, you can

01:51.120 --> 01:56.440
use also this library, this class, sorry, macro test.

01:56.440 --> 02:05.800
And then when you want to work with XML, let's say you want to parse those XMLs, you can

02:05.800 --> 02:09.000
use that class XML test tools.

02:09.000 --> 02:17.040
And finally, we have a special class that we use to load and save documents, but we

02:17.040 --> 02:20.480
only care if they fail or if they pass.

02:20.480 --> 02:27.680
So the idea, because most of the classes that we have in unit tests, they normally inherit

02:27.680 --> 02:35.320
from these two here, or in some special cases, they inherit from these three.

02:35.320 --> 02:42.560
So basically the idea was to create kind of a wrapper for these two and then another one

02:42.560 --> 02:44.540
for the other three.

02:44.540 --> 02:53.720
So when I started to do it, well, a lot of duplicates were found, especially with the

02:53.720 --> 02:55.780
setup and teardown methods.

02:55.780 --> 03:00.560
So this could be removed in all the classes.

03:00.560 --> 03:07.320
Then same for the X component, each class defined their own X component.

03:07.320 --> 03:14.880
So now we only define it in the, you know, AP test class.

03:14.880 --> 03:19.960
So this removed a lot of duplicate definitions.

03:19.960 --> 03:27.920
And I also found that we had an special, you know, AP test class for CAG for no real reason.

03:27.920 --> 03:32.840
So this was merged into the, you know, AP test class.

03:32.840 --> 03:42.480
And actually we also, well, I also factor out other methods like for parsing PDF export

03:42.480 --> 03:47.820
or execute a macro or create a temp copy.

03:47.820 --> 03:52.660
So in, we have the impress and CAG modules.

03:52.660 --> 03:57.920
You have their own methods to load and save files.

03:57.920 --> 04:08.080
They were actually copy paste from this, from the filter test class.

04:08.080 --> 04:15.840
And they were actually very, yeah, complicated to set up.

04:15.840 --> 04:21.620
Basically you have to define all the formats that you wanted to use.

04:21.620 --> 04:27.080
Then create this array with all the formats.

04:27.080 --> 04:32.480
And then finally the load of the document looks something like this, where you have

04:32.480 --> 04:36.040
to define the clipboard, the version.

04:36.040 --> 04:45.880
And yeah, it was in the end really complicated and we already had a method for that.

04:45.880 --> 04:58.600
And yeah, so basically now instead of returning a reference, a doccell reference, we just basically

04:58.600 --> 05:03.760
load the local document and save and reload and makes it easier.

05:03.760 --> 05:11.080
The problem before it was that after we were done with the test, we need to close the reference

05:11.080 --> 05:14.140
and in some tests it was missing.

05:14.140 --> 05:17.240
So that's not a problem anymore.

05:17.240 --> 05:27.000
And also there were many places where this kind of chunk of code was used to save and

05:27.000 --> 05:28.880
reload the document.

05:28.880 --> 05:32.040
So they are gone.

05:32.040 --> 05:33.180
There were many of them.

05:33.180 --> 05:35.960
So now it's just one line to do that.

05:35.960 --> 05:40.560
And the good thing is that now we always validate the files on a sport.

05:40.560 --> 05:46.120
And in case there is a problem with the validator, we can also use the skip validation.

05:46.120 --> 05:50.840
And there is also support for password, sporting and importing.

05:50.840 --> 05:59.040
That's something that in the past was only available in writer module.

05:59.040 --> 06:02.080
And yeah, the same for pass export.

06:02.080 --> 06:09.640
SD, SW and SC, they use their own ways of handling this.

06:09.640 --> 06:11.400
And we already have it in macro test.

06:11.400 --> 06:14.840
So there was also a duplicate for that.

06:14.840 --> 06:18.120
And right now we just do it like that.

06:18.120 --> 06:23.960
And yeah, there were also operators that were duplicates.

06:23.960 --> 06:26.860
Like for instance, this one for comparing colors.

06:26.860 --> 06:29.800
There was also for comparing rectangles.

06:29.800 --> 06:35.680
So they were already duplicates in prayers and call and writers.

06:35.680 --> 06:38.120
So all of them are gone now.

06:38.120 --> 06:42.840
And there was also a problem with this unit test.

06:42.840 --> 06:50.280
The problem is that the way it works, it compares the calculations using openCL, enable and

06:50.280 --> 06:51.280
disable.

06:51.280 --> 06:58.840
And the problem is that before I found out, the comparison was always when it's enabled.

06:58.840 --> 07:02.720
So the test didn't actually test anything.

07:02.720 --> 07:04.600
And now that's fixed.

07:04.600 --> 07:12.120
And also we also had some custom assets like this one as a formula equal, which can be

07:12.120 --> 07:17.480
done as a string comparison and just using the get formula.

07:17.480 --> 07:23.800
So yeah, in the end, a lot of duplicated code was dropped.

07:23.800 --> 07:26.600
And yeah, that's it.

07:26.600 --> 07:33.560
Thank you.

07:33.560 --> 07:38.000
I think we still have time for maybe a quick question, if anyone.

07:38.000 --> 07:44.720
Two minutes of questions.

07:44.720 --> 08:03.920
Yes, sorry, yeah, how you brought it with the first slide.
