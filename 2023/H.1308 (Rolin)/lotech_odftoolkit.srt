1
0:00:00.000 --> 0:00:10.960
I guess I start already because otherwise it gets boring.

2
0:00:10.960 --> 0:00:12.640
Hi everyone, I'm Zvante Schubert.

3
0:00:12.640 --> 0:00:20.080
I started in 1999 with StarOffice in Hamburg and never worked on LibreOffice, Core, StarOffice

4
0:00:20.080 --> 0:00:21.160
earlier.

5
0:00:21.160 --> 0:00:27.520
But always from the beginning, I although applied at C++, are the Java-based Webtop,

6
0:00:27.520 --> 0:00:30.400
we called it, a WebOffice, right?

7
0:00:30.400 --> 0:00:31.840
And we had two in some.

8
0:00:31.840 --> 0:00:35.760
The second one was where the Golden Master came in 2011.

9
0:00:35.760 --> 0:00:37.640
It was canceled, everything.

10
0:00:37.640 --> 0:00:43.760
And this library I'm talking about, the ODF Toolkit, was the core of this WebOffice and

11
0:00:43.760 --> 0:00:48.980
later on a fork from OpenExchange for another WebOffice.

12
0:00:48.980 --> 0:00:56.640
So I worked once at the ODF standard, which is the FIFR mod, the shock-frozen runtime

13
0:00:56.640 --> 0:00:58.720
that you dump and send to others.

14
0:00:58.720 --> 0:01:03.680
And the reason of the standard is to be interoperable with other things like Microsoft Office.

15
0:01:03.680 --> 0:01:09.440
Microsoft is also participating in the OASIS ODFTC.

16
0:01:09.440 --> 0:01:11.440
Okay.

17
0:01:11.440 --> 0:01:15.640
So far, not bringing your own laptop because everything goes faster this way.

18
0:01:15.640 --> 0:01:17.680
Anyway, it doesn't matter.

19
0:01:17.680 --> 0:01:23.740
So by the way, we are three from seven members in the OASIS TC.

20
0:01:23.740 --> 0:01:28.800
We are three from the Buckman Foundation, Rigina Henschel, who is very active, and Michael

21
0:01:28.800 --> 0:01:31.680
Stauff from Atropia, many thanks for Atropia joining that.

22
0:01:31.680 --> 0:01:36.320
And Michael is also the co-maintainer of this ODF Toolkit.

23
0:01:36.320 --> 0:01:40.320
And yes, sorry.

24
0:01:40.320 --> 0:01:46.400
Dennis, bring my back, please.

25
0:01:46.400 --> 0:01:47.400
Okay.

26
0:01:47.400 --> 0:01:49.000
So yes, yes, yes.

27
0:01:49.000 --> 0:01:50.000
Okay.

28
0:01:50.000 --> 0:01:58.720
So, the ODF Toolkit is basically Java-based and it has two main core deliverables.

29
0:01:58.720 --> 0:02:01.240
This is the ODF DOM.

30
0:02:01.240 --> 0:02:03.640
And the other thing is the validator.

31
0:02:03.640 --> 0:02:09.040
And yes, I know, but gosh, here we go.

32
0:02:09.040 --> 0:02:12.840
Sorry for the inconvenience.

33
0:02:12.840 --> 0:02:17.840
It's over there.

34
0:02:17.840 --> 0:02:20.840
Gosh.

35
0:02:20.840 --> 0:02:23.840
Oh.

36
0:02:23.840 --> 0:02:26.840
Gosh.

37
0:02:26.840 --> 0:02:42.840
Hey, here's something.

38
0:02:42.840 --> 0:02:45.840
Okay.

39
0:02:45.840 --> 0:02:46.840
Sorry.

40
0:02:46.840 --> 0:02:47.840
Okay.

41
0:02:47.840 --> 0:02:50.080
The one thing is the core of the ODF DOM.

42
0:02:50.080 --> 0:02:53.160
And the online validator is the wrapper around it.

43
0:02:53.160 --> 0:02:58.320
And you know it's host of ODF and it's used for validating this ODF file format.

44
0:02:58.320 --> 0:03:03.760
And ODF DOM, you hear it by the name, it's not only an ODF implementation, but also

45
0:03:03.760 --> 0:03:04.920
in DOM.

46
0:03:04.920 --> 0:03:07.200
And you might know this from the browsers.

47
0:03:07.200 --> 0:03:11.400
And that's the browser standard, the HTML standard, the demand that at the runtime,

48
0:03:11.400 --> 0:03:13.960
the browser is accessible by the DOM API.

49
0:03:13.960 --> 0:03:21.600
And that is the way that JavaScript not only runs in Firefox, but that is this macros are

50
0:03:21.600 --> 0:03:23.480
inter-bubble in all browsers.

51
0:03:23.480 --> 0:03:26.120
And ODF doesn't have such runtime API.

52
0:03:26.120 --> 0:03:31.760
You have either a libroface macro or a Microsoft often macro and they do not work to each other.

53
0:03:31.760 --> 0:03:33.440
This is a real downtime.

54
0:03:33.440 --> 0:03:38.320
I don't say that we need a DOM, but there's no DOM access at libroface.

55
0:03:38.320 --> 0:03:42.280
But it would be nice to have a feature API, a high-level API.

56
0:03:42.280 --> 0:03:47.240
And the reason is that we have a standard, a blueprint, the OSTC-given standard, and

57
0:03:47.240 --> 0:03:51.560
then we have this implementation where ODF has one of them and it's hosted by ODF.

58
0:03:51.560 --> 0:03:55.880
And just in a nutshell, what is the standard defining?

59
0:03:55.880 --> 0:03:58.600
The standard blueprint is defining the zip.

60
0:03:58.600 --> 0:04:03.560
If you have an ODT document, you can exchange the suffix and then you suddenly have a zip.

61
0:04:03.560 --> 0:04:08.840
And there's parts in the specification parts, number one introduction, number four formula

62
0:04:08.840 --> 0:04:10.520
that's not implemented here.

63
0:04:10.520 --> 0:04:16.200
But the zip itself is defined in the package like the encryption signature and also this

64
0:04:16.200 --> 0:04:21.480
meta-inf manifest which is a content table and you find the signature XML as well.

65
0:04:21.480 --> 0:04:23.400
And the whole XML part is one of them.

66
0:04:23.400 --> 0:04:31.000
And the reason now, the high-level goal is to have to close the gap between the standard,

67
0:04:31.000 --> 0:04:32.960
the blueprint and the implementation.

68
0:04:32.960 --> 0:04:37.160
Like want to get away from paper because you don't want to get, oh, here, developer, here's

69
0:04:37.160 --> 0:04:40.280
another 500 pages of specification, I'll start.

70
0:04:40.280 --> 0:04:46.480
But the idea is to generate as much as possible like documentation and most of the core by

71
0:04:46.480 --> 0:04:47.480
this.

72
0:04:47.480 --> 0:04:50.320
And yes, ease by this development.

73
0:04:50.320 --> 0:04:56.840
And how it's been done because we are generating from the XML, look, there are a lot of elements

74
0:04:56.840 --> 0:05:00.640
of XML, but the manifest is like a set of content table signatures, also the manifest

75
0:05:00.640 --> 0:05:06.720
XML and all of these is taken away abstracted from the developers.

76
0:05:06.720 --> 0:05:13.480
So we generate the DOM tree and type DOM tree like for each element and attribute.

77
0:05:13.480 --> 0:05:18.740
We have a class and element gives you methods to what's inserted.

78
0:05:18.740 --> 0:05:21.360
And the default values are extracted from the spec.

79
0:05:21.360 --> 0:05:28.360
So soonish is like you should have a constructor from all the mandatory words of the sub tree

80
0:05:28.360 --> 0:05:29.720
or something like this.

81
0:05:29.720 --> 0:05:37.680
But there's also some gap in the digital gap in the spec, like there's some formulas in

82
0:05:37.680 --> 0:05:45.200
the floating text saying, oh, when attribute A is active, then the attribute B, sorry,

83
0:05:45.200 --> 0:05:49.320
if it's B is present, then A become active or there's a certain value for B. And these

84
0:05:49.320 --> 0:05:54.120
conditions I would love to read out and generate from it the source code because I don't want

85
0:05:54.120 --> 0:05:57.880
to type it myself with thousands of attributes.

86
0:05:57.880 --> 0:06:02.440
Another thing that's not there because it's a lot of things, the puzzle pieces, I would

87
0:06:02.440 --> 0:06:04.640
call them feature.

88
0:06:04.640 --> 0:06:06.640
And this should be the feature API.

89
0:06:06.640 --> 0:06:10.360
Everybody expects there's an image and there's a table.

90
0:06:10.360 --> 0:06:14.600
And this is like even if you don't know anything about ODF, you will find another platform

91
0:06:14.600 --> 0:06:20.240
that's HTML markdown and you have a certain assumption that if there's a table, you can

92
0:06:20.240 --> 0:06:21.240
insert a column.

93
0:06:21.240 --> 0:06:28.760
So this insert column function, yes, this change API request that has a certain pattern

94
0:06:28.760 --> 0:06:29.760
of XML change.

95
0:06:29.760 --> 0:06:34.640
And this might and should be defined and spec generate even this API from it.

96
0:06:34.640 --> 0:06:37.160
So in the end, it's something like this.

97
0:06:37.160 --> 0:06:40.800
We have a semantic layer, this is currently not generatable, an XML layer and a package

98
0:06:40.800 --> 0:06:49.120
layer and the idea is that you might exchange the semantic layer with even other platform

99
0:06:49.120 --> 0:06:54.000
elements like there's also a table where you can do a table insert column and markdown

100
0:06:54.000 --> 0:06:55.040
this way.

101
0:06:55.040 --> 0:06:57.040
So let me run through it a bit.

102
0:06:57.040 --> 0:06:59.920
Of course, there's just a model and not a view.

103
0:06:59.920 --> 0:07:03.960
This is for Libre of us only and because as well that the spec is not very strict on the

104
0:07:03.960 --> 0:07:05.120
view.

105
0:07:05.120 --> 0:07:10.160
And the highlights is we've done recently a release for ODF1 or O2 still.

106
0:07:10.160 --> 0:07:15.720
We refactored a lot this code generation and also did a release after 20 years and took

107
0:07:15.720 --> 0:07:20.320
over the multi-schema value data which is for loading and understanding the grammar because

108
0:07:20.320 --> 0:07:25.880
we have something called real XMG which is simpler like XSD, grammar and from this we

109
0:07:25.880 --> 0:07:28.600
traverse and are able to generate as much.

110
0:07:28.600 --> 0:07:32.240
There's one three upcoming release.

111
0:07:32.240 --> 0:07:38.120
Now I thought I could do a reset with Michael for Fosten but it was some bugs.

112
0:07:38.120 --> 0:07:40.360
And one at four later.

113
0:07:40.360 --> 0:07:41.360
Why one at four later?

114
0:07:41.360 --> 0:07:43.200
Let's do the ODFTC update.

115
0:07:43.200 --> 0:07:51.600
You see this was the last release one or two with Sun that was stopping Starfish this year

116
0:07:51.600 --> 0:07:55.520
and it took a while until we made the next release for OASIS.

117
0:07:55.520 --> 0:07:58.520
And now we are closing on ODF.

118
0:07:58.520 --> 0:07:59.520
There's a link.

119
0:07:59.520 --> 0:08:05.480
You can click on it and see the query of the 66 issues which are already in and then I'll

120
0:08:05.480 --> 0:08:11.440
turn it to the candidates where people can validate from, take something from it.

121
0:08:11.440 --> 0:08:18.280
So there's another thing I did project on a search engine where the text of the data

122
0:08:18.280 --> 0:08:20.720
being extracted from ODF.

123
0:08:20.720 --> 0:08:24.080
I realized there's something missing in ODF.

124
0:08:24.080 --> 0:08:25.960
Just for discussion after something.

125
0:08:25.960 --> 0:08:30.960
It's like we don't have this ODF model in the middle like this feature model and then

126
0:08:30.960 --> 0:08:35.480
we say okay now I tell you how do I do the export.

127
0:08:35.480 --> 0:08:40.960
How should a table look like in Markdown and you can do cherry picking of features.

128
0:08:40.960 --> 0:08:46.520
You like to have in your own format like Markdown or HTML.

129
0:08:46.520 --> 0:08:51.360
I realized that the whole design like we came from XML and later we realized we need this

130
0:08:51.360 --> 0:08:57.600
feature level to abstract from this distinct XML details that this is missing.

131
0:08:57.600 --> 0:09:03.680
So here's some sources left and I really, really love to discuss on some kind of this

132
0:09:03.680 --> 0:09:06.440
later by TB or something.

133
0:09:06.440 --> 0:09:07.440
Thanks a lot.

134
0:09:07.440 --> 0:09:08.440
See you next year.

135
0:09:08.440 --> 0:09:15.440
Thank you.

