1
0:00:00.000 --> 0:00:13.060
Hello everyone, thank you for joining this event and thank you very much for the organization

2
0:00:13.060 --> 0:00:14.060
of this dev room.

3
0:00:14.060 --> 0:00:17.900
I am much appreciated, I know how much work this is.

4
0:00:17.900 --> 0:00:19.300
Awesome work, thank you.

5
0:00:19.300 --> 0:00:23.580
So thanks a lot to Whole Fast TEMP team, really cool.

6
0:00:23.580 --> 0:00:27.980
This presentation here is mainly about privacy.

7
0:00:27.980 --> 0:00:34.540
And the I2P network is an overlay network which I will shortly introduce.

8
0:00:34.540 --> 0:00:42.860
And I'm the JavaScript TypeScript library maintainer of this library which allows you

9
0:00:42.860 --> 0:00:52.640
as developers, me as developer, to write privacy by design applications.

10
0:00:52.640 --> 0:00:58.340
Privacy by design means a few things which I'm going to talk about shortly after the

11
0:00:58.340 --> 0:01:00.380
introduction.

12
0:01:00.380 --> 0:01:07.700
I'm a totally independent researcher and developer and I'm one of the co-founders behind Deva.exchange.

13
0:01:07.700 --> 0:01:12.220
We're just a loose bunch of developers and researchers spread all over the world.

14
0:01:12.220 --> 0:01:15.660
Very much interested in privacy topics.

15
0:01:15.660 --> 0:01:22.620
And one of the topics is free banking technology for everyone which is not part of the team.

16
0:01:22.620 --> 0:01:27.580
This presentation but it's no centralized model involved in my work.

17
0:01:27.580 --> 0:01:34.620
So there is no business model at all involved because if I'm fully distributed, fully distributed,

18
0:01:34.620 --> 0:01:41.940
not only decentralized, fully distributed, it's totally impossible by design to introduce

19
0:01:41.940 --> 0:01:44.500
business models.

20
0:01:44.500 --> 0:01:48.500
Obviously no coin, no token or things like that.

21
0:01:48.500 --> 0:01:51.160
I'd like to talk quickly about the motivation.

22
0:01:51.160 --> 0:01:53.380
So why I2P SAM?

23
0:01:53.380 --> 0:02:00.500
This SAM got developed and how we set up a completely distributed network like I2P and

24
0:02:00.500 --> 0:02:01.500
overlay network.

25
0:02:01.500 --> 0:02:06.060
And I'd obviously like to talk about creation of applications, so how we do that and how

26
0:02:06.060 --> 0:02:07.060
we can do that.

27
0:02:07.060 --> 0:02:11.780
We look at the use cases and then some questions and take-outs.

28
0:02:11.780 --> 0:02:14.220
All right.

29
0:02:14.220 --> 0:02:15.860
I'm Condret.

30
0:02:15.860 --> 0:02:17.660
I live in Switzerland.

31
0:02:17.660 --> 0:02:20.160
So bonjour, no, grÃ©

32
0:02:20.160 --> 0:02:23.380
to have you here.

33
0:02:23.380 --> 0:02:28.900
And I lecture at the University of Applied Science in Lucerne, central Switzerland a

34
0:02:28.900 --> 0:02:36.820
bit about microservices and fully distributed systems where I'm a bit an alien in this

35
0:02:36.820 --> 0:02:41.580
cloud world because today everything is cloud but I'm not cloud, I'm peer to peer.

36
0:02:41.580 --> 0:02:46.180
And now we're here at this I2P network.

37
0:02:46.180 --> 0:02:47.660
Let me ask you a question.

38
0:02:47.660 --> 0:02:48.820
Please raise your hands.

39
0:02:48.820 --> 0:02:55.780
Who ever got in touch with an overlay peer to peer network like I2P?

40
0:02:55.780 --> 0:03:01.900
Again, I'm not totally lonely, so thank you very much.

41
0:03:01.900 --> 0:03:04.100
There are a few which have heard of it.

42
0:03:04.100 --> 0:03:17.260
And in a nutshell, I2P is a fully anonymous confidentiality-giving messaging system.

43
0:03:17.260 --> 0:03:22.580
You know, it's you have the general internet as you know it and where all the cloud applications

44
0:03:22.580 --> 0:03:25.940
are running somewhere in central services.

45
0:03:25.940 --> 0:03:32.460
And this I2P network is a layer and top, it's a software layer and everybody who's running

46
0:03:32.460 --> 0:03:39.380
such an I2P note is becoming a client and a server.

47
0:03:39.380 --> 0:03:47.140
So when I'm talking about a note, a note which might be run by every one of you, you're a

48
0:03:47.140 --> 0:03:49.660
client and you're a server.

49
0:03:49.660 --> 0:03:54.020
You're both at the same time and you're helping the network.

50
0:03:54.020 --> 0:04:01.900
There are around 34,000 I2P routers in the network, which is a joke.

51
0:04:01.900 --> 0:04:03.220
That's nothing.

52
0:04:03.220 --> 0:04:07.660
That's compared to the internet infrastructure as we know it today.

53
0:04:07.660 --> 0:04:09.340
That's tiny.

54
0:04:09.340 --> 0:04:11.740
That's nothing.

55
0:04:11.740 --> 0:04:16.700
But still these 34,000 routers more or less.

56
0:04:16.700 --> 0:04:23.460
They run this fully anonymous and fully confidential messaging system.

57
0:04:23.460 --> 0:04:27.900
And please, it's an overlay network.

58
0:04:27.900 --> 0:04:33.540
It's not, well some media call it, but it's not a darknet.

59
0:04:33.540 --> 0:04:34.980
It's just an overlay network.

60
0:04:34.980 --> 0:04:35.980
It's a piece of software.

61
0:04:35.980 --> 0:04:38.820
It's a technical solution to a problem.

62
0:04:38.820 --> 0:04:45.260
And the problem is we want anonymity and we want confidentiality because these two things

63
0:04:45.260 --> 0:04:49.820
by definition define total privacy.

64
0:04:49.820 --> 0:04:57.140
And if I want to disclose my private stuff, it's my decision and only my decision.

65
0:04:57.140 --> 0:04:59.100
And that's the point behind privacy.

66
0:04:59.100 --> 0:05:00.300
All right.

67
0:05:00.300 --> 0:05:08.100
So I ask you now, please in this room to be open towards peer-to-peer applications, which

68
0:05:08.100 --> 0:05:13.700
are a bit more complex but not really complicated, and open your mind for something which has

69
0:05:13.700 --> 0:05:15.980
nothing to do with the cloud.

70
0:05:15.980 --> 0:05:19.060
All right.

71
0:05:19.060 --> 0:05:25.660
Why did I do the work and develop a library, an I2P SAM library?

72
0:05:25.660 --> 0:05:34.340
Well the I2P core developers, they are super cool, hard core network guys.

73
0:05:34.340 --> 0:05:52.900
And they love what they do since 20 years.

74
0:05:52.900 --> 0:05:58.100
The DBA chain, which is a fully distributed storage layer, so something to store data

75
0:05:58.100 --> 0:06:05.100
in without trust.

76
0:06:28.100 --> 0:06:44.420
You can't be spied out.

77
0:06:44.420 --> 0:06:47.980
Everything you exchange is totally private and there is no man in the middle.

78
0:06:47.980 --> 0:06:50.260
There is no man in the middle.

79
0:06:50.260 --> 0:06:54.180
Because again, this I2P network works like a garlic.

80
0:06:54.180 --> 0:07:00.660
All the messages which are hopping through this network from node to node, from peer-to-peer,

81
0:07:00.660 --> 0:07:03.540
they're multiple times encrypted.

82
0:07:03.540 --> 0:07:10.580
So you send your message from your application into the network layer and it ends up at a

83
0:07:10.580 --> 0:07:17.700
destination and it's multiple times encrypted just by using the library.

84
0:07:17.700 --> 0:07:22.060
That was the motivation.

85
0:07:22.060 --> 0:07:28.780
When you peer-to-peer, just by definition, you get a bunch of problems you don't really

86
0:07:28.780 --> 0:07:31.100
want.

87
0:07:31.100 --> 0:07:34.380
And it's complicated a bit to get into it.

88
0:07:34.380 --> 0:07:40.860
So at DBA we thought, hey come on, let's build a few docker containers to simplify this process.

89
0:07:40.860 --> 0:07:45.260
And today the students at the University of Applied Science in Lucerne, they were able

90
0:07:45.260 --> 0:07:51.980
to set up a complete test network and a complete developer network within a few minutes.

91
0:07:51.980 --> 0:07:56.140
And that's this docker container you find on GitHub.

92
0:07:56.140 --> 0:07:58.780
And by the way, also mirrored to Codeberg.

93
0:07:58.780 --> 0:08:06.820
But you find it on GitHub and then you can start by initializing these containers with

94
0:08:06.820 --> 0:08:14.020
a simple script and with one go you have your I2P connectivity available, you have, if you

95
0:08:14.020 --> 0:08:21.900
like to, a storage layer available, and you can start programming, you can start developing.

96
0:08:21.900 --> 0:08:31.860
But needing to care about all the complexity of such a peer-to-peer network.

97
0:08:31.860 --> 0:08:40.260
This is a screenshot of GitHub and here I'd like to be totally open.

98
0:08:40.260 --> 0:08:46.100
All we do at DBA and all I'm doing is really, really free Libra software.

99
0:08:46.100 --> 0:08:52.780
There are no strings attached or strange stuff or things you need from somewhere else.

100
0:08:52.780 --> 0:08:57.620
It's really free, it's really Libra and it's very strict licensing which we're doing.

101
0:08:57.620 --> 0:09:05.580
So that's quite important for me personally to have open-source software at its core and

102
0:09:05.580 --> 0:09:07.820
that's very important for me.

103
0:09:07.820 --> 0:09:11.340
So there exists also a simplified version.

104
0:09:11.340 --> 0:09:17.460
I told you, you need a network to communicate between your peers.

105
0:09:17.460 --> 0:09:24.040
You need maybe a storage layer on top but this storage layer is not a necessity.

106
0:09:24.040 --> 0:09:28.940
So if you say, well, I just want to communicate, I do not want to store anything, I do not

107
0:09:28.940 --> 0:09:34.060
want to store data, then you don't need a blockchain because you don't want to store

108
0:09:34.060 --> 0:09:35.300
data.

109
0:09:35.300 --> 0:09:40.540
So if you just need to communicate in your application between peers, then you have this

110
0:09:40.540 --> 0:09:42.620
simpler setup.

111
0:09:42.620 --> 0:09:50.740
You go with npm install, i2p sam and in there is a YAML file, that's the last one.

112
0:09:50.740 --> 0:10:00.340
So this sam deva.itup.yml and you initialize this container in there and you have a very

113
0:10:00.340 --> 0:10:13.660
much simplified application, development environment available without storage capabilities.

114
0:10:13.660 --> 0:10:17.900
The library got quite popular in the last months.

115
0:10:17.900 --> 0:10:24.180
It has to do with one thing we did for the DNS crowd, domain name system, domain name

116
0:10:24.180 --> 0:10:28.160
service and the students at the University of Applied Science, they got the job from

117
0:10:28.160 --> 0:10:38.540
me to create an API for a DNS system for i2p because i2p does not even have a DNS.

118
0:10:38.540 --> 0:10:42.900
So welcome to Stone Age.

119
0:10:42.900 --> 0:10:47.620
And so the library got used by the students and got more popular in the last months which

120
0:10:47.620 --> 0:10:49.980
is nice.

121
0:10:49.980 --> 0:10:53.060
And here we have this, by the way, who's familiar with Docker?

122
0:10:53.060 --> 0:10:55.060
Who's using Docker?

123
0:10:55.060 --> 0:11:00.020
Okay, right, so great, almost everybody.

124
0:11:00.020 --> 0:11:03.140
So yeah, here you have a YAML file, I don't have to say much.

125
0:11:03.140 --> 0:11:10.460
You use it and you have your environment available and everything is available on GitHub on marriage

126
0:11:10.460 --> 0:11:12.820
to Codeberg.

127
0:11:12.820 --> 0:11:22.500
I want to go through theoretically two simple use cases to inspire you to create your own

128
0:11:22.500 --> 0:11:26.220
privacy by design application, your own.

129
0:11:26.220 --> 0:11:29.500
We go through two examples.

130
0:11:29.500 --> 0:11:33.940
One is reading and the other example is writing.

131
0:11:33.940 --> 0:11:39.540
As you said, as I said, every node in the network you are a client and the server at

132
0:11:39.540 --> 0:11:44.260
the same time because you're a router within the i2p network.

133
0:11:44.260 --> 0:11:50.980
So what we're doing first, we're reading something from the network.

134
0:11:50.980 --> 0:11:59.620
Now the documentation on NPM, the documentation on GitHub for this library is quite grown

135
0:11:59.620 --> 0:12:01.180
up.

136
0:12:01.180 --> 0:12:03.980
It's quite complete.

137
0:12:03.980 --> 0:12:07.620
That's my personal view on it.

138
0:12:07.620 --> 0:12:13.740
If you have a different view, please do not hesitate to tell me and improve this documentation

139
0:12:13.740 --> 0:12:18.420
because I can learn that much from you.

140
0:12:18.420 --> 0:12:23.140
So here we have an example of creating a reading stream.

141
0:12:23.140 --> 0:12:29.460
So you want to read some data from another node in the i2p network.

142
0:12:29.460 --> 0:12:36.620
And you can simply use this very first quick start example and then replace only the IP

143
0:12:36.620 --> 0:12:44.140
which points to your docker container which we have seen in the YAML file just before.

144
0:12:44.140 --> 0:12:48.780
And tada, you're communicating through the i2p network.

145
0:12:48.780 --> 0:12:51.180
That's it.

146
0:12:51.180 --> 0:12:59.540
So privacy by design and exchanging private messages, totally confidential and anonymous,

147
0:12:59.540 --> 0:13:03.660
over the existing internet infrastructure isn't difficult anymore.

148
0:13:03.660 --> 0:13:04.860
Here it is.

149
0:13:04.860 --> 0:13:06.340
It's not more.

150
0:13:06.340 --> 0:13:12.740
And the same thing is now also if we're looking into writing data which means nothing else

151
0:13:12.740 --> 0:13:20.460
you're offering a service on the overlay network i2p.

152
0:13:20.460 --> 0:13:26.020
There is the other example in the read me which is doing both things at the same time.

153
0:13:26.020 --> 0:13:30.340
The second example is creating a writing instance.

154
0:13:30.340 --> 0:13:36.100
So serving some data and at the same time that's the very last part here at the end,

155
0:13:36.100 --> 0:13:37.540
it's reading data.

156
0:13:37.540 --> 0:13:43.340
And it's not doing this locally by simply locally connecting from the reading instance

157
0:13:43.340 --> 0:13:44.660
to the writing instance.

158
0:13:44.660 --> 0:13:56.180
No, it goes through the overlay network, through i2p completely and it does its job.

159
0:13:56.180 --> 0:13:59.380
A word of warning.

160
0:13:59.380 --> 0:14:04.100
i2p is not fast.

161
0:14:04.100 --> 0:14:09.740
Latency and total anonymity has a price tag attached.

162
0:14:09.740 --> 0:14:15.540
And this price tag is called speed, latency.

163
0:14:15.540 --> 0:14:21.140
To give you an idea, when we're reading and writing data from the Diva blockchain where

164
0:14:21.140 --> 0:14:26.460
we're exchanging this data over peers distributed all over the network, we have latencies of

165
0:14:26.460 --> 0:14:28.900
three till five seconds.

166
0:14:28.900 --> 0:14:30.740
Three till five seconds.

167
0:14:30.740 --> 0:14:34.140
That feels like 1992 or something.

168
0:14:34.140 --> 0:14:37.100
So that's the cost of privacy.

169
0:14:37.100 --> 0:14:43.220
You don't get privacy for free.

170
0:14:43.220 --> 0:14:44.420
Right a few use cases.

171
0:14:44.420 --> 0:14:46.900
And I'd like to highlight the second one.

172
0:14:46.900 --> 0:14:48.580
The first one is the free banking.

173
0:14:48.580 --> 0:14:51.900
That's where I'm working together with and everybody is invited because we're totally

174
0:14:51.900 --> 0:14:52.900
transparent.

175
0:14:52.900 --> 0:14:55.500
So if banking is your thing, yeah, join in.

176
0:14:55.500 --> 0:15:03.700
If chat is your thing, then the i2p development team is really would be super happy to, would

177
0:15:03.700 --> 0:15:10.380
be super happy that somebody hops into the chat challenge.

178
0:15:10.380 --> 0:15:18.860
You don't have to worry that the chat application is not good enough because i2p simply has

179
0:15:18.860 --> 0:15:19.860
nothing.

180
0:15:19.860 --> 0:15:24.460
So it would be a great thing to start somewhere.

181
0:15:24.460 --> 0:15:28.780
And if you're a good user interface designer or user experience designer, hey, they would

182
0:15:28.780 --> 0:15:31.940
be like in heaven if they get something like that.

183
0:15:31.940 --> 0:15:34.620
That would be wow.

184
0:15:34.620 --> 0:15:40.700
Additionally games could be a topic for some people, but the latency could be a killer

185
0:15:40.700 --> 0:15:41.700
there.

186
0:15:41.700 --> 0:15:44.900
So by its interest, it would be interesting.

187
0:15:44.900 --> 0:15:47.020
Right.

188
0:15:47.020 --> 0:15:52.820
Since I have now around eight minutes left as my colleagues have shown me, which is great,

189
0:15:52.820 --> 0:16:00.860
I'd already like to enter the links, discussions, feedback and questions face of this presentation.

190
0:16:00.860 --> 0:16:04.020
So please, any questions?

191
0:16:04.020 --> 0:16:06.900
Oh yes.

192
0:16:06.900 --> 0:16:11.660
Call to action.

193
0:16:11.660 --> 0:16:15.340
There are some questions and there is a microphone.

194
0:16:15.340 --> 0:16:26.380
Thank you very much.

195
0:16:26.380 --> 0:16:27.380
Test test.

196
0:16:27.380 --> 0:16:28.380
Hi.

197
0:16:28.380 --> 0:16:31.860
Thank you very much for your presentation.

198
0:16:31.860 --> 0:16:38.660
So usually in secure systems, one of the issue is that due to security, there is more friction

199
0:16:38.660 --> 0:16:39.660
for the user.

200
0:16:39.660 --> 0:16:45.060
And that's also part of the cost of implementing secure systems.

201
0:16:45.060 --> 0:16:48.940
So of course here almost everybody used a Docker.

202
0:16:48.940 --> 0:16:50.780
So that's not an issue.

203
0:16:50.780 --> 0:16:55.940
But for, let's say my grandma, that's going to be a bit more difficult.

204
0:16:55.940 --> 0:17:00.980
It's probably also not a target audience, but on the network side, have you tried, for

205
0:17:00.980 --> 0:17:09.940
example, setting up a compatibility layer with WebSockets or WebRTC so that the full

206
0:17:09.940 --> 0:17:12.180
stack could be run from the browser?

207
0:17:12.180 --> 0:17:13.180
Yeah.

208
0:17:13.180 --> 0:17:14.180
Short answer.

209
0:17:14.180 --> 0:17:18.220
Short answer, yes, WebSockets, WebSockets, not WebRTC.

210
0:17:18.220 --> 0:17:24.260
WebSockets is used by Diva, which is a real-time banking exchange system running on your own

211
0:17:24.260 --> 0:17:25.260
device.

212
0:17:25.260 --> 0:17:26.260
Yes.

213
0:17:26.260 --> 0:17:27.260
Yes.

214
0:17:27.260 --> 0:17:33.820
Everything which you as JavaScript developers and TypeScript developers do know is on board.

215
0:17:33.820 --> 0:17:36.260
It just might be sometimes a bit slow.

216
0:17:36.260 --> 0:17:41.340
But I do not believe that there are additional user experience challenge.

217
0:17:41.340 --> 0:17:46.100
Obviously you're totally right, but since you are the developer, I have, I just deliver

218
0:17:46.100 --> 0:17:47.100
the glue.

219
0:17:47.100 --> 0:17:55.540
I just deliver the glue between the privacy network and the end user interfaces, so the

220
0:17:55.540 --> 0:17:59.540
human machine interaction, which we as developers should create.

221
0:17:59.540 --> 0:18:04.300
But this here, this library is just the glue which gives you privacy by design.

222
0:18:04.300 --> 0:18:05.460
Thank you very much for this question.

223
0:18:05.460 --> 0:18:06.460
More questions?

224
0:18:06.460 --> 0:18:07.460
Please.

225
0:18:07.460 --> 0:18:13.060
Hi, thanks for the presentation as well.

226
0:18:13.060 --> 0:18:20.900
How does it compare to other peer-to-peer networks such as IPFS, for instance?

227
0:18:20.900 --> 0:18:23.900
Thank you very much for this question.

228
0:18:23.900 --> 0:18:28.980
There are other presentations in the lightning talk, lightning room just afterwards.

229
0:18:28.980 --> 0:18:34.540
First I have the I2P presentation, and then there are other overlay networks.

230
0:18:34.540 --> 0:18:39.260
Honestly, I can't compare it because I'm the I2P guy.

231
0:18:39.260 --> 0:18:43.100
It says I2P here.

232
0:18:43.100 --> 0:18:46.700
But there is quite some research around which compares these networks.

233
0:18:46.700 --> 0:18:55.540
What I'd like to lay out is on the research gate, which is the academic network for papers,

234
0:18:55.540 --> 0:19:03.340
there are some interesting papers around to read about dark nets, and now I call it dark

235
0:19:03.340 --> 0:19:08.740
net which have storage capabilities suitable for large files.

236
0:19:08.740 --> 0:19:10.260
Please do your own research.

237
0:19:10.260 --> 0:19:13.380
Please think what you're doing.

238
0:19:13.380 --> 0:19:17.540
Privacy is important, but there are also bad actors out there.

239
0:19:17.540 --> 0:19:23.700
Do your own research, and please read the research gate papers and articles about overlay

240
0:19:23.700 --> 0:19:24.700
networks.

241
0:19:24.700 --> 0:19:26.700
Is this okay for you?

242
0:19:26.700 --> 0:19:35.940
It's today the lightning talks.

243
0:19:35.940 --> 0:19:39.460
There will be lightning talks today comparing those different...

244
0:19:39.460 --> 0:19:43.340
Okay, so the speed of the networks, the latencies?

245
0:19:43.340 --> 0:19:44.340
No?

246
0:19:44.340 --> 0:19:45.340
No.

247
0:19:45.340 --> 0:19:46.340
Don't worry.

248
0:19:46.340 --> 0:19:47.340
All right.

249
0:19:47.340 --> 0:19:48.900
I'm going to check the links.

250
0:19:48.900 --> 0:19:49.900
Thank you.

251
0:19:49.900 --> 0:19:52.220
Thank you.

252
0:19:52.220 --> 0:19:53.220
More questions?

253
0:19:53.220 --> 0:19:58.620
Sorry.

254
0:19:58.620 --> 0:19:59.620
I'm chilling.

255
0:19:59.620 --> 0:20:04.380
I had a question about the latency.

256
0:20:04.380 --> 0:20:09.660
The problem is the number of the servers who know that we have the only 34,000, that's

257
0:20:09.660 --> 0:20:10.660
the problem.

258
0:20:10.660 --> 0:20:14.380
If we got more, that would mean that we can speed it up or if it's just taking all of

259
0:20:14.380 --> 0:20:21.100
it that it has a bottleneck and doesn't let it go faster.

260
0:20:21.100 --> 0:20:22.940
Interesting question.

261
0:20:22.940 --> 0:20:31.220
The question is, if there are more nodes in the network, will the network become faster?

262
0:20:31.220 --> 0:20:36.740
By building overlay networks, now by theory, tunnel building is involved.

263
0:20:36.740 --> 0:20:41.540
Tunnel means a message hops over several nodes in the network.

264
0:20:41.540 --> 0:20:50.220
Now, a message comp can be only as fast as the slowest node in this route, so in this

265
0:20:50.220 --> 0:20:52.680
tunnel.

266
0:20:52.680 --> 0:20:59.660
Just by stacking up additional nodes in this network is not necessarily decreasing the

267
0:20:59.660 --> 0:21:02.180
latency of the network.

268
0:21:02.180 --> 0:21:09.380
It depends of the available bandwidth and performance of all the nodes involved within

269
0:21:09.380 --> 0:21:12.020
one tunnel.

270
0:21:12.020 --> 0:21:18.980
The answer to your question is, it depends.

271
0:21:18.980 --> 0:21:23.380
More questions?

272
0:21:23.380 --> 0:21:29.380
Oh, yeah?

273
0:21:29.380 --> 0:21:35.380
Since there's no other questions, could you give some more context about your free banking

274
0:21:35.380 --> 0:21:37.540
use case, the first one?

275
0:21:37.540 --> 0:21:39.100
Right, yeah.

276
0:21:39.100 --> 0:21:42.340
It's a JavaScript, TypeScript application.

277
0:21:42.340 --> 0:21:49.300
It's built to exchange any existing or any future digital value, which can be something

278
0:21:49.300 --> 0:21:54.780
to take an example, which everybody understands, Bitcoin, but also can be something like a

279
0:21:54.780 --> 0:21:58.060
piece of music and art which is digitally available.

280
0:21:58.060 --> 0:22:00.940
Has nothing to do with Ethereum or directly.

281
0:22:00.940 --> 0:22:05.340
It's just an exchange system for all digital values.

282
0:22:05.340 --> 0:22:12.320
Here we require, by definition in our foundation, it has to be private by design, because we

283
0:22:12.320 --> 0:22:13.380
want that.

284
0:22:13.380 --> 0:22:17.980
People decide and not some operation in the center.

285
0:22:17.980 --> 0:22:21.660
That's the context I'd like to give here.

286
0:22:21.660 --> 0:22:26.900
Other questions?

287
0:22:26.900 --> 0:22:28.820
Thank you very much for your time.

288
0:22:28.820 --> 0:22:55.720
Thank you,

