1
0:00:00.000 --> 0:00:21.060
All right, everyone. Good morning. So my name is Andrew Hutchings. I'm also known as kind

2
0:00:21.060 --> 0:00:27.380
of Linux Jedi everywhere. Long story behind that another time. I'm the chief contributions

3
0:00:27.380 --> 0:00:32.560
officer for Marie DB foundation. And I want to start out by kind of saying what all the

4
0:00:32.560 --> 0:00:36.560
different really these are because when someone uses them to read a beer can mean a lot of

5
0:00:36.560 --> 0:00:41.280
different things. So there's really be server which is the software kind of everyone knows.

6
0:00:41.280 --> 0:00:46.520
There's really be corporation which is the kind of for profit entity that does all the

7
0:00:46.520 --> 0:00:52.960
support consulting they do Sky SQL max scale etc. Then there's the foundation which is

8
0:00:52.960 --> 0:00:59.480
a nonprofit entity with funded by kind of lots of different third party companies. And

9
0:00:59.480 --> 0:01:08.240
we are there to essentially continue the read to be source code for the community, essentially.

10
0:01:08.240 --> 0:01:13.680
So bit of a weird job title to contributions officer. So I'm going to explain it using

11
0:01:13.680 --> 0:01:17.680
the pillars of the Marine DB foundation and how they apply to my role. So the pillars

12
0:01:17.680 --> 0:01:24.200
of the Marine DB foundation are openness, adoption and continuity. And on the continuity

13
0:01:24.200 --> 0:01:30.080
sides I try and make all the kinds of different contributions easier for the community to

14
0:01:30.080 --> 0:01:36.600
contribute by reducing the kind of time between opening closing pull requests, but not the

15
0:01:36.600 --> 0:01:45.140
cost of quality or the communications to the contributor. On the openness side we create

16
0:01:45.140 --> 0:01:50.640
and publish metrics. I'll be talking about those a little bit. But essentially it's so

17
0:01:50.640 --> 0:01:56.160
that you can see exactly what is going on with community contributions. And on the adoption

18
0:01:56.160 --> 0:02:04.000
side we work with communities such as operating systems and also end users such as well end

19
0:02:04.000 --> 0:02:09.600
applications such as WordPress that use Marine DB to make sure that we can integrate well

20
0:02:09.600 --> 0:02:16.500
with them and grow adoption that way. So there are lots of different types of contributions.

21
0:02:16.500 --> 0:02:19.760
When people hear about contribution they usually think of code contributions. And those are

22
0:02:19.760 --> 0:02:24.160
the ones I'm mostly going to be talking about today. But there are lots of others that are

23
0:02:24.160 --> 0:02:29.120
important. Funding for a non-profit kind of foundation is really important. It helps us

24
0:02:29.120 --> 0:02:35.760
kind of grow the community around everything. Documentation is really important. If you

25
0:02:35.760 --> 0:02:42.320
can't contribute code, then contributing documentation is quite useful for us. Community. I say this

26
0:02:42.320 --> 0:02:50.360
because we have a Zulip, we have people asking questions on StackOverflow, Reddit, we have

27
0:02:50.360 --> 0:02:56.400
a community Slack, we have mailing lists, etc. And the small foundation can't get to

28
0:02:56.400 --> 0:03:02.040
everyone and everywhere. So if you know how to answer a question then it's a contribution

29
0:03:02.040 --> 0:03:12.680
to reply and would love you for it. Translations. So I grew up in England. We suck at languages.

30
0:03:12.680 --> 0:03:18.720
I barely speak English. It's terrible. So any help we can get with translating error

31
0:03:18.720 --> 0:03:23.760
messages, things like that is really useful to us. And we're working on making that a

32
0:03:23.760 --> 0:03:30.320
bit easier on a workflow point of view. And then usage. Bug reports, feature requests,

33
0:03:30.320 --> 0:03:34.400
actually using the thing and telling us what you like, you don't like, what's broken, what's

34
0:03:34.400 --> 0:03:37.960
not broken, what you want in there. That's a contribution and that's really useful to

35
0:03:37.960 --> 0:03:46.040
us as well, just as much as a code contribution is. So going a bit further into non-code contributions,

36
0:03:46.040 --> 0:03:56.560
I'm going to talk a little bit about Intel, who's a sponsor of ours. They do lots of non-code

37
0:03:56.560 --> 0:04:02.960
contributions, sorry, morning. And they can't really do that many code contributions due

38
0:04:02.960 --> 0:04:08.000
to some legal stuff that they have to go through every time they contribute code. But they

39
0:04:08.000 --> 0:04:13.120
are doing things like they're constantly benchmarking readDB against their current and upcoming

40
0:04:13.120 --> 0:04:17.480
hardware and feeding back the information to us of what's working, what's not working,

41
0:04:17.480 --> 0:04:22.320
what hardware combinations are working, what's not working. And when they do spot some kind

42
0:04:22.320 --> 0:04:26.400
of regression or some new hardware or something like that or there's a release that's caused

43
0:04:26.400 --> 0:04:31.360
a regression on their hardware, they will tell us, they will dig deep and tell us where

44
0:04:31.360 --> 0:04:36.160
to look in the code, what they've spotted and then our engineers can then work on improving

45
0:04:36.160 --> 0:04:43.160
that. So they've worked a lot with Marco on inADB, I'm sure he's in here somewhere, to

46
0:04:43.160 --> 0:04:48.040
improve the performance certainly in 10.6 recently. They do supply speed hardware to

47
0:04:48.040 --> 0:04:53.720
test against, so a lot of the buildbot infrastructure is on Intel hardware. They've given us financial

48
0:04:53.720 --> 0:05:00.840
support and Steve Shaw from Intel is on the board for the MariaDB Foundation. So there

49
0:05:00.840 --> 0:05:06.560
always be things you can do to contribute even if you can't contribute code to MariaDB.

50
0:05:06.560 --> 0:05:13.080
Why contribution is important? Well, so we get a more diverse input from our life experiences.

51
0:05:13.080 --> 0:05:18.400
So if a project is built by one team in one country, in one office for example, you're

52
0:05:18.400 --> 0:05:27.040
not going to get a diverse feel of not just culture but use cases, etc. So I think it's

53
0:05:27.040 --> 0:05:33.160
really important to get contributions for a wide group of people. You get to direct

54
0:05:33.160 --> 0:05:37.840
the project the way the users want rather than being led by one single entity, one single

55
0:05:37.840 --> 0:05:43.560
corporation. So if a corporation says, okay, all money is here, they're going to put all

56
0:05:43.560 --> 0:05:48.880
the resources to develop those features and it might not be what someone is using WordPress

57
0:05:48.880 --> 0:05:55.360
wants, for example. You're fixing bugs and things that are important to you, and I think

58
0:05:55.360 --> 0:06:00.440
that's quite important, and you're building a real community around the project. So it

59
0:06:00.440 --> 0:06:05.840
wouldn't be a first-time if I don't talk about Drizzle. For those who don't know, Drizzle

60
0:06:05.840 --> 0:06:17.000
was a database, a fork in MySQL 6 back in 2009. It started in some microsystems and

61
0:06:17.000 --> 0:06:23.520
it was designed to be a microkernel fork with loads of different plug-ins optimized for

62
0:06:23.520 --> 0:06:29.840
web and cloud usage. It eventually died, so that's why you probably haven't heard of it.

63
0:06:29.840 --> 0:06:37.520
But in 2009, we had a talk where we said we want 50% of the code contributions to come

64
0:06:37.520 --> 0:06:42.800
outside of some microsystems, and we kind of met this goal in a unique way. Oracle bought

65
0:06:42.800 --> 0:06:50.320
Sun and fired everybody. So we did meet the goal and everyone went to Rackspace, but my

66
0:06:50.320 --> 0:06:59.280
point is MariaDB Server has more external contributors than internal contributors. So

67
0:06:59.280 --> 0:07:06.000
the corporation has in 2022 36 code contributors, there's eight from the MariaDB Foundation,

68
0:07:06.000 --> 0:07:09.880
and there was 68 code contributors elsewhere. Now obviously those contributors are not working

69
0:07:09.880 --> 0:07:14.720
full-time on the code base, but it does mean that they kind of fix the problems that are

70
0:07:14.720 --> 0:07:21.720
important to them, and it's a pretty impressive stat, I think. And we had some stats in 2019,

71
0:07:21.720 --> 0:07:27.240
you know, kind of something happened in 2020, can't think what, that kind of, of course,

72
0:07:27.240 --> 0:07:30.080
it was kind of implied, but yes, COVID.

73
0:07:30.080 --> 0:07:35.960
Also, many of the contributions come from China, and that was recently a lot before the

74
0:07:35.960 --> 0:07:41.760
COVID. If you don't see that in the Thursday packet.

75
0:07:41.760 --> 0:07:46.280
Exactly, yeah, so as Monty said, COVID hit, China kind of caused the stats to dip a little

76
0:07:46.280 --> 0:07:51.920
bit, things like that. They started to get back up again in 2021, and 2022 has probably

77
0:07:51.920 --> 0:07:56.480
been our best year ever, and I think we got some really big stuff lined up for 2023 as

78
0:07:56.480 --> 0:08:04.600
well. So the actual stats for 2022 are on screen right now. So Corporation obviously

79
0:08:04.600 --> 0:08:09.040
is the biggest contributor, they pay a lot of full-time developers to work on it. We

80
0:08:09.040 --> 0:08:13.120
have a smaller number in the foundation of full-time developers and some people who work

81
0:08:13.120 --> 0:08:17.320
part-time on the code and things like that as well. So even I contribute a little bit,

82
0:08:17.320 --> 0:08:22.040
but knowing near as much as everyone else, you know, at most one day a week, so it's

83
0:08:22.040 --> 0:08:29.000
not a huge amount. And then other contributors kind of outside of the MariaDB circle, pretty

84
0:08:29.000 --> 0:08:33.640
much on par with what the foundation contributes, so pretty good.

85
0:08:33.640 --> 0:08:38.440
So we use Git DM, which is called Git Data Miner, to actually process the Git commit

86
0:08:38.440 --> 0:08:43.360
stream to generate this, and I've actually open sourced the tooling that does all this,

87
0:08:43.360 --> 0:08:47.560
and it has all the kind of metadata in there to generate this. So you can actually break

88
0:08:47.560 --> 0:08:54.840
it down by user, by entity they work for, etc. And if you find that I've made a mistake

89
0:08:54.840 --> 0:09:00.400
on identifying someone, you can actually open a pull request on that and change the data

90
0:09:00.400 --> 0:09:06.640
accordingly. So it's kind of open in that respect as well, if you see what I mean.

91
0:09:06.640 --> 0:09:10.480
Git Data Miner was something that was created for the Linux kernel. We tweaked it a little

92
0:09:10.480 --> 0:09:15.760
bit so we can count hackers and things like that, but yeah, it's essentially the same

93
0:09:15.760 --> 0:09:20.000
thing. We have a script to generate pull requests. I know this chart is going to be difficult

94
0:09:20.000 --> 0:09:26.920
to see on the screen, but kind of the trend is the important part. So this scrapes GitHub

95
0:09:26.920 --> 0:09:32.720
for weekly pull request metrics. So the x axis here is weak numbers, and then the y

96
0:09:32.720 --> 0:09:39.680
axis is the number of open pull requests. So the bottom is 80, the top is 120. Part of

97
0:09:39.680 --> 0:09:45.120
my job is to help bring this down. I have been failing. I will be working on that quite

98
0:09:45.120 --> 0:09:49.680
a bit in 2023. So I'd run.

99
0:09:49.680 --> 0:09:53.320
You should also add how many actually close to that one. Now you have no open.

100
0:09:53.320 --> 0:10:00.520
I do have that, but showing that on this chart was getting very messy. So it's hard enough

101
0:10:00.520 --> 0:10:07.200
to show this. See, we do close a hell of a lot of pull requests as well. And we don't

102
0:10:07.200 --> 0:10:12.080
just go in and say, no, that's rubbish close. We tend to talk to people through the pull

103
0:10:12.080 --> 0:10:16.440
requests, and that's why some of them stay open quite a long time.

104
0:10:16.440 --> 0:10:21.840
So in the metrics future, I kind of want to break down the commit contributions by module,

105
0:10:21.840 --> 0:10:28.240
engine, et cetera. So we know how many contributions are coming to NODB, how many to Connect Engine,

106
0:10:28.240 --> 0:10:35.440
how many to RocksDB, et cetera, so that we can track that kind of usage. I want to track

107
0:10:35.440 --> 0:10:41.320
the average time to merge pull requests, median and mean, I guess. Probably median because

108
0:10:41.320 --> 0:10:46.520
we've got some that have been open a couple of years and some that only stay open a week

109
0:10:46.520 --> 0:10:53.040
or two, for example. So, but we'll track that. We'll bring it down.

110
0:10:53.040 --> 0:10:58.040
Buildbot contribution metrics. So we use Buildbot for continuous integration. We do get pull

111
0:10:58.040 --> 0:11:04.960
requests through that contributions through that. So we'd love to track that kind of stuff.

112
0:11:04.960 --> 0:11:09.320
More community wide metrics. So we're talking JIRA, we're talking Stack Overflow, Reddit

113
0:11:09.320 --> 0:11:13.880
metrics, et cetera, like that, capturing those kind of things and publishing along with the

114
0:11:13.880 --> 0:11:19.040
quarterly stats that I already publish on meridb.org. And if there's any other metrics

115
0:11:19.040 --> 0:11:25.280
you want to see, let us know. Contact us because we are more than happy to generate them.

116
0:11:25.280 --> 0:11:29.440
So I want to talk about how to contribute code to meridb. I wrote a blog post about

117
0:11:29.440 --> 0:11:34.640
this on meridb.org, but there are some basic steps you can follow. And it kind of helps

118
0:11:34.640 --> 0:11:42.280
reduce the round trip time during review. And also, I don't want you to spend hours, days

119
0:11:42.280 --> 0:11:47.680
working on something and opening a portal question saying, sorry, this doesn't really

120
0:11:47.680 --> 0:11:51.480
fit with what we're doing at all or someone else has already done this. And I have to

121
0:11:51.480 --> 0:11:56.960
say no, because I don't want to crush people's hopes or anything like that. So if you follow

122
0:11:56.960 --> 0:12:00.560
these steps, it will kind of help reduce that quite a bit.

123
0:12:00.560 --> 0:12:05.860
So first step is communication, talking to us. We can guide you through kind of every

124
0:12:05.860 --> 0:12:11.480
step of the way. The meridb team are quite approachable, preferably via Jira and Zulit,

125
0:12:11.480 --> 0:12:15.200
but there are other ways to talk to us as well. In particular, for Cento, Daniel and

126
0:12:15.200 --> 0:12:18.600
me at the foundation, there are a list of people at the corporation I'm sure you can

127
0:12:18.600 --> 0:12:23.600
talk to as well. Tell us what you want to work on. And if you don't know what you want

128
0:12:23.600 --> 0:12:30.400
to work on, there is a beginner-friendly tag on Jira where we've tagged tickets that are

129
0:12:30.400 --> 0:12:35.040
should be relatively easy to pick up and work on. And we can talk you through these. If

130
0:12:35.040 --> 0:12:38.400
there's no Jira for what you want to work on yet, open one and again talk to us and

131
0:12:38.400 --> 0:12:44.640
we can figure out the best solution for it.

132
0:12:44.640 --> 0:12:50.600
Next step is hacking. Write some codes. If you are making a bug fix, it needs to be against

133
0:12:50.600 --> 0:12:56.680
the oldest affected version of meridb. So if it affects 10.5 upwards, then against 10.5.

134
0:12:56.680 --> 0:13:04.200
What is the biggest active release? Yes, active release. Always check the end

135
0:13:04.200 --> 0:13:09.000
of life as well for the releases when you do this. We're in this weird phase right now

136
0:13:09.000 --> 0:13:15.560
where we have got weird, we changed release cycles a couple of years ago. So some releases

137
0:13:15.560 --> 0:13:18.920
are on the old release cycle and some are on the new release cycle. So some in the middle

138
0:13:18.920 --> 0:13:24.440
are end of life, but some are. So it's a bit funny right now. But again, you can talk to

139
0:13:24.440 --> 0:13:27.760
us about this and we can help point you in the right direction. But new features always

140
0:13:27.760 --> 0:13:34.200
go in the latest development version which currently is 11.0 for the next couple of weeks.

141
0:13:34.200 --> 0:13:39.760
We're now Hest, G8, there'll be another release you can bolt things on.

142
0:13:39.760 --> 0:13:44.080
Please stick to the coding standards, to the surrounding code. You'll find that different

143
0:13:44.080 --> 0:13:47.640
engines have different coding standards because they've come from different places. Connect

144
0:13:47.640 --> 0:13:52.680
Engine was originally a MySQL contribution that came through to meridb and that's got

145
0:13:52.680 --> 0:13:58.160
a different coding standard to say inodb and the core server code. I've put together a

146
0:13:58.160 --> 0:14:03.200
coding standards document which should be merged shortly and that's just for the core

147
0:14:03.200 --> 0:14:07.760
server and at the moment it's kind of descriptive, un-prescriptive. But we're going to kind of

148
0:14:07.760 --> 0:14:10.800
improve on that over time.

149
0:14:10.800 --> 0:14:16.520
As some test cases, we don't want you to kind of write something, us merge it and then us

150
0:14:16.520 --> 0:14:21.960
break it later. So if you have some test cases in there, A, it proves exactly what you're

151
0:14:21.960 --> 0:14:27.760
doing and B, it means that it will stay like that in the future.

152
0:14:27.760 --> 0:14:32.080
Run the MTR test suite locally because otherwise you might get build bot errors that you don't

153
0:14:32.080 --> 0:14:38.280
expect and it just kind of reduces the cycle a little bit there. If it's a new feature,

154
0:14:38.280 --> 0:14:41.200
help us write some documentation or at least describe what it does in the Jira tickets

155
0:14:41.200 --> 0:14:47.120
so that we can kind of put that into the knowledge base at a later date.

156
0:14:47.120 --> 0:14:52.840
Next up, pull requests. When you open a pull request, a form will pop up and filling this

157
0:14:52.840 --> 0:14:57.680
in will help us triage the pull request essentially. So it will ask you questions about whether

158
0:14:57.680 --> 0:15:03.880
this is a bug or a feature, have you added a test, does this break things, stuff like

159
0:15:03.880 --> 0:15:08.680
that. If it's your first time doing a pull request, something called the CLA Assistant

160
0:15:08.680 --> 0:15:14.840
will pop up. It's not 100% intuitive right now, it's something we need to improve on,

161
0:15:14.840 --> 0:15:19.360
but right now it will pop up and ask you to sign the CLA. You can click through that and

162
0:15:19.360 --> 0:15:25.360
either sign the CLA or tick to say, I want to contribute under the three clause BSD license,

163
0:15:25.360 --> 0:15:28.480
or you can just literally put a comment in and say, I'm contributing this under the three

164
0:15:28.480 --> 0:15:32.880
clause BSD license and then we can take it from there.

165
0:15:32.880 --> 0:15:38.160
Build bot will run on the pull request automatically, lots and lots of different builders. The most

166
0:15:38.160 --> 0:15:46.160
important ones will report back to GitHub and show you that if anything has failed during

167
0:15:46.160 --> 0:15:50.860
compiling or testing on lots of different platforms we support. When we actually go

168
0:15:50.860 --> 0:15:55.760
to review it, we'll actually look at the full build bot list where there might be some obscure

169
0:15:55.760 --> 0:16:00.560
platforms that might have broken in weird ways. At least it gives you some idea of what's

170
0:16:00.560 --> 0:16:05.400
gone wrong and you can click through and look at the cause. Again, if you don't understand

171
0:16:05.400 --> 0:16:11.400
the error that popped up, we can look at it for you and point you in the right direction.

172
0:16:11.400 --> 0:16:17.280
And then code review process. The Meridib engineers, both at the foundation and corporation,

173
0:16:17.280 --> 0:16:22.560
will review, give feedback, advice. If we think the code is ready, we'll approve it

174
0:16:22.560 --> 0:16:28.480
and merge it. Community members are also welcome to come look at the codes that people have

175
0:16:28.480 --> 0:16:34.240
contributed, review it, comment on it. It's another way you can contribute. If we are

176
0:16:34.240 --> 0:16:37.720
taking time to get to your pull request and we're dropping the ball or something like

177
0:16:37.720 --> 0:16:43.400
that or you need advice, you can tag me, at learnersjedi, on GitHub and I will take a

178
0:16:43.400 --> 0:16:49.000
look at it for you. I'm lagging a bit behind on that because I'm at FOSM right now, but

179
0:16:49.000 --> 0:16:53.680
I will try and keep up with that. We have a large backlog right now, so it is very easy

180
0:16:53.680 --> 0:17:00.680
for us to miss things. And that is all I have. Any questions from anyone? Yes.

181
0:17:00.680 --> 0:17:07.920
Is the foundation and the corporation have different release cycles?

182
0:17:07.920 --> 0:17:13.720
Is foundation and corporation different release cycles? So, no. At the moment, the corporation

183
0:17:13.720 --> 0:17:19.320
are generating the releases. So, the engineers at the corporation are generating the releases,

184
0:17:19.320 --> 0:17:23.840
if you see what I mean. So, the releases you get are generated by the corporation.

185
0:17:23.840 --> 0:17:33.160
Built by the foundation, yeah. There's a lot of synergies between the two, which is a good

186
0:17:33.160 --> 0:17:37.040
thing. We want to be working closely with them, if you see what I mean. But if anything,

187
0:17:37.040 --> 0:17:42.520
God forbid, happens to the corporation, the foundation existing means that MariaDB Server

188
0:17:42.520 --> 0:17:46.760
will still exist, will still be developed, et cetera.

189
0:17:46.760 --> 0:17:56.640
All right. Thank you very much.

