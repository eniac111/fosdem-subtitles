WEBVTT

00:00.000 --> 00:10.680
Okay, awesome to see there are so many people here.

00:10.680 --> 00:15.800
Really cool that there's big interest in the energy topic.

00:15.800 --> 00:24.200
My name is Frederik Stuhl and I'm from Aljondur which is a grid operator and I will be talking

00:24.200 --> 00:27.200
about Open Staff today.

00:27.200 --> 00:35.200
First of all, I put here in the graph, this is a load profile.

00:35.200 --> 00:43.400
So the energy load somewhere in the grid and you can see how it fluctuates over time.

00:43.400 --> 00:46.760
Sometimes it's positive, sometimes it's negative.

00:46.760 --> 00:52.000
This means whether there's netto production or netto consumption.

00:52.000 --> 00:58.800
And now the question is, or you could ask, if we are at the red line right now, what

00:58.800 --> 01:03.960
will be the load in the future?

01:03.960 --> 01:09.400
And that's what we want to predict and if you're interested in that then you can use

01:09.400 --> 01:14.560
Open Staff because Open Staff means short-term energy forecasting.

01:14.560 --> 01:22.000
Okay, let's zoom out a bit first and before I go into a bit more detail about what Open

01:22.000 --> 01:29.920
Staff does, first I want to talk about, I gave a short introduction about why this is relevant.

01:29.920 --> 01:36.400
I don't have hours so I have to keep it short but there's a lot to talk about here.

01:36.400 --> 01:42.640
But I want to start out with this picture and it's actually quite cool because I think

01:42.640 --> 01:51.800
the last presentation talked about flexible energy that consumers can use and this is

01:51.800 --> 01:56.400
one of the many things that are changing in the energy sector.

01:56.400 --> 02:02.400
So consumers have flexible products that also start producing.

02:02.400 --> 02:04.480
Consumers also have solar panels.

02:04.480 --> 02:07.760
Your local farmer might have a wind turbine somewhere.

02:07.760 --> 02:10.520
We have big wind parks on the sea.

02:10.520 --> 02:15.960
So there's all kinds of developments going on right now that make it harder for grid

02:15.960 --> 02:24.920
operators to forecast what's going to happen tomorrow or even the day after tomorrow.

02:24.920 --> 02:32.080
And I'll put this picture here because all the things that I mentioned you can see right

02:32.080 --> 02:39.560
there and probably in the future it's only going to get harder and harder.

02:39.560 --> 02:47.480
We're now going to focus on the renewable energy part because it's also quite impactful.

02:47.480 --> 02:53.440
As you can see on this graph here, this is for the Netherlands, the percentage of renewable

02:53.440 --> 02:55.360
energy production.

02:55.360 --> 03:00.360
And you can see that in just a couple of years, like five years, it has more than doubled

03:00.360 --> 03:05.400
the electricity percentage that has been produced by renewable sources.

03:05.400 --> 03:10.320
And renewable sources don't produce at a constant load, of course, they change all the time

03:10.320 --> 03:12.280
depending on weather.

03:12.280 --> 03:17.360
And this means it's harder to forecast.

03:17.360 --> 03:21.240
And to put that into perspective, I have another slide here.

03:21.240 --> 03:24.120
And this is a typical consumption profile.

03:24.120 --> 03:29.640
If you have your local neighborhood, then this is what the energy load will often look

03:29.640 --> 03:30.640
like.

03:30.640 --> 03:34.920
So you have the five peaks, which means it's a peak for every day and then in the weekend

03:34.920 --> 03:36.400
it's a bit lower.

03:36.400 --> 03:42.680
You can see the dips, these dips in the middle of the day, that's because there's a couple

03:42.680 --> 03:46.400
of solar panels on some roofs.

03:46.400 --> 03:48.920
It still looks easy to predict.

03:48.920 --> 03:57.480
If you go to other places where there's way more renewable energy, you can see these energy

03:57.480 --> 03:59.760
profiles change dramatically.

03:59.760 --> 04:06.720
So here you can see a profile for a big solar park.

04:06.720 --> 04:11.120
You can see these huge negative peaks, which on some days are there and some days they

04:11.120 --> 04:12.120
are not.

04:12.120 --> 04:17.800
Probably that's a cloudy day, so there's no or less energy generated.

04:17.800 --> 04:25.680
And this is an energy profile for a big wind farm, which you can see is, well, seems hard

04:25.680 --> 04:28.400
to predict because there seems no real...

04:28.400 --> 04:31.560
Why are you always negative?

04:31.560 --> 04:42.800
Yeah, so a negative energy means that the consumer or the customer is giving back to

04:42.800 --> 04:43.800
the grid.

04:43.800 --> 04:46.320
So then it's negative for us.

04:46.320 --> 04:47.320
If it's positive, it means...

04:47.320 --> 04:48.320
It means the negative number.

04:48.320 --> 04:49.320
Sorry?

04:49.320 --> 04:51.320
Our sunny day is the negative number.

04:51.320 --> 04:52.320
Yeah, exactly.

04:52.320 --> 04:58.960
So if it means a big negative peak, it means the customer is producing a lot of energy.

04:58.960 --> 05:00.160
So it's just a convention.

05:00.160 --> 05:03.840
You could also switch the sign, but you have to choose one convention.

05:03.840 --> 05:06.160
It's power, not energy.

05:06.160 --> 05:07.160
Megawatts?

05:07.160 --> 05:08.160
Yeah, power.

05:08.160 --> 05:09.160
Yeah.

05:09.160 --> 05:13.360
So is this a site which uses electricity and also has solar?

05:13.360 --> 05:16.120
Because otherwise, how can it be using power?

05:16.120 --> 05:18.520
Yeah, so it's not just one site.

05:18.520 --> 05:23.160
It's more like a general profile for...

05:23.160 --> 05:29.440
Like a substation for the grid operator, but connected to it is a lot of solar.

05:29.440 --> 05:34.440
Okay, so there's load and there's also production.

05:34.440 --> 05:35.440
Yeah, exactly.

05:35.440 --> 05:38.640
So on all of these, there's load and production.

05:38.640 --> 05:45.360
But yeah, I just wanted to share this feeling.

05:45.360 --> 05:48.480
So this can be difficult.

05:48.480 --> 05:52.200
And this also leads to problems.

05:52.200 --> 05:59.320
And this is two maps of the Netherlands and the colored areas are the areas where Aleander

05:59.320 --> 06:01.200
is currently active.

06:01.200 --> 06:06.680
And on the left is energy consumption and on the right is energy production.

06:06.680 --> 06:11.880
And this map shows if you're a new customer and you want to be connected to the grid,

06:11.880 --> 06:17.200
if it's red, it's probably difficult because there's no more room.

06:17.200 --> 06:24.840
According to the Dirge law, the energy grid is full over there.

06:24.840 --> 06:31.040
And you can see that this is for huge areas in the Netherlands and also large areas on

06:31.040 --> 06:33.080
the consumption side.

06:33.080 --> 06:38.280
And of course, Aleander is doing everything they can to solve this by building new cables

06:38.280 --> 06:42.920
and new substations, but this takes time, a lot of time.

06:42.920 --> 06:47.080
And we don't have the time, as you can see in the graph before.

06:47.080 --> 06:56.920
So I don't have that one.

06:56.920 --> 07:04.680
But I assume it's very similar because we're not the only one who are having these issues.

07:04.680 --> 07:05.960
So how can we solve this?

07:05.960 --> 07:11.640
Well, one important thing is that we need grid insight.

07:11.640 --> 07:16.760
And therefore, this also includes forecasts.

07:16.760 --> 07:19.680
So transmission forecasts.

07:19.680 --> 07:25.440
And these are important for all three parts in electrical grid.

07:25.440 --> 07:27.520
So all three parties.

07:27.520 --> 07:37.400
So for customers, for DSOs, such as Aleander, and for TSOs, such as Tenet, which control

07:37.400 --> 07:43.960
the high voltage grid.

07:43.960 --> 07:51.040
Using these forecasts, operators can try to maintain grid safety and grid balance and

07:51.040 --> 07:59.040
can give customers as much electricity as they want and as they need because the need

07:59.040 --> 08:03.200
is high.

08:03.200 --> 08:07.040
With these forecasts, we can also enable smart solutions.

08:07.040 --> 08:16.120
And I put here two brochure pictures of those solutions.

08:16.120 --> 08:24.680
One of them is a pilot flex power, which was in Amsterdam, which was about charging electrical

08:24.680 --> 08:31.800
vehicles and charging them faster if it's possible and not charging them as fast if

08:31.800 --> 08:34.200
it's not possible.

08:34.200 --> 08:40.240
We at Aleander supplied forecasts for this project.

08:40.240 --> 08:46.400
And another platform is the GOPAX platform, which is like a trading platform for electricity

08:46.400 --> 08:56.640
where customers can trade with operators to either consume or to produce energy flexibly.

08:56.640 --> 09:02.400
And this is also being used right now at Aleander and we also provide a forecast for that.

09:02.400 --> 09:08.560
So it's no longer working.

09:08.560 --> 09:17.440
So let's use.

09:17.440 --> 09:22.400
So now let's talk about OpenStuff again, because that's why I'm here.

09:22.400 --> 09:26.800
I'm going to give a short introduction to OpenStuff and then I'm just going to give

09:26.800 --> 09:31.520
a short demo about OpenStuff, how you can make a forecast.

09:31.520 --> 09:38.200
And also want to talk a bit about using OpenStuff in operational settings.

09:38.200 --> 09:44.400
So first of all, the primary thing OpenStuff can help you with is that it's just a complete

09:44.400 --> 09:46.680
machine learning pipeline.

09:46.680 --> 09:53.200
So I'm just going to give a short list of what it can do.

09:53.200 --> 10:00.800
It handles input validation, such as like checking whether your data is complete.

10:00.800 --> 10:03.200
It has feature engineering.

10:03.200 --> 10:11.520
So it automatically calculates for you lag features or other features that are based

10:11.520 --> 10:13.120
on input features.

10:13.120 --> 10:20.120
So for example, if you input it with wind speed, it can calculate wind turbine power

10:20.120 --> 10:30.000
output for you, or the same for direct normal irradiance.

10:30.000 --> 10:39.720
Next it is some kind of intelligent train validation split of the time series.

10:39.720 --> 10:43.560
It has support for multiple types of regressors.

10:43.560 --> 10:49.560
So right now we have, for example, XGBoost, which is at Alejandro, the most commonly used

10:49.560 --> 10:50.560
one.

10:50.560 --> 10:56.580
But we also had a collaboration with Sonyo, which added Proloft to OpenStuff.

10:56.580 --> 10:58.920
And we also have support for probabilistic forecasts.

10:58.920 --> 11:05.560
So that means not just one line, but quantiles.

11:05.560 --> 11:12.880
And unless it has integrated the model and artifact storage using MLflow.

11:12.880 --> 11:14.920
So what does this all mean then?

11:14.920 --> 11:19.520
Let's go to an actual demo.

11:19.520 --> 11:24.880
So on this up here.

11:24.880 --> 11:29.320
That's a low resolution.

11:29.320 --> 11:33.120
Let's zoom out.

11:33.120 --> 11:37.600
It's a bit too much.

11:37.600 --> 11:39.600
Okay.

11:39.600 --> 11:44.480
So I'm just going to walk you through an example or how you could make a forecast.

11:44.480 --> 11:51.040
So first we need to make some kind of compare object that's just what you have to feed OpenStuff.

11:51.040 --> 11:53.780
Let's close this.

11:53.780 --> 11:57.160
So let's run this line.

11:57.160 --> 12:07.800
Next I put some example input in this project so we can load it.

12:07.800 --> 12:11.480
And we can visualize it.

12:11.480 --> 12:16.720
So as you can see here, well, this is upon a state of frame.

12:16.720 --> 12:22.160
And here we have the load and we have a lot of predictors.

12:22.160 --> 12:26.280
Well, some of these, well, the names should make sense.

12:26.280 --> 12:34.680
So for example, the amount of variation predicted by the K nearby or the temperature of these

12:34.680 --> 12:38.920
predictors are already in this example data.

12:38.920 --> 12:44.880
So if we have this, I can also plot it for you.

12:44.880 --> 12:52.480
You can see, well, this is another power profile.

12:52.480 --> 12:54.280
Okay.

12:54.280 --> 12:59.920
So now imagine you have this and you want to know, well, what's next?

12:59.920 --> 13:02.560
Then first we need to train a model.

13:02.560 --> 13:08.240
So OpenStuff has a train model pipeline which basically this, all those things I just mentioned.

13:08.240 --> 13:16.480
So we can just call the pipeline and let's hope the live demo does not fill me.

13:16.480 --> 13:22.760
It will take about 15 seconds, I think, to train the model and store it.

13:22.760 --> 13:30.480
So you can see some info about what it's doing.

13:30.480 --> 13:31.780
And it's stored.

13:31.780 --> 13:34.600
So let's have a look.

13:34.600 --> 13:48.840
Digital flow comes with an interface so we can directly see that we train a model.

13:48.840 --> 13:53.520
So right here, this was the run.

13:53.520 --> 13:55.960
Let's hope this works.

13:55.960 --> 13:59.920
I see that my internet is no longer working.

13:59.920 --> 14:02.360
So apparently this, then this figure doesn't work.

14:02.360 --> 14:15.240
All right, I'm not showing it.

14:15.240 --> 14:20.120
This is the MLflow interface and you can see that we just trained a model.

14:20.120 --> 14:24.240
You can also click on the model on the train run.

14:24.240 --> 14:30.200
This is just MLflow and you can see a bit more information about what happened during

14:30.200 --> 14:32.960
the training.

14:32.960 --> 14:38.280
Next, of course, we want to make a prediction.

14:38.280 --> 14:46.120
So again, OpenStuff has a pipeline for that so we can just say, okay, I want a prediction.

14:46.120 --> 14:53.120
So it's loading the model and using data to create a prediction and then we can visualize

14:53.120 --> 14:56.400
that as well.

14:56.400 --> 14:58.560
And then we have a graph right here.

14:58.560 --> 15:03.200
So this is the forecast that it made for the next.

15:03.200 --> 15:12.120
Well, this was in some example data in 2021, but about 48 hours of forecast.

15:12.120 --> 15:14.600
That's OpenStuff in practice.

15:14.600 --> 15:20.800
Let's go back to the presentation.

15:20.800 --> 15:23.640
To this slide.

15:23.640 --> 15:32.680
Yeah, so well, this flow has been a manual flow, but of course in reality, at least for

15:32.680 --> 15:37.120
if you're a grid operator, you want to do this in an operational setting.

15:37.120 --> 15:43.120
So this means that you want to do daily forecasts for a lot of different locations with all

15:43.120 --> 15:45.080
kinds of configurations.

15:45.080 --> 15:51.120
And OpenStuff also comes with a so-called reference implementation about how you could

15:51.120 --> 15:53.540
do this.

15:53.540 --> 15:58.440
So this is a picture of what you would have to do.

15:58.440 --> 16:02.920
So we have OpenStuff right here, which is basically I just showed you the training and

16:02.920 --> 16:05.840
forecasting pipeline.

16:05.840 --> 16:12.400
Then we have another package, which is called OpenStuff DBC database connector, which can

16:12.400 --> 16:15.680
connect to a database.

16:15.680 --> 16:26.480
And we use MySQL and InfluxDB to store all the data required to run it operationally.

16:26.480 --> 16:32.720
And we also have a Hafana dashboard built upon this database stack, so we can also see

16:32.720 --> 16:35.000
what's going on.

16:35.000 --> 16:39.760
And again, as I already have shown, you can use MLflow to keep track of all the models

16:39.760 --> 16:44.120
and all the runs that are being done to see what's going on.

16:44.120 --> 16:53.800
So I want to show this dashboard as well.

16:53.800 --> 16:57.080
So let's put it up here.

16:57.080 --> 17:00.560
Maybe some other ones.

17:00.560 --> 17:05.520
So this dashboard is just example data, so it's not our real dashboard.

17:05.520 --> 17:15.880
But here you can, for example, see some load that was there on the system.

17:15.880 --> 17:24.200
And you can also see that, for example, this is not just one area, but it has a sum of

17:24.200 --> 17:30.840
two systems, which is quite common in electrical grid that you have a lot of measurement points

17:30.840 --> 17:35.800
that you have to add together with different signs.

17:35.800 --> 17:46.360
And you can see, for example, here's then a live forecast of this location as well.

17:46.360 --> 17:55.800
You can also see plots of the feature importance that are obtained during training of the model.

17:55.800 --> 18:01.080
You can see which data the model has been trained over here.

18:01.080 --> 18:04.360
These plots are really small.

18:04.360 --> 18:05.360
Here you can see them.

18:05.360 --> 18:12.240
So it's a dashboard where you can see everything that Oberstaff does for every location that

18:12.240 --> 18:13.720
you could be interested in.

18:13.720 --> 18:19.040
When you talk about forecasts, are you, within the forecast, also taking other forecasts,

18:19.040 --> 18:22.800
like the weather forecast into account, or are you forecasting that yourself?

18:22.800 --> 18:28.880
No, so we use all kinds of data, and the weather forecast is...

18:28.880 --> 18:36.200
The question is whether we are using other forecasted data or whether we forecast those

18:36.200 --> 18:41.400
forecasts as well, like whether we forecast the weather ourselves.

18:41.400 --> 18:44.280
And the answer is that it depends a bit.

18:44.280 --> 18:51.320
So in general, we use the weather forecasts for multiple sources.

18:51.320 --> 18:58.320
And also, for example, price, like the day ahead pricing.

18:58.320 --> 19:01.320
So we use those data.

19:01.320 --> 19:09.880
But sometimes we also feed the prediction itself, or we feed one prediction into another

19:09.880 --> 19:12.480
prediction.

19:12.480 --> 19:16.760
So I mean, you can play around with that.

19:16.760 --> 19:21.760
Yeah, you have to feed Oberstaff with all the predictors that you wanted to know.

19:21.760 --> 19:26.280
Okay, let's move on.

19:26.280 --> 19:38.280
I've got one last slide, and that's basically the key information.

19:38.280 --> 19:42.800
Yeah, because that was my presentation.

19:42.800 --> 19:51.800
So I put all the info you might be interested in on this slide.

19:51.800 --> 20:00.120
And if there's any questions, then feel free to ask.

20:00.120 --> 20:02.800
Yes.

20:02.800 --> 20:14.560
So the information is really useful, but what is the purpose for the grid operator?

20:14.560 --> 20:19.400
What is the use of the grid operator to make of this information?

20:19.400 --> 20:21.840
Is it for congestion management?

20:21.840 --> 20:25.480
Is it for some kind of load shedding?

20:25.480 --> 20:28.200
What is the role of this exercise?

20:28.200 --> 20:39.640
So I think the question is, why would the grid operator be interested in forecasts,

20:39.640 --> 20:41.400
I guess is what you're asking.

20:41.400 --> 20:47.920
So there's many reasons, but I think you already mentioned congestion management is indeed

20:47.920 --> 20:53.560
an important reason, but also, well, grid insight.

20:53.560 --> 21:04.360
So yeah, the more congestion management is going to be used for the grid, the more important

21:04.360 --> 21:07.040
it is also to maintain grid safety.

21:07.040 --> 21:10.640
And grid safety is not just one operator.

21:10.640 --> 21:14.520
We're all connected to multiple grid operators.

21:14.520 --> 21:21.040
So everyone has to communicate what they are going to do and what they expect the energy

21:21.040 --> 21:22.760
flow to be the next day.

21:22.760 --> 21:29.800
So every operator can decide to do what's necessary to maintain grid safety.

21:29.800 --> 21:35.040
So that's what I mentioned before, the transmission forecasts.

21:35.040 --> 21:41.840
Every operator has to communicate to everyone who is connected to what they expect the load

21:41.840 --> 21:45.000
to be on the next day.

21:45.000 --> 21:46.480
I see that my time is up.

21:46.480 --> 21:49.440
So I'm afraid I have to answer the questions in the chat.

21:49.440 --> 21:50.440
Yeah.

21:50.440 --> 21:51.840
Or in the hallway.

21:51.840 --> 21:58.880
I think for time management, we have to learn from these talks, see if we can manage to

21:58.880 --> 22:00.720
keep a couple of more minutes for questions.

22:00.720 --> 22:01.720
Sorry.

22:01.720 --> 22:22.720
Thank you very much for listening.
