WEBVTT

00:00.000 --> 00:13.600
Shortly about us, so I'm there on the left.

00:13.600 --> 00:20.900
So we are Saita Energy Flexibility Software Startup who decided to go the open source

00:20.900 --> 00:22.760
way two years ago.

00:22.760 --> 00:28.240
In this project we're working together with positive design, a small company in the Netherlands

00:28.240 --> 00:29.240
as well.

00:29.240 --> 00:33.480
They are more working on the UX part of this.

00:33.480 --> 00:38.680
So something where I really know a lot about are these two projects because we are building

00:38.680 --> 00:45.920
Flex Measures, a project we donated to the Linux Energy Foundation.

00:45.920 --> 00:50.760
Before you leave the room, get some swag over there.

00:50.760 --> 00:56.880
And together we built this V2G Liberty project which actually works as an umbrella for the

00:56.880 --> 00:57.880
rest.

00:57.880 --> 01:00.480
It's a vehicle to grid.

01:00.480 --> 01:02.040
Some of you might know roughly what it is.

01:02.040 --> 01:04.680
It has been a buzzword going around.

01:04.680 --> 01:10.680
It basically means other than most of the car charging that's going on today, just power

01:10.680 --> 01:15.640
into the car, you could actually get power out of the car, for instance, back onto the

01:15.640 --> 01:17.360
grid.

01:17.360 --> 01:23.000
Here I listed some use cases why that is supposedly a good idea.

01:23.000 --> 01:28.400
And specifically the third one, that might be pretty interesting because in a scenario

01:28.400 --> 01:36.280
where you have a varying energy price, now your car could be a trader.

01:36.280 --> 01:43.680
And actually the spreads in the energy markets are increasing by a lot these days.

01:43.680 --> 01:47.200
So that makes it suddenly interesting.

01:47.200 --> 01:53.120
And when I look at industry coming up with vehicle to grid by themselves, people observe

01:53.120 --> 01:57.120
a lot of delays.

01:57.120 --> 02:02.200
From my perspective it seems that the actual industrial players, closed source players

02:02.200 --> 02:05.440
are looking to actually deliver an ecosystem.

02:05.440 --> 02:10.520
These are pictures you are getting from the big names Hyundai, Volkswagen, Tesla.

02:10.520 --> 02:16.240
They are always thinking about putting multiple things in your home, basically taking it over.

02:16.240 --> 02:22.040
And that takes longer and it's also something I'm not looking forward to.

02:22.040 --> 02:25.560
That's why we decided to do this project.

02:25.560 --> 02:31.840
It's more than a year ago now, so we have more than a year of data from one location.

02:31.840 --> 02:36.960
And recently we've attracted some other enthusiasts and there's five more locations where this

02:36.960 --> 02:42.760
is being employed in reality.

02:42.760 --> 02:45.080
Quickly about the motivation, so why should we do that?

02:45.080 --> 02:50.280
Is this something that I want to sell with Site Energy Flexibility and focus on that

02:50.280 --> 02:51.280
completely?

02:51.280 --> 02:55.400
Actually, probably not.

02:55.400 --> 03:00.280
Site Energy Flexibility and our Flex Measures project is about making the best use of energy

03:00.280 --> 03:02.320
flexibility in general.

03:02.320 --> 03:06.880
But this is very cool to show that we can do something today.

03:06.880 --> 03:08.680
We don't have to wait.

03:08.680 --> 03:09.880
There's open source projects.

03:09.880 --> 03:12.200
If you put them together, they are super powerful.

03:12.200 --> 03:18.720
And that was a great way to bootstrap ourselves to challenge our technology.

03:18.720 --> 03:23.840
So I'll talk about the stack, the design of what V2G Liberty looks like if you use it,

03:23.840 --> 03:26.240
and some outlooks.

03:26.240 --> 03:31.720
First, what do you need in this context to actually get going?

03:31.720 --> 03:34.680
You won't find a lot of cars you can use for this.

03:34.680 --> 03:42.040
The Nissan Leaf is one of the only ones, specifically in 2021, that could do vehicle to grid.

03:42.040 --> 03:43.360
Same goes for the Charger.

03:43.360 --> 03:48.480
So this is the Charger from a Spanish company, Wallbox.

03:48.480 --> 03:55.240
Of course, they promised that open standards like OCPP will be very soon working.

03:55.240 --> 03:56.880
And that hasn't happened yet.

03:56.880 --> 03:58.800
So what was it?

03:58.800 --> 04:00.720
You need some kind of computer in your house.

04:00.720 --> 04:06.160
This has been mentioned in talks this morning already.

04:06.160 --> 04:09.160
And then we work with an energy contract with Dynamic Terrace.

04:09.160 --> 04:13.960
So in the Netherlands, you already have, I think, six or seven to choose from.

04:13.960 --> 04:14.960
That's going very hard.

04:14.960 --> 04:21.040
But the Tiber, for instance, is launching in a couple European countries and offers

04:21.040 --> 04:24.440
you that.

04:24.440 --> 04:29.120
And so this is actually the software architecture in a nutshell.

04:29.120 --> 04:31.960
I don't want to make it too difficult.

04:31.960 --> 04:39.600
If you imagine you put this in your house, what you need is to install Home Assistant.

04:39.600 --> 04:41.920
So that's this logo here.

04:41.920 --> 04:46.200
Home Assistant is a very stable home automation software.

04:46.200 --> 04:51.440
And we've basically built V2G Liberty as a Home Assistant plugin.

04:51.440 --> 04:52.720
That's also actually fun to do.

04:52.720 --> 05:00.440
It's nice when you get a lot of presence like UI widgets and things like that.

05:00.440 --> 05:07.280
And then Flex Measures is actually not running in the house.

05:07.280 --> 05:08.280
It could.

05:08.280 --> 05:09.280
It's dockerized.

05:09.280 --> 05:12.640
You could put it in the house next to your home automation software.

05:12.640 --> 05:18.280
And I think a couple of these enthusiasts who now are using this are doing that.

05:18.280 --> 05:22.720
But for such a software, it's sometimes nicer to run in the cloud because it's more difficult

05:22.720 --> 05:26.560
to maintain.

05:26.560 --> 05:33.600
Flex Measures itself is then responsible to get the relevant real-time data that is important

05:33.600 --> 05:36.440
to schedule the cars charging, discharging.

05:36.440 --> 05:43.560
So in this case, the prices that the consumer contract is on.

05:43.560 --> 05:46.520
We could also get, I think we actually do in a new version.

05:46.520 --> 05:47.520
It's not listed here.

05:47.520 --> 05:53.240
We also get some public data that helps us to look at the CO2 levels of your car cost

05:53.240 --> 05:54.240
consumption.

05:54.240 --> 06:00.040
So that would be another box right there.

06:00.040 --> 06:02.600
I talked about this connection.

06:02.600 --> 06:05.760
We have to somehow talk to the wallbox.

06:05.760 --> 06:07.960
And we found out for now, this has to be Modbus.

06:07.960 --> 06:11.720
And we found out how this responds.

06:11.720 --> 06:18.480
And we talked to the wallbox company if we're allowed to put our code in a public repository

06:18.480 --> 06:22.760
if you could see in the code which registers their hardware reacts to.

06:22.760 --> 06:26.400
But I think we've sorted it out.

06:26.400 --> 06:28.800
That was a bit difficult.

06:28.800 --> 06:35.280
And basically what we have to do is simply say start or stop the charging or discharging.

06:35.280 --> 06:39.560
And we are able to read the state of charge of the battery.

06:39.560 --> 06:44.280
And on the left side are some more nicer UX features.

06:44.280 --> 06:48.320
So you want to put along for a longer ride.

06:48.320 --> 06:52.400
You want to tell our system that the car needs to be full.

06:52.400 --> 06:54.440
And maybe you want some overrides.

06:54.440 --> 06:57.760
I'll come to those later.

06:57.760 --> 06:59.320
So first about the components.

06:59.320 --> 07:02.560
I mentioned Home Assistant.

07:02.560 --> 07:04.720
It has been around for a while now.

07:04.720 --> 07:07.600
I think it has also some origins in the Netherlands.

07:07.600 --> 07:13.200
But it's also developed in California now.

07:13.200 --> 07:18.000
Actually we had a couple of Home Assistant people over in a demo.

07:18.000 --> 07:21.000
I think it's these people here.

07:21.000 --> 07:25.440
So that was nice to actually have that also in real life.

07:25.440 --> 07:32.080
And as I said you can write plugins to really do your own logic on top of Home Assistant.

07:32.080 --> 07:35.840
Now Flexmeasures is the project that I spent the most time with.

07:35.840 --> 07:40.360
Our company develops that.

07:40.360 --> 07:46.960
Basically it's a data driven platform to get the best timing for your flexible energy assets.

07:46.960 --> 07:51.640
When should they be on or off.

07:51.640 --> 07:55.800
And what I'm talking to you today about is an e-mobility project.

07:55.800 --> 07:59.920
But we've also had some commercial projects in industry.

07:59.920 --> 08:00.920
The built environment.

08:00.920 --> 08:06.720
And actually our goal, our dream is that this all comes together.

08:06.720 --> 08:10.160
So for instance we're working on heating now.

08:10.160 --> 08:12.720
The energy flexibility of heating.

08:12.720 --> 08:16.240
And heating and e-mobility somehow happen right next to each other.

08:16.240 --> 08:20.600
So that's where we want to go.

08:20.600 --> 08:24.440
And Flexmeasures itself has a UI.

08:24.440 --> 08:26.800
And I'm just showcasing that here.

08:26.800 --> 08:30.920
But in our project right now, in this V2G Liberty project that wasn't really being used.

08:30.920 --> 08:37.840
So what we want is for Flexmeasures to be a back end that you talk to through APIs.

08:37.840 --> 08:44.360
And you usually build your own user interfacing flexible service.

08:44.360 --> 08:49.960
Or you integrate what Flexmeasures helps you with into your existing service.

08:49.960 --> 08:53.720
That's actually what we did with V2G Liberty.

08:53.720 --> 09:00.360
So that's actually a kind of typical home assistant look for your dashboard.

09:00.360 --> 09:07.160
I think we have the goal to bring our own style into that when we have the help.

09:07.160 --> 09:08.920
But that's what you get.

09:08.920 --> 09:15.560
And you can see what your car is doing, what's the charging power right now, what's the state

09:15.560 --> 09:16.560
of charge.

09:16.560 --> 09:23.440
And then we come into the more interesting or self-built features.

09:23.440 --> 09:26.800
I will talk about this in another slide.

09:26.800 --> 09:31.280
But this basically shows you the state of charge that happened in blue.

09:31.280 --> 09:36.840
And what Flexmeasures has advised to happen with that in the upcoming hours.

09:36.840 --> 09:39.680
And the energy price.

09:39.680 --> 09:44.760
Here you have the ability as a user to simply say, I don't want this.

09:44.760 --> 09:48.400
Stop the automation.

09:48.400 --> 09:51.320
Or just charge the car right now.

09:51.320 --> 09:54.320
I don't care about the optimal result.

09:54.320 --> 10:00.080
You see if you've reserved the car.

10:00.080 --> 10:07.400
And that's where our partner, Positive Design, came in to rethink with us, well, if we get

10:07.400 --> 10:13.920
to design a V2G application, what do we want to experience when we use it?

10:13.920 --> 10:15.000
And these are the goals.

10:15.000 --> 10:21.080
It should basically, you want to be happy that it's there for a few weeks.

10:21.080 --> 10:23.880
But then you want to stop thinking about it every day.

10:23.880 --> 10:25.040
It should just happen.

10:25.040 --> 10:29.880
And you might look at your end result and be happy.

10:29.880 --> 10:33.120
And of course, it needs to be ready for you to do trips.

10:33.120 --> 10:40.760
At least trips, let's say, groceries, hospital, go to a nearby town, which in the Netherlands,

10:40.760 --> 10:44.800
of course, is quite easy.

10:44.800 --> 10:49.720
So Utrecht, Amsterdam, for instance, works with 20% of charge.

10:49.720 --> 10:51.320
Yeah.

10:51.320 --> 10:56.280
And CO2 saving and cost saving, of course, are the goals.

10:56.280 --> 11:00.200
You can really put numbers on.

11:00.200 --> 11:01.840
Yeah.

11:01.840 --> 11:05.160
Let's go one level deeper in the detail here.

11:05.160 --> 11:06.960
I'm not sure it was all clear.

11:06.960 --> 11:12.360
I already said the state of charge history will be shown to you in blue.

11:12.360 --> 11:16.320
And then it's shown to you what the planning would be.

11:16.320 --> 11:22.240
So here you can see a bit, if you look at the price in gray, that in the future, you

11:22.240 --> 11:24.760
will charge your battery because the price is low.

11:24.760 --> 11:27.600
You will discharge because there's a higher price later.

11:27.600 --> 11:33.400
And you do that twice, actually, in that day.

11:33.400 --> 11:39.320
And the new feature, as I said earlier, is that we're also plotting the CO2 intensity

11:39.320 --> 11:41.120
on the grid.

11:41.120 --> 11:44.440
That's going to happen in those hours.

11:44.440 --> 11:52.640
That's something we are basing on the scheduled coal and gas power for the upcoming days.

11:52.640 --> 11:55.840
Of course, there's also professional services for that.

11:55.840 --> 11:58.760
Somebody in the earlier talk mentioned electricity map.

11:58.760 --> 12:02.600
I think that's in the capital tool.

12:02.600 --> 12:05.680
That's a third-party integration.

12:05.680 --> 12:10.160
For cost reasons, we basically developed our own version of that.

12:10.160 --> 12:18.440
And what's interesting, of course, is you see there's a slight correlation.

12:18.440 --> 12:22.720
And we actually have a plot somewhere where we looked at the whole year from our data

12:22.720 --> 12:23.720
and checked.

12:23.720 --> 12:29.840
So is low carbon intensity, does that kind of correlate to lower prices?

12:29.840 --> 12:34.600
Because in that moment, you have a lot of sun and wind on the grid, which have zero

12:34.600 --> 12:35.600
marginal costs.

12:35.600 --> 12:38.680
So that can happen.

12:38.680 --> 12:44.800
And in the day ahead prices, of course, there's an economics that makes that complex.

12:44.800 --> 12:47.720
But it does actually happen during the day.

12:47.720 --> 12:55.440
During the day, you see a correlation in the night, not yet.

12:55.440 --> 13:00.600
So here's one or two features of this application in V2G Liberty.

13:00.600 --> 13:04.680
For instance, you come home from some trip.

13:04.680 --> 13:07.360
You connect the car.

13:07.360 --> 13:13.080
V2G Liberty talks to the charger and asks, so what's the deal with the car right now?

13:13.080 --> 13:14.080
What is the state of charge?

13:14.080 --> 13:17.960
It comes back as below 20%.

13:17.960 --> 13:19.920
And then there's only one course of action.

13:19.920 --> 13:23.040
We have to get up back to those 20%.

13:23.040 --> 13:33.160
So that's just a simple fallback that gets you to 60 to 80 kilometers.

13:33.160 --> 13:37.760
And when you've outlived your range anxiety, that should be OK.

13:37.760 --> 13:44.920
And another feature I've shown in the UI before as well, you can go to your calendar on your

13:44.920 --> 13:46.320
phone.

13:46.320 --> 13:48.920
And that's where Next Cloud comes in here.

13:48.920 --> 13:52.960
I'm a personal company where I'm next cloud users.

13:52.960 --> 13:56.000
And that's why I was so happy to bring Next Cloud in this as well.

13:56.000 --> 13:59.720
But it's basically just used for the agenda integration.

13:59.720 --> 14:02.320
You can use Google Calendar if you need to.

14:02.320 --> 14:04.400
That's no problem.

14:04.400 --> 14:07.760
So you make your own agenda for your car.

14:07.760 --> 14:12.960
And you create an entry in the agenda for your car that you're going on a road trip,

14:12.960 --> 14:15.960
let's say, tomorrow at 8 o'clock.

14:15.960 --> 14:19.800
And that will be picked up by V2G Liberty.

14:19.800 --> 14:21.640
What's nice, you see here the mobile view.

14:21.640 --> 14:24.760
I showed the desktop view before.

14:24.760 --> 14:32.280
But Home Assistant even gives you something that looks really well on your mobile app.

14:32.280 --> 14:39.240
Which is basically the same widgets just rearranged.

14:39.240 --> 14:40.880
So then this will show up.

14:40.880 --> 14:44.120
V2G Liberty will know about that reservation.

14:44.120 --> 14:46.520
Will contact Flexmeasures automatically.

14:46.520 --> 14:49.440
Flexmeasures will realize, oh, there's a new constraint coming in.

14:49.440 --> 14:51.440
I need to recompute everything.

14:51.440 --> 14:52.440
And that will change.

14:52.440 --> 14:58.640
So here you see State of Charge will go up to 100.

14:58.640 --> 15:01.600
Trying to avoid that price peak there in the middle.

15:01.600 --> 15:07.480
Do it cost efficiently.

15:07.480 --> 15:10.400
All right, so where are we now?

15:10.400 --> 15:13.000
This project.

15:13.000 --> 15:15.160
So it's working nice.

15:15.160 --> 15:20.880
First thing that comes to mind now that the other enthusiasts being on board it, the installation

15:20.880 --> 15:24.040
effort is still a bit high.

15:24.040 --> 15:29.320
We have written it all out on that V2G Liberty.

15:29.320 --> 15:34.800
It's not up to me, but as a couple steps you need to install your Home Assistant and make

15:34.800 --> 15:35.800
that plugin work.

15:35.800 --> 15:38.560
So there we can have some low hanging fruits in Home Assistant.

15:38.560 --> 15:42.920
You can basically have an actual plugin that is downloadable and updates itself and all

15:42.920 --> 15:43.920
that.

15:43.920 --> 15:47.000
You do have configurations to make in a file.

15:47.000 --> 15:48.920
That could be a wizard.

15:48.920 --> 15:52.640
There's some stuff there.

15:52.640 --> 15:56.640
It really helps us also with Flexmeasures to see if it runs in the background.

15:56.640 --> 15:59.400
What kind of monitoring do we need?

15:59.400 --> 16:00.880
It's really helpful.

16:00.880 --> 16:04.080
Some people are installing Flexmeasures themselves as well.

16:04.080 --> 16:10.720
So that's really, when you're really a techy enthusiast.

16:10.720 --> 16:17.160
I will briefly go into some earnings or economical results.

16:17.160 --> 16:24.000
So here's some hints that sometimes you have a day where there was huge price spreads and

16:24.000 --> 16:27.960
your car basically sat at home the whole day.

16:27.960 --> 16:35.400
And then you can really have a great day with earnings above the 10 euros in the Netherlands.

16:35.400 --> 16:42.520
Good to keep in mind, energy flexibility is only usable if your asset is there and you're

16:42.520 --> 16:44.560
not using it.

16:44.560 --> 16:51.240
So if you take your car for long rides every day, well, there's less time to do something

16:51.240 --> 16:57.000
with it and then you have less earnings.

16:57.000 --> 17:07.120
So actually this user is making a lot of kilometers actually.

17:07.120 --> 17:12.080
So here's a report from, I think this is 10 months of data.

17:12.080 --> 17:16.960
And this is an overview where you really see how much has been charged and discharged.

17:16.960 --> 17:26.200
So this is actually large parts of these kilowatt hours have actually been charged just to save

17:26.200 --> 17:33.480
them and give them back to the grid at a better time.

17:33.480 --> 17:42.680
This is where a lot of policymakers put high hopes on, of course, that cars will work as

17:42.680 --> 17:49.800
batteries so that the grid can use and carry energy at the best times.

17:49.800 --> 17:58.600
Well, there's a big Excel spreadsheet behind this, but if you just look at the bottom line,

17:58.600 --> 18:05.080
that you would see they have driven their car for 3,000 kilowatt hours and paid 200

18:05.080 --> 18:06.480
euros for that.

18:06.480 --> 18:08.960
It's a pretty good price.

18:08.960 --> 18:16.600
And you could compare with scenarios, so what if I had just a fixed cost contract from a

18:16.600 --> 18:18.280
year ago?

18:18.280 --> 18:20.600
You wouldn't get that today.

18:20.600 --> 18:22.840
You arrive at some price.

18:22.840 --> 18:26.800
As you all know, these numbers, they change so fast these days.

18:26.800 --> 18:31.680
And you got before the Ukraine crisis already lots of movement in the markets after that

18:31.680 --> 18:34.120
more.

18:34.120 --> 18:40.400
So this is difficult, I think, to make these look at these as hard facts, like how many

18:40.400 --> 18:45.960
euros will I save if I install this in 2023 or 2024?

18:45.960 --> 18:49.520
I will not subscribe on the number there.

18:49.520 --> 18:50.520
But there are savings.

18:50.520 --> 18:53.840
And there are some other people making these calculations also on a more higher level.

18:53.840 --> 18:56.680
But it's nice to have an actual project.

18:56.680 --> 18:59.520
This has really happened.

18:59.520 --> 19:01.320
We can dive deeper into the data.

19:01.320 --> 19:06.280
So if anybody's interested, let us know.

19:06.280 --> 19:12.240
And of course, another one, a part of the cost is that the V2G capable chargers are

19:12.240 --> 19:14.100
currently much more expensive.

19:14.100 --> 19:17.920
But I think the difference is coming down soon.

19:17.920 --> 19:20.920
Right.

19:20.920 --> 19:29.880
So what we will do, the installation I already mentioned, updating V2G Liberty if you have

19:29.880 --> 19:35.200
it running and we have a new version, that can be easier.

19:35.200 --> 19:39.240
We want to actually show you KPIs.

19:39.240 --> 19:44.760
What did I save in money or CO2, let's say, last month?

19:44.760 --> 19:49.160
I think per day can also work.

19:49.160 --> 19:54.360
Now we have more users, enthusiasts who installed it at home and rerun it.

19:54.360 --> 20:01.080
So the learning curve is going up right now in the sense of how much information we get.

20:01.080 --> 20:02.080
It's great.

20:02.080 --> 20:08.640
And it's going to be an interesting year with more things to support.

20:08.640 --> 20:17.680
I'm not sure what kind of things this project should support, the V2G Liberty project.

20:17.680 --> 20:22.480
It potentially has to do with demand from the community.

20:22.480 --> 20:30.080
And of course, if chargers actually support OCPP, then that's just a great idea.

20:30.080 --> 20:35.840
And on the FlexMeter side, that's something I also know the near future a bit.

20:35.840 --> 20:44.560
I already mentioned that we are tackling immobility in projects like this, but also heat in other

20:44.560 --> 20:48.200
projects and we don't look at the built environment.

20:48.200 --> 20:49.440
This has to come together.

20:49.440 --> 20:58.720
So our big next challenge is to really model the energy flexibility from these two usages

20:58.720 --> 21:06.600
of energy combined and make one computation about a building or a site that uses heat

21:06.600 --> 21:14.880
and uses immobility as two big, flexible power demands and come up with one optimization

21:14.880 --> 21:17.920
and then actually automate that.

21:17.920 --> 21:24.480
So that's our next big milestone.

21:24.480 --> 21:28.360
And the other thing that's really important, of course, to mention is network congestion.

21:28.360 --> 21:37.520
That's the network operators are coming up with ideas how a project like this, flexible

21:37.520 --> 21:40.600
consumers can do their part.

21:40.600 --> 21:45.560
So for instance, can stop their demands in a specific moment and in a specific region,

21:45.560 --> 21:50.480
which would help on the lower and medium parts of the grid.

21:50.480 --> 21:57.080
And that's also for us really on the map.

21:57.080 --> 22:00.480
This is almost at the end.

22:00.480 --> 22:06.720
Of course, we need to hear questions, but of course, for people to get in contact.

22:06.720 --> 22:11.760
And I'm just listening to the best contact points for each of the projects.

22:11.760 --> 22:18.480
For V2G Liberty, that's just come to the GitHub project and interact there.

22:18.480 --> 22:26.400
Flexmeasures itself has more channels that you can contact us on.

22:26.400 --> 22:32.800
We listed them here in the read the docs, for instance, through LF energy, there are

22:32.800 --> 22:33.800
ways.

22:33.800 --> 22:37.120
I do have, I think I have two minutes.

22:37.120 --> 22:43.920
So one thing I have on the very last slide before I close is something we built in Flexmeasures

22:43.920 --> 22:50.200
recently because if you talk about projects like these, basically after they happen and

22:50.200 --> 22:54.280
you just summarizing what happened, they don't really come alive.

22:54.280 --> 23:00.160
Because what actually happens and what we do is that throughout the day, new situations

23:00.160 --> 23:01.960
arise all the time.

23:01.960 --> 23:07.400
New circumstances like the car comes back, it has a completely new state of charge.

23:07.400 --> 23:12.120
It could be lower, maybe they charged on the way, it's higher.

23:12.120 --> 23:13.680
You don't know.

23:13.680 --> 23:16.720
This is a new situation, so we need to recompute.

23:16.720 --> 23:24.920
And in each of these situations, you also need to have a different set of forecasts.

23:24.920 --> 23:31.120
So you ask yourself, it's this point in time, I was asked to recompute.

23:31.120 --> 23:36.440
And I look at the set of forecasts, what do I know now about the state of things?

23:36.440 --> 23:39.600
So maybe not all the devices have sent me everything yet.

23:39.600 --> 23:44.600
There's always delays, there's always lags in IoT applications.

23:44.600 --> 23:48.240
In the future, which forecasts do I have now available?

23:48.240 --> 23:51.840
And that's what I mean with it doesn't come alive, right?

23:51.840 --> 23:55.040
And let's see if it works.

23:55.040 --> 23:57.040
Yeah.

23:57.040 --> 24:02.800
We made a UI that uses JavaScript so you can travel through time basically.

24:02.800 --> 24:09.400
So imagine that that bar is now, you hit that button, and we have kept the old schedules,

24:09.400 --> 24:13.560
we have kept everything that's old, and we know when we knew it.

24:13.560 --> 24:15.840
That's how we can travel through time.

24:15.840 --> 24:19.540
And when we stop it anywhere, we know what we knew at the time.

24:19.540 --> 24:23.280
So let's say we knew the day ahead prices.

24:23.280 --> 24:27.480
You can see the day ahead prices on top coming in in batches, for instance.

24:27.480 --> 24:31.240
And then the new schedules, that's a red dotted line also.

24:31.240 --> 24:33.160
All right.

24:33.160 --> 24:38.720
Let me stop in time and if there's any questions.

24:38.720 --> 24:43.920
All right, there's a few, but who decides on the order?

24:43.920 --> 24:49.280
Well, let's just start on my left.

24:49.280 --> 25:01.560
I think that V2D Liberty.

25:01.560 --> 25:02.560
Can you repeat the question?

25:02.560 --> 25:03.640
Oh yeah, sure.

25:03.640 --> 25:10.720
The question was if this has been built for one car or if there's the opportunity to have

25:10.720 --> 25:17.920
multiple cars at the same location on a charging station supported.

25:17.920 --> 25:24.400
And V2G Liberty has right now been built for one household with one car, which is expandable

25:24.400 --> 25:27.960
in principle through some work.

25:27.960 --> 25:33.800
And Flexmeasures itself has a solver that could also schedule multiple cars.

25:33.800 --> 25:36.560
So that's not a technical problem on that side.

25:36.560 --> 25:49.320
I have a question about the price spread that you talked about.

25:49.320 --> 25:52.640
You optimize on day ahead prices and as you know, day ahead prices are a result of what

25:52.640 --> 25:57.640
the energy suppliers predicting that customers will do the day ahead.

25:57.640 --> 26:01.840
Yet by what you're doing, you're changing that behavior.

26:01.840 --> 26:07.440
So inherently you're not doing what the supplier has bought for you on the day ahead market.

26:07.440 --> 26:13.360
So then you can imagine if thousands of people are doing this, then of course the suppliers

26:13.360 --> 26:17.440
need to change the way they are forecasting and get this at this loop.

26:17.440 --> 26:21.000
Have you thought about how to solve that issue?

26:21.000 --> 26:23.000
Yes.

26:23.000 --> 26:28.480
So the question is that for the day ahead prices, the energy suppliers make a forecast

26:28.480 --> 26:34.040
usually or traditionally what all the consumers will consume.

26:34.040 --> 26:38.200
Aggregated over thousands of consumers, they get a nice curve and they try to buy that.

26:38.200 --> 26:45.040
Now if the consumers react to that price, you have a loop, somehow a more dynamic system.

26:45.040 --> 26:47.560
The question was if I have thought about it.

26:47.560 --> 26:50.240
Yes, of course.

26:50.240 --> 26:51.240
It's super interesting.

26:51.240 --> 26:52.320
There's two thoughts.

26:52.320 --> 26:58.280
One is that there's now a couple of providers like that in the Netherlands and I think they

26:58.280 --> 27:00.720
basically adjust for that.

27:00.720 --> 27:07.400
They would assume that a bunch of their customers do act flexible.

27:07.400 --> 27:13.840
They might have to add a model for that, a behavioral model, economics behavioral and

27:13.840 --> 27:16.040
try to get it right.

27:16.040 --> 27:21.440
On the other hand, I think that some, there's going to be more energy suppliers because

27:21.440 --> 27:27.320
I know of a company in the Netherlands that is basically helping larger companies become

27:27.320 --> 27:28.320
an energy supplier.

27:28.320 --> 27:32.680
So they don't have, it's basically energy supply as a service so you can brand your

27:32.680 --> 27:35.200
own energy supply contract.

27:35.200 --> 27:41.960
And some of the organizations I've talked to think about adjusting their price signal

27:41.960 --> 27:43.360
themselves.

27:43.360 --> 27:47.480
So they buy something on the day ahead market, but that's not the price they give to you.

27:47.480 --> 27:51.400
They give you a different profile to try to sort that out.

27:51.400 --> 28:10.040
Yeah, it could be that you're not doing as much money on the market, but now you add

28:10.040 --> 28:11.040
services.

28:11.040 --> 28:12.040
Let's go on.

28:12.040 --> 28:34.600
I was talking about hardware.

28:34.600 --> 28:44.840
So can you repeat the question?

28:44.840 --> 28:46.840
Do you mean the Everest project?

28:46.840 --> 28:56.880
Well, we are both in Linux energy foundation so we know about each other.

28:56.880 --> 29:00.000
So that would be a way out.

29:00.000 --> 29:01.000
The question.

29:01.000 --> 29:06.600
I haven't found it yet when you did that project that was before our time.

29:06.600 --> 29:07.600
Everything's super new.

29:07.600 --> 29:13.160
And the question was for the audience online that there's the Everest project and they

29:13.160 --> 29:20.120
also have open source hardware, although that's not the core of the company, but they offer

29:20.120 --> 29:22.760
that and they had a great talk this morning.

29:22.760 --> 29:24.400
So that could help, of course.

29:24.400 --> 29:30.560
So that's a great opportunity for the community, for anybody, maybe for us to combine these

29:30.560 --> 29:31.560
two.

29:31.560 --> 29:34.880
I don't know.

29:34.880 --> 29:37.720
Especially young companies have to sprint.

29:37.720 --> 29:38.960
It's difficult.

29:38.960 --> 29:40.880
I want to also get some part of the...

29:40.880 --> 29:42.880
I think we're out of time.

29:42.880 --> 29:44.880
We are out of time?

29:44.880 --> 29:48.840
I'll be answering questions in the chat if there's something burning or right now in

29:48.840 --> 29:52.160
person afterwards in the break.

29:52.160 --> 29:53.160
Thank you.

29:53.160 --> 30:01.120
Thank you.
