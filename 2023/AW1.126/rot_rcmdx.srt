1
0:00:00.000 --> 0:00:19.720
So, we are ready for the second talk.

2
0:00:19.720 --> 0:00:25.720
And yeah, I'm happy to have Joel here from SPP talking about Rayc audition monitoring

3
0:00:25.720 --> 0:00:28.520
and how to do that with open source software.

4
0:00:28.520 --> 0:00:29.520
Hello everybody.

5
0:00:29.520 --> 0:00:31.760
I'm happy to see that it's this crowded.

6
0:00:31.760 --> 0:00:34.720
I wasn't expecting that, but I'm pleasantly surprised.

7
0:00:34.720 --> 0:00:41.120
So I'm going to talk to you today from a very niche department of SBB, which is measurement

8
0:00:41.120 --> 0:00:42.520
and diagnostics.

9
0:00:42.520 --> 0:00:46.760
We're basically part of the infrastructure like Eloy before.

10
0:00:46.760 --> 0:00:50.440
We're trying to maintain and run the infrastructure in Switzerland.

11
0:00:50.440 --> 0:00:54.800
It's not such a big country, but a very dense train network.

12
0:00:54.800 --> 0:00:59.600
So the problems we face is basically that we have shallow train passing times and a

13
0:00:59.600 --> 0:01:02.760
lot of maintenance to do.

14
0:01:02.760 --> 0:01:10.920
And to be able to do this maintenance at the right moment, we have the measurement and

15
0:01:10.920 --> 0:01:14.280
diagnostics department, which I am part of.

16
0:01:14.280 --> 0:01:20.360
And we basically have two major goals.

17
0:01:20.360 --> 0:01:26.840
One is to maintain the safety of the system and the other one is to gather data of the

18
0:01:26.840 --> 0:01:32.880
infrastructure assets in order to be able to do predictive maintenance or maintenance

19
0:01:32.880 --> 0:01:37.720
at the right moment and just to make sure that the money spent is well spent in order

20
0:01:37.720 --> 0:01:46.680
that assets can live the most long without breaking down.

21
0:01:46.680 --> 0:01:52.120
Here you can see two of our measurement trains, they're typically sensor-based measurements,

22
0:01:52.120 --> 0:01:58.640
typically optically made measurements, and we'll go a little bit deeper into that afterwards.

23
0:01:58.640 --> 0:02:03.000
Normally I was planning to be here with one of my colleagues, Jean Frederick.

24
0:02:03.000 --> 0:02:09.360
Unfortunately he got sick, catch the cold, so I'm here alone, but I thought I will still

25
0:02:09.360 --> 0:02:16.000
have his picture on a slide in case somebody is interested in what we're doing later on.

26
0:02:16.000 --> 0:02:19.360
You will know him by faith at least.

27
0:02:19.360 --> 0:02:24.720
He is the guy who is doing a lot of the technical implementation, solving a lot of the technical

28
0:02:24.720 --> 0:02:31.760
problems and I'm more on the strategic part of the project.

29
0:02:31.760 --> 0:02:36.280
And yeah, we'll leave it by that.

30
0:02:36.280 --> 0:02:43.080
Such a measurement from sensor to information is quite a long way, so it's a very complex

31
0:02:43.080 --> 0:02:44.680
thing, such a measurement system.

32
0:02:44.680 --> 0:02:51.560
I've drawn here a couple of steps from beginning to end for track geometry measurement.

33
0:02:51.560 --> 0:02:57.920
As I said before, most of them are optical by now, so what you actually do is you have

34
0:02:57.920 --> 0:03:03.000
a laser plane that shines on your track and then you have a camera that makes a photo,

35
0:03:03.000 --> 0:03:08.920
and the first picture is basically a digital photo of the rail.

36
0:03:08.920 --> 0:03:15.480
And then you extract this contrast change and you do a lot of software and you get the

37
0:03:15.480 --> 0:03:18.920
second photo, which is a half profile of your rail.

38
0:03:18.920 --> 0:03:22.320
Then you do the same thing for the second half of your rail and you get a full profile

39
0:03:22.320 --> 0:03:24.360
and you start measuring on it.

40
0:03:24.360 --> 0:03:30.040
And you do, for instance, it may be a bit difficult to see, but there's a lot of little

41
0:03:30.040 --> 0:03:35.200
crosses on the profile and those are the points that you're interested in, the top of your

42
0:03:35.200 --> 0:03:41.160
rail or there's 1.14 millimeters below the top of your rail.

43
0:03:41.160 --> 0:03:45.440
And from this, if you have both rails, you can deduce your track geometry.

44
0:03:45.440 --> 0:03:48.000
An instance, the gauge and the...

45
0:03:48.000 --> 0:03:49.000
Louder.

46
0:03:49.000 --> 0:03:50.000
Okay.

47
0:03:50.000 --> 0:03:54.040
I will talk louder.

48
0:03:54.040 --> 0:04:00.360
You will have the possibility to deduce the gauge or the elevation or the longitudinal

49
0:04:00.360 --> 0:04:03.160
levels of your tracks.

50
0:04:03.160 --> 0:04:10.520
And you can then print them in form of the fourth picture, like as 1D plots.

51
0:04:10.520 --> 0:04:17.080
Afterwards, you've gathered this information, you have to deduce what to do with it.

52
0:04:17.080 --> 0:04:25.200
So in SBB and I think in a lot of other countries in Europe now too, you try to do analysis

53
0:04:25.200 --> 0:04:31.920
over time to see how the track geometry or other parameters in your railway system change

54
0:04:31.920 --> 0:04:40.560
over time and find critical passes to where you know in some time in the future that asset

55
0:04:40.560 --> 0:04:41.720
will break.

56
0:04:41.720 --> 0:04:45.920
And then you can do maintenance in the right moment and assure that it won't break or that

57
0:04:45.920 --> 0:04:51.400
it stays safe a little bit longer or you can deduce, oh, I'm too late, I have to change

58
0:04:51.400 --> 0:04:53.720
that.

59
0:04:53.720 --> 0:05:02.160
And RCM, our software suite that we built ourselves is basically an acronym for rail

60
0:05:02.160 --> 0:05:10.880
condition monitoring saying this whole first part of the value chain here up to the fourth

61
0:05:10.880 --> 0:05:12.640
picture.

62
0:05:12.640 --> 0:05:18.840
And we try to automate that and to make it a bit more generic.

63
0:05:18.840 --> 0:05:26.400
And we're currently trying to do that with the now shown architecture.

64
0:05:26.400 --> 0:05:29.000
So we have the measurement platform on the left side.

65
0:05:29.000 --> 0:05:35.720
It gets from the administrative tools, for instance, topology, like to know what kind

66
0:05:35.720 --> 0:05:38.680
of tracks exist in Switzerland.

67
0:05:38.680 --> 0:05:41.100
We've talked yesterday with Infra-Bell.

68
0:05:41.100 --> 0:05:42.200
It's quite similar.

69
0:05:42.200 --> 0:05:47.460
And I've also talked to people from SNCF, I've also talked to people from Network Rail.

70
0:05:47.460 --> 0:05:58.800
At the end, you need a topology to put your measurement data to an asset, to a certain

71
0:05:58.800 --> 0:06:01.000
location in the physical world.

72
0:06:01.000 --> 0:06:05.640
And while before I was not sure, before we started with this project, I was not sure

73
0:06:05.640 --> 0:06:11.320
if this will be a big problem, if the topologies will be vastly different from country to country.

74
0:06:11.320 --> 0:06:17.640
But at the end, since the requirements are very similar from country to country, I came

75
0:06:17.640 --> 0:06:21.680
to observe that the solutions that came up are also very similar.

76
0:06:21.680 --> 0:06:30.020
And I do believe that it's possible to have a generic topology description between countries.

77
0:06:30.020 --> 0:06:35.960
And this will be, we'll see later on, a bit crucial for this project to work in different

78
0:06:35.960 --> 0:06:39.720
countries.

79
0:06:39.720 --> 0:06:48.280
Once we gathered the measurement on the measurement platform, we have this automated data cleansing

80
0:06:48.280 --> 0:06:51.080
and quality control processing platform.

81
0:06:51.080 --> 0:06:54.720
And the first, basically the first thing is the positioning.

82
0:06:54.720 --> 0:06:58.960
As I said before, that would be to tie the measurements to a physical location on your

83
0:06:58.960 --> 0:07:00.260
topology.

84
0:07:00.260 --> 0:07:02.760
And the second thing that we do is a conversion.

85
0:07:02.760 --> 0:07:10.040
So whatever comes into one of those measurement, whatever comes from one of those measurement

86
0:07:10.040 --> 0:07:16.960
platforms, one of those measurement trains, we convert it into our open data format.

87
0:07:16.960 --> 0:07:19.880
And this is the first thing I would like to talk to you about.

88
0:07:19.880 --> 0:07:25.920
How do you say that?

89
0:07:25.920 --> 0:07:28.520
We'll talk about a bit more detail afterwards.

90
0:07:28.520 --> 0:07:35.200
Once we have it in an open format, we do a standardization like the different measurement

91
0:07:35.200 --> 0:07:40.000
systems provide the same measurement in different flavors.

92
0:07:40.000 --> 0:07:45.240
Let's say the gauge ones come in an absolute number, 1.35 meters.

93
0:07:45.240 --> 0:07:49.480
The second system shows it as a deviation from zero.

94
0:07:49.480 --> 0:07:50.520
One shows it in meters.

95
0:07:50.520 --> 0:07:51.520
One shows it in millimeters.

96
0:07:51.520 --> 0:07:56.420
You have to standardize that a little bit in order to be able to compare it afterwards.

97
0:07:56.420 --> 0:08:00.280
We do a consistency check, and then we do a persistence.

98
0:08:00.280 --> 0:08:06.160
And once we persist that data, we have, at least in Switzerland, regulations to follow,

99
0:08:06.160 --> 0:08:13.960
especially on the duration and on the capacity to be able to read the data again in the future.

100
0:08:13.960 --> 0:08:16.400
In Switzerland, this is about 15 years.

101
0:08:16.400 --> 0:08:23.360
So if we do a measurement, we have to guarantee that for the next 15 years, we are able not

102
0:08:23.360 --> 0:08:30.680
only to show the measurement, but also to open it and to read the data.

103
0:08:30.680 --> 0:08:35.840
And this, again, something that is much easier to do if you have an open data format, which

104
0:08:35.840 --> 0:08:42.120
is not proprietary, which is not tied to a specific software or a specific software version

105
0:08:42.120 --> 0:08:46.960
that you have to maintain to.

106
0:08:46.960 --> 0:08:54.200
Then it goes to the presentation layer, and the presentation layer typically can be various

107
0:08:54.200 --> 0:08:55.640
different programs.

108
0:08:55.640 --> 0:09:00.840
In our case in Switzerland, we use E-Rises from Eertman in Germany.

109
0:09:00.840 --> 0:09:04.720
I think there's a couple of other countries in Europe that do that too.

110
0:09:04.720 --> 0:09:09.880
But we also use our own viewing software, which we call RCM Viewer, which will be the

111
0:09:09.880 --> 0:09:15.400
second part of the open source project I would like to talk about, and which can show, obviously,

112
0:09:15.400 --> 0:09:19.800
the open data format that we use.

113
0:09:19.800 --> 0:09:28.320
So once this data is gathered, typically now if you buy a system on the market, there are

114
0:09:28.320 --> 0:09:31.700
different enterprises that sell such systems.

115
0:09:31.700 --> 0:09:37.800
For instance, Mermeck in southern Italy or Placer & Toiler from Austria, which are two

116
0:09:37.800 --> 0:09:39.000
of the biggest players.

117
0:09:39.000 --> 0:09:43.480
Also there's Ensco in the United States.

118
0:09:43.480 --> 0:09:46.520
You get a proprietary format from them.

119
0:09:46.520 --> 0:09:51.360
You may or may not be able to read it, depending on how your contract is.

120
0:09:51.360 --> 0:09:58.920
So I know as NCF had in the past some problems with that, that the contract did not state

121
0:09:58.920 --> 0:10:06.680
that you are allowed to actually know the data format your data comes to you.

122
0:10:06.680 --> 0:10:12.200
Once you've figured that out and that you are able to read it, you will free yourself

123
0:10:12.200 --> 0:10:18.120
from the use of the software that they impose on you if they sell you the measurement system.

124
0:10:18.120 --> 0:10:20.680
We've done that in Switzerland over the last years.

125
0:10:20.680 --> 0:10:23.840
We've had the same issues, don't worry.

126
0:10:23.840 --> 0:10:28.960
Are now at the point where all our measurement systems are either directly delivering an

127
0:10:28.960 --> 0:10:36.440
open data format or at least that we have a full specification of the data format that

128
0:10:36.440 --> 0:10:40.480
is delivered to us in binary.

129
0:10:40.480 --> 0:10:46.920
We're now trying to transpose that into our open format.

130
0:10:46.920 --> 0:10:54.480
For that, with the last measurement train that we acquired, we specified such a format

131
0:10:54.480 --> 0:11:00.960
based on an open standard, which is HDF5, Hierarchical Data Format 5.

132
0:11:00.960 --> 0:11:02.640
You can find it online.

133
0:11:02.640 --> 0:11:05.360
It exists since, I think, 20 years.

134
0:11:05.360 --> 0:11:07.360
It's widely used in the academic world.

135
0:11:07.360 --> 0:11:11.640
It's also the base of MATLAB's.m files, for instance.

136
0:11:11.640 --> 0:11:17.400
It has the advantage that most programming languages and most measurement data programs

137
0:11:17.400 --> 0:11:25.160
like R or the ADM or all others that are out there already have stops or libraries to read

138
0:11:25.160 --> 0:11:28.040
it.

139
0:11:28.040 --> 0:11:36.680
They themselves, HDF5 themselves, says their key features and advantages are metadata with

140
0:11:36.680 --> 0:11:42.360
data, fast IO, big data, and the other stuff that you can read here.

141
0:11:42.360 --> 0:11:49.400
What we try to do is to write a specification upon the HDF5 that is specific for railway

142
0:11:49.400 --> 0:11:57.000
data, but generic enough that it can handle all type of measurement systems.

143
0:11:57.000 --> 0:12:02.720
Basically you have the advantages of HDF5 and on the same time the possibility if you

144
0:12:02.720 --> 0:12:11.080
follow this specification that we wrote that you can find on GitHub that a software like

145
0:12:11.080 --> 0:12:15.820
the one that we built can read it whatever your measurement systems are.

146
0:12:15.820 --> 0:12:19.640
If you buy it from Mermic, if you buy it from Placer Interior, if it's Track Geometry, or

147
0:12:19.640 --> 0:12:26.360
if it's, I don't know, from Sperry, ultrasonic measurements, or whatever else is out there,

148
0:12:26.360 --> 0:12:31.480
as long as you follow the specification, you can use the software to display it.

149
0:12:31.480 --> 0:12:37.520
You can use the software to overlay it, and so on.

150
0:12:37.520 --> 0:12:43.760
We named it RCMDX, Rail Condition Monitoring Data Exchange.

151
0:12:43.760 --> 0:12:50.500
Our key features for it is that it includes the metadata like configuration, but also

152
0:12:50.500 --> 0:12:55.440
the topology, and it makes it completely self-contained.

153
0:12:55.440 --> 0:12:57.860
In 15 years you take one file.

154
0:12:57.860 --> 0:13:03.040
You do not need anything else than the file itself and the specification of the data to

155
0:13:03.040 --> 0:13:07.400
be able to reproduce a view of the data.

156
0:13:07.400 --> 0:13:16.000
On the track, in the system as it was in the moment that the data was gathered, and this

157
0:13:16.000 --> 0:13:18.600
I think helps a lot.

158
0:13:18.600 --> 0:13:23.400
As I said before, it's accessible through the standard HDF5 tools, so you can download

159
0:13:23.400 --> 0:13:27.720
an HDF5 library from their website and directly access the data.

160
0:13:27.720 --> 0:13:31.320
You can also build your own using the programming language.

161
0:13:31.320 --> 0:13:36.920
Python has a stop, and Java, and C++ and C Sharp also.

162
0:13:36.920 --> 0:13:42.900
On the other side, you still have the generosity in order to use whatever measurement system

163
0:13:42.900 --> 0:13:45.200
you want.

164
0:13:45.200 --> 0:13:53.880
Let's see one of the benefits that you would get if you decide to use such a thing.

165
0:13:53.880 --> 0:14:00.880
For us, one of the main benefits is that if it gets adopted by more than one country,

166
0:14:00.880 --> 0:14:07.320
let's say, you get the advantage that in Open Tender where you have to specify what you

167
0:14:07.320 --> 0:14:14.980
want to buy, you can handle the whole data part with just one single phrase.

168
0:14:14.980 --> 0:14:17.880
Please deliver the data in this specification.

169
0:14:17.880 --> 0:14:19.520
You can find it on GitHub.

170
0:14:19.520 --> 0:14:29.520
As soon as more than one tender writes it inside, I think it's basically close to standard

171
0:14:29.520 --> 0:14:31.840
because this market is very small.

172
0:14:31.840 --> 0:14:41.160
The companies that I told you before are basically covering over 80% of the whole market.

173
0:14:41.160 --> 0:14:48.240
As soon as they start to see that it is necessary to deliver their data in this format, you

174
0:14:48.240 --> 0:14:50.120
can get it for free.

175
0:14:50.120 --> 0:14:59.000
I think it's quite a big advantage that could be resulting out of using that.

176
0:14:59.000 --> 0:15:02.000
Of course, then as a result, you have a complete open data.

177
0:15:02.000 --> 0:15:09.640
We will see now I'm switching from the data format to the viewing software.

178
0:15:09.640 --> 0:15:20.240
This also is available already as freeware and will be in future as open source.

179
0:15:20.240 --> 0:15:24.760
Once you have your data in the RCMDX format, as soon as you follow the specification, you

180
0:15:24.760 --> 0:15:27.680
can basically use the software to display it.

181
0:15:27.680 --> 0:15:34.800
It's highly generic in the case that everything that you see now here is a workspace that

182
0:15:34.800 --> 0:15:38.120
can be easily configured by the user.

183
0:15:38.120 --> 0:15:42.640
You can drag and drop every little window inside that workspace, put it somewhere else.

184
0:15:42.640 --> 0:15:45.520
You can configure it to show whatever data you want.

185
0:15:45.520 --> 0:15:47.920
You can change the parameters that are shown.

186
0:15:47.920 --> 0:15:49.880
You can change the boundaries that are shown.

187
0:15:49.880 --> 0:15:55.120
You can change the limits that you want to display.

188
0:15:55.120 --> 0:16:01.920
You can show in parallel and synchronous in time, in space, and also on your topology

189
0:16:01.920 --> 0:16:03.560
different measurement systems.

190
0:16:03.560 --> 0:16:08.200
You can show data from the track geometry system together with video data, together

191
0:16:08.200 --> 0:16:15.280
with optical data, together with ultrasonic data, whatever you think might benefit you

192
0:16:15.280 --> 0:16:16.840
the most.

193
0:16:16.840 --> 0:16:23.480
You can easily do it very complicated or you can try to build new views that are less generic

194
0:16:23.480 --> 0:16:24.840
for an end user.

195
0:16:24.840 --> 0:16:33.340
For instance, for a maintenance manager, if he has to do a specific job, like in our case,

196
0:16:33.340 --> 0:16:42.000
the lower right part, like this part with optical data, he has to find surface defects.

197
0:16:42.000 --> 0:16:48.000
You can put on a specific mask on the viewing software in order to help him to do that more

198
0:16:48.000 --> 0:16:52.000
efficiently.

199
0:16:52.000 --> 0:16:53.000
You've seen it play.

200
0:16:53.000 --> 0:16:56.560
It's like a video that I made before.

201
0:16:56.560 --> 0:17:05.000
This viewing software is currently done in C-sharp and we're trying to put it open source

202
0:17:05.000 --> 0:17:08.640
since I don't know, a bit more than a year.

203
0:17:08.640 --> 0:17:16.480
The main problems that we are facing is we have begun building it like seven years ago

204
0:17:16.480 --> 0:17:23.160
together with a new measurement coach and it has some proprietary libraries in it.

205
0:17:23.160 --> 0:17:29.600
The main ones are Sidechart and Telerik for C-sharp and we're now trying to find a way

206
0:17:29.600 --> 0:17:38.560
to use open source while having those libraries inside because it's very difficult to throw

207
0:17:38.560 --> 0:17:40.400
them out and especially Sidechart.

208
0:17:40.400 --> 0:17:47.800
There's no good alternative for the moment in order to be a performant viewing software.

209
0:17:47.800 --> 0:17:53.280
That's basically where we are right now.

210
0:17:53.280 --> 0:17:56.680
You can already download it on GitHub.

211
0:17:56.680 --> 0:17:58.080
Here's the link.

212
0:17:58.080 --> 0:18:01.520
There's also an overview later on.

213
0:18:01.520 --> 0:18:07.640
We also have a couple of measurement files from Switzerland that you can download to

214
0:18:07.640 --> 0:18:13.160
a couple of workspaces and like that you can see how the data format works, how the viewing

215
0:18:13.160 --> 0:18:18.360
software works, how they interact together and in case of implement your own version

216
0:18:18.360 --> 0:18:23.600
of it.

217
0:18:23.600 --> 0:18:31.280
Of course, the benefit of the viewing software would then be that you are able to do massively

218
0:18:31.280 --> 0:18:39.920
complex views with Synchron, I don't know how you say that in English, display data

219
0:18:39.920 --> 0:18:47.960
at the same time and at the same position or at the same point in the physical world.

220
0:18:47.960 --> 0:18:52.800
Basically the viewing software allows you to include the topology also if it's not exactly

221
0:18:52.800 --> 0:18:54.360
the same.

222
0:18:54.360 --> 0:18:59.620
We have in Switzerland twice a year an update on the topology and obviously some things

223
0:18:59.620 --> 0:19:07.400
changed due to maintenance work, due to new building of the tracks and so on.

224
0:19:07.400 --> 0:19:11.520
The viewing software can handle that in order if you have different states in different

225
0:19:11.520 --> 0:19:13.520
files.

226
0:19:13.520 --> 0:19:19.120
As I said before, every file includes your topology too so then you can display the data

227
0:19:19.120 --> 0:19:24.920
where it is taken on tracks that did not have changes and it will show you where it had

228
0:19:24.920 --> 0:19:33.400
changes and do not display the data in the same way if the track changes were applied.

229
0:19:33.400 --> 0:19:40.560
You can in the viewing software change from one topology view to another one.

230
0:19:40.560 --> 0:19:47.720
You have an easy and powerful presentation layer I think if you do so.

231
0:19:47.720 --> 0:19:51.120
Of course, we talked yesterday about the detail.

232
0:19:51.120 --> 0:19:56.280
If you take a measurement run and you run from 8 o'clock in the morning till noon and

233
0:19:56.280 --> 0:20:01.280
you do a 100 kilometer and you do a circle, then if you show it in time you will have

234
0:20:01.280 --> 0:20:06.140
a straight 1D chart of your measurement data.

235
0:20:06.140 --> 0:20:15.040
If you show it in distance you will have the same thing, a straight chart with a distance

236
0:20:15.040 --> 0:20:17.560
based on the x-axis instead of time.

237
0:20:17.560 --> 0:20:23.100
If you show it in topology then you have a much shorter bit showing an overlay of how

238
0:20:23.100 --> 0:20:26.700
many circles you have run through in the morning.

239
0:20:26.700 --> 0:20:36.080
This is quite an interesting thing to do and it is basically what most easily accessible

240
0:20:36.080 --> 0:20:37.840
viewing software lack.

241
0:20:37.840 --> 0:20:47.220
So this possibility to tie it to your physical location like that.

242
0:20:47.220 --> 0:20:49.800
Then we have the licensing.

243
0:20:49.800 --> 0:20:56.920
We worked a lot together with Cornelius, together with Mahalia and also with Christian which

244
0:20:56.920 --> 0:21:01.240
is sitting back there on the licensing that we will be using.

245
0:21:01.240 --> 0:21:07.800
We decided to use an Eclipse public license after some discussions on what would make

246
0:21:07.800 --> 0:21:11.920
sense mainly because it is a weak copyleft license.

247
0:21:11.920 --> 0:21:20.520
I can imagine a future where a measurement system company uses this software directly.

248
0:21:20.520 --> 0:21:25.520
Say you are a startup company, you built your own measurement system, you need a presentation

249
0:21:25.520 --> 0:21:26.520
layer.

250
0:21:26.520 --> 0:21:34.800
You can take the RCMDx data format and the viewing software and create your own possibly

251
0:21:34.800 --> 0:21:42.280
commercial version of it by adding your own flavor to it and still be able to sell it

252
0:21:42.280 --> 0:21:47.600
as long as the core functionality, if you improve it, you send it back upstream.

253
0:21:47.600 --> 0:21:54.800
That would be like the ideal version that we could attend in the future.

254
0:21:54.800 --> 0:21:57.640
That is basically one of the reasons why I am here too.

255
0:21:57.640 --> 0:22:02.460
Hope that all of you will go home and use it and spread it and bring your own companies

256
0:22:02.460 --> 0:22:05.560
to use it too.

257
0:22:05.560 --> 0:22:09.760
Let's see an overview.

258
0:22:09.760 --> 0:22:14.680
Right now the most important link is the first one.

259
0:22:14.680 --> 0:22:19.720
SBB has since one week now a project website for this.

260
0:22:19.720 --> 0:22:25.240
If you click on it, maybe something happens.

261
0:22:25.240 --> 0:22:31.120
You will directly get to a website where you can find the...

262
0:22:31.120 --> 0:22:33.160
It does not show.

263
0:22:33.160 --> 0:22:40.080
Thank you.

264
0:22:40.080 --> 0:22:42.320
Why is it so big?

265
0:22:42.320 --> 0:22:47.800
At least you can read it.

266
0:22:47.800 --> 0:22:53.120
You can see the website and there is a couple of links somewhere.

267
0:22:53.120 --> 0:22:55.880
You have sample data that you can download directly.

268
0:22:55.880 --> 0:23:00.880
I think it is more or less one kilometer of data but gives a good impression how the whole

269
0:23:00.880 --> 0:23:02.920
system can work.

270
0:23:02.920 --> 0:23:07.000
If you are really interested in having more data, you can still contact me or Jean Frederick

271
0:23:07.000 --> 0:23:11.480
and we can give you access to it.

272
0:23:11.480 --> 0:23:13.400
There is more on topic.

273
0:23:13.400 --> 0:23:17.680
Normally if it would not be so zoomed out, it would be a bit nicer and on the top right

274
0:23:17.680 --> 0:23:18.960
of the site.

275
0:23:18.960 --> 0:23:24.520
You can directly download the installer for the viewing software and you can directly

276
0:23:24.520 --> 0:23:32.840
go to the GitHub page with the format description.

277
0:23:32.840 --> 0:23:37.080
You also have the workspaces that you have to load into the viewing software.

278
0:23:37.080 --> 0:23:38.640
You can also create your own ones.

279
0:23:38.640 --> 0:23:44.040
That is just a help if you want to play around with it.

280
0:23:44.040 --> 0:23:49.480
That is basically what I wanted to say.

281
0:23:49.480 --> 0:23:50.840
Thank you very much for listening.

282
0:23:50.840 --> 0:23:57.840
I think we have a couple of minutes for questions too.

283
0:23:57.840 --> 0:24:03.840
Thank you.

284
0:24:03.840 --> 0:24:24.840
Thank you very much.

285
0:24:24.840 --> 0:24:53.560
Please.

286
0:24:53.560 --> 0:24:54.560
That is the neat point.

287
0:24:54.560 --> 0:24:57.760
It needs to have the corresponding software if you don't want to.

288
0:24:57.760 --> 0:25:04.520
As soon as your data is described properly, it is self-contained so you can build at any

289
0:25:04.520 --> 0:25:06.760
moment a new software to access it.

290
0:25:06.760 --> 0:25:09.760
You can of course keep your software too but you don't need to.

291
0:25:09.760 --> 0:25:11.640
You have the specification.

292
0:25:11.640 --> 0:25:21.880
You can build the tool to read it within a couple of days.

293
0:25:21.880 --> 0:25:22.880
Time is up.

294
0:25:22.880 --> 0:25:23.880
Okay.

295
0:25:23.880 --> 0:25:25.160
Thank you very much.

