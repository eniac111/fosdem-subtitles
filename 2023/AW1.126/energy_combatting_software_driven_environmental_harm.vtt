WEBVTT

00:00.000 --> 00:25.240
Thank you everyone for coming.

00:25.240 --> 00:27.680
Especially a big thank you to the organizers.

00:27.680 --> 00:29.560
This is a great event and I'm really honored to be here.

00:29.560 --> 00:33.680
It's my first time at FOSDEM and this is an incredible community, incredible event that

00:33.680 --> 00:35.080
I've wanted to come for years.

00:35.080 --> 00:38.600
I'm representing today the KDE Eco Initiative.

00:38.600 --> 00:40.740
This is a community project involving several people.

00:40.740 --> 00:41.880
Some of them are here.

00:41.880 --> 00:47.080
Some who were here earlier in the Rail Ray open source dev room in this room earlier

00:47.080 --> 00:52.440
today and some presented earlier today in the online event of the Energy dev room.

00:52.440 --> 00:56.840
And I'm going to talk today about combating software driven environmental harm with free

00:56.840 --> 00:57.960
software.

00:57.960 --> 01:00.360
I'm not going to be as technical as some of the other talks.

01:00.360 --> 01:05.040
I'm going to focus more on some of the softer sides of free software and how that's good

01:05.040 --> 01:08.160
for the environment.

01:08.160 --> 01:10.340
There's a lot of links in the slides.

01:10.340 --> 01:16.120
If you want to download them, you can either go to our GitLab repository or you can scan

01:16.120 --> 01:17.120
the QR code.

01:17.120 --> 01:23.900
I'll come back to this at the end to get started, to get an idea of what the problem is.

01:23.900 --> 01:28.680
So this is some data from a report from the Association for Computing and Machinery.

01:28.680 --> 01:32.600
It's the oldest association of its type since 1947.

01:32.600 --> 01:39.840
And they estimated how much energy consumption the entire ICT sector, sorry, the greenhouse

01:39.840 --> 01:43.160
gas emissions of the entire ICT sector is.

01:43.160 --> 01:49.800
And in their estimates, they find that it's within 1.8 to 3.9% of global greenhouse gas

01:49.800 --> 01:50.800
emissions.

01:50.800 --> 01:55.840
This is roughly equivalent to the airline industry, which is estimated at 2.5%.

01:55.840 --> 02:01.800
Now this data includes everything from production to transportation to end of life treatment,

02:01.800 --> 02:08.760
Bitcoin training, machine learning models, and things like this.

02:08.760 --> 02:13.480
They say at the very beginning of the reports, computing can help mitigate climate change,

02:13.480 --> 02:16.300
but it must first cease contributing to it.

02:16.300 --> 02:21.400
And in their projections, they estimate that by 2050, the ICT sector will contribute about

02:21.400 --> 02:24.080
30% of global greenhouse gas emissions.

02:24.080 --> 02:27.640
Can I ask, we're going to net zero by 2050.

02:27.640 --> 02:30.640
Where are they?

02:30.640 --> 02:33.600
Damn, right.

02:33.600 --> 02:38.200
So this data is assuming nothing changes from today.

02:38.200 --> 02:43.240
And some of the major contributors to this are training machine learning models.

02:43.240 --> 02:51.480
That has increased 300,000 times between 2012 and 2018, and is currently doubling every

02:51.480 --> 02:54.880
few months in terms of energy consumption.

02:54.880 --> 02:56.040
That's one of the main contributors.

02:56.040 --> 03:00.960
A short lifespan of digital devices is another.

03:00.960 --> 03:06.400
Digital devices, they estimate to be at, by 2025, 75 billion devices in the world.

03:06.400 --> 03:09.640
That's about 10 per person, if that's distributed evenly.

03:09.640 --> 03:11.720
Of course it's not.

03:11.720 --> 03:18.160
And in their report, they claim at one point towards the end, efficiencies must be coupled

03:18.160 --> 03:23.440
with slash demand, so conservation, to reduce the ICT sector carbon emissions.

03:23.440 --> 03:26.760
And those are going to be two of the main points I'm going to talk about today, efficiencies

03:26.760 --> 03:30.640
and conservation.

03:30.640 --> 03:32.200
This is from another report.

03:32.200 --> 03:38.820
This does not include such a vast data set as the ACM report.

03:38.820 --> 03:40.180
This is from the SHIFT project.

03:40.180 --> 03:42.760
It's a project, a nonprofit from France.

03:42.760 --> 03:45.160
This is from 2019.

03:45.160 --> 03:50.720
And this is looking at usage and production and how that is distributed in terms of energy

03:50.720 --> 03:52.840
consumption.

03:52.840 --> 03:54.400
This does not include things like Bitcoin.

03:54.400 --> 03:56.120
It doesn't include transportation.

03:56.120 --> 03:58.880
So there's several things that are not in this data set.

03:58.880 --> 04:01.440
But they estimate, and this is just a good idea to think about what I'm going to talk

04:01.440 --> 04:02.480
about today.

04:02.480 --> 04:08.280
They estimate that usage, which is on the left side, including terminals.

04:08.280 --> 04:10.840
All the end-user devices.

04:10.840 --> 04:16.440
Networks and data centers contributes about 55% of energy consumption, whereas production

04:16.440 --> 04:17.440
is 45%.

04:17.440 --> 04:22.720
And again, this is not including an entire, the full data set.

04:22.720 --> 04:25.680
For today, I'm going to talk a little bit about all of these things.

04:25.680 --> 04:31.280
I'm going to talk about production in sort of broad strokes, not going into any of the

04:31.280 --> 04:36.320
individual devices, and focus mostly on the terminals, so the end-user devices.

04:36.320 --> 04:43.600
But it does have some relevance in terms of network and data center usage.

04:43.600 --> 04:46.240
So as I said, I'm going to talk about efficiency and conservation.

04:46.240 --> 04:47.560
What do I mean by efficiency?

04:47.560 --> 04:52.080
I mean same task, achieving the same result, but using fewer hardware demands.

04:52.080 --> 04:54.520
This is going to be focused on desktop software.

04:54.520 --> 05:00.160
KDE is a desktop software development nonprofit.

05:00.160 --> 05:04.560
And conservation, that is reducing waste driven by software.

05:04.560 --> 05:08.440
And that'll become clear in just a second.

05:08.440 --> 05:13.220
This is some data looking at the energy consumption of two word processors.

05:13.220 --> 05:19.440
This is from a report from the German Environment Agency, in which they compared various software

05:19.440 --> 05:23.120
products, doing the exact same thing.

05:23.120 --> 05:25.240
This is called a standard usage scenario.

05:25.240 --> 05:26.900
This is usage scenario measurements.

05:26.900 --> 05:32.080
So basically they're running the exact same script to generate the same task from the

05:32.080 --> 05:37.720
software, and then looking at how much energy it consumes by using an external power meter.

05:37.720 --> 05:41.680
And what they find is that word processor one, which they only identify as an open source

05:41.680 --> 05:50.000
word processor, is consuming four times less the energy compared to word processor two,

05:50.000 --> 05:55.040
which they only identify as a proprietary software product.

05:55.040 --> 05:59.320
Now you might look at this and say, OK, for one individual user, this is maybe not that

05:59.320 --> 06:02.600
significant, but you have to think of it at scale.

06:02.600 --> 06:09.400
For word processors, every university, every office, every government institution is using

06:09.400 --> 06:10.640
word processors.

06:10.640 --> 06:15.480
When you multiply this up by millions, possibly billions of users, that really adds up.

06:15.480 --> 06:18.080
And I'm going to give an example of how that adds up.

06:18.080 --> 06:22.600
This is directly taken from an online course on sustainable software design from Detlaff

06:22.600 --> 06:25.120
Toms.

06:25.120 --> 06:33.120
In this example, he imagines a scenario where you just have a one CPU second reduction in

06:33.120 --> 06:34.560
your software.

06:34.560 --> 06:41.560
And that one CPU second reduction is about the equivalent of 10 watt second savings.

06:41.560 --> 06:48.040
When you multiply that by 1.5 million users who are having perhaps in that savings has

06:48.040 --> 06:56.600
interacted with 20 times a day, 230 times a year in your working day.

06:56.600 --> 07:00.360
That adds up to 19 megawatt hours of savings.

07:00.360 --> 07:05.720
What does that mean to make a comparison if you take a modern electric vehicle and drive

07:05.720 --> 07:06.720
it?

07:06.720 --> 07:12.120
That would be the energy needed to drive from Paris to Beijing and back six times.

07:12.120 --> 07:13.120
OK.

07:13.120 --> 07:20.400
This is just from one CPU second reduction.

07:20.400 --> 07:27.760
If I can convince 500 people to do 10 of those reductions, with those exact same numbers,

07:27.760 --> 07:30.920
you end up with 95,000 megawatt hour savings.

07:30.920 --> 07:37.640
That's the equivalent to the energy consumption of a 30,000 two person households in one year.

07:37.640 --> 07:46.640
OK, so this adds up once you start looking at it at scale.

07:46.640 --> 07:51.760
Going back to those two word processors, this is from that same report comparing word processor

07:51.760 --> 07:58.520
proprietary and open source, looking at the energy consumption over time.

07:58.520 --> 08:03.720
And what you see here is so I'm not going to focus on what's happening before this blue

08:03.720 --> 08:04.720
line.

08:04.720 --> 08:06.120
I'm just going to look at what happens here.

08:06.120 --> 08:12.080
This is the point in that usage scenario script when the script saves the document and then

08:12.080 --> 08:14.240
goes idle.

08:14.240 --> 08:17.560
This lower plot is the open source application.

08:17.560 --> 08:23.160
What you see is that the document is saved and in fact it goes idle.

08:23.160 --> 08:29.760
By comparison, looking at the proprietary software product, it continues doing things.

08:29.760 --> 08:30.760
What is it doing?

08:30.760 --> 08:31.760
I don't know.

08:31.760 --> 08:36.480
Maybe telemetry, phoning home, doing some sort of analytics.

08:36.480 --> 08:38.600
Can the user opt out of this?

08:38.600 --> 08:40.020
Probably not.

08:40.020 --> 08:42.380
This is probably outside of the user control.

08:42.380 --> 08:45.860
Is it necessary for the functionality of that software?

08:45.860 --> 08:46.860
Probably not.

08:46.860 --> 08:52.440
Now, I don't know that speculation, but when you look at what's happening over time, you

08:52.440 --> 08:55.520
can see a significant difference here.

08:55.520 --> 08:57.840
OK, that's it for efficiency.

08:57.840 --> 09:00.480
I'm going to come back to some of this in the second half of the talk.

09:00.480 --> 09:06.360
I'm going to look at conservation now, reducing waste driven by software.

09:06.360 --> 09:10.720
This is from, this is an infographic and I'm going to go through it now.

09:10.720 --> 09:20.040
This is from a report based on UN data, I believe, which from 2016 there's reference

09:20.040 --> 09:21.620
to a tsunami of e-waste.

09:21.620 --> 09:23.640
This is actually increasing.

09:23.640 --> 09:28.480
The data that they report is that it would be the equivalent to the materials used to

09:28.480 --> 09:32.880
build 4,500 Eiffel Towers in one year.

09:32.880 --> 09:35.280
That's e-waste.

09:35.280 --> 09:38.360
That would be just, I thought about what if you stacked all those Eiffel tiles up, that

09:38.360 --> 09:42.160
would be 17 times higher than Mount Everest.

09:42.160 --> 09:45.040
This is in one year and it's increasing.

09:45.040 --> 09:49.480
Less than 20% of our e-waste gets recycled.

09:49.480 --> 09:59.240
In our landfills, e-waste accounts for about 2% of the waste in it, but it's 70% of the

09:59.240 --> 10:01.240
toxic waste in landfills.

10:01.240 --> 10:06.960
This is really damaging to the environment.

10:06.960 --> 10:08.400
What does software have to do with this?

10:08.400 --> 10:09.960
That's a hardware issue.

10:09.960 --> 10:15.080
Software determines how long we can use our hardware.

10:15.080 --> 10:19.960
You have problems like abandonware or planned obsolescence where your device is no longer

10:19.960 --> 10:21.040
supported.

10:21.040 --> 10:24.840
My parents got this on one of their machines and I convinced them to switch to Linux because

10:24.840 --> 10:29.040
of it, because to update would have required buying new hardware.

10:29.040 --> 10:34.800
You have bloat and feature creep where your device no longer meets minimum system requirements.

10:34.800 --> 10:39.480
The result is that you have new devices produced and shipped and functioning devices are discarded

10:39.480 --> 10:42.440
as e-waste.

10:42.440 --> 10:44.680
This is data from Apple.

10:44.680 --> 10:47.760
I got it from a book called Smart Green World.

10:47.760 --> 10:52.960
This is particularly scandalous that functioning devices end up as e-waste.

10:52.960 --> 10:55.040
This is from Apple's own data.

10:55.040 --> 11:03.120
78% of the greenhouse gas emissions comes just in the production.

11:03.120 --> 11:12.360
This is a completely useless waste and contribution to the climate crisis.

11:12.360 --> 11:14.600
I said I'd talk about free software.

11:14.600 --> 11:18.160
I'm going to first focus on KDE's vision.

11:18.160 --> 11:24.080
My main point here is that what's good for the user is good for the environment.

11:24.080 --> 11:25.120
KDE has the vision.

11:25.120 --> 11:28.520
This is from about five years ago the community came up with what do they want to see long

11:28.520 --> 11:31.240
term for KDE.

11:31.240 --> 11:35.600
What they want is a world in which everyone has control over their digital life and enjoys

11:35.600 --> 11:39.180
freedom and privacy.

11:39.180 --> 11:44.120
Each word is broken down at the website if you go to the link.

11:44.120 --> 11:45.720
I'm going to focus on a couple of them.

11:45.720 --> 11:50.960
A world in which everyone has control over their digital life.

11:50.960 --> 11:51.960
How do they want to do that?

11:51.960 --> 11:54.280
They want to hand control over to the user.

11:54.280 --> 11:55.480
They want to put you in the driver's seat.

11:55.480 --> 12:01.040
The way they do that is by making free and open source software.

12:01.040 --> 12:04.320
To enjoy freedom and privacy.

12:04.320 --> 12:08.800
Without the freedom to make changes and share them, users are entirely reliant on the vendor's

12:08.800 --> 12:12.880
benevolence for apparent control.

12:12.880 --> 12:18.280
Transparency and user autonomy aren't features.

12:18.280 --> 12:20.680
They're inherent to free and open source software.

12:20.680 --> 12:27.240
Those same values are what make free and open source software already more sustainable than

12:27.240 --> 12:29.360
non-free software.

12:29.360 --> 12:30.760
It's not just me saying this.

12:30.760 --> 12:35.480
This is also the German Environment Agency which released the award criteria for the

12:35.480 --> 12:40.960
Blue Angel Eco-certification for desktop software in 2020.

12:40.960 --> 12:47.280
They recognize that transparency in energy consumption and user autonomy in letting users

12:47.280 --> 12:53.440
decide how they use their software actually is more sustainable.

12:53.440 --> 12:57.760
There are three main categories to the award criteria.

12:57.760 --> 13:03.640
Resource and energy efficiency, potential hardware operating life, and user autonomy.

13:03.640 --> 13:09.440
In other talks, I go through what I'm calling the three steps to eco-certification, measure,

13:09.440 --> 13:13.800
analyze, and certify, measuring by running usage scenarios, measuring energy consumption,

13:13.800 --> 13:17.760
analyzing that data using a tool like Oscar, the open source software consumption analysis

13:17.760 --> 13:19.960
in R, and then collecting the data.

13:19.960 --> 13:23.040
I'm not going to talk about the measurement and analysis today.

13:23.040 --> 13:30.280
I'm going to actually focus more on those softer qualities, the user autonomy ones.

13:30.280 --> 13:37.160
In a bit more detail, this is what the criteria require.

13:37.160 --> 13:40.760
Resource and energy efficiency means that you are transparent about how much energy

13:40.760 --> 13:44.600
your software consumes when it's used by an average user.

13:44.600 --> 13:49.360
What an average user is, is not defined.

13:49.360 --> 13:54.760
You have to decide what you think your software is used by most users.

13:54.760 --> 13:55.920
Most importantly, you have to publish it.

13:55.920 --> 13:58.920
You have to make it transparent about what your assumptions are.

13:58.920 --> 14:03.000
With that, then you measure the energy consumption and publish it.

14:03.000 --> 14:06.440
The potential hardware operating life, the requirement is that it runs in hardware that's

14:06.440 --> 14:07.440
five years old.

14:07.440 --> 14:09.680
Now, this to me is far too low.

14:09.680 --> 14:15.800
Most people, and I have an example later, using free software can use devices up to

14:15.800 --> 14:17.600
at least 10 years old.

14:17.600 --> 14:18.600
Five years is not very much.

14:18.600 --> 14:22.320
It's 2018 at this point.

14:22.320 --> 14:24.400
Then the user autonomy criteria.

14:24.400 --> 14:28.600
This is where a free and open source software really has an advantage.

14:28.600 --> 14:35.080
Using features, sorry, qualities like uninstallability and modularity that you can only install what

14:35.080 --> 14:38.080
you need, not more, not less.

14:38.080 --> 14:44.160
Continuity of support that the software can be supported beyond the original developer's

14:44.160 --> 14:47.240
intentions.

14:47.240 --> 14:51.080
Offline capability and freedom for advertising that you can use the software without it having

14:51.080 --> 15:01.160
connect to a server or run processes to feed you ads, documentation of your use of open

15:01.160 --> 15:04.360
standards, how you can uninstall it, and things like this, and transparency.

15:04.360 --> 15:08.400
Now, I would say that most people in the free and open source software community take these

15:08.400 --> 15:09.400
for granted.

15:09.400 --> 15:13.400
We don't think of these things as being sustainable.

15:13.400 --> 15:18.160
I'm going to pick just three of them and talk a little bit about them now.

15:18.160 --> 15:24.720
I think then I'll have plenty of time for questions.

15:24.720 --> 15:28.160
Uninstallability and modularity.

15:28.160 --> 15:29.720
This is not exciting news.

15:29.720 --> 15:34.560
We can uninstall things completely when using free and open source software.

15:34.560 --> 15:40.480
A lot of proprietary software products you can't.

15:40.480 --> 15:46.480
So by running things that you don't want, you're creating inefficiencies when using

15:46.480 --> 15:47.480
that software.

15:47.480 --> 15:48.480
It takes longer to load and start.

15:48.480 --> 15:51.360
It takes longer to shut down.

15:51.360 --> 15:56.560
Those software components that you're not using might be adding CPU seconds that add

15:56.560 --> 16:03.680
up once you start thinking about scaling it up to millions, possibly billions of users.

16:03.680 --> 16:04.680
Modularity.

16:04.680 --> 16:07.720
If there are things that are being installed with a software product that you don't want,

16:07.720 --> 16:10.000
that's again creating inefficiencies.

16:10.000 --> 16:15.920
Free software gives users the control to decide what they install or uninstall.

16:15.920 --> 16:21.640
That creates a more efficient software product.

16:21.640 --> 16:22.640
Continuity of support.

16:22.640 --> 16:28.720
This is actually a picture I asked around in the KDE community which hardware people

16:28.720 --> 16:33.880
are running KDE Plasma on that they know is no longer supported by the vendors.

16:33.880 --> 16:38.600
One person responded, this is from, I don't know if this is the exact model, but a 2009

16:38.600 --> 16:47.320
MacBook that had their end of life in 2019 with Apple's 10.10 macOS and they are now

16:47.320 --> 16:54.520
running it with an up to date operating system, Kabuntu with Plasma, long term support without

16:54.520 --> 16:56.160
any problems.

16:56.160 --> 17:06.520
You can do this because the support for free software doesn't have these arbitrary or

17:06.520 --> 17:09.360
planned end of life moments.

17:09.360 --> 17:13.240
The Blue Angel and their criteria, you don't have to be free and open source software to

17:13.240 --> 17:19.640
get the award, but you do have to have a plan for long term continuous support after you

17:19.640 --> 17:23.080
stop as a company developing that software product.

17:23.080 --> 17:35.680
If you don't, you have to make it free and open source software to get the equal label.

17:35.680 --> 17:39.960
Design capability and freedom from advertising to put some numbers to this.

17:39.960 --> 17:46.720
At KDE and like many other free software products, there's no forced opt in telemetry.

17:46.720 --> 17:54.080
In fact, KDE does have a telemetry policy, but it's opt in at all times.

17:54.080 --> 17:59.240
Users aren't automatically giving data to KDE.

17:59.240 --> 18:02.820
Most other software is not also requiring that.

18:02.820 --> 18:05.520
What does that mean in terms of energy savings?

18:05.520 --> 18:12.200
So this is a graph from a report for the EU, carbon footprint of unwanted data used by

18:12.200 --> 18:14.760
smartphones.

18:14.760 --> 18:18.040
What I like is it makes a very clear connection between the network and the data centers in

18:18.040 --> 18:19.720
terms of power consumption.

18:19.720 --> 18:24.960
Every time your smartphone or computer is going through the network, of course, it's

18:24.960 --> 18:27.520
consuming energy.

18:27.520 --> 18:36.360
They in this report say that 60% of EU citizens when asked would opt out of advertising if

18:36.360 --> 18:39.460
they could on their smartphones.

18:39.460 --> 18:45.160
They estimate that that savings, if those 60% of the people could opt out, would be

18:45.160 --> 18:49.640
at its worst, three to eight million metric tons of CO2 a year.

18:49.640 --> 18:58.640
That would be equal to 370,950,000 EU citizens annual energy consumption for something that

18:58.640 --> 19:05.360
many users probably don't want.

19:05.360 --> 19:11.560
These things add up by making software that respects users, that gives users choice.

19:11.560 --> 19:18.060
We are actually making more sustainable software.

19:18.060 --> 19:20.340
There's many more topics to talk about.

19:20.340 --> 19:26.800
If you're interested in the topic, you guys get a sneak peek to our handbook about measuring

19:26.800 --> 19:28.520
energy consumption of software.

19:28.520 --> 19:31.680
It actually will be officially announced next week.

19:31.680 --> 19:38.080
But it's online now if you want to go to our website, eco.kde.org, in which we cover three

19:38.080 --> 19:39.840
main parts.

19:39.840 --> 19:42.600
Why does this matter is the first part.

19:42.600 --> 19:49.480
That is the Blue Angel, focused on the criteria as a benchmark for what a sustainable digital

19:49.480 --> 19:51.880
society could look like.

19:51.880 --> 19:56.220
The part three is then how do you measure your energy consumption and how do you fulfill

19:56.220 --> 20:01.720
the user autonomy requirements if you're interested in eco-certifying your software.

20:01.720 --> 20:04.900
KDE has been interested in eco-certifying their software.

20:04.900 --> 20:09.520
We are proud to announce that we're the first to have an eco-certified computer program

20:09.520 --> 20:12.520
in the global eco-labeling network with Ocular.

20:12.520 --> 20:17.640
This is from April last year.

20:17.640 --> 20:21.280
There are other initiatives that I just wanted to point out before my time is up that I think

20:21.280 --> 20:22.800
are really important.

20:22.800 --> 20:24.800
This is from the Free Software Foundation Europe.

20:24.800 --> 20:32.880
It's an open letter to demand that the right to repair must include software.

20:32.880 --> 20:35.120
Software determines how long we can use devices.

20:35.120 --> 20:38.880
If we have a right to repair them, we should have the right to put any software we want

20:38.880 --> 20:42.280
on those devices.

20:42.280 --> 20:44.000
You can keep devices in use.

20:44.000 --> 20:46.660
Again, this is the Free Software Foundation Europe initiative.

20:46.660 --> 20:49.540
That's really great upcycling your phone.

20:49.540 --> 20:50.540
Just look into it.

20:50.540 --> 20:52.440
I just wanted to point it out because I think they're doing great things.

20:52.440 --> 20:56.680
If you're interested in as a software developer and measuring software, we set up a lab in

20:56.680 --> 20:58.060
KDAB.

20:58.060 --> 21:03.840
This is Arna who gave a talk earlier today in the online energy dev room.

21:03.840 --> 21:05.400
Chris has helped out, set it up.

21:05.400 --> 21:09.900
Several other people who are involved in the KDE Eco Initiative have helped set this up.

21:09.900 --> 21:15.440
We have a lab that's going to set up so that you can measure the energy consumption with

21:15.440 --> 21:16.920
an external power meter.

21:16.920 --> 21:22.700
We're in progress right now of trying to make an online portal so that you can upload your

21:22.700 --> 21:25.520
use of scenario script, get a report back.

21:25.520 --> 21:30.180
You can either use it for data-driven decisions about your own software design or applying

21:30.180 --> 21:36.520
for something like the Blue Angel Eco label or similar.

21:36.520 --> 21:44.800
I just want to, as a final note, KDE is voted in October to make sustainable software one

21:44.800 --> 21:48.460
of their goals, one of their three goals for the next couple of years.

21:48.460 --> 21:53.340
In KDE, we're trying to align various initiatives within the community, doing things similar

21:53.340 --> 21:59.300
to actually what was talked about earlier, trying to think of ways to give users information

21:59.300 --> 22:03.760
similar to that light bulb that Kai was talking about earlier that gives you an indication

22:03.760 --> 22:08.720
of what's consuming energy and we're thinking of how we can implement those things into

22:08.720 --> 22:14.860
an Eco widget so that users can get information about what maybe the grid intensity, what

22:14.860 --> 22:18.720
the power grid mix looks like at that moment so they can decide if they want to do an update

22:18.720 --> 22:22.680
when there's more green energy, things like this.

22:22.680 --> 22:27.320
Various other initiatives, if you're interested, this is a community project.

22:27.320 --> 22:29.100
You're welcome to get involved.

22:29.100 --> 22:31.040
Various channels to get in touch with us.

22:31.040 --> 22:32.040
Email, Mastodon.

22:32.040 --> 22:37.960
We have a big blue button online meetup every second Wednesday that's next Wednesday.

22:37.960 --> 22:42.400
We should talk about various things and then mailing list in Matrix Room.

22:42.400 --> 22:43.400
Thank you.

22:43.400 --> 22:46.040
I just have to note that this is a project.

22:46.040 --> 22:51.360
I'm working in the Blauer-Angle-For-Fos project, which is a government funded project from

22:51.360 --> 22:54.760
the German government.

22:54.760 --> 22:55.760
Thank you very much.

22:55.760 --> 22:56.760
I look forward to your questions.

22:56.760 --> 23:10.800
Thank you.

23:10.800 --> 23:11.800
Actually I'm going to do one thing.

23:11.800 --> 23:13.760
We have online questions as well.

23:13.760 --> 23:18.320
I feel like online folks always get ignored first.

23:18.320 --> 23:19.640
Is there any online questions that we could...

23:19.640 --> 23:20.640
None so far.

23:20.640 --> 23:21.640
None so far.

23:21.640 --> 23:22.640
Okay.

23:22.640 --> 23:23.960
Then I'm going to bring it to the room.

23:23.960 --> 23:24.960
I saw your hand first.

23:24.960 --> 23:31.960
In fact, if you are in contact with German government, can you vouch that they tell to

23:31.960 --> 23:34.920
the hardware producers to open source their drivers?

23:34.920 --> 23:38.440
I can certainly mention it next time at an event and I have someone's ear, which is not

23:38.440 --> 23:39.440
often.

23:39.440 --> 23:47.200
It's not so hot compared to windows.

23:47.200 --> 23:50.440
The question was... Sorry, I have to repeat it.

23:50.440 --> 23:53.720
Next time I'm in contact with someone from the German government, if they can open source

23:53.720 --> 23:58.000
drivers, they can force hardware vendors to open source drivers.

23:58.000 --> 24:03.960
I would be happy to try to drop that comment if I can.

24:03.960 --> 24:05.760
I saw a hand over here before.

24:05.760 --> 24:06.760
I think it was yours.

24:06.760 --> 24:07.760
Yeah.

24:07.760 --> 24:08.760
Can you tell us maybe more about the new intro?

24:08.760 --> 24:09.760
Since the country is not available, you can't see where you're by your phone.

24:09.760 --> 24:10.760
And the key to the new intro.

24:10.760 --> 24:11.760
How can you start to write software?

24:11.760 --> 24:12.760
Can you go to the software's website and say...

24:12.760 --> 24:32.280
So the question is, what is the Blue Angel?

24:32.280 --> 24:36.720
Where do you find out information about the Blue Angel as a consumer?

24:36.720 --> 24:39.000
The Blue Angel... I'll ask.

24:39.000 --> 24:42.520
I think there probably are some German speakers in this room or people who are in German speaking

24:42.520 --> 24:45.000
countries.

24:45.000 --> 24:48.280
Who here knows the Blue Angel and what do you know it for?

24:48.280 --> 24:49.640
And what is it known for?

24:49.640 --> 24:50.640
Paper.

24:50.640 --> 24:51.640
Paper.

24:51.640 --> 24:52.640
Most people say paper.

24:52.640 --> 24:54.800
So it's really well known for paper products and toilet paper in particular.

24:54.800 --> 24:56.440
And I've started some talks making the joke.

24:56.440 --> 24:59.460
What software and toilet paper have in common?

24:59.460 --> 25:02.040
They can be certified.

25:02.040 --> 25:07.880
So Blue Angel certifies a lot more than that.

25:07.880 --> 25:16.480
There's hundreds of products, cleaning detergents, construction materials, things like this.

25:16.480 --> 25:25.860
In the IT sector, they certify servers or server providers and now software.

25:25.860 --> 25:26.860
And that's it.

25:26.860 --> 25:28.480
They want to extend this... just to put this out.

25:28.480 --> 25:34.560
They want to extend the eco-label to not just desktop software but also mobile apps and

25:34.560 --> 25:41.520
distributed software systems or client server type things.

25:41.520 --> 25:43.120
That's in progress right now.

25:43.120 --> 25:48.000
The desktop software, how you can find out about it is if you go to the Blue Angel website,

25:48.000 --> 25:50.480
there they have a list of all the products.

25:50.480 --> 25:56.040
I don't remember the link off the top of my head but it might be... no.

25:56.040 --> 26:00.720
It's on our website if you're buying a product and it's on the packaging.

26:00.720 --> 26:03.160
So that's the kind of thing that... and what it says.

26:03.160 --> 26:04.880
So it's maybe just an important point.

26:04.880 --> 26:11.560
They're a type one eco-label which means that it looks at the entire lifespan of the product

26:11.560 --> 26:16.360
and it requires a third party evaluation of compliance.

26:16.360 --> 26:21.640
Whereas other eco-labels, not like type two or type three I think are the others, don't

26:21.640 --> 26:24.940
require third party evaluation.

26:24.940 --> 26:29.840
So it has a bit more of a stringent process in the evaluation.

26:29.840 --> 26:40.400
Is there time for more questions or... we have to switch over.

26:40.400 --> 26:44.240
I'm happy to talk in the hallway or in the online or after the event.

26:44.240 --> 27:00.600
So thank you.
