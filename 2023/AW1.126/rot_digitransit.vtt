WEBVTT

00:00.000 --> 00:24.360
So to have enough time for our last routing specialist now from Finland, we would start

00:24.360 --> 00:25.760
on time.

00:25.760 --> 00:26.760
Yes.

00:26.760 --> 00:32.200
Please, no, it's not working because it's for the camera.

00:32.200 --> 00:36.280
I'm screaming because we don't have an audience here.

00:36.280 --> 00:39.120
Yeah, it's not a microphone.

00:39.120 --> 00:44.400
But let's welcome our last speaker from Finland.

00:44.400 --> 00:45.680
It's Gerald Lapallain.

00:45.680 --> 00:48.160
I hope I speak your name well.

00:48.160 --> 00:50.360
And yeah, we are really glad to have you with us.

00:50.360 --> 00:56.320
Introducing Diki Transits to us from Finland, we expect a lot because you are already known

00:56.320 --> 00:58.360
for great mobility solutions.

00:58.360 --> 01:04.240
And yeah, let's give him the chance to explain Diki Transits to us and highlight the really

01:04.240 --> 01:05.640
interesting components.

01:05.640 --> 01:06.640
Thank you, Gerald.

01:06.640 --> 01:26.880
Okay.

01:26.880 --> 01:31.320
Hello.

01:31.320 --> 01:33.800
Hopefully you can hear me well.

01:33.800 --> 01:35.240
My name is Gerald Lapallain.

01:35.240 --> 01:40.880
I'm from Finland, a set, and I work as a developer on the open trip planner and the Diki Transit

01:40.880 --> 01:41.880
projects.

01:41.880 --> 01:45.640
And today I'm here to talk about the Diki Transit project.

01:45.640 --> 01:47.600
So what is Diki Transit?

01:47.600 --> 01:55.080
It's an open source project that does multi-modal public transportation journey planning.

01:55.080 --> 01:59.200
It was founded in Finland around 2014 or 15.

01:59.200 --> 02:04.520
I have personally been working on the project since 2017.

02:04.520 --> 02:10.320
The goal of the project was to replace existing legacy propriety journey planners.

02:10.320 --> 02:17.600
And the project is funded by three transportation authorities or sort of authorities in Finland.

02:17.600 --> 02:22.200
The project has, or the components of the projects have since been used elsewhere, for

02:22.200 --> 02:25.120
example, in Germany.

02:25.120 --> 02:32.240
The project consists of user interfaces, which I'm going to talk more about in this presentation,

02:32.240 --> 02:35.800
Open Packend Services and Open APIs.

02:35.800 --> 02:39.840
So first, a bit about the pack and services.

02:39.840 --> 02:44.640
So for routing and much more, we are using open trip planner.

02:44.640 --> 02:47.000
Hans will have a presentation next about open trip planners.

02:47.000 --> 02:50.560
I'm not going to go too much into it now.

02:50.560 --> 02:56.040
For geocoding, we are using Pelya's that we have further improved.

02:56.040 --> 03:00.440
So it deals with GTFS data and so on.

03:00.440 --> 03:06.600
And for maps, we are using this project called HSL map server, which uses dialogue GL and

03:06.600 --> 03:08.640
OpenStreetMap.

03:08.640 --> 03:13.360
And we also use OpenStreetMap for the geocoding as well.

03:13.360 --> 03:15.440
So now for the user interfaces.

03:15.440 --> 03:20.520
So first, this is the digit transit user interface.

03:20.520 --> 03:25.080
It's written in JavaScript and uses React.

03:25.080 --> 03:27.040
It's responsive.

03:27.040 --> 03:30.200
Most of our users are on mobile devices.

03:30.200 --> 03:40.920
It's browser based and it's also meant to be so you can use it with screen readers and

03:40.920 --> 03:44.520
so on.

03:44.520 --> 03:45.520
It's configurable.

03:45.520 --> 03:47.680
You can have different themes.

03:47.680 --> 03:52.120
My screenshots will be from different sites, so they will have different configurations

03:52.120 --> 03:53.760
and themes.

03:53.760 --> 03:56.600
So this is the front page on desktop.

03:56.600 --> 03:58.960
Here you can start the it in a research.

03:58.960 --> 04:04.040
You can enter origin and destination, which can be like addresses or stops or whatever.

04:04.040 --> 04:08.240
And you can add some favorites or use favorites for locations.

04:08.240 --> 04:11.080
And then you can enter these stops near you pages.

04:11.080 --> 04:14.240
I will display later on what this means.

04:14.240 --> 04:21.360
And then you have this search box for stops and routes and bike rental station and bike

04:21.360 --> 04:23.160
and car parks and so on.

04:23.160 --> 04:28.400
I won't show those views now because the time is a bit limited.

04:28.400 --> 04:31.680
And on the map, if I would have tuned in a bit more, there would have been more.

04:31.680 --> 04:36.560
So now it's just showing some stations.

04:36.560 --> 04:40.920
So these are the itineraries on mobile.

04:40.920 --> 04:47.080
The view on the left, it's showing the summary of the found results.

04:47.080 --> 04:51.560
It's showing multiple itineraries in this view and just like a summary of those.

04:51.560 --> 04:55.560
The length of the legs is based on the duration of the leg.

04:55.560 --> 04:58.480
And that's like we support real time data.

04:58.480 --> 05:02.240
So those three numbers are real time estimates.

05:02.240 --> 05:04.000
And this is more the model.

05:04.000 --> 05:09.200
So in this such instance, there's buses, trains, metros, walking.

05:09.200 --> 05:11.040
There could be bike rental.

05:11.040 --> 05:16.880
And then we have like this model also speed into separate such as this on the top.

05:16.880 --> 05:17.880
There's like cycling.

05:17.880 --> 05:23.560
There could be just walking, combining cycling with public transportation or combining cars

05:23.560 --> 05:26.360
with public transportation.

05:26.360 --> 05:31.080
And on the right, the view is shown when you click open some such as then.

05:31.080 --> 05:33.760
It shows more details about the such as then.

05:33.760 --> 05:35.200
And it shows the map.

05:35.200 --> 05:40.560
If the trip was happening right now, we could display the relevant vehicle on map for the

05:40.560 --> 05:42.760
such as thens.

05:42.760 --> 05:48.360
And yeah, there's more details here.

05:48.360 --> 05:52.560
This view is the stop near you page that I mentioned earlier.

05:52.560 --> 05:58.120
So we did some design and discussed with real users.

05:58.120 --> 06:00.560
And they found this view to be useful.

06:00.560 --> 06:03.560
So we have split this into like different modes.

06:03.560 --> 06:06.520
It shows the next departures for buses in this view.

06:06.520 --> 06:12.200
But there's another view that shows for trains or metro or whatever is available in the city.

06:12.200 --> 06:20.200
And there's also one view that shows the departures for your ferret stops.

06:20.200 --> 06:25.360
And these stops are the stops that are near you or select a location.

06:25.360 --> 06:30.480
And on the map, it will show the vehicles that travel through the stops and also the

06:30.480 --> 06:37.160
bus lines.

06:37.160 --> 06:42.560
So here's an example how this digit transit UI can be integrated into different website.

06:42.560 --> 06:46.600
This is the front page for the Helsinki Regional Transportation Authority.

06:46.600 --> 06:50.960
On the left side, we have the same components we had in the front page from the digit transit

06:50.960 --> 06:52.000
UI.

06:52.000 --> 06:55.400
This is done through shared components.

06:55.400 --> 06:57.740
So this only acts like an entry point.

06:57.740 --> 07:06.040
So once user does select locations here, he or she will be redirected into the digit transit

07:06.040 --> 07:10.860
user interface.

07:10.860 --> 07:14.900
And here's another example how digit transit UI can be integrated.

07:14.900 --> 07:18.760
This is done through an iframe widget.

07:18.760 --> 07:24.320
There's a view which can be used to generate this iframe snippets.

07:24.320 --> 07:29.320
And this is for like general routing, but it's also possible to have only like this

07:29.320 --> 07:31.240
for like walking or cycling.

07:31.240 --> 07:39.040
So the user will be redirected to the correct view.

07:39.040 --> 07:42.640
This is another project, another user interface.

07:42.640 --> 07:47.800
Previously, we called it virtual monitor, but it's now, now there's more called stop

07:47.800 --> 07:50.720
monitor, which kind of describes it better.

07:50.720 --> 07:58.520
So this stop monitor is meant for like businesses or private persons or public transportation

07:58.520 --> 07:59.520
authorities.

07:59.520 --> 08:06.160
So they can have the screen somewhere which displays the departures for the stops near

08:06.160 --> 08:07.760
that location.

08:07.760 --> 08:13.080
So this view is for, I should also mention that this is written with TypeScript and also

08:13.080 --> 08:15.200
used Vect.

08:15.200 --> 08:21.200
This view is for generating this view, the stop monitor view.

08:21.200 --> 08:25.880
In this you can have multiple stops on the same view, and you can have multiple views

08:25.880 --> 08:28.880
that can rotate based on some time frames.

08:28.880 --> 08:33.400
So for every five seconds it will change which view is shown.

08:33.400 --> 08:39.280
And there's many options for layouts here.

08:39.280 --> 08:41.200
Here is just an example entry result.

08:41.200 --> 08:46.640
You can have like this speed view where there's departures on the left and on the right.

08:46.640 --> 08:48.960
This is for airport.

08:48.960 --> 08:53.400
And on the bottom there's relevant alerts for that stop.

08:53.400 --> 08:55.760
And this stop can be modified later on.

08:55.760 --> 08:58.800
So once you have created this, it's not really final.

08:58.800 --> 09:04.520
You can still do modifications.

09:04.520 --> 09:09.040
So what's next in the Digi-Trent project?

09:09.040 --> 09:13.560
We started the project so early on that OpenTree Planner only had version one out.

09:13.560 --> 09:18.000
So we are currently working on improve the support for using OpenTree Planner version

09:18.000 --> 09:19.000
two.

09:19.000 --> 09:22.200
It's already working, but there's some optimizations that can be done.

09:22.200 --> 09:27.880
So the Digi-Trent UI that I showed, it's like version two, and we have version three that

09:27.880 --> 09:31.480
is better optimized for using OpenTree Planner two.

09:31.480 --> 09:36.560
And then we will have a possibility to have a map view on the stop monitor so you can

09:36.560 --> 09:43.520
have display the vehicles that are going to the stop so the user can see, okay, this vehicle

09:43.520 --> 09:44.520
is going here.

09:44.520 --> 09:48.040
Maybe I should start going to the stop.

09:48.040 --> 09:51.880
And then we will improve the support for first and last one services.

09:51.880 --> 09:57.440
So we have already been supporting like bike rental stations and in Germany they have added

09:57.440 --> 10:02.680
support for like scooter rentals, like floating vehicles.

10:02.680 --> 10:07.400
And we will also focus more on like flexible public transportation.

10:07.400 --> 10:12.200
So there's many types of services like that.

10:12.200 --> 10:17.920
And this can include like taxis or stuff like that.

10:17.920 --> 10:23.680
So for more information, you're going to visit digi-trent.fi, which contains some documentation

10:23.680 --> 10:32.000
relevant to the project and the repositories are hosted under this HSL development community

10:32.000 --> 10:33.640
GitHub account.

10:33.640 --> 10:38.480
There's many projects there, some are not Digi-Trent projects, but if you search for

10:38.480 --> 10:41.920
Digi-Trent projects, you will find the relevant ones.

10:41.920 --> 10:49.320
And we have this email address, digi-trent.fi, which if you send message there, I will get

10:49.320 --> 10:51.920
the message.

10:51.920 --> 10:53.600
So thank you, that was the presentation.

10:53.600 --> 10:57.160
Now it's time for questions if you have any.

10:57.160 --> 10:58.160
Yes.

10:58.160 --> 10:59.160
Yes.

10:59.160 --> 11:07.240
For me, it's interesting for your country that I would like to have this kind of information

11:07.240 --> 11:10.240
for Europe, European community first.

11:10.240 --> 11:16.240
And it would be interesting to have the best range to reach a place everywhere in Europe.

11:16.240 --> 11:19.240
And it's not easy for the moment.

11:19.240 --> 11:22.520
You have only national lines.

11:22.520 --> 11:29.760
And so I remember it was 20 years ago when it was SIPRA with regional trains in Germany,

11:29.760 --> 11:33.320
but there was low and high problem with that.

11:33.320 --> 11:41.400
Also I know also to go from Brussels to Firebook in Bridesville in Germany, it was SIPRA by

11:41.400 --> 11:44.480
the train in Germany and so on.

11:44.480 --> 11:50.400
So all this kind of information and you plan to have to extend your project to the European

11:50.400 --> 11:52.520
planet?

11:52.520 --> 11:57.840
So we might expand it to include Estonia for this Finnish project.

11:57.840 --> 12:03.480
There's still some issues with scaling this because if you're using multi-criteria search,

12:03.480 --> 12:09.200
it doesn't scale to this continental scale yet on the machines we are running on.

12:09.200 --> 12:15.200
So there's some optimizations needed to get it work.

12:15.200 --> 12:16.200
Yep.

12:16.200 --> 12:26.200
Are you working on integrating ticketing so you can also buy in your app, the ticket and

12:26.200 --> 12:29.200
APIs on discovering the ticket price?

12:29.200 --> 12:33.680
This might be included in the first and last mile services.

12:33.680 --> 12:35.480
I'm not quite sure on the details yet.

12:35.480 --> 12:40.480
We are still on the design phase on what we will support, but that is an idea that we

12:40.480 --> 12:42.480
have discussed previously.

12:42.480 --> 12:43.480
Yeah.

12:43.480 --> 12:44.480
Okay.

12:44.480 --> 12:45.480
Thank you, Jay.

12:45.480 --> 13:07.960
Thank you.
