WEBVTT

00:00.000 --> 00:11.840
Hello, everyone. Hello, hello, hello. It looks like it is time for me to begin. So if you

00:11.840 --> 00:17.780
are here for this topic, you know, you're in the right place. That's awesome. Who am

00:17.780 --> 00:24.500
I? I am Matt Yakovitz. I am the head of open source strategy at SCARF or the HOSS for short.

00:24.500 --> 00:29.920
You may have heard me or seen talks from me before. Multiple ways to connect with me.

00:29.920 --> 00:33.920
I will podcast different things that I do. If you don't know what SCARF does, what we

00:33.920 --> 00:40.360
do is we help projects and maintainers grow their open source adoption, help track it,

00:40.360 --> 00:45.840
help analyze it, help you understand who is downloading and using your open source software.

00:45.840 --> 00:53.000
We also do a hacking open source business podcast. And so that is up to 14 episodes,

00:53.000 --> 00:59.040
I think, are recorded now. So if you're interested in understanding from others on what is working

00:59.040 --> 01:04.520
in the open source business space, okay, seems like I need to hold it a little closer, then

01:04.520 --> 01:09.840
that would be a good place to check out. We're also launching a new website that has all

01:09.840 --> 01:15.320
of the information from these slides as well as a whole bunch of other details on how to

01:15.320 --> 01:20.640
measure your open source businesses. And we have it under open source metrics.org. If you're

01:20.640 --> 01:26.360
interested, there's links to the podcast and various things on running an open source business

01:26.360 --> 01:33.800
and measuring it. So how many people here know open source is different? Right? Unlike

01:33.800 --> 01:37.800
other businesses, obviously you are competing with free, which changes the mindset quite

01:37.800 --> 01:42.840
a bit. Let me give you an example. It's a very easy example and people will pick it

01:42.840 --> 01:48.160
apart, but let me just, you know, get through it real quick. If you're selling a car nowadays,

01:48.160 --> 01:52.480
if you're a car manufacturer, you have the ability to set your price for the car. People

01:52.480 --> 01:57.360
can walk away from the car. If they don't buy a car or a vehicle, then they would have

01:57.360 --> 02:03.360
to choose some other alternative modes of transportation. If you use a car that's in

02:03.360 --> 02:08.360
the open source space, you can still set the price for the car, but you don't actually

02:08.360 --> 02:11.360
have to pay for it. So someone can come get the car for free, drive it around and do whatever

02:11.360 --> 02:17.360
they want with it. So consumers can choose to buy your car or someone else. And that

02:17.360 --> 02:21.880
boggles the mind of many traditional business folks because it's giving something away for

02:21.880 --> 02:30.520
free. And one of the key things that people misunderstand about open source is it's great

02:30.520 --> 02:34.840
if it's free and people can use it, but in order for people not to choose the free version

02:34.840 --> 02:40.320
and pay for something that's in the commercial space, it has to give you more value than

02:40.320 --> 02:43.720
what you're going to get in that free space. You have to figure out some way to connect

02:43.720 --> 02:50.400
with those folks and you have to make sure that they are finding value in what you have.

02:50.400 --> 02:53.640
Now some of you, and I'm interested to know, how many people are more in the tech space

02:53.640 --> 02:57.920
in here? Can you raise your right hands? Okay, how many people on the business space raise

02:57.920 --> 03:03.840
your left foot? Okay, so few. Well, so many in the tech space consider this type of a

03:03.840 --> 03:07.280
talk when we talk about revenue and money evil. So I'm going to go ahead and put on

03:07.280 --> 03:13.800
my other hat, which is my super evil villain hat, you know, for this talk. And that doesn't

03:13.800 --> 03:19.020
necessarily mean that this is wrong or that it is super evil or villainous, but it's hard

03:19.020 --> 03:23.080
for tech folks, especially founders, to talk about revenue and money. This is outside of

03:23.080 --> 03:27.800
the wheelhouse, right? From a technical standpoint, when we talk about growing, you know, your

03:27.800 --> 03:33.200
business, that's not something that is naturally inherent. So people seek out different advisors,

03:33.200 --> 03:37.120
they look for who's done it before, what sort of things have worked, and then they try to

03:37.120 --> 03:42.740
repeat that process. So I want to start by giving some baselines. There's a lot of common

03:42.740 --> 03:47.600
open source business models out there. There's several, but I'm going to talk about the three

03:47.600 --> 03:52.480
primary ones. And that's open core, a SaaS model, or as a service model, it could be

03:52.480 --> 03:59.880
infrastructure, platform as a service, just consider all those the same, or services themselves.

03:59.880 --> 04:04.320
Now from an open core perspective, okay, and excuse all the graphics in this, I'm not a

04:04.320 --> 04:10.520
graphics designer, so, you know, they're a little hokey, but open core. How many people

04:10.520 --> 04:16.240
have heard of open core before? Oh, the vast majority, but not everyone. Okay. So open

04:16.240 --> 04:20.680
core is when you have an open source version of your project that's freely available for

04:20.680 --> 04:24.280
everyone, but then you have an enterprise version. The enterprise version reserves some

04:24.280 --> 04:29.160
set of features, and then if someone wants those features, typically more enterprise

04:29.160 --> 04:34.320
features like maybe higher security integration with partner products, things like that, then

04:34.320 --> 04:38.720
people will then have the ability to purchase that from you, and then they'll pay a regular

04:38.720 --> 04:44.020
ongoing fee. A lot of companies have dual licenses in this case, so their open source

04:44.020 --> 04:50.600
is, you know, let's say GPL, and then there's some enterprise license for their, you know,

04:50.600 --> 04:56.880
enterprise version. Okay. Now this is dwindling a little bit in popularity as the cloud has

04:56.880 --> 05:03.040
taken over much of the tech industry, and that's where a lot of new businesses, especially

05:03.040 --> 05:08.060
in the open source space, are looking, and that's in this SaaS or this cloud model. Okay.

05:08.060 --> 05:12.160
You can download the software, but if you really want to run it, then, you know, you

05:12.160 --> 05:18.360
should use our SaaS thing. We'll make it easier. This provides a higher level of quote-unquote

05:18.360 --> 05:25.880
stickiness. Now, if you are a manager, director, executive at a company that has, you know,

05:25.880 --> 05:30.320
venture funding or that you're, you know, has executives who are, you know, kind of

05:30.320 --> 05:34.680
been in the industry for a while, I guarantee that they have had at least ten conversations

05:34.680 --> 05:40.700
about stickiness in open source in a calendar year, and what stickiness is, is the ability

05:40.700 --> 05:45.260
for someone to start to use your open source software and then continue to use it. So how

05:45.260 --> 05:51.680
do we make it sticky? How do we retain them? In many companies, this is a model that provides

05:51.680 --> 05:56.320
a higher level of stickiness, because once you get into a cloud service, it's often really,

05:56.320 --> 06:00.520
really difficult to migrate away, because you're relying on that cloud service to be

06:00.520 --> 06:06.040
your sys admins, your DBAs, your, you know, DevOps folks. They're handling all those functions,

06:06.040 --> 06:10.200
and so to replace that, you either have to go to another cloud service or you need to

06:10.200 --> 06:14.880
find someone who can do those functions for you, and that's often a really difficult prospect

06:14.880 --> 06:22.240
to do. But there are some issues with this model. This model is disruptible, because

06:22.240 --> 06:27.400
other people can run that exact same as a service. What we've been seeing in the space

06:27.400 --> 06:32.680
of the SAS lately is a lot of open source companies have changed their licenses to prevent

06:32.680 --> 06:38.080
that, and they've gone from open to not open. So you might have heard of SSPL, you might

06:38.080 --> 06:45.200
have heard of the BSL, other things. These licenses are kind of sort of open, but that

06:45.200 --> 06:50.040
means that, you know, as you get into the cloud space, you're restricted from competing

06:50.040 --> 06:55.320
with them, so it's more of a preservation of their revenue stream, if you will.

06:55.320 --> 07:01.440
And then there's the services model, which is really the original kind of OG, the old,

07:01.440 --> 07:06.520
you know, model for open source software, and that model is definitely something that

07:06.520 --> 07:13.880
we have seen be very popular and very successful in a lot of different companies. This is a

07:13.880 --> 07:19.560
viable pathway for a lot of companies to start. It's an easier pathway to revenue, but it

07:19.560 --> 07:24.800
is hard to grow beyond a certain limit. So, you know, you might be able to get a handful

07:24.800 --> 07:31.200
of customers working with you from a support perspective, from a consulting perspective,

07:31.200 --> 07:35.160
but you're really bound on the number of people, because you have to have people to deliver

07:35.160 --> 07:38.720
those services, and if you don't have people to deliver those services, that becomes quite

07:38.720 --> 07:40.720
an issue.

07:40.720 --> 07:45.200
And if you compare the three models, you know, you can compare them. You've got that open

07:45.200 --> 07:49.400
core, which is a proven model, but it is getting disrupted and eroded by the cloud a little

07:49.400 --> 07:55.800
bit. And, you know, there's still some success in that space, because a lot of companies,

07:55.800 --> 07:59.840
especially when you listen to some of the sovereign cloud, the cloud native, they're

07:59.840 --> 08:04.020
looking at enterprise versions or open core versions, they want to run their operators.

08:04.020 --> 08:09.120
They want to build their own private clouds. So, there is still some play in that space.

08:09.120 --> 08:14.700
X as a service or software as a service, you know, that is still a very popular model.

08:14.700 --> 08:19.760
But the question is, if you are releasing features that are only available in a SaaS

08:19.760 --> 08:26.040
version and only a minimal open source version, is SaaS, the SaaS model, is it still open

08:26.040 --> 08:31.280
source? Or is it not? And that's a question that we really haven't answered yet, especially

08:31.280 --> 08:37.200
as companies start to reserve features and software specifically just for their SaaS

08:37.200 --> 08:40.960
customers. And then there's the service model, which is definitely the easiest to get started

08:40.960 --> 08:46.360
if you're a small company. It, you know, has the most likelihood that you'll get some revenue

08:46.360 --> 08:51.360
in the door really quickly without a huge buy in cost.

08:51.360 --> 08:58.400
Now part of this model, okay, if you, whether you choose, whichever model you choose is

08:58.400 --> 09:05.920
how do you get people to move from being open source users to actually paying customers?

09:05.920 --> 09:15.240
Okay. And, you know, this is probably the most stressful thing an open source maintainer,

09:15.240 --> 09:22.000
founder, someone in the open source space has. Because ultimately, you're looking at

09:22.000 --> 09:27.240
this open source adoption and let's say you're tracking 100 million downloads, but nobody

09:27.240 --> 09:32.120
wants to pay for anything. That's actually a use case that happens quite a bit. How do

09:32.120 --> 09:36.520
you, how do you, how do you figure that out? How do you, how do you turn that 100 million

09:36.520 --> 09:42.880
downloads? How do you turn that, you know, 5,000 people who are tweeting about you into

09:42.880 --> 09:47.200
something that is actually commercially viable?

09:47.200 --> 09:52.440
And when we go look at the classic sort of marketing funnel, and anybody here in marketing,

09:52.440 --> 09:57.520
I'm just curious. No one, well, one person, two people want to admit it. Hey, three people.

09:57.520 --> 10:03.000
Okay. Oh, look at that. All right. So you might be familiar with this if you are in

10:03.000 --> 10:06.840
marketing, right? So this is just this very simple marketing funnel where you've got,

10:06.840 --> 10:11.640
you know, people who are hitting your website and they turn into a contact or a lead, if

10:11.640 --> 10:17.200
you will, where they become a known user and then they turn into a marketing qualified

10:17.200 --> 10:20.460
lead after they do a certain number of things. So let's say you're there on your website,

10:20.460 --> 10:24.040
sign up for a webinar, maybe they downloaded your software, maybe they did a few other

10:24.040 --> 10:27.440
things. They get a certain number of points and when they reach the point value, then

10:27.440 --> 10:32.600
all of a sudden it's like, woo hoo, you are now qualified. So then sales can talk to you.

10:32.600 --> 10:37.080
And then you have a, you know, sales accepted lead. So sales goes, ooh, that looks pretty

10:37.080 --> 10:41.520
good. And then you have a sales qualified lead when they start to say, hmm, I think

10:41.520 --> 10:45.840
I could sell something. All right. This is the classic marketing funnel, but it doesn't

10:45.840 --> 10:53.960
work in an open source space. There is a similar way to think about this, okay? Because the

10:53.960 --> 10:59.700
open source model kind of flips this on its head. There is this model where we've got

10:59.700 --> 11:05.040
the interest phase, which is the people who are discovering what your product can do,

11:05.040 --> 11:11.320
how it can behave, what it can do differently. And you want them to actually try your software,

11:11.320 --> 11:17.520
okay? You want them to install your software or use your containers or use your library

11:17.520 --> 11:23.960
in, you know, their product. And only a subset of those who are actually interested, a subset

11:23.960 --> 11:28.880
of those who will visit your project's webpage, visit your webpages, visit your assets, they're

11:28.880 --> 11:36.680
all, only that small subset is going to actually try. And of those who try, only a subset will

11:36.680 --> 11:44.040
continue to use it in production. And then only a subset will become a customer. So that

11:44.040 --> 11:51.400
model is very important because as we look at this phase, you've got to realize that

11:51.400 --> 11:56.620
if you have a million people on your website and you have 100,000 downloads, that's great.

11:56.620 --> 12:00.680
But there might only be 10,000 who use it in production and that might only have like

12:00.680 --> 12:05.080
a thousand people who would be willing to pay for it. Now, some of you who are familiar

12:05.080 --> 12:09.280
with the product space might say, well, we don't follow the funnel, we follow the, you

12:09.280 --> 12:14.280
know, product flywheel, the product growth flywheel. So anybody familiar with the product

12:14.280 --> 12:21.240
growth flywheel? All right, one. Okay. So the idea is, it's funny because they actually

12:21.240 --> 12:25.920
stole a lot of this from the open source movement. When you look at the product flywheel, and

12:25.920 --> 12:29.480
this is all the hotness in all the product companies, right? So when we're talking about

12:29.480 --> 12:35.400
a product led company, a product, you know, product led growth, what they're talking about is people

12:35.400 --> 12:40.600
start off in this center, this core, and it's like, oh, how do we track and engage with

12:40.600 --> 12:45.240
people? How do we delight them? How do we make them really excited about things? Okay.

12:45.240 --> 12:48.880
And then we can take those strangers, turn them into prospects, which then turns them

12:48.880 --> 12:54.480
into customers, which then turns them into fans. And then they will start to become the

12:54.480 --> 12:59.480
people who will preach to the other people to tell other people how awesome our software

12:59.480 --> 13:04.840
is and get them into the community. There's an open source version of this. And again,

13:04.840 --> 13:10.720
excuse my crappy little, you know, diagrams here. If someone wants to contribute these

13:10.720 --> 13:17.720
better versions, that's awesome. But the idea here is it's very similar, similar phases.

13:17.720 --> 13:23.120
But if you look at the differences, the differences are we have a download and try, we have that

13:23.120 --> 13:27.920
build and deploy into production. And then we have, oh, they're running it into prod.

13:27.920 --> 13:31.640
And then it kind of goes into, hey, do I need something more? That's when I'd be willing

13:31.640 --> 13:37.480
to pay. And then you'll evaluate a paid option and become that paying customer. It's a very

13:37.480 --> 13:41.960
similar cycle. Both are the same, but there's a few differences. I like to clarify this

13:41.960 --> 13:45.080
a little bit more in the open source space because it makes sense. Because really what

13:45.080 --> 13:49.480
you're talking about here is someone who's trying your open source software, they're

13:49.480 --> 13:53.520
getting used to it. They're like, wow, this is pretty cool. But if it only did this next

13:53.520 --> 13:57.360
thing, and then you're like, oh, well, I have that. It's in the enterprise version. Right?

13:57.360 --> 14:04.240
If it only did, you know, you know, integration with this other product. And so that's where,

14:04.240 --> 14:10.360
oh, I need something more. And then you get them to evaluate it. And that becomes a way

14:10.360 --> 14:18.880
to build external evangelists. So there's also this idea of evangelism or evangelists.

14:18.880 --> 14:23.960
A way to foster people who are in your community, who become fans of your product, who then

14:23.960 --> 14:29.960
actually go out and contribute to that flywheel. Right? So the goal here is you want someone

14:29.960 --> 14:36.000
who can start off telling people, wow, I was really successful with this application. And

14:36.000 --> 14:40.280
then they'll tell their followers and people who like them and people who are like-minded.

14:40.280 --> 14:44.800
And then those people will watch that content. And then those people will go ahead and try

14:44.800 --> 14:51.400
it. And it's similar when you add dev rel, evangelism, this is all part of that product

14:51.400 --> 14:56.600
flywheel, where you want more people to understand it and then eventually try it. And then eventually

14:56.600 --> 15:01.840
you want those people to create or help foster new people into the community where there

15:01.840 --> 15:07.520
are new evangelists who can go out there and talk about your product.

15:07.520 --> 15:13.460
So let's talk specifically about driving open source adoption. Okay? And there's only three

15:13.460 --> 15:17.080
things you need to do. Yeah, I'm going to sound like one of those shill salesmen on

15:17.080 --> 15:21.520
the late night TV commercials where it's like, you know, these three things, if you buy into

15:21.520 --> 15:27.040
my system, you'll be awesome. This will be the best thing ever for you. And so there's

15:27.040 --> 15:32.040
actually three requirements that we'll dig into a little bit as much as we can in the

15:32.040 --> 15:38.600
time remaining for driving open source adoption and growing your open source adoption. And

15:38.600 --> 15:44.680
those secrets to the success are a kiss-ass product. Okay? It all starts with the product.

15:44.680 --> 15:49.160
If you don't have a product that people want, it doesn't matter what else you do. They're

15:49.160 --> 15:53.640
not going to, you know, listen to you. They're not going to try it out. It needs to be rock

15:53.640 --> 16:01.080
solid. We need people to know who you are. Okay? A lot of open source projects that are

16:01.080 --> 16:06.240
out there have awesome technology behind them, but nobody knows who they are. Has anybody

16:06.240 --> 16:10.040
run into a product like, and said, like, how did I not know about that like three years

16:10.040 --> 16:16.920
ago? Right? That happens. And why is that? Because, however, you know, whoever's running

16:16.920 --> 16:22.320
these projects, they're not really sure how to bring awareness to everyone else. And then

16:22.320 --> 16:29.320
you need to make it easier than all the alternatives out there in the space. Okay? Obvious, right?

16:29.320 --> 16:34.080
All these are obvious. It's not like it's like anything that's just crazy. All these

16:34.080 --> 16:42.960
should be obvious and easy as well. Now, I can't go into a deep dive for all of these,

16:42.960 --> 16:48.400
but briefly I want to touch on each one, and we'll go through each one separately. So how

16:48.400 --> 16:54.320
do you build a kick-ass open source project? Now, I can tell you, like, you know, all the

16:54.320 --> 16:58.560
technical jargon, but I'm going to stick with from a business perspective what this looks

16:58.560 --> 17:03.280
like. First, I want to talk about the biggest mistake we all make when we're building a

17:03.280 --> 17:09.080
project. At a certain point, we have to realize that, you know, when we are building a project,

17:09.080 --> 17:14.880
we're often starting it, building it for what we want. And that works for maybe, like, a

17:14.880 --> 17:18.360
little bit of time. And you might even make a successful company, but you're going to

17:18.360 --> 17:22.720
limit your growth if you are building for people who you think are the exact same people

17:22.720 --> 17:29.840
as you. Right? It's that, oh, I assume everyone is like me. I know people who follow this,

17:29.840 --> 17:33.280
and they're like, well, I assume that everyone is going to install on the command line. I

17:33.280 --> 17:38.960
assume everyone will install from source. And so that's just the way that they think.

17:38.960 --> 17:42.600
That's not necessarily how everyone else in the community thinks. So make sure that you

17:42.600 --> 17:50.600
avoid that. And that's why the first key, in my opinion, is understanding. Right? Understand

17:50.600 --> 17:56.600
the product and its value. Right? What can your product do better than anyone else? Okay?

17:56.600 --> 17:59.320
Are people willing to even pay for that? You should ask yourself that question. Can you

17:59.320 --> 18:04.640
answer that question? What do you do over the alternative? Right? So is there an alternative

18:04.640 --> 18:09.680
to this? Is there some other piece of software, something else that other people are doing?

18:09.680 --> 18:14.200
What do you consider success? Now, this one is really interesting. I've talked to a lot

18:14.200 --> 18:18.240
of founders. I've talked to a lot of CEOs, executives. And, you know, they'll talk to

18:18.240 --> 18:22.440
me about, oh, we want to accelerate our growth, our adoption. And I'll say, well, what's your

18:22.440 --> 18:26.880
goal? And they'll be like, well, we want to, you know, sell the company, or we want 10X

18:26.880 --> 18:30.360
valuation, or we want, like, you know, fill in the blank. It's like, no, no, no. What

18:30.360 --> 18:35.920
do you really want? What do you want in the next year? What do you really, really want?

18:35.920 --> 18:39.720
And a lot of times it's like, oh, well, really what we want is people to sign up for our

18:39.720 --> 18:43.260
new beta. I've actually had that conversation where it's like, we just want like a thousand

18:43.260 --> 18:48.680
people to try it and then give us feedback. Well, it's a very different sort of product

18:48.680 --> 18:52.480
that you're building and sort of, and also marketing activities or community activities

18:52.480 --> 18:57.600
that you're doing. And so that's something to consider. Who's going to use it? Are you

18:57.600 --> 19:02.920
building this for, you know, devs? Are you building this for business folks? Who's the

19:02.920 --> 19:08.620
end user? Who's going to benefit from this the most? And who would pay for that product

19:08.620 --> 19:16.680
if they're in that space? And where are those users most likely to be? You know, are these

19:16.680 --> 19:21.480
users going to be at Fostem? Are they going to be at like, you know, open source summit?

19:21.480 --> 19:26.720
Are they going to be at KubeCon? I mean, like, where will you see these people pop up? And

19:26.720 --> 19:30.400
how do you ensure that you know where they are and what sort of things that they like

19:30.400 --> 19:35.360
and what sort of things that they need? And so you want to understand that really early

19:35.360 --> 19:41.520
on, even if you're not trying to monetize or commercialize the open source yet, you

19:41.520 --> 19:45.200
know, you want to keep that in the back of your mind and start to funnel things in that

19:45.200 --> 19:50.640
right direction. Now, the next key is to listen and ask questions.

19:50.640 --> 19:54.760
Now remember I said a big mistake people make is the founder builds the software specifically

19:54.760 --> 20:00.600
for themselves and they don't necessarily take into account other people in the ecosystem.

20:00.600 --> 20:06.920
And this is where product success is really determined based on your users and your potential

20:06.920 --> 20:11.240
users and listening to their needs. If you're not listening to their needs, you're going

20:11.240 --> 20:16.780
to be missing out on a lot of opportunity for growth. And that's where that mistake

20:16.780 --> 20:22.280
comes in. So avoid that if you can. The other one is you have to set a goal and

20:22.280 --> 20:28.000
focus on it. Be really good at a few things, not really okay at a lot of things because

20:28.000 --> 20:30.960
there's a lot of other software you might be competing with. There's a lot of other

20:30.960 --> 20:37.240
people who are potentially solving the same issues. And it's really easy to get distracted

20:37.240 --> 20:42.120
by shiny object syndrome. Anybody get distracted by shiny object syndrome? I'm like that all

20:42.120 --> 20:47.400
the time. Yeah, I see hands waving all the time. And that is so easy to do. In fact,

20:47.400 --> 20:52.560
I was just talking with Avi our CEO over here and we're talking about tracking webpage stuff

20:52.560 --> 20:56.160
and I'm like oh we can do that in our product. But we're like wait a minute, that's not our

20:56.160 --> 21:02.040
core product. Why would we go down that hole? But people do that a lot and when you do that

21:02.040 --> 21:06.080
it might be cool and you might learn that there's a new subset and there might be a

21:06.080 --> 21:12.320
time for expanding your product but until your core product has that established base

21:12.320 --> 21:20.720
you don't want to do that. So don't deviate too often. Stick to that original purpose.

21:20.720 --> 21:26.400
And if you do that you will eventually find that you become better known in the market.

21:26.400 --> 21:30.620
People are willing to talk about you, use you and then share additional contributions

21:30.620 --> 21:37.440
to maybe make your project a little better. Okay, this one's a big one. All right. Has

21:37.440 --> 21:43.480
to meet or exceed expectations. Now this totally seems obvious, right? But let's assume that

21:43.480 --> 21:48.200
I build a cell phone and my cell phone has the awesomest speakers, the awesomest music

21:48.200 --> 21:54.380
system and it is the best gaming platform ever but it can't take calls. Is it still

21:54.380 --> 22:00.120
a cell phone? If I market it as a cell phone, if I sell it as a cell phone, if I say oh

22:00.120 --> 22:05.920
this is my cell phone, it doesn't matter. It's not. So if I'm trying to build a cell

22:05.920 --> 22:10.880
phone but it is great at just music and gaming but it can't take a call I have not met the

22:10.880 --> 22:16.800
expectations of that. And that's where you need to figure out what are the table stakes

22:16.800 --> 22:24.120
for your project. What are the key ingredients? Whatever those are that's where you have to

22:24.120 --> 22:30.080
focus. And that means do the job that it was originally intended to do and meet some

22:30.080 --> 22:35.600
minimum standards. And there are minimum standards that we all have from an open source perspective.

22:35.600 --> 22:41.160
Okay. What are some of those minimum standards? Hey, you know what? It has to be secure, right?

22:41.160 --> 22:45.640
Like who wants an insecure piece of software nowadays? Well, we have too many of them.

22:45.640 --> 22:51.280
Let's not add any more. But it has to protect from data loss. I don't want leaky data. You

22:51.280 --> 22:55.760
know how much you know how many times my personal data's been leaked? My daughter's going to

22:55.760 --> 23:00.760
inherit free credit monitoring for the rest of her life because I've had so many data

23:00.760 --> 23:04.720
leaks. I mean, I think there's several Matt Yackovits running around right now. Maybe

23:04.720 --> 23:10.800
even at this conference. So, you know, it also has to be as bug free as possible. Now,

23:10.800 --> 23:16.520
while we strive, I'll strive for bug free software. We know it's not a viable thing.

23:16.520 --> 23:20.960
But shipping with known critical bugs is bad. And I know some companies who do it just to

23:20.960 --> 23:27.960
meet deadlines. It's not good. Next up is UI UX. Any UI UX guys? There are people on

23:30.520 --> 23:37.520
here. A few? Okay. Awesome. Oh, yes. Many, many. All right. Well, so it's like this.

23:37.840 --> 23:44.840
If your product is designed like this elevator, that's really confusing. Isn't it? I mean,

23:45.560 --> 23:50.840
UI UX is probably one of the most important things to get right. The user experience can

23:50.840 --> 23:57.480
ruin an awesome technical project. You can have the best technology out there, and if

23:57.480 --> 24:04.480
the user interface sucks, people won't use it. Or they'll use it once, which is even

24:04.480 --> 24:11.480
worse. So a bad user experience can ruin any benefits that you provide. GitHub is littered

24:12.680 --> 24:18.780
with projects like this, by the way. So of the millions and millions of projects that

24:18.780 --> 24:25.780
are out there, many of them fall victim to this, even if they are really solid. And if

24:25.840 --> 24:32.520
you want to grow your community and grow adoption, easy. Remember, easy was my point number three.

24:32.520 --> 24:37.720
You know, you need users who can be advanced if they want to and get into the weeds, but

24:37.720 --> 24:42.680
most of the users won't. And again, that gets back to that assumption that we build things

24:42.680 --> 24:48.200
for ourselves. A lot of CTOs, a lot of cofounders, a lot of people in this space, what they think

24:48.200 --> 24:52.720
is I'm super technical, and they are. They're building a company. Those out there in the

24:52.720 --> 24:57.640
space where founders, you know, at that executive level, maybe they're maintainers or projects,

24:57.640 --> 25:03.640
you are all brilliant. And that means that your brilliance probably exceeds your average

25:03.640 --> 25:10.640
users brilliance. That's okay. But keep that in mind. So make it easy for folks. And my

25:11.720 --> 25:16.800
product key number six is community. Open source projects need community. And we need

25:16.800 --> 25:22.960
to bake that in to the beginning. Okay. And that means including plans for fostering that

25:22.960 --> 25:29.640
strong community up front. Now, I brought this up. I was previewing my slides and someone,

25:29.640 --> 25:34.760
you know, said, wait a minute. What about curl? Does curl really have a strong community

25:34.760 --> 25:40.080
of contributors? Right? And this is what I say is we have to look beyond code. This isn't

25:40.080 --> 25:44.640
just about code. You want people who will use your product. And if you search for curl,

25:44.640 --> 25:50.320
for instance, you know, your favorite search engine, you're going to find thousands of

25:50.320 --> 25:56.280
examples of how to use curl. Right? You will. You can do it right now if you want. Tutorials,

25:56.280 --> 26:02.020
examples, cool things, hacks, whatever. That's community even if it's not code contributions.

26:02.020 --> 26:08.440
And that's what you need to continue that product growth. All right. Moving on. Now

26:08.440 --> 26:15.040
we're talking about how do we super charge the awareness? All righty. So let's talk specifically

26:15.040 --> 26:21.960
about community. Anybody here in the community space? Oh, a few people. Oh, yeah. Okay. Great.

26:21.960 --> 26:28.600
So this is the great hope for adoption in open source companies. In fact, a lot of people

26:28.600 --> 26:34.200
will prioritize a dev rel hire over any of the business hires because they want to start

26:34.200 --> 26:41.600
to connect directly with that community. Okay. And it's this is a balance, but the community

26:41.600 --> 26:48.280
can really help accelerate and drive that awareness if done right. But here's the thing.

26:48.280 --> 26:53.560
Okay. Community is starting to turn into the new marketing. For the last five years, the

26:53.560 --> 26:58.440
last ten years, marketing has often been in control of community. Community has been a

26:58.440 --> 27:04.920
subset of marketing, sometimes a subset of product. But ultimately, this shift in mindset

27:04.920 --> 27:11.560
where the community is so important and it's driving so many conversations, it's supplanting

27:11.560 --> 27:16.400
marketing. And there are reasons that you still need marketing. But in the future, I

27:16.400 --> 27:21.800
think that what we'll see is the community team has marketing as a function, not community

27:21.800 --> 27:27.200
as a function of marketing, which is a different way to think of it. And that's a real mind

27:27.200 --> 27:31.920
shift for a lot of people in the business space. But if we do approach this from a community

27:31.920 --> 27:38.560
first approach, we can accelerate and grow the open source space even faster. And that

27:38.560 --> 27:43.320
gets back to this expectation, right? So when we talk about that expectation, I mentioned

27:43.320 --> 27:48.520
earlier that funnel, the flywheel, you know, when we're talking about, hey, can we have

27:48.520 --> 27:53.620
people in the community who talk about us and then turn into followers of us who then

27:53.620 --> 27:58.360
continue to watch our things and then who continue to try and use our software in different

27:58.360 --> 28:04.120
ways. That's the ultimate outcome that we want. And when we talk about this community

28:04.120 --> 28:08.800
team, there's multiple functions in it. This is a chart that I've used several times before,

28:08.800 --> 28:13.240
but, you know, we're talking about dev rel or evangelism, we're talking about community

28:13.240 --> 28:17.480
management, we're talking about these Ospo roles with contributors. All of these things

28:17.480 --> 28:23.480
are part of a strong community team. All of them need to be satisfied. Now, a lot of us

28:23.480 --> 28:28.640
will focus only on evangelism and then they won't do the other functions. Or they'll focus

28:28.640 --> 28:33.240
only on the contributors and not do the other functions. And so all three of these are needed

28:33.240 --> 28:41.200
for a healthy, healthy ecosystem. Now, what are some popular ways to grow open source

28:41.200 --> 28:47.880
adoption? Okay. These are probably obvious for anybody who's been in the open source

28:47.880 --> 28:53.520
space for a while or been in the community, but they're classic, right? Content, number

28:53.520 --> 28:57.880
one, right? Content. Everybody loves content. The more relevant content that you have, the

28:57.880 --> 29:03.000
more code examples that you can share, the more conference talks that are relevant to

29:03.000 --> 29:09.000
people, the more blogs you write, you know, those will make a difference. Tutorial sample

29:09.000 --> 29:12.880
applications and whatnot. All of these things are things that are important to those in

29:12.880 --> 29:18.000
the community. There's other activities you can do, especially when your product solves

29:18.000 --> 29:24.080
something that's newsworthy. Has anybody heard of the term newsjacking? No? Okay. A couple

29:24.080 --> 29:28.480
people. It's the idea that, you know, if there's something in the news cycle like, you know,

29:28.480 --> 29:33.680
oh, the latest hack and, you know, or whatever, if there's an opportunity for you to maybe

29:33.680 --> 29:39.840
talk to people about how to build better products. If your product or your company does something

29:39.840 --> 29:45.880
differently that solves these other issues, this is a way for you to use the stories that

29:45.880 --> 29:50.880
are already out there to reach additional people. You know, if somebody's hacked or

29:50.880 --> 29:54.600
some cloud provider goes down, well, this is how we would prevent that, you know, or

29:54.600 --> 29:59.280
here's how our software did this differently. Those types of things actually can have a

29:59.280 --> 30:06.680
really far wide reach because those are things that are on top of people's minds. Now, you

30:06.680 --> 30:12.480
also need to generate friends telling friends, right? So that peer to peer connection, if

30:12.480 --> 30:18.160
you will, of people who are willing to share their experiences and share the different,

30:18.160 --> 30:24.120
you know, goodness of your software. And that goes hand in hand with some other things like

30:24.120 --> 30:33.160
good messaging and products and making it easier to start. Now, how do we make this

30:33.160 --> 30:42.240
easier? That's key. The first one is it requires a lot of collaboration. It's a choreographed

30:42.240 --> 30:50.040
dance. Okay? So making this easier is you have to have not only easier products to use,

30:50.040 --> 30:55.920
you not only need a great user experience, you also need to make sure that you have enough

30:55.920 --> 31:02.160
information, enough tutorials, enough example code, enough out there in the community activity

31:02.160 --> 31:07.760
to merge those together because you have to have good product as well as strong community

31:07.760 --> 31:16.000
as long as strong content, good documentation to make this work. And so that easy is important,

31:16.000 --> 31:20.520
but it goes beyond just one team's function. You know, and some of those key things or

31:20.520 --> 31:25.440
some of those things that I see people sometimes stumble with or sometimes fall down on are

31:25.440 --> 31:32.400
things like installation. You know, so how easy it is to install and get started. Same

31:32.400 --> 31:37.120
defaults. How many people have installed software and it's like how did you not set that up?

31:37.120 --> 31:42.480
Like why isn't that defaulted to on? You know, like encryption. Oh, encryption is just left

31:42.480 --> 31:47.320
off by default. Or my favorite is, and I don't even know if maybe there's somebody here who's

31:47.320 --> 31:51.200
run Mongo recently, but they used to not set a default password because they're like, oh,

31:51.200 --> 31:55.840
you don't want to limit people from getting started. Well, how can you not set a default

31:55.840 --> 32:01.760
password? By the way, that's the number one reason MongoDB has like data leaks. You know,

32:01.760 --> 32:05.440
you read these articles and it's like, oh, because these old, you know, these old installations

32:05.440 --> 32:10.560
didn't set a password. I don't consider that a security issue. That's more of a user issue,

32:10.560 --> 32:17.040
but that's a whole other story. How much automation do you put in place to help users? That's

32:17.040 --> 32:23.920
another critical one. Again, UI, UX, and how easy it is to debug problems. You know, if

32:23.920 --> 32:28.240
your problems, if the software crashes or has an issue or doesn't work as expected,

32:28.240 --> 32:32.080
do you have the right debugging in place for people to actually find what's wrong and fix

32:32.080 --> 32:37.400
it? Because if not, that's going to cause a really, really, really hard time in getting

32:37.400 --> 32:46.640
people to operationalize it. So we talked about, you know, kick ass product.

32:46.640 --> 32:52.480
We talked about, you know, the awareness. We talked about, you know, how to make it

32:52.480 --> 32:58.520
easy. Now I got to put on my other hat. I do have another hat. It's my metrics hat.

32:58.520 --> 33:03.560
I got to wear my metrics hat for my metrics section of this. So we're going to talk about

33:03.560 --> 33:11.320
how do we track open source usage and adoption now. Okay. And there's really kind of four

33:11.320 --> 33:18.240
or five major functions that I want to talk through. Awareness, usage, conversion, customers,

33:18.240 --> 33:23.240
and retention. Okay. And this kind of follows that funnel and that flywheel that we talked

33:23.240 --> 33:28.160
about originally. This is one of those things that, you know, each one of these requires

33:28.160 --> 33:31.680
a certain set of things to potentially look at. You don't have to look at all of these,

33:31.680 --> 33:35.420
but these are metrics that you should all consider and then pick and choose which ones

33:35.420 --> 33:41.000
make the most sense for your business. But when we talk about awareness, okay, a lot

33:41.000 --> 33:46.280
of people start with the first one on this list. So how many people track GitHub stars?

33:46.280 --> 33:52.120
Okay. Hey, you know, GitHub stars are a popularity contest, by the way. Did you know that? Like,

33:52.120 --> 33:57.960
it really is. Because it actually doesn't really show much other than people like your

33:57.960 --> 34:02.760
project or maybe they like people on your project. And did you know that for only $5.99

34:02.760 --> 34:08.360
I can get you a thousand stars on GitHub? There are services that do that. And so I

34:08.360 --> 34:15.840
don't know how many of the stars are actually real or not in some cases. It's hard to tell.

34:15.840 --> 34:19.180
But you should be looking at that because if it is going up and to the right and you're

34:19.180 --> 34:24.160
not gaming the system, that is a good indication that people are finding your project. But

34:24.160 --> 34:30.200
keep in mind from a project perspective, there are more users than there are users who will

34:30.200 --> 34:35.800
go to your GitHub page and get into your repository. And that's something to consider. Unless you're

34:35.800 --> 34:42.160
forcing people to go and install, you know, via source or your documentation is on GitHub,

34:42.160 --> 34:46.000
you might have more people who are downloading some other mechanism. Maybe they're getting

34:46.000 --> 34:49.640
from a third party repo. Maybe they're just going to your website and getting it. So they

34:49.640 --> 34:56.040
might never go star or even see your GitHub pages. But looking at not only GitHub pages,

34:56.040 --> 35:01.400
but your traffic to your docs, your website, your different pieces of content and understanding

35:01.400 --> 35:06.280
who is interacting with it, that's another critical piece to this. And that's a classic

35:06.280 --> 35:10.480
marketing thing. A lot of people look at, you know, the website traffic. But you also

35:10.480 --> 35:16.080
want to look at those unique views to each individual page. All of those are critical

35:16.080 --> 35:25.600
to look at. Now, what's interesting when we talk about page views is we've had conversations

35:25.600 --> 35:30.060
with folks who talk about page views and they're like, there are certain pages that don't matter

35:30.060 --> 35:35.580
and then there are certain pages that do. And so understanding and being able to segment

35:35.580 --> 35:40.560
your traffic and look at who is looking at what is a very important thing to understanding

35:40.560 --> 35:45.480
that growth and adoption. So, for instance, if someone looks at your pricing page, that's

35:45.480 --> 35:49.440
probably a good indicator that they might be interested in something commercial. If

35:49.440 --> 35:53.100
someone is looking at your documentation, that's a pretty good indicator that they're

35:53.100 --> 35:57.800
trying to install or debug an issue. If they're looking at tutorials on how to get started,

35:57.800 --> 36:02.440
that's a very good indication that, again, they're trying to use your software. And so

36:02.440 --> 36:08.080
you can track adoption through looking at those types of things. Now, when we talk about

36:08.080 --> 36:13.080
external evangelists and trying to get additional people into the ecosystem to talk about you

36:13.080 --> 36:17.400
or to figure out, like, what you're doing or, you know, maybe, you know, get excited

36:17.400 --> 36:21.960
about your product, looking at the referrals to the website is another really good example.

36:21.960 --> 36:28.280
So I can see your blog or your blog pointed back to my website or your social tweet mentioned

36:28.280 --> 36:36.920
me. These referrals are often more critical than the website traffic on itself. Now, there's

36:36.920 --> 36:41.040
also two concepts that are really squishy. I won't get into a terrible amount of details

36:41.040 --> 36:47.000
if you're really interested. Check out opensourcemetrics.com or.org. But share a voice. Have you heard

36:47.000 --> 36:53.560
a share a voice before? No? Okay. Think of share a voice is how often does the project

36:53.560 --> 36:58.320
or the thing come into people's minds or how often does it show up in search? How much

36:58.320 --> 37:05.680
of the market do you have? So, for instance, if I was to say to you, like, you know, when

37:05.680 --> 37:11.400
I say Linux, what pops into your mind? Like, what distribution pops into your mind? I'm

37:11.400 --> 37:17.240
going to guess most of you are probably going to say one of, like, three or four. But there's

37:17.240 --> 37:22.000
lots of other ones. And so those three or four have a higher share of voice than everyone

37:22.000 --> 37:27.680
else. And so if you can measure how much of your share of voices, then you know how much

37:27.680 --> 37:31.360
of the market you potentially, you know, can reach out. And then when you have something

37:31.360 --> 37:35.720
to say, people are going to potentially listen. And then there's this idea of social reach.

37:35.720 --> 37:40.920
Now, probably everyone here has different social accounts on different platforms. And

37:40.920 --> 37:45.480
it's awesome. And the question is how much of a reach do you have? And this is, you know,

37:45.480 --> 37:50.120
measured by the number of followers, the amount of engagement. And the reason you want a larger

37:50.120 --> 37:53.800
social reach from an awareness standpoint is when you do have an announcement, when

37:53.800 --> 37:57.880
you launch a new product, when you talk about a new release, when you do have something

37:57.880 --> 38:06.000
important to say, this helps amplify that voice. Now, from a usage perspective, usage

38:06.000 --> 38:13.600
is where the adoption really comes into play here. Okay. Usage is how many people are actually

38:13.600 --> 38:21.320
using your software? All right. Now, I know a lot of companies have struggled with usage

38:21.320 --> 38:26.600
on the open source side. There's a lot of times people come back and they ask the question,

38:26.600 --> 38:32.000
well, who's using our open source software? And the answer a lot of times is, I don't

38:32.000 --> 38:37.000
know, you know, certain number of people, this number of people hit the download webpage.

38:37.000 --> 38:40.160
But there's so many different places to get, you know, that information. I can't really

38:40.160 --> 38:44.920
get it. But some people can get raw download numbers. Anybody look at download numbers

38:44.920 --> 38:51.320
for their software? A few? Okay. It's hard to get. It really is. Especially when you're

38:51.320 --> 38:55.400
looking at, you know, I deploy via Docker. Some people are doing source. Some people

38:55.400 --> 39:02.800
have packages. So that is a challenge. But it's important to understand if there are

39:02.800 --> 39:07.840
more people downloading, that's good. But you have to be careful. Because a lot, I'm

39:07.840 --> 39:12.240
going to tell you a secret. There are a lot of bots on the Internet. I don't know if you

39:12.240 --> 39:18.080
knew that. Don't tell anybody. And those bots download stuff. In fact, what we've found

39:18.080 --> 39:23.360
is a lot of times we might have a project. And so one of the things that I mentioned

39:23.360 --> 39:29.760
that SCARF does is it tracks, you know, things like downloads and download metrics. But what

39:29.760 --> 39:35.560
we found was stuff like, oh, this project has, you know, 50,000 downloads a month from

39:35.560 --> 39:40.280
two people. It's like, well, wait a minute. There's only two people actually downloading.

39:40.280 --> 39:44.800
So when you see 50,000 downloads, but you see only like two unique people, you're like,

39:44.800 --> 39:48.080
well, what is that? And then you dig into it and it's some bot that's downloading it

39:48.080 --> 39:53.040
and distributing it some other way. So that's important to realize that that is something

39:53.040 --> 39:57.000
that can happen. You want to look at that. But you want to look at that scrubbed unique

39:57.000 --> 40:02.360
download. So how many people are actually downloading versus how many people are, you

40:02.360 --> 40:06.480
know, just downloading and it could be bots or duplications. A lot of companies download

40:06.480 --> 40:11.240
the same software over and over again. A lot of people in their pipelines will download

40:11.240 --> 40:17.800
the latest version of software, et cetera. New users, new companies coming into the ecosystem.

40:17.800 --> 40:22.320
That's really important for usage. Signups. So if you are a SAS provider, you're offering

40:22.320 --> 40:27.680
a free trial. Maybe you have a webinar, maybe you have a mailing list, maybe you have Slack.

40:27.680 --> 40:30.920
Signups are another thing that you want to track for usage, but that's not necessarily

40:30.920 --> 40:35.640
going to correlate to actual usage of the open source. But again, that's more of a directionally

40:35.640 --> 40:42.520
correct up into the right. You know, so the one that is really on the bottom here, the

40:42.520 --> 40:52.760
last four, this one's sticky. This one's tough for me. Call home metrics. So most of the

40:52.760 --> 40:58.600
people in the open source space hate the concept of anything that's going to call home. It's

40:58.600 --> 41:05.520
not necessarily always welcome, but there's a certain amount that might be needed for

41:05.520 --> 41:10.800
projects. And the question is, where is that line? And when I talk about call home metrics,

41:10.800 --> 41:15.520
is something running? Is it installed? Is it available? How many things are running at

41:15.520 --> 41:20.960
any one time? These are critical questions that a lot of projects struggle with. Just

41:20.960 --> 41:25.400
because even if you have a download doesn't necessarily mean that download actually translated

41:25.400 --> 41:30.040
into an actual user. And so you want to make sure that you can go back and forth between,

41:30.040 --> 41:34.320
yeah, they downloaded, but they stopped using. Because if they downloaded and stopped using

41:34.320 --> 41:38.680
or never actually use it on a regular basis, that's a very different thing than someone

41:38.680 --> 41:45.000
who's just downloaded and you assume that they're using it.

41:45.000 --> 41:49.600
Now before we get into conversions, I want to say that just because you have adoption

41:49.600 --> 41:55.000
of your open source software doesn't necessarily mean that that's going to lead to commercial

41:55.000 --> 42:00.120
success. Okay? How many people, I mean, there might be some people in here, and maybe you're

42:00.120 --> 42:03.720
willing to raise your hand, but I know that several people that I've talked to struggle

42:03.720 --> 42:09.080
with this, where they're like, I have a million downloads a month, but I can't get anybody

42:09.080 --> 42:17.280
to buy anything from me. You know? Oh yeah, there we go. We have one brave soul. That

42:17.280 --> 42:21.920
happens quite a bit. And it gets back to some of those product things, and there's a lot

42:21.920 --> 42:27.660
of reasons or things that you can do to try and change that. But it gets back to this

42:27.660 --> 42:34.880
expectations on the awareness versus what the business expects. And from a metric standpoint,

42:34.880 --> 42:38.680
you've got the two sides, right? So when you talk about the community side, the adoption

42:38.680 --> 42:46.160
of open source side, a lot of times our efforts are around fostering that really strong community.

42:46.160 --> 42:49.240
And then there's this big question mark in the middle, and then on the business side,

42:49.240 --> 42:54.280
then there's, oh, now we want ARR. Now we want to look at expansion numbers and churn

42:54.280 --> 42:59.040
and all this other stuff. So how do you bridge the gap between these two? And this is where

42:59.040 --> 43:04.840
conversion comes into play. And conversion's a bad word for people, right? You know, yeah,

43:04.840 --> 43:10.440
you will be assimilated. You know, we want that from the open source side, right? It

43:10.440 --> 43:16.160
might be a negative connotation, but I think it's funny. But I do have a super evil little

43:16.160 --> 43:21.920
hat. So, but you do want those conversion metrics. You want people to say, okay, what

43:21.920 --> 43:28.920
does it take to go from free to paid? And to measure that, okay, there's different

43:28.920 --> 43:33.200
things to look at, right? That conversion is impacted by a lot of different things,

43:33.200 --> 43:37.400
and each one of these are things you can measure from a product. You know, you want better

43:37.400 --> 43:44.320
features, better security, you know, you want support, things like that. From a policy perspective,

43:44.320 --> 43:48.320
you know, companies often will require support or they might have compliance requirements,

43:48.320 --> 43:52.640
so how do you meet them? And then people, right? So all these things affect your conversion

43:52.640 --> 43:57.600
ratios. But looking at conversion ratios you can actually control, you want to look at

43:57.600 --> 44:03.400
things like page docs or source to download conversion ratios, doc views to those who

44:03.400 --> 44:07.760
have downloaded, to those who eventually signed up, if you can track that, that's great.

44:07.760 --> 44:13.960
I know that in the past I've had to go through and do stuff like that where I've seen, I

44:13.960 --> 44:19.000
mean, actual example where it's like company A, this really large company, four years ago

44:19.000 --> 44:25.320
started looking at our blogs. And then they attended conferences, they did all this other

44:25.320 --> 44:29.800
stuff, and then two years they called us up and had a conversation, and then a year later

44:29.800 --> 44:35.040
they did something else. So there are breadcrumbs when you look that you can actually see what

44:35.040 --> 44:42.160
people are doing and what sort of activities help lead them to be a customer. Now, customers,

44:42.160 --> 44:46.160
when we talk about customer metrics, we're talking about standard business metrics. So

44:46.160 --> 44:49.640
these are the ones that most people who are running an open source company are familiar

44:49.640 --> 44:57.200
with. The critical ones, things like the number of new customers or new logos, ARR, MRR, you

44:57.200 --> 45:02.000
know, stuff like that. So I'm not going to go terribly deep into this because there are

45:02.000 --> 45:07.240
MBA courses that cover a lot of these and I don't want to necessarily go in depth. But

45:07.240 --> 45:12.360
the ones that I look at typically, the big three, number of customers, number of new logos,

45:12.360 --> 45:20.640
and yeah, the ARR, MRR. And then also I look at the user to customer ratio. So if you know

45:20.640 --> 45:27.880
you have a million users and you have only five paying customers, how do you adjust that?

45:27.880 --> 45:32.720
How do you tweak it? How do you make that work better? And then I also look at the number

45:32.720 --> 45:39.000
of customers who are also advocating for us. From a retention and churn perspective, churn

45:39.000 --> 45:43.640
is the idea that people start using and then go away. So you want to look at those, you

45:43.640 --> 45:48.080
want to look at the number of instances that have gone away. You also want to do some competitive

45:48.080 --> 45:52.800
analysis, right? So if you have users and customers who are starting to use other open

45:52.800 --> 45:59.960
source projects or take a look at other things, you might want to be aware of that. So recapping,

45:59.960 --> 46:05.960
not all businesses, open source businesses are the same. Realistically build an awesome

46:05.960 --> 46:10.360
project, focus on the funnel and of course measure it. All of these things will help

46:10.360 --> 46:15.760
lead you to open source success. Again, if you are interested in getting more details

46:15.760 --> 46:19.360
about any of the metrics or learning a little bit about what's been successful for other

46:19.360 --> 46:24.440
folks, check out open source metrics.org. You can contribute to it if you think that

46:24.440 --> 46:29.520
there is something that is missing, something that you think we should work better, definitions,

46:29.520 --> 46:35.600
et cetera. We would love to have your feedback and help there. Details if you want to reach

46:35.600 --> 46:43.600
out to me. Be happy to have conversations with anybody offline. And that is it for me.

46:43.600 --> 46:58.800
Questions? Oh, we got one question. Oh, two. We're running mics to people. We're running

46:58.800 --> 47:14.160
mics to people in the crowd, it looks like. Oh, it's not working. Ah, okay. Well, maybe

47:14.160 --> 47:22.960
you should shout. Maybe now. You mentioned collecting metrics from users, but because

47:22.960 --> 47:29.040
of the GDPR you need informed consent that you're allowed to collect metrics. In your

47:29.040 --> 47:32.800
experience, what's the percentage of users that actually allow to do that? Is it like

47:32.800 --> 47:38.920
1% or 10%? It's generally more than you would think. I mean, it's at least a third, maybe

47:38.920 --> 47:49.840
more. And beyond that, there are metrics that aren't tied to PII that can show those indicators

47:49.840 --> 47:56.360
going up and to the right. Just because you know that you have web page traffic or downloads,

47:56.360 --> 48:00.080
even if you don't know specifically who they are, you can still see those up and to the

48:00.080 --> 48:03.220
right and those are just as important in a lot of cases. And that's why you have to pick

48:03.220 --> 48:08.000
and choose which ones make the most sense. And in a lot of cases, what it is is it's

48:08.000 --> 48:13.920
about building that community and that relationship so they're willing to share details. And how

48:13.920 --> 48:20.400
you do that and how you make sure is you don't do old slimy sales tactics. You don't want

48:20.400 --> 48:24.280
to spam people. You don't want to call them. Look, let people raise their hand when they're

48:24.280 --> 48:29.920
ready and that helps people a lot. And when people go to bat for you and tell other people,

48:29.920 --> 48:32.800
hey, you should sign up for the newsletter. You should sign up for this. And then they

48:32.800 --> 48:39.760
give you that consent. That helps a lot. Thanks. Yeah. Oh, other way. Other way. Yeah. All

48:39.760 --> 48:49.160
right. We had a couple more questions. We've got one in the middle, one in the end, one

48:49.160 --> 49:02.120
down here. Hello. Yes. Okay. So I was one of the folks that raised their hands when

49:02.120 --> 49:07.240
you asked what are we know, open core. So I don't, but then you started explaining and

49:07.240 --> 49:11.600
I say, okay, that's like Freeman. So I just was asking, could you explain the difference

49:11.600 --> 49:18.280
between open core and freemium? Ah, so yeah. So freemium is where, you know, your first

49:18.280 --> 49:24.800
taste is free and then, you know, you can, you can get more later on. Open core has been

49:24.800 --> 49:30.960
a lot around a lot longer than quote unquote freemium. Okay. And typically from a freemium

49:30.960 --> 49:36.920
strategy, you're going to pay more as you go. Um, and so having like a cloud service where

49:36.920 --> 49:41.200
the first, let's say a hundred gigs of data or something that you store is free and then

49:41.200 --> 49:45.240
it goes on, that's more of that freemium strategy. But from an open source perspective, how I

49:45.240 --> 49:49.720
view open core is you've got a complete product that's running. You don't have to pay for

49:49.720 --> 49:54.200
anything. And if you wanted to augment it or change it on your own, you can. I think

49:54.200 --> 49:59.880
freemium typically comes in my mind and more into play on the cloud side where you've got

49:59.880 --> 50:03.000
more of that, you know, kind of like ongoing service where you're paying for something

50:03.000 --> 50:07.720
where you can't necessarily replace it or pull it out. But it's a fine line and it's

50:07.720 --> 50:13.000
really difficult to draw that line and a lot of people might go back and forth. Oh, it

50:13.000 --> 50:16.200
looks like our time is up. I'm happy to answer your question if you want to come down and

50:16.200 --> 50:21.080
we can, we can chat afterwards. That's cool. I appreciate your time. Um, I do. Thank you

50:21.080 --> 50:30.200
very much.
