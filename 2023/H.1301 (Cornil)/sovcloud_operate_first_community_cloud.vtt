WEBVTT

00:00.000 --> 00:11.080
Okay.

00:11.080 --> 00:15.540
Thank you for showing up in person and so many people.

00:15.540 --> 00:20.200
So actually my first time at FOSTAEM and I think it's super excited to see so many people

00:20.200 --> 00:26.160
and coming back to conferences but also such a crowded conference.

00:26.160 --> 00:30.720
So I mean the talks previously were super full.

00:30.720 --> 00:37.880
Now it's almost half full or half empty depending on how you look at it.

00:37.880 --> 00:45.640
And even for such supposedly boring topics like a sovereign cloud, I mean that's immediately

00:45.640 --> 00:51.120
sparked associations with state and GDPR.

00:51.120 --> 00:53.660
I mean all the cookies that you have to click away.

00:53.660 --> 00:59.720
So sounds boring at first but I think there's also some value in it and I think there's

00:59.720 --> 01:06.680
a journey where open source can help to make a sovereign cloud come to life or like look

01:06.680 --> 01:08.400
at some aspects of it.

01:08.400 --> 01:09.400
This is me.

01:09.400 --> 01:14.400
I go by the name Durandom on GitHub and on social media.

01:14.400 --> 01:18.360
Three days ago I changed roads so now I'm in sales again.

01:18.360 --> 01:19.360
Yikes.

01:19.360 --> 01:28.080
I'm a manager as a managed open shift black belt so I'm still looking at the cloud topic.

01:28.080 --> 01:30.120
Open shift is like a cloud on a cloud.

01:30.120 --> 01:37.920
Before that I worked quite some time on AI, on AIOps in the office of the CTO and the

01:37.920 --> 01:46.080
last thing that I did for two years now is imagining or revisiting open source now in

01:46.080 --> 01:55.400
the age of cloud and seeing how open source principles can also apply to operations.

01:55.400 --> 01:59.920
So we're going to look at the operate first community cloud.

01:59.920 --> 02:06.960
Why do we need a community of practice around operations?

02:06.960 --> 02:11.360
What does this community cloud look like?

02:11.360 --> 02:13.020
And also where is it?

02:13.020 --> 02:19.680
So I think this will be a, it's not really a hands on talk but you can take things away.

02:19.680 --> 02:25.840
You can if Wi-Fi works for you, you can log into the cloud right now and I hope to see

02:25.840 --> 02:31.520
you in some of the meetups or in the community after that because it's really open to anybody

02:31.520 --> 02:38.760
who wants to learn something about operations or wants to teach something about operations.

02:38.760 --> 02:47.880
So when I first heard the term sovereign cloud, like I said, it sparked the sovereign, the

02:47.880 --> 02:55.840
king who has now also occupied the cloud and I put it into my favorite search engine and

02:55.840 --> 02:59.040
it immediately came up with a lot of definitions on sovereign cloud.

02:59.040 --> 03:05.080
There was one from VMware, some from Telecom and they all looked at different aspects and

03:05.080 --> 03:09.120
these days in case you're not living under a rock, everybody's talking about jet GPT

03:09.120 --> 03:14.480
so I thought maybe let's talk to this AI who already read all the definitions for me and

03:14.480 --> 03:16.160
ask it about sovereign cloud.

03:16.160 --> 03:21.600
And this is just the end of my conversation so I wanted to highlight the differences between

03:21.600 --> 03:24.440
the noun and the adjective sovereign.

03:24.440 --> 03:32.880
And the noun sovereign refers to a personal identity that holds supreme power and authority

03:32.880 --> 03:39.120
while the adjective sovereign describes something that is supreme or superior in rank.

03:39.120 --> 03:45.560
That still sounds not really friendly to me like do I really want something that is in

03:45.560 --> 03:50.000
supreme power over me and why should I care about this then.

03:50.000 --> 03:55.000
But this is also a notion of independence in that adjective because that's what I always

03:55.000 --> 04:01.560
thought about when thinking about it a little bit.

04:01.560 --> 04:05.880
And Jet GPT came up with this that there's a notion of independence in the adjective

04:05.880 --> 04:13.120
to be described sovereign means to be independent not subject to control by any other person

04:13.120 --> 04:17.640
or entity which if you think about it that also implements if you have supreme power

04:17.640 --> 04:21.100
then you can also move away.

04:21.100 --> 04:23.800
And having the highest degree of power and authority.

04:23.800 --> 04:30.120
The term emphasizes the idea of self-governance and supreme power within a given context.

04:30.120 --> 04:32.560
And the context seems to be cloud.

04:32.560 --> 04:43.640
So when I look at sovereign cloud at least in my small world view it means I have the

04:43.640 --> 04:45.220
power to move away.

04:45.220 --> 04:52.960
I have the power to control stuff and I have that largest amount of independence.

04:52.960 --> 04:59.440
And that seems at first contradictory to that business model that we saw in previous talks.

04:59.440 --> 05:06.480
So somebody in a nice division of cloud is I'm running stuff on somebody else's computers.

05:06.480 --> 05:12.840
So that doesn't seem to be like a lot of freedom because I have some some lock in.

05:12.840 --> 05:17.120
But actually open source led a path away from lock in.

05:17.120 --> 05:22.840
So I think it's important that we apply these open source principle also to operations.

05:22.840 --> 05:28.400
And if you these days look at a cloud is it is it really open.

05:28.400 --> 05:31.000
I mean it's built on open source software.

05:31.000 --> 05:37.840
You get your RDS or some some other product and underneath.

05:37.840 --> 05:42.840
Yes it's running my secret it's running elastic it's running all that open source stuff.

05:42.840 --> 05:51.520
But you're still tied to that to that experience that the cloud provider imposes on you.

05:51.520 --> 05:56.180
If you want to rebuild that with open source solutions.

05:56.180 --> 06:00.680
You can do it it's it's looking pretty complicated.

06:00.680 --> 06:04.440
So you need to master a lot of these technologies you need to stick them together.

06:04.440 --> 06:08.640
And there's a reason for why people defer to the cloud because they are interested in the

06:08.640 --> 06:09.640
workload.

06:09.640 --> 06:15.720
They just want to swap that credit card and consumer build away the application.

06:15.720 --> 06:21.920
But I think the last speaker put it really or the previous speaker put it really nice

06:21.920 --> 06:31.520
that log in to be defined as a as a product of cost and the likelihood that something

06:31.520 --> 06:35.140
is going away.

06:35.140 --> 06:38.960
So you have to deal with that stuff.

06:38.960 --> 06:46.520
But open source somehow if you go to this slide here as an open source actually showed

06:46.520 --> 06:54.680
a way out of this and the last the left side of that funnel here is the traditional open

06:54.680 --> 07:01.000
source as in as in software contributions funnel which we all know for decades and which

07:01.000 --> 07:02.280
we all love.

07:02.280 --> 07:07.480
So you find a project you use it.

07:07.480 --> 07:13.840
There might be 100 users of it and at some point something breaks.

07:13.840 --> 07:16.880
So you might file an issue.

07:16.880 --> 07:21.960
You already contributed because you filed that issue and then maybe at the last time

07:21.960 --> 07:24.900
even somebody fixes or maybe you fix that project.

07:24.900 --> 07:32.480
So there's really a funnel of 100 users then 10 percent reporting issues and making up

07:32.480 --> 07:37.360
that community and 1 percent actively contributing to that project.

07:37.360 --> 07:43.320
If I'm using something as a service I'm essentially drowning this funnel.

07:43.320 --> 07:47.360
So I'm stopping at the at the API layer.

07:47.360 --> 07:56.020
I might contribute to the underlying open source software that might run this service.

07:56.020 --> 08:03.000
But in terms of contribution I'm usually I'm stuck with maybe filing in the support case

08:03.000 --> 08:10.360
and maybe the provider comes back to me but I have no possibility to actively contribute

08:10.360 --> 08:14.280
to that and maybe fix that API outage.

08:14.280 --> 08:18.480
But maybe I'm the only person having that problem and so the cloud provider doesn't

08:18.480 --> 08:20.520
even care about this.

08:20.520 --> 08:30.600
And this was the notion that our team thought about when thinking about open source in the

08:30.600 --> 08:37.160
age of cloud where it's where there's more value apparently in running and providing

08:37.160 --> 08:41.440
the software than the software code itself.

08:41.440 --> 08:47.080
Or at least that's on equal scale.

08:47.080 --> 08:55.240
And as we see with many enterprise distributions or business models you can get the source

08:55.240 --> 09:02.120
code of that database or that service but you don't get the sometimes you don't even

09:02.120 --> 09:09.120
get the built tools you don't get the tools that actually operate that service the SLIs

09:09.120 --> 09:13.440
the metrics that you need to run there the runbooks etc.

09:13.440 --> 09:21.360
So every deployment is either behind a paywall because that's the differentiating factor

09:21.360 --> 09:25.360
for that company or you have to learn it yourself.

09:25.360 --> 09:32.000
And it's actually quite hard to open up something also with legal constraints right.

09:32.000 --> 09:39.920
So you might have might have proprietary and PII personally identifiable information in

09:39.920 --> 09:46.400
in there you have logs so you need to make sure that you don't expose any of these secrets.

09:46.400 --> 09:51.920
So that there's a tight balance and that's why most companies or most projects default

09:51.920 --> 09:54.520
to close.

09:54.520 --> 10:01.560
And even for even for communities that run their infrastructure like the Fedora infrastructure

10:01.560 --> 10:08.680
that's somewhat open but you still need to be going through a lot of hoops to contribute

10:08.680 --> 10:10.780
and to do something.

10:10.780 --> 10:16.720
So it's not really open by default and it's also not meant to be as a blueprint for something.

10:16.720 --> 10:22.480
Only 10 minutes left but I think I can go to the next part of this presentation.

10:22.480 --> 10:26.220
So this is the this is the concept right.

10:26.220 --> 10:32.000
So we need to shift left we need to open up operations and practice something so that

10:32.000 --> 10:37.920
we build up a community so that we don't have to build our operational deployments from

10:37.920 --> 10:39.720
scratch.

10:39.720 --> 10:46.640
And while that was this is the concept of this operate first idea we also thought you

10:46.640 --> 10:50.960
need to have something physical something hands on where people can actually contribute

10:50.960 --> 10:53.240
because otherwise it would be just a talk show.

10:53.240 --> 10:58.560
So somebody needs to lead the way and implement that stuff and we tried to build a hybrid

10:58.560 --> 11:07.800
cloud with full visibility into the operation center and hybrid cloud these days is for

11:07.800 --> 11:10.680
a lot of people Kubernetes.

11:10.680 --> 11:19.120
So we have two bare metal Kubernetes classes running at the Boston University with 34 nodes

11:19.120 --> 11:24.320
and 1200 cores so it's not a small setup.

11:24.320 --> 11:31.960
Then there's one larger cluster running in AWS from the OS climate project which is also

11:31.960 --> 11:38.640
managed with these operate first community cloud ideas and we also work with a German

11:38.640 --> 11:40.000
super scaler.

11:40.000 --> 11:45.200
That's what the layer below a hyperscaler means.

11:45.200 --> 11:50.960
Jonas they donated some hardware and we deployed also some some classes there.

11:50.960 --> 11:58.960
So my vision actually is to to have a really resilient distributed clouds set up operated

11:58.960 --> 12:07.000
under these principles at as many hardware or cloud providers as possible.

12:07.000 --> 12:15.760
Six hundred and twenty six individuals locked into these into these clusters about 200 namespaces

12:15.760 --> 12:19.800
are there.

12:19.800 --> 12:24.720
That's the so we do a lot of stuff on most of the stuff is happening on GitHub.

12:24.720 --> 12:31.160
We have 150 people on the operate first in the operate first community.

12:31.160 --> 12:38.440
There are like 1000 issues being filed.

12:38.440 --> 12:44.680
Since it's a red hats bootstrap project it's like one third or half of the people are red

12:44.680 --> 12:51.280
hat employees but there's also a lot of university contributions from American universities and

12:51.280 --> 12:57.480
also a lot of open source projects already contributing them.

12:57.480 --> 13:03.200
It's just a highlight of some some of the more noteworthy projects using this infrastructure

13:03.200 --> 13:16.400
like OKD the upstream of open shift or OS climate or Janus IDP which is a project for

13:16.400 --> 13:18.120
for some backstage plugins.

13:18.120 --> 13:26.920
So backstage it's currently one of the one of the more hyped tools for a service developer

13:26.920 --> 13:31.640
portal by by by Spotify.

13:31.640 --> 13:38.240
These are some of the services that are running there like the usual stuff that you would

13:38.240 --> 13:40.160
expect from a cloud set up.

13:40.160 --> 13:42.600
We have our city for doing get jobs.

13:42.600 --> 13:45.380
We have Grafana for monitoring stuff.

13:45.380 --> 13:48.760
We have Tecton pipelines for building things.

13:48.760 --> 13:54.440
There's a brow instance running for doing CI CD and a lot of other things.

13:54.440 --> 14:01.440
So every and that's all deployed by the community in a GitHub repository where you can integrate

14:01.440 --> 14:05.160
in into into these into these other services.

14:05.160 --> 14:08.720
And I think that's where the actual value comes from.

14:08.720 --> 14:11.720
So let's get real.

14:11.720 --> 14:20.840
We love hands on keyboard and as I said it's all done via a really a get ops SRE no a get

14:20.840 --> 14:24.960
ups get first approach.

14:24.960 --> 14:31.720
The current entry points for you would be going to operate dash first dot clouds or

14:31.720 --> 14:37.480
and that clicked through some hoops and you end up at the service dash catalog dot operate

14:37.480 --> 14:47.500
first dot cloud which is an backstage instance where we for one showcase the services.

14:47.500 --> 14:53.080
So you go to the catalog you see all these services with all their dependencies and you

14:53.080 --> 14:55.100
see all the managed clusters there.

14:55.100 --> 15:00.200
So you click on one of these clusters and you are presented with a single single sign

15:00.200 --> 15:01.640
on logging screen.

15:01.640 --> 15:07.480
And if you choose the second option operates dash first you can log in with your get up

15:07.480 --> 15:08.480
account.

15:08.480 --> 15:15.200
So it's authenticates against get up and without even signing up for an account you get a read

15:15.200 --> 15:19.760
only view of the cluster which is pretty awesome.

15:19.760 --> 15:24.440
So you see how these these services are being deployed and how other community services

15:24.440 --> 15:25.440
are being deployed.

15:25.440 --> 15:35.040
So you get a a a hello world example a live hello world example of a of of a fully production

15:35.040 --> 15:42.000
cloud environment which you would see at your at at your site either at your for your project

15:42.000 --> 15:46.320
or for your customer whatever.

15:46.320 --> 15:53.780
And we documented the way and the why we came up to certain decisions.

15:53.780 --> 15:59.120
So in this case it's application monitoring or there's also how to store credentials in

15:59.120 --> 16:00.120
a cloud.

16:00.120 --> 16:06.360
And these are the the questions that you will face if you're setting up a a your own local

16:06.360 --> 16:12.640
cloud and we documented these for to bootstrap either other deployments or to contribute

16:12.640 --> 16:18.440
back so that you don't have to really read through so many blog posts and documentations

16:18.440 --> 16:22.960
and make your own choice.

16:22.960 --> 16:27.600
There's some dashboards here and these are the dashboards that we use for troubleshooting

16:27.600 --> 16:29.680
or the community uses for troubleshooting.

16:29.680 --> 16:38.200
So you would see Kafka or open data hub and Prometheus live dashboards and here's one

16:38.200 --> 16:42.160
dashboard for our for our clusters.

16:42.160 --> 16:49.800
And that's the that's the GitHub org where you would start talking to us or talking to

16:49.800 --> 16:52.680
the community.

16:52.680 --> 16:59.560
The main entry repositories the support repository you can ask questions or you start with a

16:59.560 --> 17:08.280
one of these templates and one of the coolest templates here or processes is onboarding

17:08.280 --> 17:10.640
to a class as you get a form.

17:10.640 --> 17:12.960
It looks like a form it's a it's a GitHub template.

17:12.960 --> 17:20.220
You choose which cluster you want to be onboarded the team name and then we have some automation

17:20.220 --> 17:26.680
in place that would automatically create a pull request to our get ops repository and

17:26.680 --> 17:32.880
we only have to say looks good to me to it if you're for the person that's part of the

17:32.880 --> 17:36.080
operating team and they are onboarded.

17:36.080 --> 17:44.360
So that's also giving giving you some sense of how would I automate my local cloud's deployments.

17:44.360 --> 17:51.400
You don't need to do that but it's it's it's a way to bootstrap you and there's a lot of

17:51.400 --> 17:56.320
other issues going on and assets.

17:56.320 --> 18:03.040
It's a community so things will eventually also break right now we have problems with

18:03.040 --> 18:10.280
our object storage is broken if you are an expert in Nuba or in object storage and you

18:10.280 --> 18:14.320
want to get your hands dirty and rebuilding some of that stuff.

18:14.320 --> 18:16.240
This is the issue.

18:16.240 --> 18:24.720
So to me though here which will give another awesome talk at the end of this track here.

18:24.720 --> 18:27.720
Left some comments how to get started.

18:27.720 --> 18:28.720
Nobody worked on it yet.

18:28.720 --> 18:30.360
So it's up for grabs.

18:30.360 --> 18:32.360
Thank you.

18:32.360 --> 18:40.640
One question.

18:40.640 --> 18:50.400
Hey you provided a good definition for sovereign cloud.

18:50.400 --> 18:55.680
Who are the customers for sovereign cloud.

18:55.680 --> 19:01.360
I don't know to be honest so I'm looking at it really from a technical perspective and

19:01.360 --> 19:09.720
I think my key takeaway is everybody who wants to build their own clouds probably wants to

19:09.720 --> 19:14.240
be sovereign in running their cloud and then you have to focus on stuff like minimizing

19:14.240 --> 19:22.320
vendor lock in and being able to move to another cloud provider or move your data across clouds

19:22.320 --> 19:24.320
to jump just on the question.

19:24.320 --> 19:31.280
The transmission system operator is one of the customers that would like sovereign cloud

19:31.280 --> 19:39.120
because of the resiliency that we need to have because we have critical infrastructure.

19:39.120 --> 19:48.320
I think that was a statement not a question right.

19:48.320 --> 19:54.880
All right take out your smartphone snap that QR codes and there's a biweekly community

19:54.880 --> 19:59.160
meetup where you can meet all the wonderful people that are involved in this community

19:59.160 --> 20:19.560
well.
