WEBVTT

00:00.000 --> 00:09.680
We are starting with the first talk in the Sovereign Cloud Devroom and it's my great

00:09.680 --> 00:16.720
pleasure to open the stage for Max, who's going to elaborate on how he created a documentation

00:16.720 --> 00:19.640
framework for the Sovereign Cloud Stack.

00:19.640 --> 00:21.380
Enjoy, have fun.

00:21.380 --> 00:22.380
Thank you very much.

00:22.380 --> 00:27.480
Hi everybody.

00:27.480 --> 00:28.480
Thank you.

00:28.480 --> 00:33.040
How did we create a documentation framework that works across a group of vendors in the

00:33.040 --> 00:34.640
Sovereign Cloud Stack community?

00:34.640 --> 00:35.640
This I will show you.

00:35.640 --> 00:36.640
My name is Max.

00:36.640 --> 00:43.600
I'm a knowledge management engineer at the Sovereign Cloud Stack and my background is

00:43.600 --> 00:47.160
broadly in web development.

00:47.160 --> 00:49.800
The talk, TLDR, what is it?

00:49.800 --> 00:54.120
Basically it's a set of GitHub action workflows to copy markdown folders and files from many

00:54.120 --> 00:59.040
a's to one single b and once that's done, b is being built into a single page application

00:59.040 --> 01:08.240
resulting in the Sovereign Cloud Stack documentation at docs.scs.community and here, pull out your

01:08.240 --> 01:12.480
mobile phones and have a look at it.

01:12.480 --> 01:15.200
I will now elaborate what's behind this.

01:15.200 --> 01:17.560
What is the Sovereign Cloud Stack?

01:17.560 --> 01:21.240
The Sovereign Cloud Stack combines the best of cloud computing in one unified standard

01:21.240 --> 01:31.280
and SCS is built, backed and operated by an active open source committee worldwide.

01:31.280 --> 01:40.240
This is the SCS stack and it's made up from many modules and it's quite complex and there

01:40.240 --> 01:48.800
is of course documentation but it's heavily distributed at different places on the internet

01:48.800 --> 01:51.880
and that's quite difficult to keep track on.

01:51.880 --> 01:52.880
Where do we have to go?

01:52.880 --> 01:57.160
Where do I have to be routed as an integrator developer?

01:57.160 --> 02:01.960
That's quite a challenge.

02:01.960 --> 02:06.800
As an integrator and operator, you have to manage different documentations in different

02:06.800 --> 02:11.400
Git repositories and different docs and it would be nice to have them within one platform

02:11.400 --> 02:20.000
to search and to have guides and tutorials and references and a great DX or UX.

02:20.000 --> 02:23.520
But how could you do this?

02:23.520 --> 02:29.600
This was my challenge and the aim and requirements for the documentation is it has to be like

02:29.600 --> 02:37.520
a minimal rule set where the approval is basically a no-brainer and all doc files will reside

02:37.520 --> 02:44.840
in one place and it must be probably the biggest challenge, a low entry hurdle for companies

02:44.840 --> 02:49.120
with existing repositories because no one wants to change the whole documentation if

02:49.120 --> 02:53.720
it's being consumed by another stack basically.

02:53.720 --> 03:00.160
So no one has to make any major changes and then we are thinking about could it be made

03:00.160 --> 03:07.560
up with Git sub modules and no, it's too complex to manage and Git subtree was then

03:07.560 --> 03:14.440
okay this could be nice but actually it would, yeah, it's not cool too and then other vendors

03:14.440 --> 03:21.280
said no we don't want to change anything in our existing repositories.

03:21.280 --> 03:27.920
So then we had a great community hackathon in Cologne in November 22 hosted by PlusServer

03:27.920 --> 03:34.400
where we have developed in eight hours straight in a tunnel a working prototype with a custom

03:34.400 --> 03:40.440
GitHub actions workflow or combination of this and this is one of the great things with

03:40.440 --> 03:47.000
the Sovereign Cloudstack community that everyone is joining forces to actually elaborate on

03:47.000 --> 03:49.440
the common challenges.

03:49.440 --> 03:56.080
So yeah thanks also shout out to Ramona and Tim who worked on this prototype with me on

03:56.080 --> 04:04.160
this day from OSISM.

04:04.160 --> 04:05.640
So how does it work?

04:05.640 --> 04:15.160
Basically it's GitHub actions workflow, it's actually three workflows as you see here and

04:15.160 --> 04:21.680
the whole concept is a docuosaurus react based static side generator you may have heard of

04:21.680 --> 04:32.440
it's source by meta and the three action workflows are divided in collecting all the different

04:32.440 --> 04:37.960
documentation files then distilling them that you only have the markdown files from the

04:37.960 --> 04:42.560
repository and then it's being built and deployed.

04:42.560 --> 04:51.440
Let's jump into how this works and we defined docs.package.json where you define which doc

04:51.440 --> 04:57.840
files you need from which organizations repositories and so basically it's a package manager for

04:57.840 --> 04:59.280
docs.

04:59.280 --> 05:04.560
So in the first line you have the repo with the organization so sovereigncloudstack.docs

05:04.560 --> 05:11.120
is the first one and then you define the source directory where the docs files reside in or

05:11.120 --> 05:16.480
the folder and the next line is then you define the target where should it be placed in the

05:16.480 --> 05:23.440
site currently there's a community page and a docs page and docs for technical documentation

05:23.440 --> 05:28.520
the community page for how we organize in a community and also contributors guide and

05:28.520 --> 05:33.920
the labels then how it should reside in the navigation.

05:33.920 --> 05:41.240
Then the first workflow is reading the JSON and then defining a matrix strategy within

05:41.240 --> 05:53.120
GitHub actions so for each element in the docs.json a workflow is being run.

05:53.120 --> 05:58.360
So this is the whole synchronizing and distilling workflow we call it distilling because it's

05:58.360 --> 06:05.720
like in a distilling process refining what has to be done and all the source code because

06:05.720 --> 06:11.040
most of the time there's a source code and then in one doc file or docs folder there

06:11.040 --> 06:17.040
is all the documentation which we want the other source files we don't want so we're

06:17.040 --> 06:18.640
distilling it.

06:18.640 --> 06:22.000
So we'll quickly go through the workflow.

06:22.000 --> 06:36.640
The first one is checking out the repository with secrets action token then it's first

06:36.640 --> 06:46.360
doing a clean install so it's removing all the previous files which resided in the documentary

06:46.360 --> 06:51.440
so just removing all that was there.

06:51.440 --> 06:56.480
Then it's cloning the repository A which is about to be synchronized into the checked

06:56.480 --> 06:58.440
out repository.

06:58.440 --> 07:02.720
In the next step then it's removing the git folders then it's removing the readme files

07:02.720 --> 07:11.880
and then it's creating the docuser sub directory so either in the docs sub folder or in the

07:11.880 --> 07:22.120
community sub folder with the target folder of the docs and the label and then it's copying

07:22.120 --> 07:31.720
all those files from A to B then it's removing all the stuff and then it's committing it

07:31.720 --> 07:42.480
directly to main so there is no pull requests it's pretty nice and then it's doing this

07:42.480 --> 07:50.920
not parallel but one after another and then it's taking roundabout for one repository

07:50.920 --> 07:58.760
it's taking about 10 seconds currently and the whole build process takes two minutes.

07:58.760 --> 08:07.520
Then there's the build workflow which is just standard NPM CI, NPM build and then it's being

08:07.520 --> 08:15.960
deployed to a static server and this is the result of it or documentation page.

08:15.960 --> 08:23.280
Where you see on the left side the docs that are currently distilled and part of the SDS

08:23.280 --> 08:28.320
documentation and this will of course grow because we are currently in the process of

08:28.320 --> 08:33.600
defining the standards and putting it all together so there will be a lot more than

08:33.600 --> 08:37.000
in the future.

08:37.000 --> 08:41.880
That's basically how we managed to do it and if you have ideas feedback critics then have

08:41.880 --> 08:48.080
a look at our repository and we are meeting up in the SIG documentation, special interest

08:48.080 --> 08:56.040
group documentation every second Tuesday from 11am central European time at you can have

08:56.040 --> 09:03.400
a look at the docs.scs.community page or scs.community page.

09:03.400 --> 09:08.640
What is still to come we are currently in the process of creating the whole framework

09:08.640 --> 09:14.120
so we are structure wise adapting towards the ATAXIS framework you might know it's

09:14.120 --> 09:21.080
I wouldn't call it framework but it's more like a text on me for writing excellent documentation

09:21.080 --> 09:27.040
and currently the workflows are triggered manually and yeah soon to be automated fully

09:27.040 --> 09:31.760
and there will also be interactive overview about the whole standards which worked out

09:31.760 --> 09:36.400
currently within the sovereign cloud stack community and there will be a fancy community

09:36.400 --> 09:39.800
space which is currently also in development.

09:39.800 --> 09:54.680
Thank you very much.

09:54.680 --> 09:55.680
Questions?

09:55.680 --> 10:00.840
Do you do releases of scs?

10:00.840 --> 10:01.840
Yes we do releases.

10:01.840 --> 10:06.800
Okay so how do you handle versions of documentation?

10:06.800 --> 10:13.560
We have we can if there will be a new version we will use the version versioning tool of

10:13.560 --> 10:23.520
docusaurus which is basically a command line command and then it packages all files and

10:23.520 --> 10:28.960
folders that is currently there and puts it into a version directory basically.

10:28.960 --> 10:38.920
There are no separate versions on the website for the documentation it's just the latest

10:38.920 --> 10:39.920
always on the website.

10:39.920 --> 10:44.520
No there will be there will be a future different version on the website.

10:44.520 --> 10:49.440
Okay yeah currently it's the latest.

10:49.440 --> 10:59.760
No there was a person first here.

10:59.760 --> 11:02.420
Thank you for this talk it's very informative.

11:02.420 --> 11:09.600
So my question is what was your documentation pain point that inspired you to say hey let's

11:09.600 --> 11:16.280
have a hackathon and let's put our documentation docusaurus and did you solve for those pain

11:16.280 --> 11:19.120
points using your workflow?

11:19.120 --> 11:21.200
Yeah actually thank you for a question.

11:21.200 --> 11:26.880
Actually the hackathon was planned prior to this so it was it was perfectly placed for

11:26.880 --> 11:34.160
us to solve this problem and the biggest problem was that no vendor wanted to change anything

11:34.160 --> 11:40.280
with their existing documentation so no metadata and and then the thing is with this workflow

11:40.280 --> 11:49.040
you don't have to manipulate the like external organizations documentation files or folders

11:49.040 --> 11:57.400
and you just can copy them distill them implement them and have like the navigational thing

11:57.400 --> 12:05.480
is only yeah we do it in with an hour repository so it's not it's minimal invasive basically

12:05.480 --> 12:10.840
or folks updating your documentation before you change platforms.

12:10.840 --> 12:20.800
I'm just not clear about what the problem was that was being solved.

12:20.800 --> 12:23.120
Yeah thank you for the talk as well.

12:23.120 --> 12:28.920
Just a question what are your input files I mean documentation appears in several formats

12:28.920 --> 12:33.800
for instance as part of c files where you have to extract it in to I don't know PDF

12:33.800 --> 12:35.840
or HTML or whatever.

12:35.840 --> 12:41.720
Yeah we are we are only accepting markdown files.

12:41.720 --> 12:47.400
And the problem the problem was that you have different vendors and for example if you if

12:47.400 --> 12:52.480
you want to pull all those markdown files and throw it into one folder then it's going

12:52.480 --> 13:01.640
to be a mess and so but we want to to curate how the docs is being built so that's the

13:01.640 --> 13:07.800
nice thing with docuSaurus you can define within the sidebars how you how your whole

13:07.800 --> 13:15.120
navigation is being built so you don't have meta data like lying directly in the vendor's

13:15.120 --> 13:25.880
target repository with the individual documentation.

13:25.880 --> 13:35.320
Any more questions.

13:35.320 --> 13:40.000
Do you plan to support any other documentation formats like askyi doc or r text or something

13:40.000 --> 13:45.480
like that you know like Sphinx is using askyi doc for example or more actually is you just

13:45.480 --> 13:46.720
restart your text.

13:46.720 --> 13:54.360
Yeah currently currently not but it would be possible to convert it in a separate workflow.

13:54.360 --> 14:04.800
OK but also we use markdown because there's also markdown linting process that's refining

14:04.800 --> 14:10.040
everything.

14:10.040 --> 14:13.360
Any more ideas.

14:13.360 --> 14:27.040
OK yeah thank you very much.
