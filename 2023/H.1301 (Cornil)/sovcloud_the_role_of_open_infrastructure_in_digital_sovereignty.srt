1
0:00:00.000 --> 0:00:10.000
Only one minute late.

2
0:00:10.000 --> 0:00:15.680
It's been a long day, so bear with me.

3
0:00:15.680 --> 0:00:18.120
So hello, everyone.

4
0:00:18.120 --> 0:00:22.460
Thanks for joining this talk so late in the day.

5
0:00:22.460 --> 0:00:23.460
My name is Thierry Carreras.

6
0:00:23.460 --> 0:00:28.760
I work for the Open Infrastructure Foundation, which is the home for the OpenStack project

7
0:00:28.760 --> 0:00:31.920
and Kata containers and a few others.

8
0:00:31.920 --> 0:00:35.680
From the accent, you can probably tell I'm based in France.

9
0:00:35.680 --> 0:00:42.480
And so I'm very aware of the questions around digital sovereignty.

10
0:00:42.480 --> 0:00:48.240
And I wanted to use this talk to give you a sense of why from our perspective, digital

11
0:00:48.240 --> 0:00:56.160
sovereignty really matters and how can Open Infrastructure help in that area.

12
0:00:56.160 --> 0:00:58.600
But first, what do we mean by digital sovereignty?

13
0:00:58.600 --> 0:01:02.040
If you've been in this room for the whole day, I'm pretty sure you've already heard

14
0:01:02.040 --> 0:01:03.040
10 definitions.

15
0:01:03.040 --> 0:01:06.040
I'll just add one.

16
0:01:06.040 --> 0:01:11.520
Obviously, the digital sovereignty is around access to data.

17
0:01:11.520 --> 0:01:17.200
And the 21st century is really global and driven by software.

18
0:01:17.200 --> 0:01:22.480
And so in a fast-changing world, whoever adapts the fastest really wins.

19
0:01:22.480 --> 0:01:25.080
It's really a question of disrupt or be disrupted.

20
0:01:25.080 --> 0:01:30.680
So the ability to adapt fast and ship new features fast and deliver new applications

21
0:01:30.680 --> 0:01:34.080
fast is really critical.

22
0:01:34.080 --> 0:01:38.360
But the way you deliver those applications has really been evolving over the past 20

23
0:01:38.360 --> 0:01:39.360
years.

24
0:01:39.360 --> 0:01:43.200
20 years ago, if you started the same time I started, you would procure some physical

25
0:01:43.200 --> 0:01:49.080
hardware and as an application deployer, you would install your operating system, your

26
0:01:49.080 --> 0:01:52.800
dependencies, and your application on top of that.

27
0:01:52.800 --> 0:01:54.460
But that was a bit inconvenient.

28
0:01:54.460 --> 0:01:56.920
So we added more and more layers.

29
0:01:56.920 --> 0:02:00.280
The first layer we added was hardware virtualization.

30
0:02:00.280 --> 0:02:04.360
Abstracting the server, your application is running on from the physical hardware that

31
0:02:04.360 --> 0:02:05.880
runs it.

32
0:02:05.880 --> 0:02:08.920
And you gained a lot of efficiency doing that.

33
0:02:08.920 --> 0:02:14.000
Then we added another layer, which is cloud APIs, which allows you to programmatically

34
0:02:14.000 --> 0:02:17.900
access those virtualized resources.

35
0:02:17.900 --> 0:02:20.120
And so you have those two concepts.

36
0:02:20.120 --> 0:02:25.060
You have programmable infrastructure on one side and you have cloud aware applications

37
0:02:25.060 --> 0:02:28.380
being deployed on top of that.

38
0:02:28.380 --> 0:02:33.800
And this programmable infrastructure is really key to reach the next level of velocity because

39
0:02:33.800 --> 0:02:38.620
machines need to be able to provision the resources that they need by themselves.

40
0:02:38.620 --> 0:02:45.160
And so you really need that programmable infrastructure to reach the next level of velocity and ability

41
0:02:45.160 --> 0:02:47.200
to deliver applications fast.

42
0:02:47.200 --> 0:02:53.200
But building up this programmable infrastructure by yourself is really a challenge.

43
0:02:53.200 --> 0:02:57.880
It's complex to do and it's difficult to find talent that knows how to do it because there

44
0:02:57.880 --> 0:02:59.880
is a lot of demand for those skills.

45
0:02:59.880 --> 0:03:04.960
Luckily, you can pay others to do it for you by using public clouds, available public clouds,

46
0:03:04.960 --> 0:03:07.160
or managed private clouds.

47
0:03:07.160 --> 0:03:12.960
But the trick is the cloud market is really cornered by a couple of internet giants based

48
0:03:12.960 --> 0:03:15.000
in the US or China.

49
0:03:15.000 --> 0:03:20.440
So this really creates a challenge for European governments and companies.

50
0:03:20.440 --> 0:03:26.120
The challenge is that in order to stay competitive, European companies really need access to programmable

51
0:03:26.120 --> 0:03:27.600
infrastructure.

52
0:03:27.600 --> 0:03:33.480
But the most obvious way to get to that programmable infrastructure is to use a hyperscaler cloud

53
0:03:33.480 --> 0:03:36.680
based in the US.

54
0:03:36.680 --> 0:03:41.960
But data is really the basic resource of the 21st century and which legislation your data

55
0:03:41.960 --> 0:03:47.760
leaves under, like Ludovik just said, really ultimately defines who controls it.

56
0:03:47.760 --> 0:03:53.920
Like the US government can compel any US company to disclose their customer data.

57
0:03:53.920 --> 0:03:58.200
In case of a geopolitical conflict, you can see the US government shutting down access

58
0:03:58.200 --> 0:04:03.640
to vital data that is hosted on a US-based company.

59
0:04:03.640 --> 0:04:07.920
This creates really a significant geopolitical vulnerability.

60
0:04:07.920 --> 0:04:12.840
And if the last 10 years are any guide, this vulnerability, if we don't address it, will

61
0:04:12.840 --> 0:04:14.680
only grow.

62
0:04:14.680 --> 0:04:19.280
With the recent pandemic, with the war in Ukraine, we've seen growing willingness by

63
0:04:19.280 --> 0:04:25.400
governments to weaponize their control of the international supply chain.

64
0:04:25.400 --> 0:04:30.720
So really, even assuming good intent from those governments and companies, we are all

65
0:04:30.720 --> 0:04:32.600
friends, right?

66
0:04:32.600 --> 0:04:39.280
The legislation the data leaves under actually affects which laws apply to it.

67
0:04:39.280 --> 0:04:41.120
Obvious statement.

68
0:04:41.120 --> 0:04:46.440
But Europe has really very progressive privacy laws that protect individuals from the reach

69
0:04:46.440 --> 0:04:49.840
of greedy data aggregation companies.

70
0:04:49.840 --> 0:04:55.480
And so how do we enforce those laws in a world where all of that data actually lives in a

71
0:04:55.480 --> 0:04:58.480
place where those laws do not apply?

72
0:04:58.480 --> 0:05:01.720
So even if you assume good intent, there is the risk there.

73
0:05:01.720 --> 0:05:07.760
The solution is, of course, to build our own European-based public clouds.

74
0:05:07.760 --> 0:05:11.200
But it's easier said than done.

75
0:05:11.200 --> 0:05:17.440
Europe really has a vibrant ecosystem of companies, but it really lacks the giants that can compete

76
0:05:17.440 --> 0:05:20.560
with a Google or a Microsoft or an Amazon.

77
0:05:20.560 --> 0:05:28.760
So how can we turn that vibrant ecosystem of smaller actors from a liability to an asset?

78
0:05:28.760 --> 0:05:35.040
We in France have really acknowledged this critical geopolitical vulnerability for a

79
0:05:35.040 --> 0:05:36.040
while.

80
0:05:36.040 --> 0:05:42.360
But I would say that the previous attempts at solving it weren't super successful.

81
0:05:42.360 --> 0:05:48.480
Like for example, we had several attempts at building giant sovereign clouds in the

82
0:05:48.480 --> 0:05:54.040
past, but they were really not adapted to the nature of the European ecosystem.

83
0:05:54.040 --> 0:05:59.240
More recently, they moved towards mandating locally operated systems, which is a great

84
0:05:59.240 --> 0:06:03.920
step, especially as far as government data is concerned.

85
0:06:03.920 --> 0:06:09.840
And for others, it also encouraged cataloguing and describing available services through

86
0:06:09.840 --> 0:06:15.040
initiatives like Gaia X, which make it clear which laws and policy really apply to the

87
0:06:15.040 --> 0:06:16.040
data.

88
0:06:16.040 --> 0:06:22.000
But those efforts were really easily, trivially walked around by the hyperscaler companies.

89
0:06:22.000 --> 0:06:25.720
Some of them co-opted the requirements through local partnerships.

90
0:06:25.720 --> 0:06:31.920
So they would work with a local EU-based company to help them run locally the thing.

91
0:06:31.920 --> 0:06:39.200
So the problem is working with EU-based organizations to run the services locally really maintains

92
0:06:39.200 --> 0:06:41.680
this critical technological dependency.

93
0:06:41.680 --> 0:06:48.600
Like Amazon could just shut down access or weaponize access to information really easily.

94
0:06:48.600 --> 0:06:53.000
In some, I picked on Amazon right now, but it's actually the wrong approach because they're

95
0:06:53.000 --> 0:06:55.280
actually not the ones doing that.

96
0:06:55.280 --> 0:06:58.520
Google and Microsoft have been doing a lot more partnerships.

97
0:06:58.520 --> 0:07:05.200
Amazon just decided to lobby against the law and trying to convince legislators that depriving

98
0:07:05.200 --> 0:07:12.760
EU companies from the amazing Amazon Web Services would critically impact their ability to be

99
0:07:12.760 --> 0:07:15.600
innovative and competitive on the market.

100
0:07:15.600 --> 0:07:20.600
So they basically try to convince legislators that if they don't let people access freely

101
0:07:20.600 --> 0:07:26.520
Amazon Web Services, we're doomed because obviously we can't do that here.

102
0:07:26.520 --> 0:07:28.160
So what do we do now?

103
0:07:28.160 --> 0:07:30.560
In that context, I think open infrastructure can help.

104
0:07:30.560 --> 0:07:35.120
And I want to explain what we mean by open infrastructure first.

105
0:07:35.120 --> 0:07:37.720
What is it and why can it help?

106
0:07:37.720 --> 0:07:42.280
So if we go back to our picture from earlier, programmable infrastructure and cloud aware

107
0:07:42.280 --> 0:07:47.200
applications being deployed on top of that, open infrastructure is really open source

108
0:07:47.200 --> 0:07:52.040
solutions that help you provide that programmable infrastructure.

109
0:07:52.040 --> 0:07:57.960
And standard there used by millions of CPU cores all around the world is a stack composed

110
0:07:57.960 --> 0:08:03.920
of Linux at the virtualization layer, an open stack at the cloud APIs layer, and Kubernetes

111
0:08:03.920 --> 0:08:09.240
at the application orchestration layer, what we call the locky stack.

112
0:08:09.240 --> 0:08:12.680
But why would you use open source for infrastructure?

113
0:08:12.680 --> 0:08:15.760
Why does it matter?

114
0:08:15.760 --> 0:08:21.680
First it really gives everyone access to infrastructure providing technology.

115
0:08:21.680 --> 0:08:23.880
All organizations, all countries.

116
0:08:23.880 --> 0:08:29.020
It really allows to distribute the future more evenly and by making those technologies

117
0:08:29.020 --> 0:08:34.360
accessible to all, you actually allow everyone to play and innovate.

118
0:08:34.360 --> 0:08:40.520
Without friction or having to ask for permission, you maximize innovation as a result.

119
0:08:40.520 --> 0:08:47.040
But beyond those two key benefits, you actually have three properties of open infrastructure

120
0:08:47.040 --> 0:08:54.760
that make it really suitable for using it in a digital sovereignty context.

121
0:08:54.760 --> 0:08:56.520
Independence is one of them.

122
0:08:56.520 --> 0:09:00.900
Open infrastructure is not just open source, it's also openly developed.

123
0:09:00.900 --> 0:09:07.040
So Linux, OpenStack, Kubernetes, those are all developed not by a single vendor, but

124
0:09:07.040 --> 0:09:10.760
by a massive global open collaboration.

125
0:09:10.760 --> 0:09:16.680
And that means everyone can participate on a live playing field under a neutral governance.

126
0:09:16.680 --> 0:09:18.440
Nobody is owning the keys to the kingdom.

127
0:09:18.440 --> 0:09:22.820
Nobody will pull the rug below you by selling to someone else.

128
0:09:22.820 --> 0:09:26.280
Another benefit of open development is transparency.

129
0:09:26.280 --> 0:09:28.840
All technical discussions are happening in the open.

130
0:09:28.840 --> 0:09:32.280
All governance decisions are publicly documented.

131
0:09:32.280 --> 0:09:39.000
Trust is really essential in building a digital sovereign, digitally sovereign cloud system.

132
0:09:39.000 --> 0:09:42.080
And open infrastructure is really naturally transparent.

133
0:09:42.080 --> 0:09:49.840
And finally, being able, giving everyone access to that technology, it allows everyone to

134
0:09:49.840 --> 0:09:53.280
standardize on using the same solutions, which enables interoperability.

135
0:09:53.280 --> 0:10:00.720
Interoperability is really the main challenge for federating a group of smaller actors to

136
0:10:00.720 --> 0:10:06.240
compete with giants because it's really hard to eliminate the differences and present a

137
0:10:06.240 --> 0:10:08.840
coherent user experience.

138
0:10:08.840 --> 0:10:11.040
So you can standardize on available features.

139
0:10:11.040 --> 0:10:12.400
That's a good first step.

140
0:10:12.400 --> 0:10:15.840
You can expose the same APIs, which is even better.

141
0:10:15.840 --> 0:10:19.960
Using the same technical stack obviously is one step above that.

142
0:10:19.960 --> 0:10:25.440
And so EU companies that are standardized on the Loki stack, like Deutsche Telekom,

143
0:10:25.440 --> 0:10:31.880
Chlora, I've seen a hoodie there, OVH Cloud in France, Orange Business Services, Benero

144
0:10:31.880 --> 0:10:37.480
Exign, Fomania Cloudfellow in Poland, Elastix in the Nordics, they all give you the same

145
0:10:37.480 --> 0:10:42.760
APIs backed by the same software and showing good interoperability.

146
0:10:42.760 --> 0:10:48.240
And once combined, all of those public cloud providers give you enough points of presence

147
0:10:48.240 --> 0:10:52.800
and capacity to actually revile any of the hyperscalers.

148
0:10:52.800 --> 0:10:59.960
But in order to increase interoperability even further, you can build a common distribution

149
0:10:59.960 --> 0:11:05.520
and share operational practices that will give you the next level, I mean, perfect interoperability

150
0:11:05.520 --> 0:11:10.000
because it will be basically the same software running in the same conditions in different

151
0:11:10.000 --> 0:11:11.200
data centers.

152
0:11:11.200 --> 0:11:16.680
And this is what the Solvran Cloud Stack project aims to solve and will have a presentation

153
0:11:16.680 --> 0:11:19.200
later.

154
0:11:19.200 --> 0:11:21.040
Here you are, biker.

155
0:11:21.040 --> 0:11:27.120
So I suspect it will go into a lot more details, but I'll just summarize for those who will

156
0:11:27.120 --> 0:11:28.560
not stay in the room.

157
0:11:28.560 --> 0:11:33.600
Solvran Cloud Stack, as the name implies, is an initiative aiming to build a standard

158
0:11:33.600 --> 0:11:38.240
stack for providing software and infrastructure.

159
0:11:38.240 --> 0:11:42.840
It's composed of a standard Loki stack, also making use of Ceph, which is another open

160
0:11:42.840 --> 0:11:44.920
infrastructure component.

161
0:11:44.920 --> 0:11:51.400
It's aiming at enabling a federation of highly interoperable infrastructure providers.

162
0:11:51.400 --> 0:11:58.040
And it's going beyond proposing the same features, exposing the same APIs, running the same software

163
0:11:58.040 --> 0:12:04.120
to sharing the operational choices and best practices.

164
0:12:04.120 --> 0:12:09.080
It's also openly developed open source so anyone can join and participate in a level

165
0:12:09.080 --> 0:12:10.720
playing field.

166
0:12:10.720 --> 0:12:14.520
And I'll conclude on that in summary.

167
0:12:14.520 --> 0:12:21.360
Solvran T is a major challenge for Europe in the 21st century, especially around infrastructure

168
0:12:21.360 --> 0:12:27.520
layers because if we leave the hyperscalers in full control of that layer, we are going

169
0:12:27.520 --> 0:12:35.840
to be easily cut from our sources of information in case of any tension.

170
0:12:35.840 --> 0:12:40.120
Open infrastructure is open source solutions for providing infrastructure for applications

171
0:12:40.120 --> 0:12:42.520
and data.

172
0:12:42.520 --> 0:12:47.960
It enables independence, transparency, and interoperability, which are necessary to really

173
0:12:47.960 --> 0:12:54.040
federate a bunch of local actors to compete with the US-based giants.

174
0:12:54.040 --> 0:12:59.560
And so if you care about digital sovereignty, as you should, have a look at the open infrastructure

175
0:12:59.560 --> 0:13:03.680
power providers that I mentioned, but also at Solvran Cloud Stack and stay in the room

176
0:13:03.680 --> 0:13:09.360
to see the Kurtz presentation later today.

177
0:13:09.360 --> 0:13:10.360
Thanks for listening.

178
0:13:10.360 --> 0:13:21.240
And we have plenty of time for questions.

179
0:13:21.240 --> 0:13:24.240
Questions?

180
0:13:24.240 --> 0:13:33.120
Hi, my name is Michael.

181
0:13:33.120 --> 0:13:37.440
I tried to deploy OpenStack about a decade ago in our internal stuff.

182
0:13:37.440 --> 0:13:38.440
We found it very difficult.

183
0:13:38.440 --> 0:13:43.960
In fact, one of the problems we had were an organization about 12 people.

184
0:13:43.960 --> 0:13:48.680
And OpenStack was clearly appropriate for an organization of 100 people.

185
0:13:48.680 --> 0:13:55.960
And so we went for both simpler solutions, you know, plain-zen KVM and hyperscaler sides

186
0:13:55.960 --> 0:13:57.200
of things.

187
0:13:57.200 --> 0:14:03.160
And my impression is that it hasn't changed much, that OpenStack has a scaling issue,

188
0:14:03.160 --> 0:14:08.600
meaning it's great for large systems and large installations, but it's not good for small

189
0:14:08.600 --> 0:14:09.600
systems.

190
0:14:09.600 --> 0:14:16.640
And so what that means is that I don't develop for the stack that you want to deploy.

191
0:14:16.640 --> 0:14:21.280
I develop for something else because I can't afford to maintain that piece.

192
0:14:21.280 --> 0:14:24.680
One of the annoyances, and I'll just let you answer good, one of the annoyances at the time

193
0:14:24.680 --> 0:14:28.360
was the V6 support was abysmal.

194
0:14:28.360 --> 0:14:34.240
And it's better now, but my impression is still that Kubernetes, for instance, is like,

195
0:14:34.240 --> 0:14:35.240
what's an IPv6?

196
0:14:35.240 --> 0:14:36.640
They just don't care.

197
0:14:36.640 --> 0:14:42.400
And I wonder in this common operational choices and carrier stuff that you're talking about,

198
0:14:42.400 --> 0:14:46.720
whether this is...you're going to address this issue of, well, I can't really move

199
0:14:46.720 --> 0:14:51.880
a cluster from point A to point B if I have overlapping 1918 address spaces.

200
0:14:51.880 --> 0:14:57.200
I need V6 and I need it to work natively and well so that I don't have to think about this

201
0:14:57.200 --> 0:14:58.200
nonsense.

202
0:14:58.200 --> 0:15:06.040
So should I repeat the question for...I hope the question was recorded.

203
0:15:06.040 --> 0:15:13.720
So first on the concern around the size of deployment or the inability to scale down

204
0:15:13.720 --> 0:15:15.360
to simpler deployments.

205
0:15:15.360 --> 0:15:19.560
I would say that it has improved a lot.

206
0:15:19.560 --> 0:15:22.760
Providing infrastructure is really a difficult job.

207
0:15:22.760 --> 0:15:26.400
It's not like something you would deploy on your garage.

208
0:15:26.400 --> 0:15:32.080
If you're at a stage where, like you say, a company with 10 people, I don't think there

209
0:15:32.080 --> 0:15:34.360
is much sense in doing it.

210
0:15:34.360 --> 0:15:42.800
But the main concern was really keeping up to date with upgrades and the cycle of six

211
0:15:42.800 --> 0:15:44.720
months releases that we had.

212
0:15:44.720 --> 0:15:50.440
And we made a lot of progress there in securing the updates, in limiting the amount of changes

213
0:15:50.440 --> 0:15:52.960
that are happening over a cycle of six months.

214
0:15:52.960 --> 0:15:55.920
Pretty mature and stable now.

215
0:15:55.920 --> 0:16:04.640
And we are seeing teams of relatively small numbers running gigantic systems like Ubisoft,

216
0:16:04.640 --> 0:16:10.800
for example, is running a very large OpenStack private cloud for their game servers.

217
0:16:10.800 --> 0:16:15.960
And it's a team of 10 to 12, what they said in the latest webcast.

218
0:16:15.960 --> 0:16:21.760
So obviously, yeah, more for 100 people company than a 410 people company.

219
0:16:21.760 --> 0:16:28.160
In terms of, I think distributions like Server and Cloudstack and others, where there is

220
0:16:28.160 --> 0:16:34.400
also more guidance in the type of options that you should be deploying, more partners

221
0:16:34.400 --> 0:16:38.440
you can really rely on and sharing the same issues will further help.

222
0:16:38.440 --> 0:16:47.800
But it's true that it's more targeted to people that have enough, I would say, the minimum

223
0:16:47.800 --> 0:16:53.000
size of the deployment is more like dozens of servers than three or four servers, for

224
0:16:53.000 --> 0:16:54.000
sure.

225
0:16:54.000 --> 0:16:58.880
In terms of the v6 support, I'm actually a bit surprised because OpenStack had IPv6

226
0:16:58.880 --> 0:17:00.880
support before Amazon did.

227
0:17:00.880 --> 0:17:03.720
Amazon is total stock.

228
0:17:03.720 --> 0:17:10.800
Maybe that's placing the bar very low.

229
0:17:10.800 --> 0:17:15.960
And I don't necessarily have the dual contact that I'm interested in hearing more about

230
0:17:15.960 --> 0:17:18.600
it if we can do that.

231
0:17:18.600 --> 0:17:25.520
But it feels like overall, in terms of updates, and I'm actually very surprised when I talk

232
0:17:25.520 --> 0:17:29.200
to some of the big deployments that we have and see that they're actually running it with

233
0:17:29.200 --> 0:17:32.120
a team of three or four people.

234
0:17:32.120 --> 0:17:35.880
So I would say, I'm not an operator myself.

235
0:17:35.880 --> 0:17:38.240
I'm not running an OpenStack cloud myself.

236
0:17:38.240 --> 0:17:45.680
It's difficult to see directly how easy it is or how difficult it is.

237
0:17:45.680 --> 0:17:52.640
But what we are seeing from practical data is that the more we go, the smaller the teams

238
0:17:52.640 --> 0:17:54.640
are.

239
0:17:54.640 --> 0:17:57.440
We have clearly a talent shortage, so it's difficult to fight talent.

240
0:17:57.440 --> 0:18:03.080
I would say that's the main challenge right now for OpenStack is really the difficulty

241
0:18:03.080 --> 0:18:06.080
to find people that actually have experience doing it.

242
0:18:06.080 --> 0:18:12.840
So most of the companies that are deploying it today, especially in Western Europe, France,

243
0:18:12.840 --> 0:18:17.880
and Germany, there is a lot of training of new people.

244
0:18:17.880 --> 0:18:24.240
They will train their own teams because finding talent on the market is very, very difficult.

245
0:18:24.240 --> 0:18:30.600
I would say that's the main blocker right now if you had to cite one.

246
0:18:30.600 --> 0:18:33.600
Other questions?

247
0:18:33.600 --> 0:18:37.840
Well, if not, thank you all.

248
0:18:37.840 --> 0:18:40.840
I'll be in the room for the rest of the day.

249
0:18:40.840 --> 0:19:04.320
Thank you so much.

