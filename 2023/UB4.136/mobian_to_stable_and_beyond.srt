1
0:00:00.000 --> 0:00:19.960
Thank you everyone and thank you for attending this presentation.

2
0:00:19.960 --> 0:00:25.000
The title is Mobian to Stable and Beyond because right now we've been only doing some development

3
0:00:25.000 --> 0:00:33.880
release but first what is Mobian? You could think of it as a Debian derivative or in Debian

4
0:00:33.880 --> 0:00:42.280
language a blend which is targeting mobile devices such as smartphones and tablets. We

5
0:00:42.280 --> 0:00:50.880
provide a separate package repository but it's not a standalone distribution right and we have

6
0:00:50.880 --> 0:00:58.320
some ready to use disk images which are built for several devices and more on that later. But Mobian

7
0:00:58.320 --> 0:01:06.680
is actually a very very small overlay. In our whole package repository we have 44 source packages

8
0:01:06.680 --> 0:01:18.560
compared to 35,000 and more on Debian itself so it's really some tiny bits and actually we have

9
0:01:18.560 --> 0:01:25.000
planned to drop some of those packages and my hope is that basically one year from now we will be

10
0:01:25.000 --> 0:01:32.800
down to something like 15 or maybe 20 packages at most because we have some transitional packages

11
0:01:32.800 --> 0:01:38.960
and actually the most difficult to get rid of will be device support packages where we have downstream

12
0:01:38.960 --> 0:01:46.360
patch kernels and stuff like that. But in the end Mobian isn't supposed to be a long-term project

13
0:01:46.360 --> 0:01:53.040
it's really supposed to be merged into Debian itself and just improve the overall Debian ecosystem

14
0:01:53.040 --> 0:02:02.000
rather than being a standalone project aimed solely at mobile users. The question we have been

15
0:02:02.000 --> 0:02:07.160
seeing a lot lately over the past few months is basically where can I find the latest Mobian

16
0:02:07.160 --> 0:02:17.240
stable image. You can't because it doesn't exist yet. We target Debian testing which is a moving

17
0:02:17.240 --> 0:02:23.900
target you could think of it as a kind of rolling release distribution and the Debian testing

18
0:02:23.900 --> 0:02:32.160
distro is frozen every once in a while it's about every once every two years and then moved on to

19
0:02:32.160 --> 0:02:39.600
Debian stable. The latest stable release from Debian was bullseye which was released a bit less than

20
0:02:39.600 --> 0:02:48.000
two years ago and back then we definitely weren't ready for prime time. For example we had version

21
0:02:48.000 --> 0:02:59.920
0.6.8.2 while we now up to version 0.24 for the compositor and shell sites and there's been a lot

22
0:02:59.920 --> 0:03:07.000
of progress over the past two years. Back when Buzzlye was released we didn't have stuff like

23
0:03:07.000 --> 0:03:13.400
eG25 manager which is basically a piece of software handling the PinePhone and PinePhone Pro modem

24
0:03:13.400 --> 0:03:22.040
configuring it properly to work as we expect. We didn't have MMS we have very few adaptive

25
0:03:22.040 --> 0:03:29.480
applications because libadwator at the time was not even existing we had lib handy but no GTK4

26
0:03:29.480 --> 0:03:37.000
and no libadwator and so in the end we decided against releasing a stable mobian version for

27
0:03:37.000 --> 0:03:44.760
bullseye and the ecosystem was only starting to ramp up there was still lots of issues and bugs

28
0:03:44.760 --> 0:03:54.080
and instabilities and really a low count of actually usable mobile applications. So what does

29
0:03:54.080 --> 0:04:03.080
going stable mean for mobian? If you look back at the bookworm development cycle which is basically

30
0:04:03.080 --> 0:04:11.160
the past two years we've seen some great progress both in the overall mobile ecosystem and in Debian

31
0:04:11.160 --> 0:04:19.120
itself. The ecosystem is really really richer than it was before and it's still growing and more and

32
0:04:19.120 --> 0:04:26.280
more people are creating or modifying applications so they can run just fine on our tiny displays

33
0:04:26.280 --> 0:04:35.480
here. Graphical environments are more usable and way more stable than they used to be. I mean if

34
0:04:35.480 --> 0:04:44.200
you've been using Foch like two years ago it was all tapping buttons and trying to get the things

35
0:04:44.200 --> 0:04:52.320
right. Last year we had the swipes which was a huge usability improvement and overall lots of bugs

36
0:04:52.320 --> 0:05:00.760
were fixed so it can run smoothly on many devices and that's just awesome and we even uploaded a

37
0:05:00.760 --> 0:05:08.160
lot of packages we were hosting downstream to Debian itself and that even includes some

38
0:05:08.160 --> 0:05:16.400
mobian specific package such as the splash screen theme, the installer settings, the repository key

39
0:05:16.400 --> 0:05:24.680
ring also so we have the GPG keys for mobian also in Debian now so if there's another mishap it

40
0:05:24.680 --> 0:05:31.680
happened last year we let the GPG key expire and user was stuck and had to download those manually.

41
0:05:31.680 --> 0:05:38.800
Now they'll be able to just update the keys from upstream Debian and still have access to the

42
0:05:38.800 --> 0:05:49.520
mobian repo. We had also fixed some early mistakes and optimal choices regarding how we named

43
0:05:49.520 --> 0:06:02.240
packages, how we organize those and how we decided to ship all the device support tweaks. For example

44
0:06:02.240 --> 0:06:08.480
we used to have for each device one tweaks package, one support package which was just a meta package

45
0:06:08.480 --> 0:06:15.520
putting in all the dependencies. Right now for Qualcomm devices we have two packages which are

46
0:06:15.520 --> 0:06:22.320
in Debian itself those are Q-Come phone utils which contains all the tweaks which are common

47
0:06:22.320 --> 0:06:31.160
to every Qualcomm supported device and we have Droid juicer as well which I'll tell a bit more

48
0:06:31.160 --> 0:06:41.960
in a minute and in the end now seems a good time to finally go stable. So what will it look like?

49
0:06:41.960 --> 0:06:49.200
We have support for the devices we already support basically so those are the Linux first

50
0:06:49.200 --> 0:06:56.080
phones, PinePhone, PinePhone Pro and the Librem 5. We also have some Qualcomm based devices mostly

51
0:06:56.080 --> 0:07:04.440
SDM 845 thanks to the awesome work the community has done on this kernel and of course we also

52
0:07:04.440 --> 0:07:12.360
ship some x86 images with or without non-free firmware depending on what you want and it runs

53
0:07:12.360 --> 0:07:20.080
just fine for example on the Microsoft surface pro and surface go tablets. This is really awesome.

54
0:07:20.080 --> 0:07:28.800
We also ship two flavors of Mobian one with Fosch and the other one with SXMO. We would have loved

55
0:07:28.800 --> 0:07:35.520
to ship a Plasma Mobile flavor as well but this won't make it. I'm pleased to announce that Plasma

56
0:07:35.520 --> 0:07:43.240
Mobile is finally in Debian itself but we only have the basics which are the calls, contact book,

57
0:07:43.240 --> 0:07:49.760
SMS application and settings application and of course the Plasma Mobile shell but that's not

58
0:07:49.760 --> 0:07:55.480
enough to ship a stable image based on Plasma Mobile so we'll keep that one and start releasing

59
0:07:55.480 --> 0:08:02.360
it for the Trixie development cycle which is the next Debian testing and of course we'll ship an

60
0:08:02.360 --> 0:08:08.800
LTS kernel and we'll commit to keep it up to date with security updates and try to update it as

61
0:08:08.800 --> 0:08:17.840
often as possible for all the supported devices. We also going to ship some kind of semi universal

62
0:08:17.840 --> 0:08:25.760
images. One thing we'd like to achieve with Mobian is that you could just ship one image and flash

63
0:08:25.760 --> 0:08:32.560
it on any supported device and the kernel would support the device. All the small config tweaks

64
0:08:32.560 --> 0:08:41.160
needed for this device would be applied automatically, the firmware could be extracted and so on and we

65
0:08:41.160 --> 0:08:49.560
didn't quite get there yet but we're getting closer. For example on the SDM845 devices those

66
0:08:49.560 --> 0:08:57.200
are Android based devices and they need some proprietary firmware blobs to just work. The

67
0:08:57.200 --> 0:09:04.440
thing is this firmware is shipped by the phone manufacturer, there's no clear license allowing

68
0:09:04.440 --> 0:09:12.600
you to redistribute it so we just can't package those into Debian and call it today. This is why

69
0:09:12.600 --> 0:09:23.240
I came with Droid juicer. The thing is this is a small runtime program, it runs on boot, it mounts

70
0:09:23.240 --> 0:09:30.880
the Android vendor partitions, fetches the firmware from there and copies it into the Linux user space

71
0:09:30.880 --> 0:09:38.600
root file system and then afterwards you rebuild the intramfs, reboot the device and on the next

72
0:09:38.600 --> 0:09:45.720
boot you have your Android device with all the firmware you need running just right now without

73
0:09:45.720 --> 0:09:55.040
the need for downloading firmware from the internet. By doing so we also can have one

74
0:09:55.040 --> 0:10:06.240
image for every single SDM845 devices, one root FS at least because the boot image is using the

75
0:10:06.240 --> 0:10:12.680
device tree for the specific device but you have one root file system and as many boot images as

76
0:10:12.680 --> 0:10:21.360
you have device supported and it just avoids the need for any device specific tweaks and so we

77
0:10:21.360 --> 0:10:26.320
hope that in the future this can be extended to other Qualcomm based devices such as the

78
0:10:26.320 --> 0:10:31.600
Fairphone 4 for example which by the way runs quite nicely on mobile and thanks to the work

79
0:10:31.600 --> 0:10:39.880
Luca has done so far. So that's one of the semi universal images, the other one we're planning

80
0:10:39.880 --> 0:10:49.600
to implement is for all the Pine64 devices because those need very few device specific tweaks, the

81
0:10:49.600 --> 0:10:58.040
two of those the Pinephone and the PineTab already share the same kernel and all we have to do which

82
0:10:58.040 --> 0:11:03.360
is not that easy but all we have to do is basically import the downstream patches for the Pinephone

83
0:11:03.360 --> 0:11:15.240
Pro into this kernel. This can happen quite easily but we still have some things, some details we need

84
0:11:15.240 --> 0:11:23.240
to work out especially considering the audio configuration on those devices due to the need

85
0:11:23.240 --> 0:11:31.720
to have the modem properly talking to the SOC in terms of audio and sample rates, frequencies and

86
0:11:31.720 --> 0:11:38.040
so on. So this might get pushed back a bit but we're working on it and we really hope that it

87
0:11:38.040 --> 0:11:48.040
can be done for Bookworm so that we only have SDM845 images, Pine64 images and one other for the

88
0:11:48.040 --> 0:11:54.080
Libram 5 which needs its own kernel because basically there are some patches that are

89
0:11:54.080 --> 0:12:02.680
incompatible with the Pinephone Pro kernel. They share the same block for the display output and

90
0:12:02.680 --> 0:12:10.440
if it works on one device it doesn't work on the other. Anyway, what we'll do during the freeze

91
0:12:10.440 --> 0:12:19.360
period, so basically Debian is being frozen in preparation for the stable release. We cannot

92
0:12:19.360 --> 0:12:27.840
have new packages in Debian starting the 12th of this month and one month later we cannot have

93
0:12:27.840 --> 0:12:34.000
any update at all unless it's bug fix. But we'll still be able to work on downstream packages to

94
0:12:34.000 --> 0:12:40.840
improve the stability and fix the remaining issues and hopefully, but we make no promise there, we'll

95
0:12:40.840 --> 0:12:46.960
be able to work a bit more upstream by submitting kernel patches, implementing proper to-boot

96
0:12:46.960 --> 0:12:55.880
support for the Libram 5 and Pine tab for example and yeah maybe we could think of other things but

97
0:12:55.880 --> 0:13:03.080
for now we're focusing on trying to improve things during the few months we'll have left before the

98
0:13:03.080 --> 0:13:10.520
stable release. And so what's next? Once we have a mobile stable, well we'll switch obviously to the

99
0:13:10.520 --> 0:13:19.280
Trixie development cycle, tracking the next Debian testing and trying to get even better software

100
0:13:19.280 --> 0:13:27.680
support for mobile devices. And so we're going to try to make it easier to support new devices in

101
0:13:27.680 --> 0:13:36.400
Mobian. This is already, we're paving the way with the SDM845 images and the.64 images and trying to

102
0:13:36.400 --> 0:13:42.560
get to a universal image and so we will hopefully make it easier for people to just support their

103
0:13:42.560 --> 0:13:50.080
own device. We will also support 64-bit RISC-V. We actually have all the bits and pieces in place,

104
0:13:50.080 --> 0:13:57.160
we have a dev board which is acting as a GitLab runner and is able to build packages for this

105
0:13:57.160 --> 0:14:04.680
architecture which is already supported in Debian and so that's one, we'll just flip the switch once

106
0:14:04.680 --> 0:14:11.440
the stable release is there. We'll keep packaging new software and new options for our users,

107
0:14:11.440 --> 0:14:18.680
bit plus my mobile as I mentioned already, Lomi read, the UB ports user interface and finally

108
0:14:18.680 --> 0:14:28.960
try to get this universal alignment thing out of the box and working smoothly. That's basically it

109
0:14:28.960 --> 0:14:33.920
for me. You have a bunch of links there, the slides are uploaded to the website so feel free

110
0:14:33.920 --> 0:14:41.280
to go there and yeah, I'm not sure we have time for any questions. So first thank you very much.

111
0:14:41.280 --> 0:15:04.200
One minute, two minutes for questions.

112
0:15:11.280 --> 0:15:25.880
Well the question was for the semi universal images where we extract firmware from the Android

113
0:15:25.880 --> 0:15:34.200
vendor partition, do we have a solution for getting the updates from the vendor itself? The answer is

114
0:15:34.200 --> 0:15:42.160
no. You just get what you have on the device by the time it's run, you can flash a new Android

115
0:15:42.160 --> 0:15:51.360
ROM on your device and then reinstall Mobian if needed and then it will pick the new firmware but

116
0:15:51.360 --> 0:15:58.440
there's no automated way and I really doubt that Android phone vendors will participate in LVFS

117
0:15:58.440 --> 0:16:15.320
to get updates in a timely manner to users. One last question perhaps. Would it be possible for

118
0:16:15.320 --> 0:16:23.720
Mobian to be completely assimilated in Debian? Almost. The only thing that will be pushing us

119
0:16:23.720 --> 0:16:33.440
further from this goal right now is kernel support. If we manage to get fully supported devices in

120
0:16:33.440 --> 0:16:40.360
the upstream kernel, that means upstreaming a lot of downstream patches and doing so for any new

121
0:16:40.360 --> 0:16:46.720
device which will arise in the next few years, then yes, we'll be able to be completely part of Debian

122
0:16:46.720 --> 0:16:53.200
and have no downstream repository at all but for now we're being held back by the kernel situation

123
0:16:53.200 --> 0:16:59.080
basically. Okay, thank you very much. We don't have more time. Thank you.

