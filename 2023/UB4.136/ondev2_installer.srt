1
0:00:00.000 --> 0:00:13.320
Okay, so welcome Oliver, as I said, installing stuff and all the reviewers know.

2
0:00:13.320 --> 0:00:18.160
First impressions count, so whether you have a nice installer or not will make or break

3
0:00:18.160 --> 0:00:20.240
your review of the Linux problem.

4
0:00:20.240 --> 0:00:22.160
So welcome Oliver.

5
0:00:22.160 --> 0:00:23.160
Thank you.

6
0:00:23.160 --> 0:00:26.960
Yeah, so this is called on Dev2.

7
0:00:26.960 --> 0:00:31.800
I'm Oliver Smith and as you can see from the number there's probably also a first version,

8
0:00:31.800 --> 0:00:32.800
right?

9
0:00:32.800 --> 0:00:35.160
So I'm going to tell the story of that a bit.

10
0:00:35.160 --> 0:00:40.080
It started with the PinePhone PostMarketer as community edition where we figured, well,

11
0:00:40.080 --> 0:00:45.880
it would be nice if when you bought the phone and you had PostMarketer preinstalled that

12
0:00:45.880 --> 0:00:47.480
you would be able to encrypt it actually.

13
0:00:47.480 --> 0:00:51.720
So it's not just installed but you can encrypt it like a proper phone.

14
0:00:51.720 --> 0:00:52.720
Yeah.

15
0:00:52.720 --> 0:00:58.080
And that's how the idea for the on-device installer was born.

16
0:00:58.080 --> 0:01:00.280
It looks like this.

17
0:01:00.280 --> 0:01:05.960
Yeah, basically a simple UI, you press your continue button at the welcome page, then

18
0:01:05.960 --> 0:01:13.280
you put in a password or pin for the user and you can select whether you want full disk

19
0:01:13.280 --> 0:01:15.680
encryption or not.

20
0:01:15.680 --> 0:01:17.200
And that's that.

21
0:01:17.200 --> 0:01:21.760
After we released that, an additional feature came, which is that you can select whether

22
0:01:21.760 --> 0:01:26.240
you want to install to the EMMC from the SD card.

23
0:01:26.240 --> 0:01:31.520
So if you already have a PinePhone where something else is installed or PostMarketer as is broken

24
0:01:31.520 --> 0:01:37.680
or whatever, then you can just take an SD card, put the on-device installer on it, and

25
0:01:37.680 --> 0:01:42.120
then you will see this prompt here and it asks you, do you want to install to the SD

26
0:01:42.120 --> 0:01:47.560
card itself, which works after some complicated stuff.

27
0:01:47.560 --> 0:01:52.560
And you can also install to the EMMC and override stuff there.

28
0:01:52.560 --> 0:01:53.920
That's what it can do basically.

29
0:01:53.920 --> 0:01:56.040
And this is our cross-distro project.

30
0:01:56.040 --> 0:01:59.720
So not only PostMarketer as is using this, but also Mobian.

31
0:01:59.720 --> 0:02:00.720
Looks like this.

32
0:02:00.720 --> 0:02:03.320
Mobian already did a talk.

33
0:02:03.320 --> 0:02:07.080
And yeah, they boosted the fund a bit, but it's basically the same.

34
0:02:07.080 --> 0:02:11.960
And they also added that you can choose the file system, which is quite nice.

35
0:02:11.960 --> 0:02:17.280
So I thought to myself, well, it's good that we have this and it works for what it does.

36
0:02:17.280 --> 0:02:21.720
And it was good as an initial version, but what would be the perfect version of this,

37
0:02:21.720 --> 0:02:22.720
right?

38
0:02:22.720 --> 0:02:26.160
And a lot of people tried this out and they figured, well, it would be nice if they had

39
0:02:26.160 --> 0:02:32.320
more options like being able to select a file system or the host name or what have you,

40
0:02:32.320 --> 0:02:36.880
like 100 options like you have in a desktop Linux installer.

41
0:02:36.880 --> 0:02:39.760
And other people were like, well, it's too much options already.

42
0:02:39.760 --> 0:02:42.000
What is this SSH user, which we also removed.

43
0:02:42.000 --> 0:02:44.500
There was a separate user which you could set up.

44
0:02:44.500 --> 0:02:51.200
And so it's a bit conflicting and it was hard to figure out what would be the perfect version.

45
0:02:51.200 --> 0:02:58.320
And besides that, it would also be necessary to choose the language and locale.

46
0:02:58.320 --> 0:03:00.200
And it would be nice if it was adaptive.

47
0:03:00.200 --> 0:03:05.520
So it doesn't look like a letterbox like this when you run it on a laptop, which is the

48
0:03:05.520 --> 0:03:07.400
case of the first one.

49
0:03:07.400 --> 0:03:12.440
Yeah, and also it would be nice if there was the same keyboard because the keyboard was

50
0:03:12.440 --> 0:03:17.000
entirely different and also there was another keyboard in the unlock application and then

51
0:03:17.000 --> 0:03:19.680
another one when you finally have it installed.

52
0:03:19.680 --> 0:03:23.080
So you had three keyboards, which is not very consistent.

53
0:03:23.080 --> 0:03:29.920
So my plan was to add a simple and advanced mode so you could deal with that some people

54
0:03:29.920 --> 0:03:32.200
want more options, some people want less options.

55
0:03:32.200 --> 0:03:37.100
So the casual users can just go to the simple installation and have the least questions

56
0:03:37.100 --> 0:03:39.860
asked that you need to get it running.

57
0:03:39.860 --> 0:03:43.840
And the advanced mode would be for the nodes where you can pick everything and have it

58
0:03:43.840 --> 0:03:48.160
encrypted or not and choose separate passwords if you want and so on.

59
0:03:48.160 --> 0:03:51.400
Yeah, so I went ahead.

60
0:03:51.400 --> 0:03:55.680
This is the decision tree which you would have for the simple and advanced mode.

61
0:03:55.680 --> 0:03:57.760
This is the simple path.

62
0:03:57.760 --> 0:04:01.880
So it goes through Wacom, then you choose your language and locale.

63
0:04:01.880 --> 0:04:03.400
Then it asks you simple or advanced.

64
0:04:03.400 --> 0:04:07.520
Then you say simple and then you choose the installation storage if it's possible with

65
0:04:07.520 --> 0:04:09.200
your device.

66
0:04:09.200 --> 0:04:15.200
And then you would set up one combined password for full disk encryption and for the user.

67
0:04:15.200 --> 0:04:19.120
And it wouldn't even ask you if you want to encrypt it because it's just assumed, okay,

68
0:04:19.120 --> 0:04:23.360
that's the right thing to do for normal people who don't care.

69
0:04:23.360 --> 0:04:25.200
And then it's ready to install.

70
0:04:25.200 --> 0:04:30.060
And then we have the advanced path, which is more complicated.

71
0:04:30.060 --> 0:04:34.400
You get asked for the storage device, then you can pick the file system, the host name,

72
0:04:34.400 --> 0:04:38.200
the user name and maybe lots of more options we can add later.

73
0:04:38.200 --> 0:04:42.680
And you set the user password, then it asks you do you want full disk encryption or not.

74
0:04:42.680 --> 0:04:45.280
And then it asks you do you want to use the same password or not.

75
0:04:45.280 --> 0:04:48.360
In the current installer, it didn't work like this.

76
0:04:48.360 --> 0:04:52.040
You had to type in the same password again if you wanted the same password and that's

77
0:04:52.040 --> 0:04:55.360
not very optimal and a tiny phone screen, you know.

78
0:04:55.360 --> 0:04:59.520
So yeah, after that, you're ready to install.

79
0:04:59.520 --> 0:05:02.600
So as you can see, this is a nightmare of choices.

80
0:05:02.600 --> 0:05:07.000
And yeah, it would need a lot of testing.

81
0:05:07.000 --> 0:05:10.760
You would need to test all the code paths every time and to make this feasible, it needs

82
0:05:10.760 --> 0:05:13.200
to be automated.

83
0:05:13.200 --> 0:05:17.640
And this was not possible with the current code stack.

84
0:05:17.640 --> 0:05:19.560
So I looked elsewhere.

85
0:05:19.560 --> 0:05:21.440
So first here's a slide.

86
0:05:21.440 --> 0:05:26.240
We need short test cycles, CI for all paths, and it should be easy to extend that it's

87
0:05:26.240 --> 0:05:30.660
not much effort to add a new option if it's where it makes sense, right?

88
0:05:30.660 --> 0:05:33.960
Of course, the idea is not to add endless options that don't make sense at all, but

89
0:05:33.960 --> 0:05:37.560
some of them are really useful for users.

90
0:05:37.560 --> 0:05:42.440
So I looked around and figured what could I use for the stack and I found this nice

91
0:05:42.440 --> 0:05:43.440
application.

92
0:05:43.440 --> 0:05:47.280
This is called Unlocker by Johannes Marbach.

93
0:05:47.280 --> 0:05:53.040
And it's a replacement for OSK-SDL, which is the unlocking application you use to type

94
0:05:53.040 --> 0:05:56.480
in your password after you have installed it.

95
0:05:56.480 --> 0:06:00.760
And yeah, the nice thing about it is it can use the keyboard layout from Fosch.

96
0:06:00.760 --> 0:06:04.120
So that's already pretty consistent then.

97
0:06:04.120 --> 0:06:05.400
And it's very small.

98
0:06:05.400 --> 0:06:06.400
It's based on LVGA.

99
0:06:06.400 --> 0:06:11.000
Yeah, it has a dark mode.

100
0:06:11.000 --> 0:06:13.840
And you can, it's actually adaptive like this.

101
0:06:13.840 --> 0:06:17.040
So lots of great potential here.

102
0:06:17.040 --> 0:06:21.080
So I based on Dev2 on this.

103
0:06:21.080 --> 0:06:24.040
And behold, on the next slide, you will see what it looks like.

104
0:06:24.040 --> 0:06:25.040
Looks like this.

105
0:06:25.040 --> 0:06:29.360
Yeah, it's still like a similar format.

106
0:06:29.360 --> 0:06:32.600
You will see some description and then you, in this case, you select the language and

107
0:06:32.600 --> 0:06:34.480
then continue.

108
0:06:34.480 --> 0:06:39.400
And then you, like here are a few example screens which it has.

109
0:06:39.400 --> 0:06:44.360
Here you can pick whether you want a simple installation or advanced installation and

110
0:06:44.360 --> 0:06:48.680
where you want to install it on your eMMC or SD.

111
0:06:48.680 --> 0:06:51.440
And here is, here you would set a combined password.

112
0:06:51.440 --> 0:06:54.160
I know the visibility icon is a bit blown up.

113
0:06:54.160 --> 0:06:56.800
This needs to be fixed, but that's the current state.

114
0:06:56.800 --> 0:07:00.480
Yeah, and here it asks you if you want to use the same password or not.

115
0:07:00.480 --> 0:07:04.440
So basically what I showed in the decision tree earlier.

116
0:07:04.440 --> 0:07:10.000
Meanwhile, while it's displaying all these dialogues, you will see on the serial output

117
0:07:10.000 --> 0:07:12.280
that there's a text interface.

118
0:07:12.280 --> 0:07:17.960
And this is useful because, well, it's kind of nice that you can also type in the answers

119
0:07:17.960 --> 0:07:20.680
on your keyboard, but it has some practical use.

120
0:07:20.680 --> 0:07:25.560
It can be used for accessibility when we hook it up with some text-to-speech and speech-to-text

121
0:07:25.560 --> 0:07:26.640
stuff.

122
0:07:26.640 --> 0:07:31.160
And then you could actually talk your way through the installation.

123
0:07:31.160 --> 0:07:38.080
And it's of course very useful for testing because then we can, yeah, just run through

124
0:07:38.080 --> 0:07:40.800
the whole thing in an expect script.

125
0:07:40.800 --> 0:07:47.080
And that's, so there's one line which would interact with this dialog and there's a function

126
0:07:47.080 --> 0:07:51.960
button and it waits for a page with the title Advanced Options.

127
0:07:51.960 --> 0:07:56.280
Then it looks for a button called Simple Installation and it has to be the first one, all based on

128
0:07:56.280 --> 0:07:59.160
the text output above.

129
0:07:59.160 --> 0:08:00.760
And it presses it.

130
0:08:00.760 --> 0:08:04.180
And if the dialog doesn't show up, then it runs into a timeout and the test fails.

131
0:08:04.180 --> 0:08:10.240
And so as you can see, we can add new tests and extend the test really easily.

132
0:08:10.240 --> 0:08:14.300
That was the goal, that it's super easy to test the whole thing.

133
0:08:14.300 --> 0:08:15.300
What comes next?

134
0:08:15.300 --> 0:08:20.140
Yeah, some, oh yeah, the code.

135
0:08:20.140 --> 0:08:23.960
So this is what the code looks like for this Advanced Options page.

136
0:08:23.960 --> 0:08:30.480
The idea was to make it very small and I believe I've accomplished that.

137
0:08:30.480 --> 0:08:33.780
So you set the title, the description.

138
0:08:33.780 --> 0:08:34.980
It can be translated.

139
0:08:34.980 --> 0:08:38.640
That's why there's this T around it and you set the buttons.

140
0:08:38.640 --> 0:08:41.640
And that's how you would add a new page like this.

141
0:08:41.640 --> 0:08:48.080
And you don't need to add some XML file with the layout or what have you.

142
0:08:48.080 --> 0:08:51.860
Yeah, so that's quite short.

143
0:08:51.860 --> 0:08:53.000
And this is the button handling.

144
0:08:53.000 --> 0:08:54.160
It's also not complicated.

145
0:08:54.160 --> 0:09:02.400
You don't need to read it now, but basically that's my point, that it's easy to extend.

146
0:09:02.400 --> 0:09:04.480
And then we have the current state.

147
0:09:04.480 --> 0:09:07.640
So it's still work in progress.

148
0:09:07.640 --> 0:09:11.320
What's done is it runs entirely in the integer MFS, which was not the case before.

149
0:09:11.320 --> 0:09:17.040
So this is also nice because it saves like 100 megabyte or so of overhead.

150
0:09:17.040 --> 0:09:21.560
There are these abstractions for pages, for installation steps, which also need to be

151
0:09:21.560 --> 0:09:22.560
extended.

152
0:09:22.560 --> 0:09:24.960
I just showed you the decision tree, but that's only the front end.

153
0:09:24.960 --> 0:09:30.240
The back end, of course, needs to handle all these decisions also and needs to react based

154
0:09:30.240 --> 0:09:33.920
on what you chose there.

155
0:09:33.920 --> 0:09:38.760
Test cases are there already for installing from SD to SD, from SD to eMMC.

156
0:09:38.760 --> 0:09:39.760
And these are just examples.

157
0:09:39.760 --> 0:09:44.300
We could also add NVMe, of course, and what other installation mediums you have.

158
0:09:44.300 --> 0:09:48.640
But I think it's useful for the user to be able to see, okay, this is the SD card and

159
0:09:48.640 --> 0:09:54.320
not this is some dev MMC BLK0 or what have you for the normal users so they know where

160
0:09:54.320 --> 0:09:55.640
they are going to install it.

161
0:09:55.640 --> 0:10:00.160
So I just called it SD and set a path in a config.

162
0:10:00.160 --> 0:10:02.960
And yeah, the tests run with LO setup or QMU.

163
0:10:02.960 --> 0:10:06.080
You can use LO setup to run it on your own laptop.

164
0:10:06.080 --> 0:10:10.240
And this gives you the fastest test iteration cycle.

165
0:10:10.240 --> 0:10:11.880
You can also run it in QMU.

166
0:10:11.880 --> 0:10:17.720
So you make sure that you have all the files in the integer MFS actually and that it works

167
0:10:17.720 --> 0:10:21.720
after rebooting that you can properly boot into the onOS.

168
0:10:21.720 --> 0:10:24.360
And so this is the more complete test.

169
0:10:24.360 --> 0:10:28.280
And with LO setup, I actually rebooted my own PC once.

170
0:10:28.280 --> 0:10:34.360
So you need to look out for that if you run it next to your regular operating system.

171
0:10:34.360 --> 0:10:40.040
To do what's needed to replace the first on the WES installer is some more testing, some

172
0:10:40.040 --> 0:10:45.760
fixed me's and the usual stuff properly integrated into postmark address at least.

173
0:10:45.760 --> 0:10:52.600
So yeah, I would be happy if Mobian also wants to use this and other distributions are.

174
0:10:52.600 --> 0:10:55.680
And we have so many distributions out there.

175
0:10:55.680 --> 0:11:00.840
Yeah, but postmark address is probably the first test case because this was developed

176
0:11:00.840 --> 0:11:03.560
in tandem with it.

177
0:11:03.560 --> 0:11:06.840
And for the next level, this is the really exciting stuff.

178
0:11:06.840 --> 0:11:13.120
So when once it works and replaces the current one, we could actually support more devices,

179
0:11:13.120 --> 0:11:18.920
Android devices, Chrome OS devices, because for them you can just install it on the whole

180
0:11:18.920 --> 0:11:20.080
storage device.

181
0:11:20.080 --> 0:11:26.240
You have to keep in mind that there are already partitions and you need to use them in some

182
0:11:26.240 --> 0:11:28.200
way.

183
0:11:28.200 --> 0:11:32.760
And what's nice is we could download the OS images with Wi-Fi.

184
0:11:32.760 --> 0:11:38.600
So you would only flash this very tiny installer to your SD card, boot it up, and then you

185
0:11:38.600 --> 0:11:43.720
could pick any OS image and download it and you wouldn't need to create a new SD card

186
0:11:43.720 --> 0:11:49.120
every time and it would be much faster than when you have to flash this whole image every

187
0:11:49.120 --> 0:11:50.680
time.

188
0:11:50.680 --> 0:11:54.800
And yeah, even better, we could also construct the OS images on the fly with the package

189
0:11:54.800 --> 0:11:59.280
manager, which is APK in the case of postmark address Alpine.

190
0:11:59.280 --> 0:12:03.320
And then we might be able to get rid of some of the OS images because it takes quite some

191
0:12:03.320 --> 0:12:06.520
resources to generate them every time.

192
0:12:06.520 --> 0:12:10.400
So this would be nice also.

193
0:12:10.400 --> 0:12:15.520
And yeah, that's towards the end of my presentation.

194
0:12:15.520 --> 0:12:20.320
Thanks to all these people who helped out making this possible and thank you for listening,

195
0:12:20.320 --> 0:12:21.320
of course.

196
0:12:21.320 --> 0:12:43.600
Thanks for the talk and thanks for the work you do.

197
0:12:43.600 --> 0:12:48.120
Yes that's the plan to use Unlockr to replace OSK as the other also.

198
0:12:48.120 --> 0:12:52.840
And that's quite far, I believe, there were some bugs with some very few phones.

199
0:12:52.840 --> 0:13:02.360
This is why we didn't roll it out before, but it should be there sometime soon.

200
0:13:02.360 --> 0:13:03.360
Any more questions?

201
0:13:03.360 --> 0:13:04.360
Yeah.

202
0:13:04.360 --> 0:13:15.360
You mentioned the expected use case, if you put it in an SD card, an SD card, but do you

203
0:13:15.360 --> 0:13:20.520
could flash the on-device installer to the place where you would install the operating

204
0:13:20.520 --> 0:13:25.040
system and from there it can expand itself into the installation.

205
0:13:25.040 --> 0:13:29.520
So this works by you have first the boot partition, then you have a lot of empty space where you

206
0:13:29.520 --> 0:13:35.520
will put the installation and then you have the on-device installer and it partitions,

207
0:13:35.520 --> 0:13:40.760
it uses the empty space and creates the load script set up device there and then shafts

208
0:13:40.760 --> 0:13:45.360
the data from the third partition in there and then delete this to third partition and

209
0:13:45.360 --> 0:13:48.600
expands it and that's how it also currently works.

210
0:13:48.600 --> 0:13:50.600
Is that an idea or is that implemented?

211
0:13:50.600 --> 0:13:54.360
That's already implemented in the first version already, and the second version can do that

212
0:13:54.360 --> 0:13:55.360
too.

213
0:13:55.360 --> 0:13:56.360
Yeah.

214
0:13:56.360 --> 0:14:03.680
What is the minimum RAM requirements for the initial OSK?

215
0:14:03.680 --> 0:14:10.960
I didn't look, but I would expect, I mean it's AVGL, it's super tiny, maybe 50 megabytes

216
0:14:10.960 --> 0:14:14.360
or 100, it's tiny really.

217
0:14:14.360 --> 0:14:20.720
You can compile the whole UI thing in like a second or so, so it's really, it's also

218
0:14:20.720 --> 0:14:22.440
fun to develop with this.

219
0:14:22.440 --> 0:14:23.440
Yeah.

220
0:14:23.440 --> 0:14:31.560
I have a question if there's no more because it's this train independent, so what's the

221
0:14:31.560 --> 0:14:38.040
way to handle distro specific things like configuring repository sources or set different

222
0:14:38.040 --> 0:14:41.440
ways to set host names on different distros, things like that?

223
0:14:41.440 --> 0:14:42.440
Good question.

224
0:14:42.440 --> 0:14:48.040
There's a config file and there's actually some distro specific parts inside the main

225
0:14:48.040 --> 0:14:53.480
repository upstream and they are separated in a different directory and there you have

226
0:14:53.480 --> 0:14:58.560
a directory structure for all the operating systems and my idea is that we test them in

227
0:14:58.560 --> 0:15:02.920
CI all the time so we ensure that they don't break so when you make one change that it

228
0:15:02.920 --> 0:15:05.160
still works in all the other distros.

229
0:15:05.160 --> 0:15:08.720
And you have a separate config file and you can run your own code.

230
0:15:08.720 --> 0:15:12.520
There are some hooks for example after you're done with installing and you want to regenerate

231
0:15:12.520 --> 0:15:18.040
the in the drum of S then you can put the commands for that in a shell script and run

232
0:15:18.040 --> 0:15:19.040
that after the installation.

233
0:15:19.040 --> 0:15:20.040
Okay, cool, thank you.

234
0:15:20.040 --> 0:15:21.040
Okay.

235
0:15:21.040 --> 0:15:22.040
No more questions?

236
0:15:22.040 --> 0:15:23.040
Okay, so thank you very much, Halle.

237
0:15:23.040 --> 0:15:34.840
Okay, this is the end of the session.

