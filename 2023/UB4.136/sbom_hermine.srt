1
0:00:00.000 --> 0:00:13.360
Okay, thanks. So, hi everyone. So, we're about to present you the Ermin project. So, for

2
0:00:13.360 --> 0:00:20.360
those who were here on Friday, I can't talk close to the microphone.

3
0:00:20.360 --> 0:00:31.560
It's only for the video. Okay, sorry. So, yeah, it's the same project that we mentioned on

4
0:00:31.560 --> 0:00:38.120
Friday and hopefully the presentation will be easier to understand. Also, because I'm

5
0:00:38.120 --> 0:00:49.600
with Nico Atoza. Okay. So, I'm with Nico Atoza from Orange

6
0:00:49.600 --> 0:00:55.760
Oula in terms of the general idea of the project. Thank you.

7
0:00:55.760 --> 0:01:05.000
Okay, speaking now. So, what's Ermin, a man apart from a really nice animal, which does

8
0:01:05.000 --> 0:01:11.040
take an age in French. So, it's quite a young project. It's been existing for a year now,

9
0:01:11.040 --> 0:01:19.160
initiated by InnoCube and joined by five other large French companies.

10
0:01:19.160 --> 0:01:28.680
We're trying to do things properly. We haven't joined an organization yet, Foundation, but

11
0:01:28.680 --> 0:01:32.360
that's planned. We have three committees. That's important.

12
0:01:32.360 --> 0:01:39.400
A legal committee, because you'll see later it's all around legal respect, made by jurists,

13
0:01:39.400 --> 0:01:48.560
mostly for jurists. And then, well, we do use a FERO or DBL and so on and so forth.

14
0:01:48.560 --> 0:01:55.640
Can you move to the next? Right. So, we're building something new.

15
0:01:55.640 --> 0:02:00.200
And well, we think so. And we do rely on existing well-established

16
0:02:00.200 --> 0:02:04.360
touring. All of those have been hearing about it all

17
0:02:04.360 --> 0:02:08.600
day. Let's move to the next one. Probably know these ones.

18
0:02:08.600 --> 0:02:16.800
Right. So, the nice part. What it's all about. So, the idea is to really implement your open

19
0:02:16.800 --> 0:02:21.400
source policy. So, we take on one hand all the license texts

20
0:02:21.400 --> 0:02:28.600
from the open source licenses. We break them down into obligations. So, do you have to

21
0:02:28.600 --> 0:02:32.320
disclose a source code, mention the authors and so on and so forth?

22
0:02:32.320 --> 0:02:40.120
On the other hand, we take S-BOMS from the project and we enrich it with legal and technical

23
0:02:40.120 --> 0:02:48.400
context. In the middle, that's where the magic happens. We kind of apply your open source

24
0:02:48.400 --> 0:02:53.640
policy. And out of this, we get on one hand, we get

25
0:02:53.640 --> 0:02:58.920
a validation or not. Is it okay to use that license in that context?

26
0:02:58.920 --> 0:03:03.720
And on the other hand, you get a nice list of obligations you really have to follow,

27
0:03:03.720 --> 0:03:07.960
because you have plenty of obligations and plenty of context. Sometimes you have to follow

28
0:03:07.960 --> 0:03:15.360
them. Sometimes it depends on the context. That's the big picture.

29
0:03:15.360 --> 0:03:22.760
And that's next to Kenny. So, before talking about S-BOMS itself,

30
0:03:22.760 --> 0:03:27.880
you have to have a kind of preparatory case. So, that's license analysis.

31
0:03:27.880 --> 0:03:35.800
It's because the tool was mainly designed for IP lawyers, but we are not familiar with

32
0:03:35.800 --> 0:03:43.120
the open source licenses. So, what we wanted to do is to be able for

33
0:03:43.120 --> 0:03:50.800
them to save time while still being confident in the decisions that were made.

34
0:03:50.800 --> 0:03:57.800
So also, it was important. It's a shared tool. But of course, every company has its own open

35
0:03:57.800 --> 0:04:08.560
source policy, so it had to be flexible enough. So, the first aspect is kind of a pedagogical

36
0:04:08.560 --> 0:04:17.400
framework that will allow lawyers to systematically and consistently analyse open source licenses.

37
0:04:17.400 --> 0:04:22.560
And that will also mean that if it's analysed systematically, we can handle the decision

38
0:04:22.560 --> 0:04:28.480
programmatically to a certain extent. And as I was saying, I mean, the idea is also

39
0:04:28.480 --> 0:04:35.200
to share interpretations, because if you have a broader consensus about interpretations,

40
0:04:35.200 --> 0:04:43.720
then that will increase legal predictability and then to reduce legal risks.

41
0:04:43.720 --> 0:04:49.280
So when we do license analysis, it's basically breakdown in three parts.

42
0:04:49.280 --> 0:04:55.720
The first part is just the global characteristics of the licenses, like about the copyright

43
0:04:55.720 --> 0:05:03.280
level, the types of rights granted, like if you have patent grants, stuff like that.

44
0:05:03.280 --> 0:05:09.560
I mean, technical things like the choice of law of venue, etc.

45
0:05:09.560 --> 0:05:15.240
And the more important is your policy status. I mean, if you always allow it, if you never

46
0:05:15.240 --> 0:05:23.200
allow it, or if you allow it depending on context. But then if you allow it depending

47
0:05:23.200 --> 0:05:28.720
on context, well, you'll have to specify which context it's allowed in.

48
0:05:28.720 --> 0:05:39.240
And if your context is based on simple enough facts, you will be able to automate that.

49
0:05:39.240 --> 0:05:44.920
So for instance, you can have two sub-category of context. You will have a technical context.

50
0:05:44.920 --> 0:05:51.480
I mean, typically, how if it has been modified or not, if it's the type of linking it has

51
0:05:51.480 --> 0:05:58.000
with your code base. But also you can associate it to a category of your products, which means

52
0:05:58.000 --> 0:06:01.240
that a product for which the IP will be treated differently.

53
0:06:01.240 --> 0:06:08.720
I mean, typically, in many cases, you won't accept to have a GPL v2. But if you do embedded

54
0:06:08.720 --> 0:06:13.000
Linux, of course you will accept it. So that will not depend on the technical nature of

55
0:06:13.000 --> 0:06:17.160
the third party components or it's linking to your code base. It really, really depends

56
0:06:17.160 --> 0:06:22.040
on the business expectations that you are doing on the final projects.

57
0:06:22.040 --> 0:06:29.440
And so we can automate that. And the third party, it's the breaking down of each license

58
0:06:29.440 --> 0:06:37.040
in obligation. And each regulation will be triggered at two levels. The first one is

59
0:06:37.040 --> 0:06:42.560
if it has been modified or not. Because in many cases, I mean, you have many obligations

60
0:06:42.560 --> 0:06:48.040
that you don't care about just because you're just redistributing unmodified third party

61
0:06:48.040 --> 0:06:53.680
components. And the second one is the type of expectations, which means do you distribute

62
0:06:53.680 --> 0:07:00.040
it? I mean, a source has been a binary. Or do you provide network interaction? Et cetera.

63
0:07:00.040 --> 0:07:06.360
And also, I mean, when you break down different licenses, you will realize that very often

64
0:07:06.360 --> 0:07:11.120
you have very similar obligations. I mean, they're not phrased in the same way. But you

65
0:07:11.120 --> 0:07:16.520
can decide and that the choice of the lawyer that actually is equivalent in the way they

66
0:07:16.520 --> 0:07:20.880
have to be respected. And so you can relate that to a generic obligation. And then you

67
0:07:20.880 --> 0:07:26.720
will only care about generic obligation. And you will only care about a specific obligation

68
0:07:26.720 --> 0:07:36.720
when they are not related to a generic obligation. And that's about it. And so now that you have

69
0:07:36.720 --> 0:07:42.320
your policy ready, you can be ready to handle S-BOMs. And I will pass you the microphone.

70
0:07:42.320 --> 0:07:49.640
Thank you. OK. So that was the right hand part, the licensing obligation. Now we're

71
0:07:49.640 --> 0:07:56.360
looking at the left hand part. How do you handle the S-BOM? So today, we mostly work

72
0:07:56.360 --> 0:08:01.440
with the evaluated report from Oort, O-R-T, you've heard about this morning and all the

73
0:08:01.440 --> 0:08:09.160
time. We're working on working with SPDX as well. There's a lot of work to be done in

74
0:08:09.160 --> 0:08:19.040
this area. And we'll have to go to and support Cyclone DX in the future as well. Right. So

75
0:08:19.040 --> 0:08:23.200
when you take this S-BOM, you have plenty of information, but you don't have all the

76
0:08:23.200 --> 0:08:29.200
information we need on the context. Two types of information we want to add. We want to

77
0:08:29.200 --> 0:08:37.640
add the technical details. So sometimes you can get it inside the SPDX report. But I guess

78
0:08:37.640 --> 0:08:42.680
there's more automation we can do in this field. But we definitely need to add manually

79
0:08:42.680 --> 0:08:49.360
some extra information like the technical linking, how your component is linked to your

80
0:08:49.360 --> 0:08:56.480
application. The type of exploitation is what do you actually do with your components? Are

81
0:08:56.480 --> 0:09:02.600
you going to distribute it on the Internet? Are you going to distribute that to your end

82
0:09:02.600 --> 0:09:10.640
user? And so on and so forth. Is that a SaaS? You need to also specify if you have modified

83
0:09:10.640 --> 0:09:15.880
the source codes. That makes a big difference on how you're going to trigger the license,

84
0:09:15.880 --> 0:09:24.840
what you're going to have to do. And we also added recently some funding information. Where

85
0:09:24.840 --> 0:09:33.120
does the money come from for a given component? Given project. So the scope comes really handy

86
0:09:33.120 --> 0:09:39.640
to automate all the kind of things. Is that development dependency, build dependency, and

87
0:09:39.640 --> 0:09:49.160
so on and so forth. Plenty of things we can do to automate further. But yeah. Next, please.

88
0:09:49.160 --> 0:09:56.640
Right. So there's quite a lot of work to validate the S-BOMs. And this is what you see. It's

89
0:09:56.640 --> 0:10:04.520
really from a legal jurist point of view. Maybe more than a technical one. So when you

90
0:10:04.520 --> 0:10:10.000
get your S-BOM in, well, obviously you need a valid SPDX expression. If you don't have

91
0:10:10.000 --> 0:10:14.200
the SPDX expression, you don't know what you're talking about. So you need to know what license

92
0:10:14.200 --> 0:10:23.200
you have. Well, number two is a very specific case where when you want to have a choice

93
0:10:23.200 --> 0:10:29.800
to the user, you say it's either a GPL or MIT, quite often the developers tend to write

94
0:10:29.800 --> 0:10:35.960
this one and this one. But what they really mean is this one or this one. So we added

95
0:10:35.960 --> 0:10:47.960
a specific step to fix this particular problem. Type of exploitation we mentioned earlier.

96
0:10:47.960 --> 0:10:52.320
You have also to choose when you have this choice, MIT or GPL, at some point you have

97
0:10:52.320 --> 0:10:59.640
to decide which one you're going to select. Right. And all those licenses have to be reviewed

98
0:10:59.640 --> 0:11:06.400
by legal persons. They have to be what came and explained earlier. If that has not been

99
0:11:06.400 --> 0:11:12.240
done, then you have to go back to your jurist and say please analyze this license. And there's

100
0:11:12.240 --> 0:11:19.640
plenty of things that we did to automate this because it can be a lot of work. We're not

101
0:11:19.640 --> 0:11:26.360
going into details now. But in particular, we're working on exporting the curation methods

102
0:11:26.360 --> 0:11:34.400
to ORTs so you don't have to redo this in the future. Right. Return.

103
0:11:34.400 --> 0:11:43.160
Okay. So actually the interest of the tool is to combine the two aspects. And when you

104
0:11:43.160 --> 0:11:48.080
combine the two aspects, you end up with a list of obligations that you actually have

105
0:11:48.080 --> 0:11:58.520
to follow for your release. And so the idea is that it will really get rid of everything

106
0:11:58.520 --> 0:12:08.240
that is not actually needed. And also we have introduced this idea of a core set of obligations

107
0:12:08.240 --> 0:12:12.840
is that you don't necessarily, I mean, it's not always efficient to stick to the bare

108
0:12:12.840 --> 0:12:21.360
minimum of obligations. Typically you have licenses like BSD0 or unlicensed. They don't

109
0:12:21.360 --> 0:12:26.920
ask you to put license in the documentation. But it's more efficient to have the same process

110
0:12:26.920 --> 0:12:35.480
for every license and also for many reasons to do so. Also it allows you to classify your

111
0:12:35.480 --> 0:12:39.280
obligations as part of something normal. You know that you won't have any extra efforts

112
0:12:39.280 --> 0:12:44.400
or any special attention to put into your release because it's in your core set of

113
0:12:44.400 --> 0:12:49.400
general obligations. And so that gives you free time to actually concentrate on what

114
0:12:49.400 --> 0:12:59.680
is specific and more important. And also another thing that you get, it gives you a global

115
0:12:59.680 --> 0:13:05.240
visibility. And the different sort of components you have in your project. So it's rather

116
0:13:05.240 --> 0:13:09.720
easy for instance if you have log4j you can search for log4j and it will give you the

117
0:13:09.720 --> 0:13:17.480
different products and release which are involved. And also more importantly for us, you can

118
0:13:17.480 --> 0:13:24.160
know which of the third party components you are most relying on. And also it gives you

119
0:13:24.160 --> 0:13:29.560
a direct link to funding them. But it's because it's quite important to actually care about

120
0:13:29.560 --> 0:13:37.160
funding the third party components you rely on. And that's about it.

121
0:13:37.160 --> 0:13:48.480
Thank you. So where are we now? The project is ongoing obviously. We don't really have

122
0:13:48.480 --> 0:13:55.840
a 1.0 version yet. It's on the way. It's not really used in production yet. Maybe you do

123
0:13:55.840 --> 0:14:04.160
actually in a cube. Yeah, but we are not the typical users.

124
0:14:04.160 --> 0:14:12.080
We shall have one soon. Source code is available on GitLab.com. And we do, so we are talking

125
0:14:12.080 --> 0:14:18.640
about this breaking down of the licenses into obligations. That's a lot of work. And some

126
0:14:18.640 --> 0:14:27.520
of it is already available on GitLab as well. So you can have a look at this. And yeah,

127
0:14:27.520 --> 0:14:35.840
if you want to come, we speak back English but we are friendly. If you want to add something.

128
0:14:35.840 --> 0:14:45.760
Maybe because we have some time I can... Yeah, yeah. I think. Just to say on this particular

129
0:14:45.760 --> 0:14:56.560
side of the legal obligations, the idea is to also share with the project a set of licensees,

130
0:14:56.560 --> 0:15:00.720
sets of interpretations that can be shared by everyone. Yes.

131
0:15:00.720 --> 0:15:06.800
How are you going to deal with the back of the Syco DX only has one license field? And

132
0:15:06.800 --> 0:15:10.800
does not differentiate between conclusions and what's detected?

133
0:15:10.800 --> 0:15:16.240
Yeah. So just to repeat, how are we going to... Yeah, yeah. I'm doing that. How do we

134
0:15:16.240 --> 0:15:24.200
handle the fact that Syco DX only has one license field? I have no idea. Do you?

135
0:15:24.200 --> 0:15:28.760
We have just started implementing it. Because historically we have always been working with

136
0:15:28.760 --> 0:15:34.560
SPDX and that's quite natural. But we realized that some tools...

137
0:15:34.560 --> 0:15:41.600
Are you just going to assume it's included when you see something there? Yeah. We'll have to see how it goes.

138
0:15:41.600 --> 0:15:47.200
We have first started to submit some PS to their specifications because we had additional needs,

139
0:15:47.200 --> 0:15:52.320
like support for scopes and stuff like that. So we know that they come from security. They don't

140
0:15:52.320 --> 0:15:57.280
come from license. So it's really two different roles. I think that they'll have to evolve at

141
0:15:57.280 --> 0:16:07.840
some stage. But they seem very open to suggestions. But we're still implementing it. Yes. Thomas?

142
0:16:09.040 --> 0:16:13.920
How would you say Herbine is different than Ford? Ford also has a policy engine and

143
0:16:13.920 --> 0:16:23.120
reports and all that stuff. So as you know it, I mean, basically it started as a front end for

144
0:16:23.120 --> 0:16:30.480
OAuth. Because we wanted to have a graphical interface. So technically it's a Django app.

145
0:16:30.480 --> 0:16:38.560
And we have an API based on Django REST. So we want to stay as close as OAuth,

146
0:16:38.560 --> 0:16:44.880
including to the concept, as possible. But it works a bit differently. And that's why, I mean,

147
0:16:44.880 --> 0:16:52.480
when we make curations, we wanted to make them exportable as OAuth formats. And we also plan to

148
0:16:53.040 --> 0:16:58.560
be able to export your license policy and the OAuth format to be as compatible as possible.

149
0:16:58.560 --> 0:17:05.440
But the main difference is that it has a central database. I mean, just like when you used to use

150
0:17:05.440 --> 0:17:13.360
as OAuth 360, it brings the same functionality. So that's about that. And we really want to stay

151
0:17:13.360 --> 0:17:19.120
as close to OAuth. And that's why we contribute to OAuth when we can. Did I answer your question?

152
0:17:19.120 --> 0:17:26.080
Can I just ask? Sorry. Thank you. Yeah, there really is a lot of work around

153
0:17:26.080 --> 0:17:32.640
working on the licenses and sharing interpretations. So this is part, if you download Herbine and you

154
0:17:32.640 --> 0:17:39.200
execute it, it comes with a set of decisions and interpretations that you can use that you should

155
0:17:39.200 --> 0:17:45.440
actually read and make your own. But I guess that's on top of all. Sorry.

156
0:18:09.200 --> 0:18:23.200
Yeah. Actually, maybe I think it is. But for instance, I mean, we mainly rely on

157
0:18:23.760 --> 0:18:31.280
the model of OAuth, which is kind of semi-official. I'm not sure it's really publicly

158
0:18:31.280 --> 0:18:39.760
documented. The evaluated model. Okay. Yeah, I mean, the code is public. But that's really,

159
0:18:39.760 --> 0:18:48.480
I mean, the kind of information we like, it's like we have scopes. And we have it in also

160
0:18:48.480 --> 0:18:55.040
sub-projects. Because when you scan, for instance, you can have your composer.json and your package.

161
0:18:55.040 --> 0:19:00.160
It's easy to say, okay, this is my dependency for my backend. These are the

162
0:19:01.600 --> 0:19:07.920
execution dependencies. And it comes naturally. I think it could be implemented in a SPU. But I

163
0:19:07.920 --> 0:19:14.320
don't think it's present in a, okay. So because initially, I mean, we wanted to stick as much as

164
0:19:14.320 --> 0:19:21.840
possible. So we say, okay, we will interface with OAuth through SPU. But it was not really convenient.

165
0:19:21.840 --> 0:19:35.840
Sorry.

166
0:19:40.400 --> 0:19:47.840
Sorry. Could you speak up, please?

167
0:19:47.840 --> 0:19:51.040
we need to deliver information to your customers.

168
0:19:51.040 --> 0:19:54.160
So currently, we are focused on legal things,

169
0:19:54.160 --> 0:19:57.600
and mostly related to IP.

170
0:19:57.600 --> 0:20:00.400
We tend to also include export control,

171
0:20:00.400 --> 0:20:02.240
because that's quite easy.

172
0:20:02.240 --> 0:20:04.880
Regarding security, it's a whole different subject.

173
0:20:04.880 --> 0:20:06.960
And actually, in the first prototype,

174
0:20:06.960 --> 0:20:10.500
we had a link with a vulnerable coder.

175
0:20:10.500 --> 0:20:13.100
So it can be done, but it's not that trivial.

176
0:20:13.100 --> 0:20:15.800
And currently, all of the partners

177
0:20:15.800 --> 0:20:19.440
are treating the security aspect with their own tools.

178
0:20:19.440 --> 0:20:20.760
So it's not a priority for us.

179
0:20:20.760 --> 0:20:28.040
But yeah, I mean, we would be happy to be able to handle it.

180
0:20:28.040 --> 0:20:29.960
So did I answer your question?

181
0:20:29.960 --> 0:20:32.200
OK, thanks.

182
0:20:32.200 --> 0:20:37.320
Well, the points we take, I mean, at the orange at least,

183
0:20:37.320 --> 0:20:41.040
is that Hermine is one part of the whole thing,

184
0:20:41.040 --> 0:20:43.660
and we're going to work on interfacing it

185
0:20:43.660 --> 0:20:46.200
with some other tools like dependency track

186
0:20:46.200 --> 0:20:47.440
and that kind of things.

187
0:20:47.440 --> 0:20:50.320
The point is being to have one source, one database,

188
0:20:50.320 --> 0:20:54.640
of all the components that we use within the group.

189
0:20:54.640 --> 0:20:57.680
And so you can use it from different perspectives.

190
0:21:11.680 --> 0:21:12.320
OK.

191
0:21:12.320 --> 0:21:16.520
So the question was, how do we handle incompatible open source

192
0:21:16.520 --> 0:21:18.760
licenses?

193
0:21:18.760 --> 0:21:20.040
For the moment, we don't.

194
0:21:20.040 --> 0:21:22.240
That was discussed on Friday.

195
0:21:22.240 --> 0:21:24.920
And it's not that trivial, because you first

196
0:21:24.920 --> 0:21:28.600
have to understand the relationship between the two

197
0:21:28.600 --> 0:21:29.240
components.

198
0:21:29.240 --> 0:21:30.920
Because currently, what we handle

199
0:21:30.920 --> 0:21:34.000
is the relationship between a third party component

200
0:21:34.000 --> 0:21:36.000
and your code base.

201
0:21:36.000 --> 0:21:40.320
But you can have incompatibility between two

202
0:21:40.320 --> 0:21:41.880
different third party components.

203
0:21:41.880 --> 0:21:45.520
So you have to qualify the technical relationship

204
0:21:45.520 --> 0:21:47.240
between those two.

205
0:21:47.240 --> 0:21:48.920
And that's a bit tricky.

206
0:21:48.920 --> 0:21:52.160
And I think Friday we realized many people

207
0:21:52.160 --> 0:21:54.440
want to work on the question.

208
0:21:54.440 --> 0:21:57.600
I mean, we really want to be part of this discussion.

209
0:21:57.600 --> 0:22:00.280
Yes, but?

210
0:22:00.280 --> 0:22:03.600
You could use Ords as the results for class compatibility.

211
0:22:03.600 --> 0:22:05.680
So you can actually do different things already.

212
0:22:05.680 --> 0:22:06.160
OK.

213
0:22:06.160 --> 0:22:07.600
You can export from Hermine into Ords

214
0:22:07.600 --> 0:22:09.960
or class compatibility checks from Orzal.

215
0:22:09.960 --> 0:22:13.080
So German open source foundation,

216
0:22:13.080 --> 0:22:15.440
they published a license compatibility matrix, which

217
0:22:15.440 --> 0:22:18.160
has been included in Ords and then you can decide to do it.

218
0:22:18.160 --> 0:22:18.960
Is it perfect?

219
0:22:18.960 --> 0:22:21.640
No, but it is possible.

220
0:22:21.640 --> 0:22:23.720
Yes, I think that Orzal has lawyers inside.

221
0:22:23.720 --> 0:22:26.200
They are working on the legal side officially.

222
0:22:26.200 --> 0:22:27.920
At least in Germany.

223
0:22:27.920 --> 0:22:30.160
Well, we do have a few lawyers on the order.

224
0:22:30.160 --> 0:22:30.660
So.

225
0:22:30.660 --> 0:22:33.160
Yeah.

226
0:22:33.160 --> 0:22:35.800
And by the way, I mean, there's no competition.

227
0:22:35.800 --> 0:22:39.000
And we had a very interesting discussion

228
0:22:39.000 --> 0:22:43.120
with Orzal and we really plan to cooperate with them.

229
0:22:43.120 --> 0:22:45.160
And that's our to-do list in the beginning.

230
0:22:45.160 --> 0:22:46.480
It's just that we lack time.

231
0:22:46.480 --> 0:22:48.960
But yeah, I mean, we really want,

232
0:22:48.960 --> 0:22:52.440
I mean, we really will work with them in the future on that.

233
0:22:52.440 --> 0:22:55.000
And anyone next who is interested.

234
0:22:55.000 --> 0:22:57.480
So you have another question.

235
0:22:57.480 --> 0:22:57.960
Yes, please.

236
0:22:57.960 --> 0:22:59.960
Just to remember, guys, that we need

237
0:22:59.960 --> 0:23:01.960
to integrate everything with the system.

238
0:23:01.960 --> 0:23:03.440
So you are not alone.

239
0:23:03.440 --> 0:23:04.920
You are not to us.

240
0:23:04.920 --> 0:23:09.280
We are trying to do the work in the future.

241
0:23:09.280 --> 0:23:11.000
I was discussing last Friday.

242
0:23:11.000 --> 0:23:13.360
We had to work in a common way to do

243
0:23:13.360 --> 0:23:16.040
the things that are so obvious.

244
0:23:16.040 --> 0:23:19.640
Sorry, I mean, you're talking about SW360?

245
0:23:19.640 --> 0:23:21.520
Well, I'm doing things for Orzal.

246
0:23:21.520 --> 0:23:22.040
OK.

247
0:23:22.040 --> 0:23:25.040
I'm a content worker at SW360.

248
0:23:25.040 --> 0:23:27.080
Yeah, I mean, just for your information,

249
0:23:27.080 --> 0:23:29.640
we contributed documentation back in the day.

250
0:23:29.640 --> 0:23:32.360
And we wanted to go the SW360 way.

251
0:23:32.360 --> 0:23:36.120
But that was before the project was reborn.

252
0:23:36.120 --> 0:23:40.520
Because there was this, so we needed it.

253
0:23:40.520 --> 0:23:43.520
I can talk to you about that a lot.

254
0:23:43.520 --> 0:23:46.680
But we really wanted to go the SW360 way.

255
0:23:46.680 --> 0:23:48.240
And we couldn't.

256
0:23:48.240 --> 0:23:50.720
So once again, we are all for collaboration.

257
0:23:50.720 --> 0:23:53.800
Yeah, we can talk about that later.

258
0:23:53.800 --> 0:23:54.600
Oh, yeah, Bradley.

259
0:23:54.600 --> 0:23:58.360
Do you have any plans to assist your users in meeting

260
0:23:58.360 --> 0:23:59.440
their legal obligations?

261
0:23:59.440 --> 0:24:00.960
Or are you just trying to identify

262
0:24:00.960 --> 0:24:02.760
what the legal obligations are and not actually

263
0:24:02.760 --> 0:24:04.240
assist in meeting them?

264
0:24:04.240 --> 0:24:04.760
I know.

265
0:24:04.760 --> 0:24:05.400
I mean, we do.

266
0:24:05.400 --> 0:24:07.040
I mean, sorry.

267
0:24:07.040 --> 0:24:08.800
Could be the question.

268
0:24:08.800 --> 0:24:10.520
I'm sorry.

269
0:24:10.520 --> 0:24:13.600
The question was, do we assist the clients

270
0:24:13.600 --> 0:24:17.200
to meet the obligation or just indent the agent?

271
0:24:17.200 --> 0:24:18.560
Well, ideally, both.

272
0:24:18.560 --> 0:24:22.120
Because the idea is also that for each general obligation

273
0:24:22.120 --> 0:24:25.960
that you have, so then they can identify a generic process

274
0:24:25.960 --> 0:24:27.480
to do it and to do it the right way.

275
0:24:27.480 --> 0:24:29.440
I mean, that means that that will be really

276
0:24:29.440 --> 0:24:31.480
compliant with each license that requires it.

277
0:24:31.480 --> 0:24:35.680
For instance, providing the corresponding source code

278
0:24:35.680 --> 0:24:37.760
and stuff like that.

279
0:24:37.760 --> 0:24:39.800
So you're working on a system to prepare

280
0:24:39.800 --> 0:24:41.360
the corresponding source for these?

281
0:24:41.360 --> 0:24:41.960
Oh, no, no.

282
0:24:41.960 --> 0:24:42.480
Sorry.

283
0:24:42.480 --> 0:24:45.280
We don't do executions of the obligation.

284
0:24:45.280 --> 0:24:47.720
I misunderstood your question.

285
0:24:47.720 --> 0:24:49.960
But we are really happy to be able to branch out.

286
0:24:49.960 --> 0:24:52.760
But I'm not sure if it can be done automatically.

287
0:24:52.760 --> 0:24:55.760
I know that in some built system, it can be done.

288
0:24:55.760 --> 0:24:57.440
But the problem is so that it will really

289
0:24:57.440 --> 0:24:58.920
depend on each built system.

290
0:24:58.920 --> 0:25:03.800
And for instance, just for having a notice file,

291
0:25:03.800 --> 0:25:06.480
there was a very interesting talk about build as well.

292
0:25:06.480 --> 0:25:07.680
And I really believe in that.

293
0:25:07.680 --> 0:25:10.360
But the problem, for instance, if you take the Node.js

294
0:25:10.360 --> 0:25:14.080
ecosystem, you have many different built systems.

295
0:25:14.080 --> 0:25:17.520
And some of them have this kind of automatic function

296
0:25:17.520 --> 0:25:18.760
to generate notice attribution.

297
0:25:18.760 --> 0:25:20.960
Just the only problem is that they're wrong.

298
0:25:20.960 --> 0:25:25.080
And so we're uncomfortable relating something

299
0:25:25.080 --> 0:25:25.600
that we know.

300
0:25:25.600 --> 0:25:27.080
I mean, we can't pretend, oh, it's wrong.

301
0:25:27.080 --> 0:25:27.800
We didn't know.

302
0:25:27.800 --> 0:25:30.440
I mean, that's the problem that we have checked.

303
0:25:30.440 --> 0:25:32.160
And so for one's response to source code,

304
0:25:32.160 --> 0:25:35.520
I think we had very interesting talks about embedded system.

305
0:25:35.520 --> 0:25:37.080
And I think that they are trust-stable.

306
0:25:37.080 --> 0:25:40.400
So we prefer to refer to that.

307
0:25:40.400 --> 0:25:42.720
Because I mean, they are doing it.

308
0:25:42.720 --> 0:25:45.600
And the process could be just point them to that.

309
0:25:45.600 --> 0:25:47.440
I don't know if they understand.

310
0:25:47.440 --> 0:25:47.920
Yeah.

311
0:25:47.920 --> 0:25:48.400
Sorry.

312
0:25:48.400 --> 0:25:49.920
We do have a REST API.

313
0:25:49.920 --> 0:25:53.680
So the idea is to provide one piece of the whole chain

314
0:25:53.680 --> 0:25:55.560
and probably it's not.

315
0:25:55.560 --> 0:25:56.080
OK.

316
0:25:56.080 --> 0:25:56.960
Do we have a question?

317
0:25:56.960 --> 0:25:57.960
Thank you.

318
0:25:57.960 --> 0:25:58.880
That's all right.

319
0:25:58.880 --> 0:26:00.360
Thank you.

320
0:26:00.360 --> 0:26:00.880
Thank you.

321
0:26:00.880 --> 0:26:27.160
Thank you.

