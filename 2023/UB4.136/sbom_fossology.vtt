WEBVTT

00:00.000 --> 00:07.080
Yeah, hello everyone.

00:07.080 --> 00:10.440
My name is Shaheem and I am Gaurav with me.

00:10.440 --> 00:16.200
We both are working for a Phasology community and we are from Siemens.

00:16.200 --> 00:18.800
So maybe let me start.

00:18.800 --> 00:23.160
So Phasology is open source license compliance project.

00:23.160 --> 00:33.480
Initially it was published by HP in 2008 and in 2015 it has become Linux Foundation Collaboration

00:33.480 --> 00:39.000
Project and Phasology is a Linux application.

00:39.000 --> 00:47.400
It works on Linux distributions and different tasks done for OSS license compliance by Phasology

00:47.400 --> 00:55.840
are scanning for licenses, copyrights, authorships, emails and ECC statements.

00:55.840 --> 01:00.080
Apart from this we have key words and IPRS statements as well.

01:00.080 --> 01:07.880
And we also generate documentation like Readme OSS text documentation and unified report

01:07.880 --> 01:10.320
as well.

01:10.320 --> 01:14.620
And then we have export and import of SPDX files.

01:14.620 --> 01:20.360
So maybe we can discuss about SPDX files later in the slides.

01:20.360 --> 01:24.680
So Phasology is about finding the licenses as I said already.

01:24.680 --> 01:26.720
So we scan for the source code.

01:26.720 --> 01:32.880
So the source code might have the license text, reference to the license text or written

01:32.880 --> 01:39.100
text explaining some licensing and then we might also have the license relevant statements.

01:39.100 --> 01:45.120
So this all will be identified by Phasology.

01:45.120 --> 01:53.480
And later we have uploaded a component called Thrift which is Apache source code and Phasology

01:53.480 --> 01:56.100
have found Apache license.

01:56.100 --> 01:59.000
Apart from Apache license we have many more licenses.

01:59.000 --> 02:07.520
It is because it is very natural that OSS project reuses the available OSS from other

02:07.520 --> 02:08.520
projects.

02:08.520 --> 02:18.040
For example if you see Phasology have found 25 other relevant licenses apart from Apache

02:18.040 --> 02:21.320
2.0.

02:21.320 --> 02:25.880
So what is the uniqueness about Phasology is we have conclusions.

02:25.880 --> 02:32.200
So if you take licensing it can be simple but it might be challenging as well because

02:32.200 --> 02:36.820
you might see some unknown written statements about licenses.

02:36.820 --> 02:44.600
Some licenses might be unclear and there might be some incomplete license statements as well.

02:44.600 --> 02:56.800
So actually to do this I think one required a good domain knowledge.

02:56.800 --> 03:00.480
So yeah, Esbom and Phasology.

03:00.480 --> 03:05.120
So we are producers of Esbom as well as the consumers.

03:05.120 --> 03:15.280
So Phasology produces Esbom in SPDX version 2.3 format which includes the file level information,

03:15.280 --> 03:21.000
license findings and its conclusions and copyrights as well as the custom license text.

03:21.000 --> 03:29.700
So as a consumer Phasology import all this information and add it to a component as well.

03:29.700 --> 03:36.680
So more information about the Esbom will be discussed later in the slides.

03:36.680 --> 03:43.320
So yeah, maybe Gaurav will take over and explain about the releases and more SPDX features

03:43.320 --> 03:44.320
of Phasology.

03:44.320 --> 03:45.320
Thank you.

03:45.320 --> 03:46.320
Thanks.

03:46.320 --> 03:53.920
So yeah, with Phasology we recently released few versions and in all of them we majorly

03:53.920 --> 04:00.400
try to sync our license set with the SPDX license set so we are up to date.

04:00.400 --> 04:08.060
And at the same time we are continuously working to improve our REST API so we can provide

04:08.060 --> 04:13.360
more automation flexibility to anyone who is interested to use it.

04:13.360 --> 04:21.440
And like recently we had some GDPR updates thanks to our hands like how the user data

04:21.440 --> 04:24.080
will be managed in the server and things like that.

04:24.080 --> 04:27.000
We recently updated to Bootstrap UI.

04:27.000 --> 04:30.760
We are planning to move to React.

04:30.760 --> 04:32.800
But yeah, it's in the works.

04:32.800 --> 04:38.720
With 4.1 we recently integrated scan code so you can upload your source code to Phasology

04:38.720 --> 04:46.360
itself and let Phasology scan using its own scanners or if you prefer you can also use

04:46.360 --> 04:52.040
scan code and import the license findings in Phasology itself.

04:52.040 --> 04:59.240
We also worked a little on our copyright false positive reduction using spaCy and with the

04:59.240 --> 05:04.320
latest release so we would like to say we are reuse.software-standard-compliant in our

05:04.320 --> 05:14.580
source code and we also try to display the information like whatever reuse linter provides.

05:14.580 --> 05:22.200
So you can check if any project supports reuse standard, they do it like that.

05:22.200 --> 05:28.000
So Phasology can you can very easily know how much scan you have to do.

05:28.000 --> 05:33.400
So we are coming to the recent updates with SPDX within Phasology.

05:33.400 --> 05:41.200
So since it's a pretty old project and we had some difficulty to comply to the SPDX

05:41.200 --> 05:45.280
standards, so we decided to take on the challenge in two steps.

05:45.280 --> 05:51.400
So first step is done what we are presenting and the second is actually a work in progress.

05:51.400 --> 05:58.000
So what we initially started with the pain point was the license name which gets end

05:58.000 --> 05:59.520
up in the report.

05:59.520 --> 06:05.800
So Phasology initially used short names which are supposed to be unique and they are actually

06:05.800 --> 06:09.380
used for identification internally in Phasology.

06:09.380 --> 06:14.680
So we added a new field called SPDX ID so where you can have different variants of the

06:14.680 --> 06:19.880
same license, so for example in a license there is a copyright by X but for a different

06:19.880 --> 06:25.320
one the same license with a copyright Y. So the license text changes but you can still

06:25.320 --> 06:31.160
use the same SPDX ID for both of them and that will be end up in the report whatever

06:31.160 --> 06:32.460
you generate.

06:32.460 --> 06:38.520
In case the SPDX ID is missing or is not in the SPDX license list so we also perform a

06:38.520 --> 06:39.800
check on that.

06:39.800 --> 06:45.280
So it will be converted as a license ref and we have introduced this license ref for Solg

06:45.280 --> 06:48.400
prefix for that.

06:48.400 --> 06:55.440
In the upcoming updates we will further enhance this and provide users way to write actual

06:55.440 --> 07:04.200
SPDX license expressions including the and or and with exceptions.

07:04.200 --> 07:13.800
So with the reports with various DocFest with SPDX we came to understand that many of our

07:13.800 --> 07:15.880
reports were flawed.

07:15.880 --> 07:22.960
So we tried to fix them as well as at the same time update it to the latest spec 2.3.

07:22.960 --> 07:25.720
So what was wrong?

07:25.720 --> 07:29.160
So the extracted licensing info was missing.

07:29.160 --> 07:34.960
So as I said you can have your own custom license text in for Solg so if any of the

07:34.960 --> 07:39.300
file has a finding of that license text or a conclusion on it.

07:39.300 --> 07:44.160
So the license text itself was missing from the report so we have fixed that and also

07:44.160 --> 07:47.880
the package verification code used by SPDX.

07:47.880 --> 07:53.560
The algorithm internally was a little wrong so a minor fix.

07:53.560 --> 08:00.120
And then at the same time we compared the spec and the fields which for Solg can store.

08:00.120 --> 08:04.720
So we figured out like we can have the version information as well in the report the release

08:04.720 --> 08:14.920
date along with external ref to like PURLs, Maven, Nougat and such stuff.

08:14.920 --> 08:23.280
And at the same time for Solg also allows you to manage your acknowledgments and obligations.

08:23.280 --> 08:32.800
So we use the attribution text field for providing acknowledgments to specific files and the

08:32.800 --> 08:37.400
same attribution text field for the entire package if you have any obligation related

08:37.400 --> 08:40.480
to a license.

08:40.480 --> 08:46.680
And also the calculation of conjunctive licenses and disjunctive license set was wrong.

08:46.680 --> 08:52.540
So yeah there for Solg has a special license called dual license.

08:52.540 --> 08:56.660
So yeah we have fixed how we are going to calculate that now.

08:56.660 --> 09:04.280
So not every license in the report is now a disjunctive license set.

09:04.280 --> 09:09.760
And yeah also at the same time added the missing license name and text also for the listed

09:09.760 --> 09:10.760
licenses.

09:10.760 --> 09:17.720
So yeah with that I guess pretty much all our SPDX reports should now be valid.

09:17.720 --> 09:23.720
So yeah thank you and please consider starting us on GitHub if you do use them and if you

09:23.720 --> 09:25.880
have any questions.

09:25.880 --> 09:26.880
Yes please.

09:26.880 --> 09:30.160
Which format do you use for SPDX?

09:30.160 --> 09:32.620
So the question is which format we use for SPDX.

09:32.620 --> 09:36.480
So for Solg currently supports the IDF and the tag value format.

09:36.480 --> 09:37.480
Yeah.

09:37.480 --> 09:45.840
I have a question about the SPDX IDE because this is something that we need to use it all

09:45.840 --> 09:51.840
the SPDX IDE that would end up in the SPDX file.

09:51.840 --> 09:58.840
And then the license text with the name of the copyright order where does it end up in

09:58.840 --> 10:02.160
the original SS or also in the SPDX.

10:02.160 --> 10:03.160
Okay.

10:03.160 --> 10:08.480
So yeah the question is like with the SPDX IDE if there is a custom license text how

10:08.480 --> 10:10.360
it ends up in the report.

10:10.360 --> 10:13.640
So you have with SPDX IDF format.

10:13.640 --> 10:19.560
So it's a self-contained report so it will contain your SPDX ID the license name as well

10:19.560 --> 10:25.120
as your custom license text along with all the other various formats which for Solg supports

10:25.120 --> 10:29.560
read me or assess your unified report they will work the same.

10:29.560 --> 10:33.180
It's just that instead of using the license name which was coming from the short name

10:33.180 --> 10:36.160
field we are going to use the SPDX ID field now.

10:36.160 --> 10:41.640
Yeah but how do you include the text the license in the SPDX file?

10:41.640 --> 10:42.640
Okay.

10:42.640 --> 10:46.520
Otherwise you get only.

10:46.520 --> 10:51.240
So if you see here SPDX has this field called license text.

10:51.240 --> 10:57.160
So you can include information like name of the license, license ID, its text if you have

10:57.160 --> 11:01.400
any external ref and such stuff.

11:01.400 --> 11:04.860
So it's there for IDF.

11:04.860 --> 11:12.360
For tag value I'm not very sure we need to check because for custom text they do support

11:12.360 --> 11:21.320
it for tag value format as well but yeah for standard they do not.

11:21.320 --> 11:22.320
Any more questions?

11:22.320 --> 11:23.320
Thank you very much.

11:23.320 --> 11:24.320
I still say any support is back in the day.

11:24.320 --> 11:25.320
You are kind of correct.

11:25.320 --> 11:26.320
Thank you.

11:26.320 --> 11:27.320
Give me your colleague.

11:27.320 --> 11:42.760
The next question is here song, song?

11:42.760 --> 11:51.780
Take off.
