WEBVTT

00:00.000 --> 00:11.040
So, good morning everyone. I am Adrian, a PhD candidate from Laijian University in the

00:11.040 --> 00:16.840
Netherlands and I'm going to today, I'm going to talk about my project or my software, so

00:16.840 --> 00:22.880
called Red Defense Station, which is a weird thing, an interstellar social simulation framework

00:22.880 --> 00:27.480
and a turn-based strategy game as well. And I hope this can be an interesting start of

00:27.480 --> 00:35.600
today's schedule. So, before I go into the details of my thingy, I would like to do a

00:35.600 --> 00:42.400
bit of self-introduction because it relates to my overall open source development experience.

00:42.400 --> 00:49.880
And I was educated in physics, I did my graduate in physics, I did some master's research on

00:49.880 --> 00:56.280
so-called gravitational waves and their delightful collaboration. And I must say, like before

00:56.280 --> 01:00.720
my master's research, I was a kind of mathematical student, I didn't really like computer, I

01:00.720 --> 01:05.960
liked pen and papers more. But my research forced me to appreciate computer because I

01:05.960 --> 01:12.440
was forced to do things like supercomputers, Linux, terminals and writing programming language,

01:12.440 --> 01:18.080
programming like C or Python. So, I started to appreciate software or open source software

01:18.080 --> 01:27.520
in general, so that's why I get into this world. And after my master, I decided to kind

01:27.520 --> 01:32.280
of switch my field to do something social science, so that's why I came to Lydie University

01:32.280 --> 01:39.440
to do something called quantitative science study. And I'm supposed to work on social

01:39.440 --> 01:45.400
modeling simulation or data analysis on some kind of social data, or actually more specifically

01:45.400 --> 01:50.160
for academic system. And as a hobby, I kept contributing to open source software because

01:50.160 --> 01:55.880
I think it's fun to work on just the software and you find something wrong and you just

01:55.880 --> 02:01.360
submit a PR or a great issue for that. And I learned a lot from that kind of process.

02:01.360 --> 02:09.320
And then, because I started my PhD right before the pandemic, as you can imagine, things went

02:09.320 --> 02:15.320
quite wrong because I partially blamed the pandemic because, for example, the data that

02:15.320 --> 02:22.440
I'm supposed to use is still not ready even now. And the whole collaboration became mass,

02:22.440 --> 02:27.400
the infrastructure is mass. So, I partially also blamed the engineer in my collaboration

02:27.400 --> 02:36.000
because they are so annoying to work with. So, I have to rescue my PhD, right? I can't

02:36.000 --> 02:41.560
wait for the things to happen. So, I need something to work it out. I can work it out

02:41.560 --> 02:49.040
by myself because it's pandemic, so I have to work from home. And I was also traumatized

02:49.040 --> 02:53.960
by the collaboration that I experienced. And I know something about physics because of

02:53.960 --> 02:58.160
a background. I know something about social modeling. And I'm also kind of familiar with

02:58.160 --> 03:04.600
software engineering. I'm not trained in that field, but I learned a lot from my hobby.

03:04.600 --> 03:09.880
So, it is natural for me to try to combine these things together to create something

03:09.880 --> 03:17.960
for a weird thing, interstellar social simulation. And perhaps some of you guys are a fan of

03:17.960 --> 03:23.640
science fiction, movies, or games. And you may ask these kind of big questions like,

03:23.640 --> 03:28.080
will human civilization become interstellar one day in the future? Or does alien exist

03:28.080 --> 03:35.960
or not? And if they exist, or if we become interstellar, we will be curious about what

03:35.960 --> 03:40.760
is the form of society of those interstellar civilizations, right? And of course, it's

03:40.760 --> 03:46.160
very hard to study those kind of things rigorously in academic settings. But perhaps one way,

03:46.160 --> 03:51.760
at least I claim, I argue that one way to try to explore this is to assume that some

03:51.760 --> 03:57.600
social theory we know nowadays can still be a good approximation for that kind of society,

03:57.600 --> 04:02.840
like perhaps we expect that they should also be utility seeking, or there are some collective

04:02.840 --> 04:07.080
actions there. And of course, we can't study that rigorously because we don't have the

04:07.080 --> 04:11.080
data or we don't have the observations, but we can try to explore this kind of domain

04:11.080 --> 04:19.280
by simulation. And in case if you're not familiar with social modeling or like...

04:19.280 --> 04:20.880
No, no, no. Please.

04:20.880 --> 04:27.040
Sorry. So, in case if you're not familiar with social modeling, nowadays when people

04:27.040 --> 04:32.520
talk about social simulation, it's made maturity like they're talking about agent-based modeling.

04:32.520 --> 04:36.600
So social scientists design some behavior rules based on the understanding of how human

04:36.600 --> 04:42.680
works are based on some experiments to design computational rule for agents, and they put

04:42.680 --> 04:48.240
the agents into a world just like machine learning people do, and to see how they interact

04:48.240 --> 04:54.880
with each other and interpret the overall simulation outcome from that. And there are

04:54.880 --> 04:59.920
many existing framework that can help us to do this kind of simulation, but I have to

04:59.920 --> 05:06.240
create my own framework because for social simulation, for existing social simulation

05:06.240 --> 05:11.360
framework, they don't support the physics well. I mean, because we have been working

05:11.360 --> 05:17.560
on like in the status society, and it is a scale that is not on the earth, so it's not

05:17.560 --> 05:21.160
easy to deal with, it's possible, but it's not trivial. And there are also some kind

05:21.160 --> 05:23.920
of physics simulation framework out there as well, but they are not built for social

05:23.920 --> 05:31.920
scientists, so it's also a bit hard to work with. So that's why I have to create my own

05:31.920 --> 05:39.120
framework. I think it's interesting and useful if I want to create something meaningful for

05:39.120 --> 05:46.320
this thing. And when I talk about the physics for interstellar society, I am talking about

05:46.320 --> 05:51.520
special relativity, which is simple undergraduate level physics, because it is sufficient when

05:51.520 --> 05:56.720
we consider a scale like 100 light years, 10s or 10s of light years, I think it's a

05:56.720 --> 06:01.280
good starting point of trying to imagine about this kind of thing. And special relativity

06:01.280 --> 06:09.200
tells us that there is an intrinsic time delay out there, so everything cannot travel faster

06:09.200 --> 06:14.720
than the speed of light. And also, special relativity tells us that there is a time-direction

06:14.720 --> 06:19.840
effect, so if you move very fast, close to the speed of light, you are close to the speed

06:19.840 --> 06:29.040
of light, so experience the slower time, essentially. And in the setting of social simulation, we

06:29.040 --> 06:35.520
have to deal with problems like what can you see or what can an agent see, and how agents

06:35.520 --> 06:40.080
interact with other agents because of time delay, and how we change the state of the

06:40.080 --> 06:50.080
light. I will go into this one by one in the following slides. Because of the time delay,

06:50.080 --> 06:55.040
information travels at the speed of light, so we are not seeing each other instantaneously.

06:55.040 --> 07:02.720
We are seeing the path of each other because of the delay. So here, the red people here

07:02.720 --> 07:11.920
see the path of the blue agents of people because they have time delay, and it depends

07:11.920 --> 07:19.760
on the distance. And technically, they see the path light comb of the universe at that point.

07:23.840 --> 07:28.560
The second problem is how the agents interact with each other. I mean, if you're a programmer,

07:28.560 --> 07:33.600
you're probably familiar with the command design pattern, and this is used for dealing with,

07:34.560 --> 07:38.720
if you have something you might execute, but if you have a delay, then you have to create a command,

07:38.720 --> 07:45.600
wait for a delay, and send it to your target. This is what I used in this framework, so that

07:47.040 --> 07:51.520
some agents need to interact with each other. They can't just do that directly. They have to

07:51.520 --> 08:00.240
send the command and the command travels at the speed of light in the universe. And lastly,

08:00.960 --> 08:08.800
the last problem, how we change the state of the agents. We defined here a mechanism,

08:08.800 --> 08:15.520
which is essentially dynamics of the model. It changed the state of the agents and sent commands

08:15.520 --> 08:22.960
out, so I defined how the model actually works scientifically. And recall that because clock takes

08:22.960 --> 08:32.880
the order for moving agents, so I define this into two types of mechanism. A regular mechanism

08:32.880 --> 08:38.400
executes a process once per turn, and a direct mechanism process once per end turn, because

08:38.400 --> 08:45.280
the end depends on the speed, because if it is moving faster, then some time is lower there,

08:45.280 --> 08:55.600
so the execution is lower there. So for convenience, if you model your things based on these two types

08:55.600 --> 09:04.240
of mechanism, then it's easier to follow the physics. And as an example, regular mechanism

09:04.240 --> 09:09.120
could be something like you observe things and update your information, and it's not something

09:09.120 --> 09:14.320
that it actually takes time, so it can be executed once per turn. And for dialectic mechanism,

09:14.320 --> 09:18.560
it can be something like manufacturing. It actually takes time to produce some product

09:18.560 --> 09:25.360
and to make it and send it out. So if you have a slower time, then you manufacture that.

09:25.360 --> 09:34.800
So to deal with these kind of problems, as I said, I created framework, and the framework is written

09:34.800 --> 09:41.440
in Kotlin. There are many reasons behind that. I'm not going to give you that. And basically,

09:41.440 --> 09:49.840
the framework enforces a specific way to model your social model, so that it can automatically

09:49.840 --> 09:55.440
account for the physics. And it also provides some functionalities to help you to develop the

09:55.440 --> 09:59.680
so-called in-depth data social model. And it deals with some technical support like

10:00.480 --> 10:10.160
parallelization of the simulation, and how do you serialize things into data, or how do you make

10:10.160 --> 10:21.600
deterministic simulation using under parallel process. And this is the core of the framework,

10:21.600 --> 10:26.560
and you can check my archive. Rupina actually is going to be a proceeding for some other conference

10:26.560 --> 10:30.080
and for the algorithmic details and for the mathematics details.

10:30.080 --> 10:48.080
You can find it in the last slide. Anyway, I was not a very experienced programmer when I started

10:48.080 --> 10:52.560
this project, so I made some decision that perhaps I would change if I do it in another way.

10:52.560 --> 11:02.960
It started for now. Anyway, I made some decision here on how we should use this framework. For

11:02.960 --> 11:30.640
example, I decided that this should be used as a- OK. OK, here it works. So there are some

11:30.640 --> 11:34.080
technical reasons behind why I made this decision, because I think it's always easier to provide

11:34.080 --> 11:38.960
libraries for people to use that. Because the reason behind it is that I tried to keep it in a

11:38.960 --> 11:47.040
pure Kotlin project, and it is not possible to do things like deserializing string into objects,

11:47.040 --> 11:55.520
because the diffraction library of Kotlin is not very powerful. And anyway, this is the decision

11:55.520 --> 12:00.000
I made. I may change in the future, but it's how it's now working. And to use this, you have to

12:00.000 --> 12:05.760
create a template using the source code and build your model based on the template.

12:08.480 --> 12:16.560
I have created a few effect samples on how to use this framework. I will do a very brief

12:16.560 --> 12:22.080
illustration on the results, because it's always interesting to see how things actually

12:22.080 --> 12:30.880
work out. So the first example is the Flocking model, which is the standard of the 101

12:30.880 --> 12:36.320
HMA modeling. It is a very simple model. The bird follows a very simple alignment bruise, and they

12:37.520 --> 12:40.400
align with each other, and it creates some interesting microscopic pattern

12:41.040 --> 12:47.840
as shown in the figure. And here, we are interested in Intestila Flock. I mean,

12:47.840 --> 12:55.360
it's a very hypothetical scenario, but it is kind of a group of spaceships, and they try to align

12:55.360 --> 13:01.280
with each other in the universe, or some kind of mysterious creature living in space. And I

13:01.280 --> 13:06.240
assume, for the sake of physical realism, I assume they are propelled by some kind of

13:06.240 --> 13:15.280
proton rocket, and we can measure how well the Flock align. And this is the simulation result.

13:15.280 --> 13:20.480
I'm also not going into details of this young thing, but you can see some interesting things,

13:20.480 --> 13:24.640
like if you can adjust the speed of light because it is a simulation, and if the speed of light is

13:24.640 --> 13:30.320
lower, then it takes more time, it takes longer to communicate, and they're less well-ordered.

13:31.200 --> 13:38.000
And you can also tune the perturbation on the Flock, and so it takes more, it's harder to align

13:38.000 --> 13:46.880
with each other, and it takes more energy to do so. And you can see in the figure on the left-hand

13:46.880 --> 13:53.920
side, or in the right-hand side in alignment, then it takes half the mass of the population

13:54.480 --> 13:57.920
to align with each other for one year, for one turn. So it's not a very

13:59.280 --> 14:02.080
environmental-friendly way of traveling, I would say.

14:02.080 --> 14:13.600
And the second example is some kind of knowledge dynamics, which is closer to what I'm supposed

14:13.600 --> 14:21.280
to do in my PhD. So we study how, I try to model how research or knowledge is generated

14:21.280 --> 14:28.160
in the interstellar setting, and there are some assumptions that are made, like cooperation takes

14:28.160 --> 14:34.400
time to, we need cooperation to stimulate innovation, but cooperation takes time to

14:35.520 --> 14:38.800
process, right? You have to invite people to cooperate with you, and you have to wait for

14:38.800 --> 14:44.160
the response, and if it is very far away, then it takes a long time to work with people.

14:44.160 --> 14:50.160
So this thing is affected by the time delay. And also there are some other factors, like

14:50.160 --> 14:57.520
if there's a small time delay, and so you have a more rapid information exchange, then it

14:57.520 --> 15:02.080
essentially creates a more competitive environment, because when I do something and you want to

15:02.080 --> 15:06.480
compete with me, and you update the information very frequently, then it creates a kind of stress

15:09.360 --> 15:15.920
to work your research out. And also, like research, the next time, it is a dilated mechanism,

15:15.920 --> 15:20.480
it is affected by the time delay if you want to move. So there's a cause if you want to move

15:20.480 --> 15:25.520
closer to each other to do research, or there's a cause if you want to move from your home country

15:25.520 --> 15:32.560
to this place to work with each other. So this is also some kind of simulation results.

15:35.200 --> 15:40.320
I would say it's kind of interesting. So if the, you can also tune the speed of light,

15:40.320 --> 15:46.000
and as you see in the figure on the left-hand side, the blue curve

15:48.240 --> 15:54.800
was lower at the beginning, and it becomes higher eventually. It is because like, this is a curve

15:54.800 --> 16:00.880
when you have a very slow information travel. So if you have, because the innovation,

16:00.880 --> 16:05.200
or the cooperation started very slowly at the very beginning, so it rises very slowly,

16:05.200 --> 16:11.520
but at the finals, ultimately, because it is less competitive than the overall results,

16:11.520 --> 16:17.280
overall research outcome becomes better eventually. I think it's interesting results.

16:17.920 --> 16:22.560
And the figure on the right-hand side shows that there are two kinds of strategies, right? You can

16:22.560 --> 16:26.960
stay in your home country and do all the things remotely, or you can move the conference

16:26.960 --> 16:32.880
physically to work with each other. And the orange curve represents the moving strategy,

16:32.880 --> 16:39.840
and the blue curve represents the remote strategy. Because the move, there's a cause

16:40.480 --> 16:45.360
imposed by speech-related fitting, because there's time generation. So it starts out lower,

16:45.360 --> 16:51.120
and then eventually pays off in the future. So I think it's an interesting result to

16:51.120 --> 17:00.560
show off here. And I mean, this is kind of interesting, but you can always criticize

17:00.560 --> 17:04.080
about this kind of model, because this two hypothetical, I mean, we're studying something

17:05.840 --> 17:09.520
that is not happening in the real world, and perhaps we are getting nothing out of that.

17:09.520 --> 17:13.440
I kind of agree with the kind of criticism, but I'm just trying to get something out of

17:13.440 --> 17:20.080
the framework. And if people are not interested in this kind of model, or I also feel like this

17:20.080 --> 17:28.880
is not interesting enough, and then I made the decision that perhaps I can make a game out of

17:28.880 --> 17:36.960
this to make it more interesting. And the reason why I decided to make a game is also because I

17:36.960 --> 17:44.240
like simulation game, and simulation game is kind of similar to modeling or

17:44.240 --> 17:50.880
simulation, or HMA modeling in a sense. And also, I have many things I want to test out. I mean,

17:50.880 --> 17:54.800
the model that I have presented are kind of simple models, but they are more complicated

17:54.800 --> 17:58.240
mechanisms that you can implement, but you can't do this for a regular state, because they are

17:58.240 --> 18:06.240
so complex, you can't get anything adequate or interpretable from those ideas. So a game provides

18:06.240 --> 18:16.080
an environment for me to test things out and to just explore what I can do in a statistical model.

18:16.880 --> 18:22.880
And also, perhaps this is one of the sensible ways to get something actually useful from the

18:22.880 --> 18:26.240
framework. I mean, it's not very academically interesting, at least I have a game for that.

18:26.240 --> 18:37.760
Right. So the game. And for a game, it can be very complex, and I try to address many,

18:37.760 --> 18:42.960
many different things in the game. And I try to ask very great question. And for example,

18:42.960 --> 18:48.640
we can try to ask, how should the economy looks like in the international society? Does

18:48.640 --> 18:54.720
private-based economy work? Because nowadays, we're relying on currency, credit card, but those

18:54.720 --> 19:00.560
kind of currency relies on some fundamental building blocks of the society, which might not

19:00.560 --> 19:04.960
work in an interstellar setting, because the time delay, how do you exchange money, and how do you

19:04.960 --> 19:12.640
define the exchange rate? I mean, perhaps a simple bottom economy that we use historically is a better

19:12.640 --> 19:17.600
choice for those kinds of society. And perhaps we can use some kind of fuel or energy as the

19:17.600 --> 19:25.120
money instead of credit card. And also, we can ask how the political system work. Does democracy

19:25.120 --> 19:30.000
work there? Because how do you folk, if you have to wait for 100 years for it to receive the

19:30.000 --> 19:35.040
floating results from the other planet? And also, we can also ask how we can optimize

19:35.040 --> 19:41.040
the research in this kind of system. So I have my own ideas on how these things work.

19:41.040 --> 19:45.120
So I put all the things into the game, including population dynamics, politics,

19:45.120 --> 19:50.640
diplomacy, economics, warfare, scientific technology. I mean, some of them are typical

19:50.640 --> 19:59.040
elements in strategy games, and some of them are not that typical, but I still get inspired from

19:59.040 --> 20:11.680
some other games. And I try to get this to work on PC and Android, because that's one of the reasons

20:11.680 --> 20:16.320
why I choose Kotlin to implement this kind of thing. And I hope this can be a multi-player game

20:16.320 --> 20:24.720
in the future or like now. So I implemented some kind of server-kind architecture. And for a game,

20:25.440 --> 20:31.600
for a game, you have to limit how a human can can or how a client can connect, because you can't

20:31.600 --> 20:35.520
allow them to do everything that they are going to cheat in the game. So what they can do is

20:35.520 --> 20:43.120
essentially receive a field of the universe, and you can send a command to do action. And I also

20:43.120 --> 20:51.280
created a utility-based or dual utility-based AI for the game. And this is the bigger architecture

20:51.280 --> 20:57.200
that's built on top of the framework. And this is the screenshot of the game. I know this is not

20:57.200 --> 21:19.040
graphically attractive, but this is like, oh, I can do an ops. Where is it? And I'm losing my side.

21:19.040 --> 21:25.840
Okay.

21:35.520 --> 21:43.280
And this is how the game actually looks like. The interface. I mean, you can click on things here

21:43.280 --> 21:52.400
to do something and add some command. And I mean, this is a complex interface. And so I'm not going

21:52.400 --> 21:55.760
to actually show everything here, but you know something is working here.

21:56.640 --> 21:57.840
It's the scale.

21:57.840 --> 21:58.320
Sorry?

21:58.320 --> 21:59.600
It's the scale.

21:59.600 --> 22:08.880
You mean the spatial scale. For this, it's like three times three light years cube.

22:08.880 --> 22:16.800
This is a very small universe. It can be larger. At least it can handle a thousand light year cube

22:17.840 --> 22:24.800
game without crashing my computer. So thanks for the open source ecosystem. I can rely on all

22:24.800 --> 22:30.000
kinds of open source library to build my game. I use deep gdx for the graphical interface. I use

22:30.000 --> 22:37.040
coroutine for the parallelization. And also thanks for the open art community. Because I'm not an

22:37.040 --> 22:41.680
artist, I can't create all the art by myself. So I can rely on creating company license assets.

22:41.680 --> 22:45.360
And I can use open source software like Inscape to definitely draw something.

22:47.680 --> 22:55.360
So it's going to be the end of my presentation. But I would like to have a bit of reflection on

22:55.360 --> 23:01.760
my project. So I think I've learned a lot by contributing to open source software. And the

23:01.760 --> 23:06.880
ecosystem gave me plenty of building blocks from my own project. And of course, because of this,

23:06.880 --> 23:10.480
it's natural for me to also open source my project. And at least I've created some interesting.

23:11.440 --> 23:16.480
But there are also some problems that I face during the development of this project. For example,

23:16.480 --> 23:21.120
there's a lack of open source culture in my workplace. I mean, some people there do use

23:21.120 --> 23:26.000
open source software, but most of them do not care that much. So most of the time, I'm by myself.

23:26.560 --> 23:33.120
And as a one-man project, it's a bit too ambitious, I would say. So I don't have time to polish all

23:33.120 --> 23:37.680
the things like graphic interface, documentation. And I can't ensure that things are fun to play.

23:37.680 --> 23:41.760
And I just don't have time to work on the translation. I did try, but I just simply

23:41.760 --> 23:44.800
don't have time to do to work on all kinds of things. Because I'm also doing my picture here.

23:44.800 --> 23:51.360
I have to write papers and do presentation. And I decided to go fully open source. So I choose

23:52.080 --> 23:56.800
those libraries. It depends on. But perhaps, I mean, there are some kind of industry standard

23:57.680 --> 24:01.760
solutions. Like if you're creating a game, people just use Unity for that. And perhaps

24:01.760 --> 24:06.320
it was better for the project. So I have more time for other things. I don't know. But it's

24:06.320 --> 24:12.640
just some other thing that perhaps there's a price to pay for if you decided to go open source.

24:13.680 --> 24:18.480
And actually, I did try a bit to commercial my process, because it's possible to sell

24:18.480 --> 24:21.600
open source game. I know it's possible. But it's also very hard to do so. I mean,

24:21.600 --> 24:26.400
it takes time to advertise it. So I gave up. Eventually, I didn't have time for now to push

24:26.400 --> 24:33.120
it forward. So this is the summary of my presentation. I have created a framework

24:33.120 --> 24:38.000
for industry-asocial model. And I've created some model based on the framework. I've also

24:38.000 --> 24:44.400
created a game on top of that. And perhaps it's lacking some immediate practical value. And that's

24:44.400 --> 24:49.920
not so tall as that. Tall as that, like, it didn't exist tomorrow. But I think it's not going to

24:49.920 --> 24:54.880
happen in the short route. So perhaps there's no immediate practical value. But I still believe

24:54.880 --> 24:59.920
this kind of meaningful and educational exploration, you can if the game is fun to play,

24:59.920 --> 25:05.520
eventually, then you can ask your kids to pay for that. And perhaps they can learn some physics

25:05.520 --> 25:12.720
from the game. And at the very least, at the most important, I feel like I've achieved something in

25:12.720 --> 25:20.000
my PhD. I'm not wasting my time in my pandemic. So that's all my presentation. And this is the

25:20.000 --> 25:28.800
link of the project. And if you like, you can give it a star. Just check it out. And the thing that

25:28.800 --> 25:35.120
I show is I think you can find those things in the read me file of this page. So thanks a lot for

25:35.120 --> 25:36.560
attention.

25:36.560 --> 25:50.400
We'll give you a few questions while the next speaker will come and.

25:51.360 --> 25:54.560
Okay. Okay.

25:56.720 --> 26:01.280
In your simulations, when you said that the civilizations then cluster,

26:01.280 --> 26:07.840
how many years was simulated into simulation before you got to sort of resolve?

26:10.800 --> 26:16.880
Yeah, I'm talking like that. Sorry. Can you repeat? Okay. Okay.

26:17.760 --> 26:22.960
So the question was like, how many years did I simulate for the for the for the for the for the

26:22.960 --> 26:29.200
model that I presented here? I typically I simulate for for for 1000 or 2000 years. And because of the

26:29.200 --> 26:35.280
spatial scale is like 10 times 10 times 10 light year. So it takes the test of action time for the

26:37.280 --> 26:42.000
spaceship to move towards each other and then to do the clustering.

26:42.640 --> 26:49.040
Because I assume that they move as a sub light sphere of light philosophy. And you have a question.

26:49.040 --> 26:57.920
Yes. I guess it's more technical. So your framework is written in Kotlin. Does it support any form of

26:57.920 --> 27:06.240
extension like in another JVM language? I mean, in principle, you can use Kotlin with other JVM

27:06.240 --> 27:13.920
language. For instance, or, I guess, customize agents, maybe even maybe the physics model that

27:13.920 --> 27:21.120
says I want to fasten the light and travel or something like that.

27:21.120 --> 27:29.680
Um, I so the question was like, I can can you use other JVM language to to to extend it? I think in

27:29.680 --> 27:36.080
principle, it is possible because you can always I the way to use this is to is to create something

27:36.080 --> 27:40.640
from a source code, right? And you can always work with JVM other JVM language in the source code.

27:40.640 --> 27:47.120
But I am not entirely sure because I use some Kotlin feature like inline function to simplify

27:47.120 --> 27:51.440
the code. So I'm not sure what that kind of thing. Can you can use it nicely with other JVM language?

27:51.440 --> 27:59.920
I know you didn't go into that. Why not? Why not? Like, I want to work on what I want to work on

27:59.920 --> 28:17.520
Android. And you know, Android Java support is not great. Okay, sure.
