WEBVTT

00:00.000 --> 00:14.180
Okay, hi everyone. Thank you for being here and thank you for the invitation. I'm going

00:14.180 --> 00:21.860
to speak maybe in a less technical way, in more realistic way of the thing I am trying

00:21.860 --> 00:27.840
to do for the last year. I'm Ã‰mio Anschulze. I'm a postdoctoral researcher in sociology

00:27.840 --> 00:36.680
of science and health in France, both in Medialab and in the SES team in Marseille. I'm going

00:36.680 --> 00:41.560
to say something about the way we are doing scientific programming in Python in social

00:41.560 --> 00:49.160
sciences and the way we can improve it. I gave this presentation a provocative title

00:49.160 --> 00:55.620
that is so wide to speak about what are the specifics of social sciences and how can we

00:55.620 --> 01:01.400
improve all this kind of environment, make computing and data analysis in relation directly

01:01.400 --> 01:09.940
to open science. So, yes, it's kind of humble presentation. If I want to summary it in one

01:09.940 --> 01:16.160
sentence, my point is to say that social sciences need more scientific programming. And it is

01:16.160 --> 01:21.960
three points. First, that scientific programming has, I think, the right flexibility to equip

01:21.960 --> 01:27.400
the very diverse practices that exist right now in social sciences. For the moment, we

01:27.400 --> 01:32.560
have the landscape, especially in France, with main based on the air language and Python

01:32.560 --> 01:39.600
could benefit of some impulse and I think he needs it. And the gateway will be to develop

01:39.600 --> 01:44.960
very specific disciplinary packages that are still missing for Python in social sciences,

01:44.960 --> 01:52.480
which I can call disciplinary API for the language and to move beyond open source treatment.

01:52.480 --> 01:57.960
So, just a quick disclosure. I've been trained physics, but I moved in sociology and now

01:57.960 --> 02:02.480
I'm speaking as sociologist or social scientist here. I'm trying to give some feedback of

02:02.480 --> 02:07.400
what we are using in our community and I'm trying to answer two questions in one which

02:07.400 --> 02:14.360
are not very well delineated, which is first, how to improve Python in social sciences and

02:14.360 --> 02:18.880
in a more general way, what are the different uses of scientific programming right now because

02:18.880 --> 02:23.320
we don't have a very clear look of what's going on in all the different ways we can

02:23.320 --> 02:29.320
use scientific programming. So, it's a work in progress, so it's mainly to make an exchange

02:29.320 --> 02:35.080
with you. To be clear about my title, I'm not saying that we are under equipped in a

02:35.080 --> 02:40.840
pejorative way. Social sciences have a well established open source software platform

02:40.840 --> 02:45.240
and some of them are going to be presented today and usually give a warm welcome to new

02:45.240 --> 02:50.480
strategies for data analysis and its own field work are expanding to numeric and software

02:50.480 --> 02:59.240
data. So, we are using and studying all those software tools and open source tools, but

02:59.240 --> 03:06.400
it is a general point of view from sociologists. We have in general a low tech practice and

03:06.400 --> 03:13.560
we are using software applications programming for very discrete, meaning punctual or kind

03:13.560 --> 03:17.840
of unseen operations and if you want to have a look, there is a very nice article from

03:17.840 --> 03:22.960
Caroline Muller, Fredrik Laver, about how historians are changing their practices and

03:22.960 --> 03:27.760
putting some more numerical analysis inside their work, but still conserving the global

03:27.760 --> 03:35.200
way of doing their work. So, we need flexibility to adapt to individualized practices or topics

03:35.200 --> 03:40.000
which are very personal to research. So, I need to say a word about the specificity

03:40.000 --> 03:45.200
of social sciences because I don't think we are very numerous today. There are a variety

03:45.200 --> 03:52.800
of disciplines, this very different way of dealing with data and analyzing archives and

03:52.800 --> 03:59.680
interviews and within each disciplines there is a huge variety of methodologies, school

03:59.680 --> 04:05.360
of arts, theoretical approaches and from an organizational point of view there is a very

04:05.360 --> 04:11.040
weak functional dependency between all the researchers in our different fields and moreover

04:11.040 --> 04:18.200
there are very important national specificities and moreover each research, each research

04:18.200 --> 04:24.440
trend is very conceptually laden, meaning that there is very important given to the

04:24.440 --> 04:30.600
trend that each researcher is using to collect data and to analyzing it. There are no global

04:30.600 --> 04:38.640
rules of how to do it. So, there is a very huge limit of one size fits all instruments

04:38.640 --> 04:45.400
in our disciplines and besides there are very harsh critics against standardization and

04:45.400 --> 04:50.960
normalization because it is seen as a way to erase plurality which is some kind of base

04:50.960 --> 04:56.120
of what are social sciences. So, there is a huge fight between individualization and

04:56.120 --> 05:02.200
standardization of practices. Nevertheless, shared instruments are important especially

05:02.200 --> 05:08.760
software instruments and science studies which is a field of sociology and topology of science

05:08.760 --> 05:14.480
are shown the crucial role of instruments for the functioning of scientific communities.

05:14.480 --> 05:18.880
It is very important for conceptual changes because it allows us to look at other stuff

05:18.880 --> 05:22.840
at different scales, at different topology like the microscopes change the way we are

05:22.840 --> 05:27.560
doing biology. They are very important for disciplinary identity, the way we present

05:27.560 --> 05:32.240
ourselves in our research communities and how we define our activity and they are very

05:32.240 --> 05:39.680
important for coordination between specialties and standardization of practices beyond a

05:39.680 --> 05:46.880
small group of researchers and to transfer surgical agencies and meteorological changes.

05:46.880 --> 05:51.520
And there is a lot of studies about how electron microscopes change biophysics has to put second

05:51.520 --> 05:57.240
cell for change medicines and the way we are dealing with data but there are very few studies

05:57.240 --> 06:03.600
on the way software is changing and standardizing practices especially for social sciences.

06:03.600 --> 06:09.200
That has a value, social sciences are kind of divided regarding standardization especially

06:09.200 --> 06:14.120
imposed standardization because it usually reflects some kind of relationship or one

06:14.120 --> 06:19.600
specific kind of thought which try to impose its way of doing things against others especially

06:19.600 --> 06:26.680
in sociology or political sciences. So there is a goal of to define what is a good scale

06:26.680 --> 06:33.520
of creating software instruments for social sciences. Scientific programming is what I

06:33.520 --> 06:39.680
want to say today is a solution which both favor new, the Raman new scientific instruments

06:39.680 --> 06:44.440
within the specialties and to improve some kind of second hard generation standardization

06:44.440 --> 06:50.080
by using the same way of doing scientific programming and it's a good entry point for

06:50.080 --> 06:55.800
new open source practices which are not existing or very little existing within social sciences

06:55.800 --> 07:04.560
like those linked to as we've just seen other open science, reproducibility and collaboration

07:04.560 --> 07:11.560
beyond the small disciplines which compose social sciences and to import new cool stuff

07:11.560 --> 07:16.760
like coming from the computer science, AI stuff and machine learning. Nevertheless for

07:16.760 --> 07:23.560
the moment scientific programming as a global frame is not very common in social sciences.

07:23.560 --> 07:28.560
Of course there are always cool kids so there are people doing it and computational social

07:28.560 --> 07:37.280
sciences are the thing and expand very quickly in our field but for the common people it

07:37.280 --> 07:43.600
is not very developed and we have a lot of users of air which has an intermediate status

07:43.600 --> 07:49.720
between a programming language and a statistical language which kind of dual status. What I

07:49.720 --> 07:55.960
mean as scientific programming so very quick but it's a diversity of practices they have

07:55.960 --> 08:01.560
in common the fact that it's interactivity, exploratory and based on packages and the

08:01.560 --> 08:05.960
priority is given to usefulness for researchers to explore certain questions they want to

08:05.960 --> 08:12.840
address and all the questions just we have seen are not the primary aim of the researchers

08:12.840 --> 08:17.880
who are using scientific programming so stability, design and also very important question of

08:17.880 --> 08:23.840
software development are not what is in the first front of the uses of scientific programming

08:23.840 --> 08:28.400
but when you are looking at what researchers are doing, they are doing different one of

08:28.400 --> 08:34.840
the steps of the different scale and they are not all of them developing and creating

08:34.840 --> 08:43.520
new packages so the diversity of practices were existing. If you look on what are currently

08:43.520 --> 08:51.360
the software uses for researchers in social sciences so it's a kind of a exploratory mapping

08:51.360 --> 08:59.280
because it comes from non-representative survey conducted by Mariana Iglebechik in France

08:59.280 --> 09:05.080
in a study called State of Open Science Practices in France and we ask for researchers in different

09:05.080 --> 09:10.760
field what kind of tools are using their research and they can answer different for producing

09:10.760 --> 09:16.360
data, analyzing data so just a small network of all the tools that researchers are saying

09:16.360 --> 09:24.600
they are using for social sciences and humanities also and if you look to this huge diversity

09:24.600 --> 09:31.240
what just the main result as there is a diversity of software and profile of researchers nothing

09:31.240 --> 09:38.480
new about that you will find the centrality of standard office software like Word, Calc,

09:38.480 --> 09:51.480
LibreOffice etc. and the main scientific programming language used is air with 22% of users that

09:51.480 --> 09:59.280
are using it and then a geographical software QG 10% for SPSS which is a statistical software

09:59.280 --> 10:06.480
and only 6% using Python in this broad field of social science community and if you look

10:06.480 --> 10:11.840
just to the quotation the reality of the work is usually just using at some point some software

10:11.840 --> 10:22.800
and there is no global glue of open source tools in the workflow of the researchers. So even when

10:22.800 --> 10:28.880
you look at the small part of the social scientist who are doing quantitative analysis so it's a sub

10:28.880 --> 10:36.840
part of it there are also a huge diversity, diverse tools, divisions so we are looking to a very

10:36.840 --> 10:47.480
very fragmented communities and there is a need to create some glue between them. What you can say

10:47.480 --> 10:54.440
that 22% of researchers once saw the survey said they are using air as a statistical and scientific

10:54.440 --> 10:59.280
programming language and the observation is important because air developed for good reason

10:59.280 --> 11:04.800
for social sciences. It developed because there is an afflicted affinity between the diversity

11:04.800 --> 11:10.000
of practices existing and the flexibility of the tools that air allows that allows to develop very

11:10.000 --> 11:19.460
specific packages which can continue the work of small communities. You probably all know about

11:19.460 --> 11:25.520
air, it's a script-oriented language. You can build very quickly small packages with data about a

11:25.520 --> 11:31.760
specific research project and there is a lot of support from the French community with there is a

11:31.760 --> 11:40.520
lot of packages in French for instance. But this leads to limits. It creates a huge diversity of

11:40.520 --> 11:47.060
types of package. Some of them are not very easy to understand. Some of them are not very well

11:47.060 --> 11:53.120
documented and there are functions that exist only in air which creates some kind of, we increase

11:53.120 --> 11:59.000
the diversity of tools social sciences community are using. Depending on what packages you look

11:59.000 --> 12:04.720
like there is a very low documentation and very low standardization of the code and there is still

12:04.720 --> 12:08.660
this ambiguity between what is the statistical languages and what is the programming language.

12:08.660 --> 12:17.880
For the main topic of what I want to say, what is the state of the Python uses in social sciences?

12:17.880 --> 12:23.060
Let's say there are not a lot of people using it. There are more and more human researchers

12:23.060 --> 12:28.120
interested to leverage machine learning in their research. So they are coming to Python to try to

12:28.120 --> 12:35.000
understand how they can use it in their research. But for the moment it's difficult to get to realize

12:35.000 --> 12:41.920
the basic steps of social scientists work in Python. So it means all the tools that we are using

12:41.920 --> 12:50.240
on a daily basis like making logistic regression with a clear presentation of the results. And we

12:50.240 --> 12:55.840
need what I want to say, dedicated community packages as a middle ground for researchers to

12:55.840 --> 13:02.480
access friendship programming and then being perceived aware of all the open source and open

13:02.480 --> 13:08.800
science practices they can add in their research. So for that there is a need to go beyond application

13:08.800 --> 13:14.280
development itself and beyond one specific package. It's a whole process to implement.

13:14.280 --> 13:22.520
Just what are the expected positive benefits of Python broad adoption? Just a small snippet. It

13:22.520 --> 13:27.920
will enhance scientific programming practices especially with the importation of the whole

13:27.920 --> 13:35.320
ecosystem of Python, especially notebooks. They have the potential flexibility and they will allow

13:35.320 --> 13:42.480
to create common language with other communities especially computer sciences. The question is

13:42.480 --> 13:49.000
still we in the social sciences have already aired as a main language. What's the future of

13:49.000 --> 13:55.400
the collaboration between the student language? Reject the idea to develop Python to advocate

13:55.400 --> 14:06.520
the polyglotism between and Python or start a transition with Python. In France we decided to

14:06.520 --> 14:12.760
teach Python as a first language for students in high school. So maybe there is a change going on

14:12.760 --> 14:18.320
on what kind of languages students are going to practice in the future. So it creates a shared

14:18.320 --> 14:26.600
language. It's a leap of faith to decide what kind of tools we will need. Mine here is the Python but

14:26.600 --> 14:32.560
I'm here to speak about the place of a central programming. So both of them are going to be

14:32.560 --> 14:38.600
together. I just want to say a word about what I'm trying to do in France for social sciences,

14:38.600 --> 14:45.720
especially in sociology, to enable this practice of Python and this kind of by social humanities

14:45.720 --> 14:52.520
social and science package. I need to achieve a double constraint first to achieve some

14:52.520 --> 14:58.240
standardization because we need some shared tools to be able to work together especially to train

14:58.240 --> 15:04.960
students and to create collaboration projects. But we can't sacrifice our disciplinary and

15:04.960 --> 15:11.440
subdisciplinary specificities so we need to find the good level of flexibility. It's a four-step

15:11.440 --> 15:17.560
process. Nothing very new and it's very common I guess in every development of packages and tools.

15:17.560 --> 15:24.120
The first one is to identify what kind of practices can be called co-assist standard even

15:24.120 --> 15:29.120
if they are not completely standard. The second step is to build easy to use packages. I can

15:29.120 --> 15:34.160
find place in the specific workflow. The third one is to prove it can be useful because there

15:34.160 --> 15:40.840
is no way to create something. There is no proof that it makes some positive advantage in research

15:40.840 --> 15:47.000
processes and then the first step is to train colleagues and develop practices. Step one, to

15:47.000 --> 15:53.160
uncover standard practices and we need to and I'm speaking about social science to understand better

15:53.160 --> 15:59.840
what is a common sense of our daily job. For instance not all social scientists are doing

15:59.840 --> 16:07.640
machine learning or statistics but a lot of them still do it a bit especially basic statistics.

16:07.640 --> 16:13.960
So there are some co-assist standard operations for instance for survey, analyzing surveys with

16:13.960 --> 16:22.160
questionnaire and samples. So we need more like descriptive statistics for survey, different

16:22.160 --> 16:30.000
tools for transformation of file formats to generate and modify tables to create

16:30.000 --> 16:37.840
intermediate documents and to produce visualizations the way we use it in our work. For instance,

16:37.840 --> 16:45.320
France we are using a lot of work from Bordeaux, Pierre Bordeaux, sociology and he has very specific

16:45.320 --> 16:52.080
way to present the result of factorial analysis and you can find it in the Python universe. So

16:52.080 --> 16:58.760
you need to start to work with those existing workflow to build more adoption. The second step

16:58.760 --> 17:06.040
is to facilitate the disciplinary use and nitride a small package which is in French and it's the

17:06.040 --> 17:11.720
choice to be able to be close to students and researchers who don't usually use Python to be

17:11.720 --> 17:21.880
a one-liner which is the first step to use some kind of easy tools to move quicker to results close

17:21.880 --> 17:28.440
to the common sense in the way tables are organized and based to facilitate the complete workflow from

17:28.440 --> 17:34.040
the data to some results that can be published or presented to students and it's based on the

17:34.040 --> 17:39.960
basic packages of the Python communities like Bordeaux so it allows to move swiftly from one

17:39.960 --> 17:47.000
specific disciplinary package to the more general practices. The third step is to show the usefulness

17:47.000 --> 17:52.840
of both Python and this specific package and for that there is a need of public demonstration in

17:52.840 --> 17:59.240
context. No research tools can be used will be used if it's not direct advantage to use it for

17:59.240 --> 18:07.880
research and doing stuff. So notebooks are kind of perfect vector to prove and display some,

18:09.400 --> 18:17.800
I can see the figures in this, yes it can be derived polarizing but it's a good way to present

18:17.800 --> 18:23.320
a complete state of research and we developed with the collaboration between Humanoon which is

18:23.880 --> 18:29.640
platform for software and data analysis in French and a cooperative detective ist, five notebooks

18:29.640 --> 18:35.560
for machine learning as a starting point to show how Python can be used like from the beginning to

18:35.560 --> 18:41.240
the end to analyze a survey and the survey we just discussed before about the state of practice

18:41.240 --> 18:48.040
of open source science in France. And the fourth step is a very important step is to train

18:48.040 --> 18:52.520
colleagues and students so you just can put something out there in the world so the tools

18:52.520 --> 18:58.120
need to find the place in research workflow so there is some kind of translation to the tools,

18:58.120 --> 19:05.240
to the practices and we are doing it in different steps, writing books and academic examples

19:05.240 --> 19:11.000
to stabilize a sharp practice in France. I am interviewing laboratories to show how its

19:11.000 --> 19:18.840
usefulness to use some Python even if you don't, my colleagues don't usually do a central programming

19:19.560 --> 19:26.840
to train more new students especially PhD candidates to those new approaches and all the

19:26.840 --> 19:41.400
world around Python like Git and using Git Hub or Git Lab and creating spaces to discuss

19:41.400 --> 19:48.520
our specific practices which for the moment doesn't exist. I will conclude just

19:48.520 --> 19:55.880
from very quick computer ideas. My point today is to say that

19:56.920 --> 20:02.280
central programming especially in Python but not specific in Python is a third way that between

20:02.280 --> 20:09.080
the use of application which is the daily basis of a lot of social sciences especially in sociology

20:09.080 --> 20:15.880
and not using at all code which is also as the daily basis of a lot of qualitative researchers

20:15.880 --> 20:24.280
in social sciences. In scientific programming we allow to promote the productivity and open

20:24.280 --> 20:32.440
source practices because it is the gate to all the practices from the open source communities

20:32.440 --> 20:37.880
and we promote inter-disciplinarity collaboration with colleagues outside the scope of sociology

20:37.880 --> 20:48.600
for instance. Nevertheless, we need to excavate and make this process of understanding what are

20:48.600 --> 20:54.040
standard practices that can be standardized at some point to find early users and creating

20:54.040 --> 21:01.320
code developers that can come along with this work of reflectivity and to demonstrate more

21:01.320 --> 21:09.000
the concrete efficiency of those tools. The limits are the focus on disciplinary specificities

21:09.000 --> 21:15.560
is also drawbacks because it can increase the expression from libraries and it's something

21:15.560 --> 21:21.640
which is real and maybe there are better languages to promote than Python or IR to do that.

21:21.640 --> 21:29.800
But I started with Python. So thank you for listening to me and it's my message.

21:29.800 --> 21:55.800
Thank you. If you could take questions please do repeat the following for the stream. Thanks.

21:59.800 --> 22:11.800
So in recent years we have a lot of conference that one special track for tools and one is

22:11.800 --> 22:30.360
request or kind of a stamp on the paper that the paper is so it comes with a software repository

22:30.360 --> 22:34.360
where you can rerun the experiment. Do you think that will be helpful also to propose

22:34.360 --> 22:38.360
this on social sites? The question is that there is a lot of problems in similar problems

22:38.360 --> 22:45.160
going on in social sciences and even the possibility to make a paper is not here right now in the

22:45.160 --> 22:50.520
social science communities because the logic of central programming is the logic of automatizing

22:50.520 --> 22:58.360
steps and not using directly excel to make that analysis is not yet here in the basic practices

22:59.240 --> 23:04.360
of our communities. Some of my colleagues are doing it but there are very few that are usually

23:04.360 --> 23:11.720
kind of the youngest one. So what I'm saying that is not so clear in what I said is we need to

23:11.720 --> 23:18.280
use more what has been developed from computer sciences and to try to find a way, a gate to

23:18.280 --> 23:23.160
import them at some point in our practices. So to look more what's good to understand what's

23:23.160 --> 23:29.560
going on in computer science we need also a better culture what are all those tools and

23:29.560 --> 23:34.840
it's still not here. Thanks.

23:34.840 --> 23:40.280
So I was trying to set up tutorials

23:41.480 --> 23:46.920
that's important for social science people. This is my presentation actually for those people

23:46.920 --> 23:51.000
who are going to learn these things they're going to learn the new social science. For people who

23:51.000 --> 23:56.120
are not going to learn them not going to learn anything. So this is not very helpful in my own

23:57.080 --> 24:01.400
property architecture experience. Okay a question is that there is a division between people who

24:01.400 --> 24:06.600
wants to train to those tools and those who doesn't want. The fact is we are more and more

24:06.600 --> 24:11.320
working projects in cryptography and the basic culture of what's going on what's possible to do

24:11.320 --> 24:16.440
is something we need to share to everyone. Otherwise our new division which are going to

24:17.880 --> 24:25.160
exist and to reproduce. So I'm quite sure that that's why I've put this kind of very small

24:25.160 --> 24:31.720
diagram first. Semi-programming can start with reading a script and a single language not

24:31.720 --> 24:37.080
policing it by yourself and it is those steps that I think are useful for everyone so global

24:38.440 --> 24:43.640
computer literacy for social scientists even if they don't want to move to other

24:44.600 --> 24:49.560
more advanced tools. But this one is in theory for instance working on project with statisticians

24:49.560 --> 24:55.160
that people were doing scrapping for data to know what is possible to do. Thanks.

25:19.560 --> 25:38.840
You you you speak about the software cap and trees.

25:49.560 --> 25:52.600
They have a section dedicated for social science.

25:59.800 --> 26:05.080
They have a specific context for specific fields like social science and

26:05.080 --> 26:23.000
recently social science and maybe they are totally totally driving everything is open source the workshops material is open and everyone can collaborate with integration at a structure it creates a

26:25.160 --> 26:30.760
yeah a job for you. Yeah of course for the question it is they are already a very

26:30.760 --> 26:36.840
important intensive existing the cap and trees especially in different disciplines. For what I

26:36.840 --> 26:43.160
know in France there are very little visible in social sciences so I use the content they create

26:43.160 --> 26:49.480
they are creating but for what I can see very far from the daily questions social scientists are

26:50.440 --> 26:57.880
having in the daily analysis and there is still you know transition to make and I can I agree

26:57.880 --> 27:04.840
completely with what you said there is a need to make this the jointer but it's a working process

27:04.840 --> 27:10.440
and I will try to contact find someone who wants to do it with me at some point but I've been

27:10.440 --> 27:17.560
trained at some point for software cap and tree but I never completed my training but yes I'm aware of that thank you.

27:17.560 --> 27:44.840
You're right. I have no data about why and sorry for the question the question is how

27:44.840 --> 27:52.360
how much do we know why people are using specific software tools in social sciences. My answer is

27:52.360 --> 28:00.280
and it's with my heart of social scientists interested in science is that I know very little

28:00.280 --> 28:08.760
work studying how researchers are using software and tools there are some work starting to be

28:08.760 --> 28:15.640
developed but I have no answer for instance for air exists because statisticians used it a lot and

28:15.640 --> 28:21.640
so it has been touched in sociological sources and then students became researchers and now

28:21.640 --> 28:28.040
they're using in France so there is an historical past dependency on the specific kind of use but

28:28.040 --> 28:38.040
I'm quite sure it's a huge avenue for research thank you.

28:58.760 --> 29:05.000
I'm quite sure you're right the question is then is how people change

29:05.800 --> 29:09.320
from one software to another and this is the unresolved question so thank you.

29:09.320 --> 29:11.320
Thank you.

29:40.280 --> 29:42.120
Here you go you can put that in your pocket.

29:42.120 --> 30:10.120
Yes wherever you want.
