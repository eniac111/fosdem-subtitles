WEBVTT

00:00.000 --> 00:09.880
Okay, thank you for coming to this presentation.

00:09.880 --> 00:14.680
I'm Nicolas Roland from the Gustave Vefel University.

00:14.680 --> 00:15.680
Thank you.

00:15.680 --> 00:16.680
Please.

00:16.680 --> 00:23.800
And I will be presenting some research we did on crowdsource

00:23.800 --> 00:28.280
health data, some analysis we did with a few bunch of software.

00:28.280 --> 00:32.520
I will be presenting the work we did with myself, Pierre Roman, and

00:32.520 --> 00:39.000
Ludovic Moison from the Gustave Vefel University.

00:39.000 --> 00:43.960
So traffic noise is a major health concern.

00:43.960 --> 00:52.040
In Europe, in Western Europe, it's estimated by the World Health Organization that we lost

00:52.040 --> 00:58.200
one million healthy life years each year.

00:58.200 --> 01:10.680
In France, we have estimated the social cost, so the cost to the community of 147 billion

01:10.680 --> 01:12.760
euros per year.

01:12.760 --> 01:23.360
So it has a cost on monetary costs, but also a cost on people and their health.

01:23.360 --> 01:31.680
So the big question is how we can find where noise is problematic.

01:31.680 --> 01:39.280
And so, of course, we can't have direct measure everywhere.

01:39.280 --> 01:41.400
We can't put microphones everywhere.

01:41.400 --> 01:49.000
It will be a cost nightmare, a logistic nightmare, and a privacy nightmare.

01:49.000 --> 01:50.500
Of course, it's not possible.

01:50.500 --> 01:56.560
So the traditional way is to simulate the noise from traffic counts.

01:56.560 --> 02:05.880
So we put counters on roads and counts of vehicles and estimate the vehicles.

02:05.880 --> 02:14.920
We do that on trains, we do that on planes, aircraft, and we simulate those traffic counts.

02:14.920 --> 02:22.760
And we produce this kind of car, for example, noise modeling, which is an application we

02:22.760 --> 02:32.160
developed with the Umarou laboratory that can compute from these counts noise maps.

02:32.160 --> 02:39.480
And this is a legal requirement by the European Commission.

02:39.480 --> 02:46.600
Another way that the Umarou, which is working on environmental acoustics, it's a lab on

02:46.600 --> 02:55.660
another acoustic, is not to simulate, but to get actual data, real data from contributors

02:55.660 --> 02:59.560
using a smartphone application you can install.

02:59.560 --> 03:03.120
It's working on smartphones.

03:03.120 --> 03:04.480
It's available on fDroid.

03:04.480 --> 03:09.320
So it's also free of interest software.

03:09.320 --> 03:17.400
And it measures several things like your position, the sun spectrum, or not the full spectrum,

03:17.400 --> 03:19.400
it's just the third octave.

03:19.400 --> 03:26.600
So you can't understand what people are saying if it's someone speaking.

03:26.600 --> 03:32.480
But you can detect that someone is speaking.

03:32.480 --> 03:37.760
You also have some level and some kind of information.

03:37.760 --> 03:42.240
So it's part of a bigger project, like the noise project.

03:42.240 --> 03:48.880
So we have this noise modeling application that generates noise from open source geo

03:48.880 --> 03:52.880
data, mostly French geo data and open script map.

03:52.880 --> 04:00.040
So when you use street complete to say, OK, this is GROSS and this is MACADAM, we use

04:00.040 --> 04:04.040
that data to generate more precise maps, sound maps.

04:04.040 --> 04:08.760
Noise capture to measure and share some environments.

04:08.760 --> 04:14.560
And all this data is given in a special data infrastructure called Onomap.

04:14.560 --> 04:19.200
And there is also some community maps made by the users.

04:19.200 --> 04:26.840
This is a map of all the recordings we have nearly five years.

04:26.840 --> 04:28.200
So you can see it's worldwide.

04:28.200 --> 04:31.160
It's just not only France or Europe.

04:31.160 --> 04:35.480
It's worldwide.

04:35.480 --> 04:42.080
So the question was, what can you do with all this data we collect?

04:42.080 --> 04:52.440
So there was an extraction in 2021 of the three first years of data collection.

04:52.440 --> 05:02.520
So it's still collecting the data, but there was an extract that contains 260,000 tracks.

05:02.520 --> 05:09.520
So the tracks is recording worldwide with some spectrum, like I said, GPS localization

05:09.520 --> 05:14.200
and also the contributor can provide some tags.

05:14.200 --> 05:18.360
It's an open database license.

05:18.360 --> 05:23.120
So it's free to use.

05:23.120 --> 05:27.440
So the question is, oh, we can characterize the user environment, the sound environment

05:27.440 --> 05:33.200
of the user at the moment of the recording with the collected data.

05:33.200 --> 05:35.060
We think of two possibilities.

05:35.060 --> 05:40.000
One is from the sound spectrum we record.

05:40.000 --> 05:42.280
So it's an ongoing analysis.

05:42.280 --> 05:49.960
And it's not the way, it's the hardest way to do that, because we have to find patterns

05:49.960 --> 05:53.160
on the recordings.

05:53.160 --> 05:59.440
And we have to use machine learning to detect these patterns on all those data.

05:59.440 --> 06:03.720
So it's still going, but there is an easiest way.

06:03.720 --> 06:06.320
And this is the way I use.

06:06.320 --> 06:13.800
It's by using the tags that are provided by the contributors.

06:13.800 --> 06:23.620
So in this concept, like I say, 260,000 tracks, half of them have tags.

06:23.620 --> 06:26.760
So we can use just half of it.

06:26.760 --> 06:32.060
50,000 are where outdoors are not tested.

06:32.060 --> 06:43.680
So we want to work on this sound environment, so we discard indoors and test tagged tracks.

06:43.680 --> 06:49.240
We also remove the very, very small ones, so less than five seconds.

06:49.240 --> 07:00.440
So we remove maybe tracks that might be accidental.

07:00.440 --> 07:06.160
And we also work for just this preliminary works on France, because we are French, and

07:06.160 --> 07:10.200
it's easier for us to understand what's happening.

07:10.200 --> 07:16.680
And it's nearly 12,000 tracks.

07:16.680 --> 07:20.640
And like I said, it's a major, the road noise is a major concern.

07:20.640 --> 07:28.720
And it appears directly in our data, because the more frequent tag is road.

07:28.720 --> 07:38.440
So people are on maybe a third of our subset.

07:38.440 --> 07:40.280
There is the road noise in it.

07:40.280 --> 07:46.520
The second one is chatting, and so we have also things like wiring, animals, sounds,

07:46.520 --> 07:47.520
works.

07:47.520 --> 07:57.040
So there is 12 tags, different tags the user can provide.

07:57.040 --> 08:02.800
So we use quite simple one, a toolkit to analyze the data.

08:02.800 --> 08:11.240
First is the PostgreSQL and PostgreSQL database, because the data is provided as PostgreSQL

08:11.240 --> 08:12.560
dump.

08:12.560 --> 08:18.760
So in order to access it, you have to rebuild the data and the database.

08:18.760 --> 08:24.520
And the other tool we use is R, because we are, in the team, we are mostly R users.

08:24.520 --> 08:28.240
We also have Python, but we are more familiar with R.

08:28.240 --> 08:32.880
So two tools, simple, yes?

08:32.880 --> 08:40.480
Actually not really, because we also use in R a lot of packages, like the tidyverse, the

08:40.480 --> 08:48.560
SF packages for your special, your reason, stats, and so on.

08:48.560 --> 08:55.360
And we also, all those packages use dependencies like pandoc, markdown, rivil.js.

08:55.360 --> 09:00.520
This presentation actually is made with R and rivil.js.

09:00.520 --> 09:08.920
We also use geospatial libraries like Proj, JOS, GLAR, and those are dependencies that

09:08.920 --> 09:16.240
are not handled by R. It just called them.

09:16.240 --> 09:20.920
So what we did in this data set, so let's talk about results.

09:20.920 --> 09:23.520
We got some interesting things to add.

09:23.520 --> 09:36.320
The first thing we looked at was the animal tags, because we know that bird songs can

09:36.320 --> 09:43.360
be heard mostly the first hour before dawn.

09:43.360 --> 09:53.440
So this is a well-known dynamics in ornithology.

09:53.440 --> 09:56.040
And in the sound of the environment, we can't hear it.

09:56.040 --> 09:58.000
And we actually find it also.

09:58.000 --> 10:06.320
So in this graph, you can see on the left part is the time before the sunrise on the

10:06.320 --> 10:08.560
day of recording.

10:08.560 --> 10:12.460
And after, it's an hour after.

10:12.460 --> 10:19.320
So we find this actual dynamics of birds singing one hour before dawn.

10:19.320 --> 10:21.200
So it was a good sign.

10:21.200 --> 10:33.240
And we also find peaks of road noise between 8 to 10 AM and I fixed it, 6 to 8 PM.

10:33.240 --> 10:44.200
And we can say it looks like a much like a commuter's behavior.

10:44.200 --> 10:48.040
But we can't directly link to it.

10:48.040 --> 10:50.800
We can say, it's very similar to.

10:50.800 --> 10:59.240
So we look to physical events in the environment of the contributor.

10:59.240 --> 11:08.280
And we find a very good correlation between the wind force and the present of tags, the

11:08.280 --> 11:10.420
wind tags in the data set.

11:10.420 --> 11:15.040
So it works very well.

11:15.040 --> 11:19.680
We also did that with rainfall.

11:19.680 --> 11:22.720
And the correlation is not so strong.

11:22.720 --> 11:23.720
Not enough.

11:23.720 --> 11:33.680
So it might be a user bias, maybe if the rainfall is too small, the user doesn't hear the rain

11:33.680 --> 11:38.080
or doesn't think to add the tag about it.

11:38.080 --> 11:45.520
And it might be also a special issue because the mean nearest weather station distances

11:45.520 --> 11:47.400
is 16 kilometers.

11:47.400 --> 11:53.360
So maybe the local condition might be different between the weather station and the user

11:53.360 --> 11:55.960
at the moment of the recording.

11:55.960 --> 12:02.000
So not so strong, but actually find data.

12:02.000 --> 12:08.240
I'm not the first one to speak about repossessible science here, actually.

12:08.240 --> 12:10.680
And it's an issue, really an issue.

12:10.680 --> 12:17.400
So for this study, we have some good points, like the data is already available.

12:17.400 --> 12:20.260
The source code, we made it available.

12:20.260 --> 12:28.800
So all SQL script to rebuild the database and the table we use are available.

12:28.800 --> 12:32.520
The R notebooks we made are also available.

12:32.520 --> 12:36.120
The setup broadly is available.

12:36.120 --> 12:41.000
But we also bought things to assess.

12:41.000 --> 12:44.280
So some notebooks were very wide.

12:44.280 --> 12:50.800
And we went very deep on the analysis and the exploratory files.

12:50.800 --> 12:55.800
But at the end, it was very hard to reproduce even in our team.

12:55.800 --> 12:58.840
We actually were able to do it.

12:58.840 --> 13:06.200
But for someone coming from outside, it might be difficult to enter in that.

13:06.200 --> 13:14.840
And so it needs some contractoring and a little bit more commenting, more explanation.

13:14.840 --> 13:21.660
And so there is also a lack of information on software environment.

13:21.660 --> 13:27.480
So it makes it very hard to reuse and reproduce.

13:27.480 --> 13:38.760
So what could we use to have a better tooling?

13:38.760 --> 13:44.720
Since we use R, you can use R-end, which is R package to reproduce.

13:44.720 --> 13:49.280
It's like Py virtual environment.

13:49.280 --> 13:57.360
It worked well, but it worked well just for R. And we used other software like Pajes.

13:57.360 --> 13:59.920
We used JOS, Proj, Jidal.

13:59.920 --> 14:02.760
So it's not perfect.

14:02.760 --> 14:09.400
Docker might be something that can be helpful.

14:09.400 --> 14:16.840
But like Simon said before, it's not perfect for reproducibility.

14:16.840 --> 14:26.400
And I just say, GUIX is on my mind from one year, actually, to say, OK, I need to work

14:26.400 --> 14:27.400
on that.

14:27.400 --> 14:29.440
And I think it'd be a good solution.

14:29.440 --> 14:34.280
I won't talk too much because there was a talk by Simon Tournier just two talks before.

14:34.280 --> 14:37.640
And I go watch it.

14:37.640 --> 14:41.080
I think it might be a very good solution.

14:41.080 --> 14:47.640
In conclusion, so we can use cold source data.

14:47.640 --> 14:50.440
We can use cold source data for science.

14:50.440 --> 14:55.280
We can find even for something quirky, like some environment.

14:55.280 --> 14:57.800
You can use it for science.

14:57.800 --> 15:00.040
This particular data set is usable.

15:00.040 --> 15:02.400
So you can access it and find new things.

15:02.400 --> 15:04.440
We don't have every question.

15:04.440 --> 15:06.800
So we don't have every answer to.

15:06.800 --> 15:09.320
We can answer with this data set.

15:09.320 --> 15:16.680
So it's quite fun to play with it and find some, oh, we can find birds.

15:16.680 --> 15:22.120
I do believe that free open source software are key for reproducible science.

15:22.120 --> 15:27.120
We can't make reproducible science with proprietary software.

15:27.120 --> 15:29.480
It's impossible.

15:29.480 --> 15:31.040
Repulcable science is hard to achieve.

15:31.040 --> 15:36.080
You have to find it as soon as possible before starting your project.

15:36.080 --> 15:44.000
Because when you are too far, you have to refactor things, and it can be very tricky.

15:44.000 --> 15:56.720
And you have maybe working with, this is more sound and physics related study.

15:56.720 --> 15:59.320
But sometimes I work with economists.

15:59.320 --> 16:02.280
I work with geographers.

16:02.280 --> 16:12.920
And they are not so fun, very keen on technologies and computers in general.

16:12.920 --> 16:19.640
So sometimes you need someone, maybe an engineer or someone in the team, that can handle this

16:19.640 --> 16:21.440
reproducible part.

16:21.440 --> 16:23.840
And so you need to get the skills.

16:23.840 --> 16:29.800
So either you get yourself or you have to take someone in the team that can do that

16:29.800 --> 16:32.040
for you.

16:32.040 --> 16:34.440
And notebooks are not enough.

16:34.440 --> 16:42.960
notebooks are great to communicate and explore things, but they are not good enough for reproducible

16:42.960 --> 16:46.080
science.

16:46.080 --> 16:49.880
So there is a link for the data set, the actual data set.

16:49.880 --> 16:52.920
Please go to check noisepleid.org.

16:52.920 --> 16:54.560
You can navigate on the map.

16:54.560 --> 17:01.560
You can see actually tracks and click on things to get what is recorded.

17:01.560 --> 17:03.080
Thank you for your attention.

17:03.080 --> 17:08.360
You can join me by email or on Mastodon.

17:08.360 --> 17:12.440
This presentation is available here.

17:12.440 --> 17:15.320
And everything is accessible on GitHub.

17:15.320 --> 17:16.320
Thank you very much.

17:16.320 --> 17:17.320
Thanks.

17:17.320 --> 17:18.320
That leaves us a bit of time for questions.

17:18.320 --> 17:28.320
So please feel free to take them, repeat them, and then answer them.

17:28.320 --> 17:40.600
Yeah, in the graph with the bird, you had a sort of a dip at zero, which...

17:40.600 --> 17:42.600
Yeah, zero is...

17:42.600 --> 17:44.600
That is a statistical artifact.

17:44.600 --> 17:54.320
We have an explanation to show that the low beam is exactly at the top of the fitted line.

17:54.320 --> 17:55.320
Yeah.

17:55.320 --> 18:03.040
The explanation was about this particular graph, why there is a low beam at the zero,

18:03.040 --> 18:09.480
and the peak is just above the zero, because it smoothed a little bit.

18:09.480 --> 18:16.280
And you can see there is a peak just before, and the line is just smoothing, and there

18:16.280 --> 18:22.200
is little shifting.

18:22.200 --> 18:25.280
And you think, why is there a low?

18:25.280 --> 18:26.280
I don't know.

18:26.280 --> 18:27.280
I'm not sure.

18:27.280 --> 18:28.280
Yeah, please.

18:28.280 --> 18:37.280
So, as you're jumping on the same question, because we are doing crowdsourcing data, so

18:37.280 --> 18:42.680
it's obviously influenced by the users that's collecting the data for us, how do you factor

18:42.680 --> 18:47.680
in or how do you eliminate this source of variance where there could be underlying behavior

18:47.680 --> 18:52.400
of humans that is affecting the results of the data?

18:52.400 --> 18:54.840
For example, summarise time.

18:54.840 --> 19:01.840
So people who get awakened by birds during... before summarise, they would be very annoyed

19:01.840 --> 19:04.000
and they would record more.

19:04.000 --> 19:07.880
People who wake up at the normal times are too busy to even make the recording, then

19:07.880 --> 19:10.760
you kind of have a bias in the data.

19:10.760 --> 19:11.760
Okay.

19:11.760 --> 19:16.120
So the question was about this is crowdsourcing data.

19:16.120 --> 19:26.200
So there is data provided by people willing to provide it, and there is a bias, of course,

19:26.200 --> 19:33.720
because you might be angry at birds waking you up in the morning, and you may be angry

19:33.720 --> 19:38.160
to traffic noise, and actually we don't assess the data.

19:38.160 --> 19:41.080
We take it as it is.

19:41.080 --> 19:46.640
Maybe there will be some... I'm not part of this part of the project, but maybe there

19:46.640 --> 19:56.360
will be some work on it, and we hope that it's so much data that it will smooth a bias.

19:56.360 --> 20:05.120
But of course, it's bias, like OpenSuite map data, and there is someone making a decision

20:05.120 --> 20:10.400
to say, okay, I will record it for a good or bad reason, or to prove a point, okay,

20:10.400 --> 20:15.560
where I'm leaving, it's too noisy, I make a recording.

20:15.560 --> 20:17.640
And it's okay.

20:17.640 --> 20:24.760
But we count... it's very hard to assess this kind of information.

20:24.760 --> 20:30.200
We don't know why people record tracks, because maybe it's a pleasant environment and they

20:30.200 --> 20:32.680
want to share it.

20:32.680 --> 20:36.400
It's not so good, and it's okay for us.

20:36.400 --> 20:39.400
I hope it answers your question.

20:39.400 --> 20:40.400
Yeah, please.

20:40.400 --> 20:45.400
Yeah, so I just wanted to ask, because I think wind is pretty hard to incorporate, because

20:45.400 --> 20:51.400
when somebody records, they probably record it without the pop filter, which makes the

20:51.400 --> 20:55.400
sound really loud of the wind, despite it not being so loud.

20:55.400 --> 21:00.400
Because somebody comes up with the phone and records it, and the wind blows straight

21:00.400 --> 21:05.400
into it, and it's really, really loud, I mean, as kind of like in decibels, when it actually

21:05.400 --> 21:06.400
isn't.

21:06.400 --> 21:10.400
So you can translate these sort of things out, or subtract something from this wind recording

21:10.400 --> 21:12.400
so you can keep them in the noise.

21:12.400 --> 21:19.520
Okay, the question was about the wind recordings, and the fact that smartphone doesn't have

21:19.520 --> 21:25.400
a pop shield, and protect the microphone from the wind.

21:25.400 --> 21:30.400
And so, actually, I'm not an acoustician.

21:30.400 --> 21:33.760
I'm a more JS engineer.

21:33.760 --> 21:42.760
So I don't have the exact question for that, but I do believe when you are using your microphone,

21:42.760 --> 21:52.880
when you're talking smartphone nowadays, it can protect you a little bit from the noise.

21:52.880 --> 21:55.880
But I'm not sure of the question.

21:55.880 --> 21:56.880
Yeah, please.

21:56.880 --> 22:03.880
My question is kind of connected to the bias one, but when you were building the data capture,

22:03.880 --> 22:04.880
like...

22:04.880 --> 22:05.880
So the subsets?

22:05.880 --> 22:10.880
Yeah, did you build the data capture tool where people are inputting data, right?

22:10.880 --> 22:12.880
Or how was that built?

22:12.880 --> 22:17.880
And did you make sure that people could use it in a way that...

22:17.880 --> 22:22.880
Like, how did you make sure that people were comfortable using it in the situations that

22:22.880 --> 22:25.880
you needed recordings for?

22:25.880 --> 22:27.880
So the question was...

22:27.880 --> 22:31.880
Can you simplify it?

22:31.880 --> 22:41.880
So I'm interested in what choices you made in order to have the thing look and function

22:41.880 --> 22:45.880
how it did to capture the data, and again, to bias.

22:45.880 --> 22:54.880
If people are not able to use it, or don't like using it, does that also bias the data?

22:54.880 --> 22:57.880
Ah, okay.

22:57.880 --> 22:58.880
So you're not speaking...

22:58.880 --> 23:02.880
So the question was about how we build the analysis and...

23:02.880 --> 23:05.880
How we build it.

23:05.880 --> 23:11.880
If you are not able to use R to build the...

23:11.880 --> 23:14.880
Sorry.

23:14.880 --> 23:22.880
Actually, we have to make choice, and we are more comfortable with R.

23:22.880 --> 23:30.880
So there is a bias, of course, and we also have some libraries like SunCalc, for example,

23:30.880 --> 23:33.880
that makes life very simpler for us to...

23:33.880 --> 23:44.880
We give it a date and a position, and it gives you the sunrise and...

23:44.880 --> 23:47.880
Sunrise and sunset, thank you.

23:47.880 --> 23:52.880
Sunset tile, for example, so it makes life easier for us.

23:52.880 --> 23:55.880
But of course, there is a bias.

23:55.880 --> 24:01.880
Even when we build the application, there is, of course, a bias.

24:01.880 --> 24:09.880
But I wasn't part of the team that built this application.

24:09.880 --> 24:21.880
And it's more focused on what we want to get, but it's available for everyone, so do whatever we want to do with it.

24:21.880 --> 24:23.880
Thank you.

24:23.880 --> 24:25.880
We have more time, maybe.

24:25.880 --> 24:31.880
On your first slide, you had a really big number in terms of the social costs.

24:31.880 --> 24:32.880
Yeah.

24:32.880 --> 24:33.880
Only in France.

24:33.880 --> 24:34.880
Yeah.

24:34.880 --> 24:37.880
It seems quite egregiously big.

24:37.880 --> 24:41.880
Do you know anything about what includes the social costs?

24:41.880 --> 24:46.880
What are the costs that are incorporated into this number?

24:46.880 --> 24:49.880
As Kim, it's a huge report.

24:49.880 --> 24:59.880
Adam is a French agency, an environmental agency, so it works on noise pollution, but also air pollution and things like that.

24:59.880 --> 25:00.880
So you are working...

25:00.880 --> 25:02.880
Sorry, I didn't repeat the question.

25:02.880 --> 25:08.880
The question is about the social cost and the amount and how it is constructed.

25:08.880 --> 25:13.880
So I just read quickly the report.

25:13.880 --> 25:29.880
And the social cost is mostly about health issues, lack of sleep, and stress related to noise and things like that, and how it affects people,

25:29.880 --> 25:44.880
and how it affects their health, and how it affects less better health as a cost for the society because you have more anxiety.

25:44.880 --> 25:46.880
Big disease in terms of the GDP.

25:46.880 --> 25:48.880
Sorry, we have a short switch.

25:48.880 --> 25:49.880
Thank you very much.

25:49.880 --> 26:18.880
Sorry.
