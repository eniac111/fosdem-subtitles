WEBVTT

00:00.000 --> 00:09.480
So, thank you Paul, welcome everybody.

00:09.480 --> 00:17.960
So we will today present to you the Cortex platform, which is open platform for research

00:17.960 --> 00:25.720
in social sciences and it's a collective presentation where all the team is here but we have three

00:25.720 --> 00:31.240
of us will be presenting today out of the team that you see on the picture.

00:31.240 --> 00:33.520
So what is the Cortex?

00:33.520 --> 00:42.240
It's an online platform built on top of an architecture and its main goal is to help

00:42.240 --> 00:49.360
the social scientists with the research question to actually find the benefit of a computational

00:49.360 --> 00:55.240
method to fit a specific question.

00:55.240 --> 01:05.920
So it has been founded in 2009 and it's driven by social science research and supported by

01:05.920 --> 01:12.320
several French national institutes at the beginning, in particular INRA and then later

01:12.320 --> 01:18.520
on some funding, some research funding and some European project called RISIS, European

01:18.520 --> 01:22.900
project of infrastructure.

01:22.900 --> 01:28.960
We are now at our second version of this online platform called Cortex Manager, so this is

01:28.960 --> 01:31.720
the part that you can actually go online.

01:31.720 --> 01:36.920
It has been designed from the very beginning, as I said, for the social scientists.

01:36.920 --> 01:48.840
So we took the point of departure was that the social scientist doesn't have any IT capabilities,

01:48.840 --> 01:57.240
doesn't have any, on average, doesn't have any resource on the computer, especially 15

01:57.240 --> 01:58.240
years ago.

01:58.240 --> 02:06.280
So one of the main benefits of the platform would have to be empowering him with the power

02:06.280 --> 02:10.480
of computing and of methods.

02:10.480 --> 02:17.840
It's a collaborative platform so a lot of projects can be shared between scientists

02:17.840 --> 02:23.080
and there is, is it a web interface connected to a workspace online?

02:23.080 --> 02:28.040
You don't have to, of course, have it on your computer which was, again, quite new at the

02:28.040 --> 02:30.160
time.

02:30.160 --> 02:36.240
And it's very important that it's very permissive, so it's a bunch of methods that you can apply

02:36.240 --> 02:39.720
on all kinds of data that we will detail later.

02:39.720 --> 02:46.080
And this was one of the main foundations of our platform in the beginning, that all the

02:46.080 --> 02:53.880
methods are runnable on all the viable that you have at your disposal.

02:53.880 --> 02:59.120
So how is it going from 10, 10, 12 years after that?

02:59.120 --> 03:06.880
So we have over 250 peer-reviewed publications that we are counting from now.

03:06.880 --> 03:10.680
And of them 75 documents in 2022.

03:10.680 --> 03:15.680
So it's growing and it's growing quite fast the last few years.

03:15.680 --> 03:22.320
50K, so 50,000 analysis, so 50,000 jobs have been done on the platform by scientists last

03:22.320 --> 03:36.840
year by over 1,000 active users, 400 institutions and in 50 countries, so it's pretty worldwide.

03:36.840 --> 03:44.320
The team we have now in 2022.3 is consisted of eight technical persons, so engineers mainly,

03:44.320 --> 03:50.440
two researchers, one trainee and two close collaborators in companies are independent.

03:50.440 --> 03:55.080
Very important is located at University of Gustave Eiffel in Paris, near and the greater

03:55.080 --> 03:56.920
Paris, so near Montla Valley.

03:56.920 --> 04:01.560
So you have this island not far away.

04:01.560 --> 04:10.360
And this infrastructure is composed of a classic web-oriented application and infrastructure.

04:10.360 --> 04:17.480
So obviously we have the web interface that you can go to as a regular user that encloses

04:17.480 --> 04:27.440
a lot of web services, so the main interface, but also an API that you can go and act upon

04:27.440 --> 04:28.800
from outside.

04:28.800 --> 04:35.160
So this allows us to open all our methods and services to external applications and

04:35.160 --> 04:39.840
the specifically external projects that we are part of.

04:39.840 --> 04:46.720
We are built on an infrastructure of servers that are hosted at Montla Valley, so in our

04:46.720 --> 04:50.000
university, so everything is local.

04:50.000 --> 04:57.800
We don't have anything hosted online, which is 300 CPU, 3.5 terabytes of RAM and 40 terabytes

04:57.800 --> 05:03.360
of storage, which is big and not big at the same time nowadays, but it's enough for our

05:03.360 --> 05:05.440
needs.

05:05.440 --> 05:10.600
We have two main services that we are providing.

05:10.600 --> 05:19.480
First is the storage of big database that we are collecting and curating, like for example

05:19.480 --> 05:22.680
the patents, the European patents.

05:22.680 --> 05:33.240
We have several other databases that we are putting inside some projects, so we can help

05:33.240 --> 05:40.560
specific projects with this data that we have stored in the infrastructure.

05:40.560 --> 05:47.280
The second part is the processing that we offer, so the method, the scientific methods

05:47.280 --> 05:55.640
that I will talk about later, that are run inside of projects on the platform directly

05:55.640 --> 05:56.640
by the researcher.

05:56.640 --> 06:02.240
The researcher are actually actioning those methods directly from the web interface with

06:02.240 --> 06:08.560
the parameters and their data.

06:08.560 --> 06:16.640
We of course have this monitoring of the whole infrastructure, so it stays online.

06:16.640 --> 06:20.120
Once you have an infrastructure, it has to do something for scientists, and that's the

06:20.120 --> 06:22.360
goal of the platform.

06:22.360 --> 06:25.800
How does it do and what does it do for science?

06:25.800 --> 06:27.040
First, what?

06:27.040 --> 06:31.200
This is the right part of the previous diagram.

06:31.200 --> 06:39.280
We have a bunch of heterogeneous methods, so from scientific metrics, the study of publications,

06:39.280 --> 06:46.760
scientific publications and tracks, natural language processing, so terms extraction,

06:46.760 --> 06:54.240
name recognition and stuff like that, social network analysis, so the study of all the

06:54.240 --> 07:03.840
interactions found inside publications and text in between actors, keywords, etc.

07:03.840 --> 07:06.960
Stochastic block models, then I will end that.

07:06.960 --> 07:08.480
Where is Ali?

07:08.480 --> 07:10.520
Okay, somewhere in the room.

07:10.520 --> 07:12.240
We'll talk to you about later.

07:12.240 --> 07:19.760
Knowledge dynamics, so through time, the study of the knowledge through time, and the special

07:19.760 --> 07:26.600
analysis, which is a big part of our infrastructure now, because we have geocoding, geolocating

07:26.600 --> 07:33.520
inside publications, and geomapping from framework.

07:33.520 --> 07:43.320
Okay, next will be, I will give JoÃ©neu the mic to talk to you about how to cite cortex.

07:43.320 --> 07:44.320
This is one of the big...

07:44.320 --> 07:54.080
I will try to know.

07:54.080 --> 07:56.080
Okay.

07:56.080 --> 08:00.440
It's here.

08:00.440 --> 08:11.800
Then as a cortex is a research software being used mainly by researchers, then supposed

08:11.800 --> 08:22.400
to be cited, besides the fact that there is no yet strong culture of citing software properly

08:22.400 --> 08:26.840
inside academic works, it's expected to be done.

08:26.840 --> 08:37.120
Then according to that in 2022, we documented how cortex must be cited inside academic works.

08:37.120 --> 08:39.240
And here we have just an example.

08:39.240 --> 08:45.720
For example, if I am writing a paper and if I cite cortex, this is how cortex will be

08:45.720 --> 08:51.440
hand-read at the end of the paper in the reference section, for example.

08:51.440 --> 08:58.360
And with this, we can give, for example, the credit to the developers, like, for example,

08:58.360 --> 09:04.360
Philip, Ali, and many others who is contributing with this software for a long time, and must

09:04.360 --> 09:11.560
be recognized by this work academically speaking, then this is important, then that's what we

09:11.560 --> 09:12.560
did.

09:12.560 --> 09:23.160
And nowadays, we are lucky because a few years ago, we are missing the infrastructure to

09:23.160 --> 09:31.560
how to define, how to document, and how to cite software.

09:31.560 --> 09:38.960
And now we have, for example, the citation.cff, that is a citation file format.

09:38.960 --> 09:48.360
It's been adopted a lot, and I think it will be the standard way to do it.

09:48.360 --> 09:51.880
And on top of it, we have many tools.

09:51.880 --> 09:58.520
Here is one example, CFF convert tool, where we can convert the CSCF file format, for example,

09:58.520 --> 10:02.920
to bib.tech, to bib.l.tech, or to APA format, and many other formats.

10:02.920 --> 10:09.480
Then we can keep all the metadata about the software important for citation in one single

10:09.480 --> 10:20.040
file, and from this file, we can deliver it to many others, and it's really an easy way

10:20.040 --> 10:22.000
to do it.

10:22.000 --> 10:30.640
And then in Cortex, it's a solved problem, but we still have an issue, is about how to

10:30.640 --> 10:35.600
identify permanently this object.

10:35.600 --> 10:39.160
I say object as a digital object.

10:39.160 --> 10:43.360
It's a software, but it's a digital object from the point of view of science.

10:43.360 --> 10:48.880
And how we can identify it permanently, for example, for papers, we have a DOI, that is

10:48.880 --> 10:53.360
very well known, and so it's very well for papers, PDF.

10:53.360 --> 10:58.160
But for software, we have a problem to...

10:58.160 --> 11:04.560
We can need to cite software in many different levels of granularity, for example.

11:04.560 --> 11:09.520
We can cite the software, just the software name, or a specific version of the software,

11:09.520 --> 11:14.960
or a specific line of a specific file inside the source code of the software.

11:14.960 --> 11:20.480
And this is still an open question, because, for example, we have a proposition from the

11:20.480 --> 11:30.400
community to solve it, but there is no one single kind of permanent ID that covers out

11:30.400 --> 11:33.520
the levels of granularity, for example.

11:33.520 --> 11:38.440
We have the proposition from the software heritage project, that it's the suite, the

11:38.440 --> 11:45.120
software heritage ID, that we can use it to cite software in the very specific code fragment

11:45.120 --> 11:48.480
to the snapshot of the full source code.

11:48.480 --> 11:54.440
But for example, we can't use software ID to cite software in a high level, like the

11:54.440 --> 11:57.480
software version of only this project name.

11:57.480 --> 12:00.040
For that, we should use another kind of ID.

12:00.040 --> 12:01.040
That's it.

12:01.040 --> 12:06.720
And it's an open question that we should work on this year or next year.

12:06.720 --> 12:07.720
Then that's it.

12:07.720 --> 12:11.240
So it's the time for a new one.

12:11.240 --> 12:14.520
I don't know if you will.

12:14.520 --> 12:25.200
So one question we've been asking ourselves is how to open the platform fully.

12:25.200 --> 12:30.920
What did we do to do that until now, and what to do in the future?

12:30.920 --> 12:36.240
So there is no platform, web platform, without free open source software today.

12:36.240 --> 12:39.520
And we are using a lot already.

12:39.520 --> 12:43.640
And I just put some of them on this page.

12:43.640 --> 12:52.920
You can see here from any layer of the infrastructure, from the virtual machine, the containers,

12:52.920 --> 13:01.760
the scripts, the operating systems, et cetera, et cetera, until the actual methods and the

13:01.760 --> 13:04.720
interface that you produce to the user.

13:04.720 --> 13:08.840
We are using free and open source software, or at least open source software, because

13:08.840 --> 13:11.320
I don't want to start a debate here.

13:11.320 --> 13:13.120
But that's the general idea.

13:13.120 --> 13:14.920
Now this is not Cortex producing that.

13:14.920 --> 13:20.120
Cortex is wrapping around this open source software.

13:20.120 --> 13:22.480
And it's open access for now.

13:22.480 --> 13:26.240
So it's free and open to everybody to use as an interface.

13:26.240 --> 13:28.600
But the code is not entirely free.

13:28.600 --> 13:33.000
We've been trying to do that a little bit more than the last few years.

13:33.000 --> 13:36.640
Hopefully in the next few years even more.

13:36.640 --> 13:42.680
And Ale will talk to you about how to do that and what are the challenges to actually produce

13:42.680 --> 13:47.000
a good open source software and methods.

13:47.000 --> 13:49.760
Hello, everybody.

13:49.760 --> 13:52.480
I'm Ale.

13:52.480 --> 13:57.080
I work with the guys and go within Cortex.

13:57.080 --> 14:00.240
So this is not really a talk about Cortex.

14:00.240 --> 14:02.840
I'm not going to do a demo or something.

14:02.840 --> 14:08.120
We thought of this talk as a moment to discuss what's going on with us, what is going on

14:08.120 --> 14:09.120
in the platform.

14:09.120 --> 14:14.080
Because up to now, like Philippe just explained, everybody can come and use.

14:14.080 --> 14:19.440
But most of the software in Cortex has been developed without, well, with open source

14:19.440 --> 14:22.640
in mind, but not in practice.

14:22.640 --> 14:23.760
For practical reasons.

14:23.760 --> 14:28.840
So are we missing one slide?

14:28.840 --> 14:30.480
No.

14:30.480 --> 14:34.320
So everything from the methods, the interfaces, the back ends, everything has.

14:34.320 --> 14:38.520
So even our documentation is on WordPress or Q&A also.

14:38.520 --> 14:40.800
So everything is based on open source.

14:40.800 --> 14:46.160
But up to now we didn't have real open source practices.

14:46.160 --> 14:57.200
So how are we managing this transition from a project that is very aligned with open source

14:57.200 --> 15:02.160
community but that doesn't manage to do open source to start doing open source?

15:02.160 --> 15:08.960
So there was really a big part was just getting even more open source into this project.

15:08.960 --> 15:17.600
So starting to use project management tools that we were using, some of them, but not

15:17.600 --> 15:19.880
as much, not as systematically.

15:19.880 --> 15:24.120
So this is a real common problem with research software.

15:24.120 --> 15:33.480
They don't always have the effects to go into GitLab or GitHub or wherever and use issues

15:33.480 --> 15:41.040
and use dashboards and project management, sometimes not even a thing in their head.

15:41.040 --> 15:46.440
And that's kind of the background that we were facing, years and years of researchers

15:46.440 --> 15:54.040
developing stuff, using open source software, but using version control because, well, it

15:54.040 --> 16:01.400
was still the infrastructure guys really needed that to work with, but it was really like

16:01.400 --> 16:02.680
the bare minimum.

16:02.680 --> 16:06.240
So how do you start to get people more involved?

16:06.240 --> 16:14.400
So we just, the first step was really pushing everybody to start using the usual tools,

16:14.400 --> 16:21.040
and sometimes force moving some projects and moving the discussion into issues on GitLab

16:21.040 --> 16:22.160
and all that.

16:22.160 --> 16:31.480
And then, also adopting for discussions more open source software like Matrix.

16:31.480 --> 16:36.720
So it's like, I don't know if anybody knows Matrix here, maybe today everybody already

16:36.720 --> 16:37.720
knows Matrix.

16:37.720 --> 16:40.920
It wasn't really a given last year.

16:40.920 --> 16:54.560
And then once we had adopted the general workflow, most of the projects were still private, but

16:54.560 --> 16:57.240
they had the workflow of an open source project.

16:57.240 --> 17:00.400
So it helped get people into a better mindset.

17:00.400 --> 17:07.080
And the people who would arrive and start working with us would more easily recognize

17:07.080 --> 17:12.040
the pattern of working with open source.

17:12.040 --> 17:20.800
Then because we had this system that runs the jobs and everything, and the old scripts,

17:20.800 --> 17:25.520
they would just use the structure that was in the system directly, and it was pretty

17:25.520 --> 17:28.040
hard to adapt and evolve them.

17:28.040 --> 17:34.520
Then we developed some kind of intermediate library so that it gets easier to, so making

17:34.520 --> 17:40.840
it easier to develop new methods in the platform.

17:40.840 --> 17:42.440
So we had to develop this intermediate.

17:42.440 --> 17:49.600
I won't have time to go into show the details, but just getting the idea that we have to

17:49.600 --> 17:55.200
get people into the workflow, develop libraries and interfaces and intermediate layers that

17:55.200 --> 18:01.680
help and automate some of the processes, give people more freedom to work.

18:01.680 --> 18:07.920
We also started integrating containers in the job manager and everything so that we

18:07.920 --> 18:15.120
could have done with this intermediate layer so that people could have more freedom to

18:15.120 --> 18:24.400
make it easier for them to keep doing their non-standard, non-advisable, non-best practices

18:24.400 --> 18:25.920
stuff.

18:25.920 --> 18:29.000
But that works for them because their researchers are not coders.

18:29.000 --> 18:33.800
They're not always coders.

18:33.800 --> 18:40.360
And finally, and even for the people in the team that are more skilled programmers, of

18:40.360 --> 18:44.880
course they want to have the possibility to do all this stuff.

18:44.880 --> 18:50.280
And finally, one thing that's very important is at the management level, because this is

18:50.280 --> 18:56.080
like a kind of already intermediate, kind of big-ish thing where we have hundreds of

18:56.080 --> 18:58.160
users every month, blah, blah, blah.

18:58.160 --> 19:03.840
So we had to discuss this in the strategic planning so that our institutional partners

19:03.840 --> 19:05.760
could get it.

19:05.760 --> 19:12.040
So basically, just get it everywhere as soon as possible and then start.

19:12.040 --> 19:22.520
Once you can show some of the benefits, we also work at the institutional level.

19:22.520 --> 19:27.600
So these are some of the challenges.

19:27.600 --> 19:32.400
Because part of the team didn't have the know-how, part of the researchers we work with, people

19:32.400 --> 19:35.960
have limited resources, they have priorities.

19:35.960 --> 19:39.800
And I'm just reading out of there, but that's it.

19:39.800 --> 19:41.320
It's not very surprising.

19:41.320 --> 19:45.840
There's this learning curve of open source and everything.

19:45.840 --> 19:50.320
And there's always doubts about why is this going to lead us.

19:50.320 --> 19:51.680
There's licensing doubts.

19:51.680 --> 19:56.600
So there's part of, like, next thing I'm going to quickly show is that we're starting to

19:56.600 --> 19:57.840
open up stuff.

19:57.840 --> 20:03.040
And there's lots of stuff that hasn't been opened yet simply because somewhere, we know

20:03.040 --> 20:09.880
that somewhere in some file somebody used an extract from a software library that is

20:09.880 --> 20:14.360
not clearly documented where it has been used and we need to find it and check if the license

20:14.360 --> 20:15.720
is compatible.

20:15.720 --> 20:19.520
So yeah.

20:19.520 --> 20:22.240
And so we're always like, okay, where are we going?

20:22.240 --> 20:29.840
But getting things to as close as possible on every dimension is what's keeping us moving.

20:29.840 --> 20:35.240
Just keeping the feeling that something is moving even if we're not seeing everything.

20:35.240 --> 20:41.160
But then we, well, through this effort eventually we managed to open source already a good part

20:41.160 --> 20:44.400
of the, specifically the science part.

20:44.400 --> 20:53.240
So the infrastructure, the dashboard, the interfaces, the front end of the web application

20:53.240 --> 20:59.880
and the job managing part, all those parts not necessarily, it's taking longer because

20:59.880 --> 21:05.520
has been like, it's also another part of the infrastructure.

21:05.520 --> 21:13.400
But the main, most important short term part is to let the scientific part of it be available.

21:13.400 --> 21:15.120
So here's just some examples.

21:15.120 --> 21:17.400
I'm not going to, but yeah.

21:17.400 --> 21:28.320
So there's two parsers, an importer for a big database of scientific publications, a

21:28.320 --> 21:35.360
kind of generic parser that we use for, we're in the sociology of science lab.

21:35.360 --> 21:40.280
So even though the tools are more like general humanities and social sciences, we have a

21:40.280 --> 21:46.520
lot of interesting things that come from PubMed, data that comes from PubMed and similar databases.

21:46.520 --> 21:51.160
So this is like also a parser for that.

21:51.160 --> 21:56.240
And here's one example of a project that's in progress because even though we reworked

21:56.240 --> 22:01.760
the project, parts of it still use libraries that we're not sure, so we have to check,

22:01.760 --> 22:08.620
take the time to check if we need to change anything or replace.

22:08.620 --> 22:12.240
Let's quickly show what some, some, one of these things look like.

22:12.240 --> 22:17.160
Well, this is just a repository for one of the projects.

22:17.160 --> 22:24.080
I have the source code, some documentation, blah, blah, blah.

22:24.080 --> 22:30.600
It makes pretty graphs and you have to use it like this, like this.

22:30.600 --> 22:35.860
So just getting, getting things into what we all know about, what you know as an open

22:35.860 --> 22:42.040
source format, how do I go back to the, to the presentation?

22:42.040 --> 22:46.960
F, no, no.

22:46.960 --> 22:53.520
There you go.

22:53.520 --> 22:56.040
What else there's to say?

22:56.040 --> 22:58.520
That's it.

22:58.520 --> 22:59.520
So thank you.

22:59.520 --> 23:04.680
I think, I mean, if you, if you, if you're experiencing, I don't know, if you, if you,

23:04.680 --> 23:10.800
any of you work in a similar institution where open source is not an evidence, but it's something

23:10.800 --> 23:12.800
that you have to struggle with.

23:12.800 --> 23:19.720
We're very happy to exchange after, during or after the conference.

23:19.720 --> 23:25.520
Did you skip the, ah, no, no, no.

23:25.520 --> 23:28.520
You have no more time.

23:28.520 --> 23:29.520
Thank you.

23:29.520 --> 23:30.520
Thank you.

23:30.520 --> 23:31.520
Any questions next?

23:31.520 --> 23:32.520
Question next.

23:32.520 --> 23:33.520
Yep.

23:33.520 --> 23:34.520
Thank you a lot.

23:34.520 --> 23:35.520
I like your time because there is a lot of nice teachers and you just said that you have

23:35.520 --> 23:54.880
a

23:54.880 --> 24:06.400
lot of time.

24:06.400 --> 24:09.320
Yeah.

24:09.320 --> 24:22.000
So, yeah, so the question was, what, what was preventing us to opening it from the beginning

24:22.000 --> 24:24.280
and to make open source software from the beginning?

24:24.280 --> 24:29.920
So as, as Ali was saying, the first thing I think is just the lack of no-hold, especially

24:29.920 --> 24:32.520
15 years ago when we started.

24:32.520 --> 24:38.200
The second thing I would say is that we, we basically didn't have a precise idea of what

24:38.200 --> 24:40.160
we were building.

24:40.160 --> 24:45.240
We just went basically script by script, project by project.

24:45.240 --> 24:48.680
And this, this is how we built slowly the platform.

24:48.680 --> 24:53.200
Then it became a platform, proper platform, I mean, with the, with the resources and everything.

24:53.200 --> 24:58.480
And then, then it was already used and, and we trained people on those methods already.

24:58.480 --> 25:04.360
So the problem of opening, of doing open source software is you have to think about it from

25:04.360 --> 25:08.000
the beginning or at least refactor enough the, the, the code.

25:08.000 --> 25:12.240
So it's, it's, it has no problem of, of license and stuff like that.

25:12.240 --> 25:17.440
So this is, this is just, you know, an ongoing streak.

25:17.440 --> 25:26.800
Yeah.

25:26.800 --> 25:27.800
I speak loud.

25:27.800 --> 25:28.800
Sorry.

25:28.800 --> 25:29.800
I can't, I can't hear you.

25:29.800 --> 25:52.400
Yeah, it's about, yeah, some, some people upload software to Zenodo or upload a documentation

25:52.400 --> 25:58.760
or that's, that creates one kind of identifier, which you could also make a, some people just

25:58.760 --> 26:02.040
make a publication related to the software so people can cite a DOI.

26:02.040 --> 26:05.920
Zenodo is going to give a DOI, so it's the same, pretty much the same thing.

26:05.920 --> 26:10.560
The problem is, I think, like, Jania was explaining is that sometimes you need, want to cite a

26:10.560 --> 26:15.680
specific version of the software or a specific file in a specific version, or you want to

26:15.680 --> 26:18.720
cite the software without mentioning a specific version.

26:18.720 --> 26:24.120
And, and you don't want to upload one version to Zenodo for every possible thing.

26:24.120 --> 26:43.400
Yeah, yeah, yeah, I, I don't know exactly deep what Zenodo offer, but I know that Zenodo

26:43.400 --> 26:50.120
offers a way to manage a many different kind of digital objects, data, images, software,

26:50.120 --> 26:53.040
etc. and not only Zenodo.

26:53.040 --> 26:58.440
In our case, what is missing is to study all the options to see which fits better in, in,

26:58.440 --> 27:06.560
in our case, you know, is more to, to understand because in fact, inside the, the, the software

27:06.560 --> 27:12.080
engineering community discussing this topic is still an open question, exactly how to

27:12.080 --> 27:13.080
do it.

27:13.080 --> 27:17.920
And when we, we search about this topic, it's quite difficult to find tutorials or someone

27:17.920 --> 27:25.480
teaching you how to, what kind of permanent indentifier you should use, for example, software

27:25.480 --> 27:31.240
heritage ID, for example, here is an example of the type of persistent indentifier that

27:31.240 --> 27:36.080
named as intrinsic persistent indentifier.

27:36.080 --> 27:42.600
What means it doesn't, doesn't depend on, on a service, has history where you need to

27:42.600 --> 27:45.560
ask a new ID to first to use it.

27:45.560 --> 27:52.720
It's like a hash, a hash ID of a commit is this kind of a, interesting key, a, a, a,

27:52.720 --> 27:57.440
persistent indentifier that we can generate by the source code itself.

27:57.440 --> 28:03.240
Another option is to use maybe Zenodo or maybe any other thing to generate a DUI.

28:03.240 --> 28:08.720
Then for that we are, we are gonna ask to the hazard, the, the DUI server to generate

28:08.720 --> 28:10.400
a DUI for us.

28:10.400 --> 28:13.000
Then we have many options.

28:13.000 --> 28:18.680
We don't know yet, deep and maybe Zenodo could be really interesting.

28:18.680 --> 28:26.120
I would be happy to, to learn with you, your experience because it's a lot of thing to,

28:26.120 --> 28:27.120
to learn.

28:27.120 --> 28:28.120
Sorry.

28:28.120 --> 28:29.120
Okay, thanks everybody for stopping here.

28:29.120 --> 28:30.120
Thank you.

28:30.120 --> 28:31.120
Thank you.

28:31.120 --> 28:48.680
cat
