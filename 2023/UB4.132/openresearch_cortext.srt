1
0:00:00.000 --> 0:00:09.480
So, thank you Paul, welcome everybody.

2
0:00:09.480 --> 0:00:17.960
So we will today present to you the Cortex platform, which is open platform for research

3
0:00:17.960 --> 0:00:25.720
in social sciences and it's a collective presentation where all the team is here but we have three

4
0:00:25.720 --> 0:00:31.240
of us will be presenting today out of the team that you see on the picture.

5
0:00:31.240 --> 0:00:33.520
So what is the Cortex?

6
0:00:33.520 --> 0:00:42.240
It's an online platform built on top of an architecture and its main goal is to help

7
0:00:42.240 --> 0:00:49.360
the social scientists with the research question to actually find the benefit of a computational

8
0:00:49.360 --> 0:00:55.240
method to fit a specific question.

9
0:00:55.240 --> 0:01:05.920
So it has been founded in 2009 and it's driven by social science research and supported by

10
0:01:05.920 --> 0:01:12.320
several French national institutes at the beginning, in particular INRA and then later

11
0:01:12.320 --> 0:01:18.520
on some funding, some research funding and some European project called RISIS, European

12
0:01:18.520 --> 0:01:22.900
project of infrastructure.

13
0:01:22.900 --> 0:01:28.960
We are now at our second version of this online platform called Cortex Manager, so this is

14
0:01:28.960 --> 0:01:31.720
the part that you can actually go online.

15
0:01:31.720 --> 0:01:36.920
It has been designed from the very beginning, as I said, for the social scientists.

16
0:01:36.920 --> 0:01:48.840
So we took the point of departure was that the social scientist doesn't have any IT capabilities,

17
0:01:48.840 --> 0:01:57.240
doesn't have any, on average, doesn't have any resource on the computer, especially 15

18
0:01:57.240 --> 0:01:58.240
years ago.

19
0:01:58.240 --> 0:02:06.280
So one of the main benefits of the platform would have to be empowering him with the power

20
0:02:06.280 --> 0:02:10.480
of computing and of methods.

21
0:02:10.480 --> 0:02:17.840
It's a collaborative platform so a lot of projects can be shared between scientists

22
0:02:17.840 --> 0:02:23.080
and there is, is it a web interface connected to a workspace online?

23
0:02:23.080 --> 0:02:28.040
You don't have to, of course, have it on your computer which was, again, quite new at the

24
0:02:28.040 --> 0:02:30.160
time.

25
0:02:30.160 --> 0:02:36.240
And it's very important that it's very permissive, so it's a bunch of methods that you can apply

26
0:02:36.240 --> 0:02:39.720
on all kinds of data that we will detail later.

27
0:02:39.720 --> 0:02:46.080
And this was one of the main foundations of our platform in the beginning, that all the

28
0:02:46.080 --> 0:02:53.880
methods are runnable on all the viable that you have at your disposal.

29
0:02:53.880 --> 0:02:59.120
So how is it going from 10, 10, 12 years after that?

30
0:02:59.120 --> 0:03:06.880
So we have over 250 peer-reviewed publications that we are counting from now.

31
0:03:06.880 --> 0:03:10.680
And of them 75 documents in 2022.

32
0:03:10.680 --> 0:03:15.680
So it's growing and it's growing quite fast the last few years.

33
0:03:15.680 --> 0:03:22.320
50K, so 50,000 analysis, so 50,000 jobs have been done on the platform by scientists last

34
0:03:22.320 --> 0:03:36.840
year by over 1,000 active users, 400 institutions and in 50 countries, so it's pretty worldwide.

35
0:03:36.840 --> 0:03:44.320
The team we have now in 2022.3 is consisted of eight technical persons, so engineers mainly,

36
0:03:44.320 --> 0:03:50.440
two researchers, one trainee and two close collaborators in companies are independent.

37
0:03:50.440 --> 0:03:55.080
Very important is located at University of Gustave Eiffel in Paris, near and the greater

38
0:03:55.080 --> 0:03:56.920
Paris, so near Montla Valley.

39
0:03:56.920 --> 0:04:01.560
So you have this island not far away.

40
0:04:01.560 --> 0:04:10.360
And this infrastructure is composed of a classic web-oriented application and infrastructure.

41
0:04:10.360 --> 0:04:17.480
So obviously we have the web interface that you can go to as a regular user that encloses

42
0:04:17.480 --> 0:04:27.440
a lot of web services, so the main interface, but also an API that you can go and act upon

43
0:04:27.440 --> 0:04:28.800
from outside.

44
0:04:28.800 --> 0:04:35.160
So this allows us to open all our methods and services to external applications and

45
0:04:35.160 --> 0:04:39.840
the specifically external projects that we are part of.

46
0:04:39.840 --> 0:04:46.720
We are built on an infrastructure of servers that are hosted at Montla Valley, so in our

47
0:04:46.720 --> 0:04:50.000
university, so everything is local.

48
0:04:50.000 --> 0:04:57.800
We don't have anything hosted online, which is 300 CPU, 3.5 terabytes of RAM and 40 terabytes

49
0:04:57.800 --> 0:05:03.360
of storage, which is big and not big at the same time nowadays, but it's enough for our

50
0:05:03.360 --> 0:05:05.440
needs.

51
0:05:05.440 --> 0:05:10.600
We have two main services that we are providing.

52
0:05:10.600 --> 0:05:19.480
First is the storage of big database that we are collecting and curating, like for example

53
0:05:19.480 --> 0:05:22.680
the patents, the European patents.

54
0:05:22.680 --> 0:05:33.240
We have several other databases that we are putting inside some projects, so we can help

55
0:05:33.240 --> 0:05:40.560
specific projects with this data that we have stored in the infrastructure.

56
0:05:40.560 --> 0:05:47.280
The second part is the processing that we offer, so the method, the scientific methods

57
0:05:47.280 --> 0:05:55.640
that I will talk about later, that are run inside of projects on the platform directly

58
0:05:55.640 --> 0:05:56.640
by the researcher.

59
0:05:56.640 --> 0:06:02.240
The researcher are actually actioning those methods directly from the web interface with

60
0:06:02.240 --> 0:06:08.560
the parameters and their data.

61
0:06:08.560 --> 0:06:16.640
We of course have this monitoring of the whole infrastructure, so it stays online.

62
0:06:16.640 --> 0:06:20.120
Once you have an infrastructure, it has to do something for scientists, and that's the

63
0:06:20.120 --> 0:06:22.360
goal of the platform.

64
0:06:22.360 --> 0:06:25.800
How does it do and what does it do for science?

65
0:06:25.800 --> 0:06:27.040
First, what?

66
0:06:27.040 --> 0:06:31.200
This is the right part of the previous diagram.

67
0:06:31.200 --> 0:06:39.280
We have a bunch of heterogeneous methods, so from scientific metrics, the study of publications,

68
0:06:39.280 --> 0:06:46.760
scientific publications and tracks, natural language processing, so terms extraction,

69
0:06:46.760 --> 0:06:54.240
name recognition and stuff like that, social network analysis, so the study of all the

70
0:06:54.240 --> 0:07:03.840
interactions found inside publications and text in between actors, keywords, etc.

71
0:07:03.840 --> 0:07:06.960
Stochastic block models, then I will end that.

72
0:07:06.960 --> 0:07:08.480
Where is Ali?

73
0:07:08.480 --> 0:07:10.520
Okay, somewhere in the room.

74
0:07:10.520 --> 0:07:12.240
We'll talk to you about later.

75
0:07:12.240 --> 0:07:19.760
Knowledge dynamics, so through time, the study of the knowledge through time, and the special

76
0:07:19.760 --> 0:07:26.600
analysis, which is a big part of our infrastructure now, because we have geocoding, geolocating

77
0:07:26.600 --> 0:07:33.520
inside publications, and geomapping from framework.

78
0:07:33.520 --> 0:07:43.320
Okay, next will be, I will give Joéneu the mic to talk to you about how to cite cortex.

79
0:07:43.320 --> 0:07:44.320
This is one of the big...

80
0:07:44.320 --> 0:07:54.080
I will try to know.

81
0:07:54.080 --> 0:07:56.080
Okay.

82
0:07:56.080 --> 0:08:00.440
It's here.

83
0:08:00.440 --> 0:08:11.800
Then as a cortex is a research software being used mainly by researchers, then supposed

84
0:08:11.800 --> 0:08:22.400
to be cited, besides the fact that there is no yet strong culture of citing software properly

85
0:08:22.400 --> 0:08:26.840
inside academic works, it's expected to be done.

86
0:08:26.840 --> 0:08:37.120
Then according to that in 2022, we documented how cortex must be cited inside academic works.

87
0:08:37.120 --> 0:08:39.240
And here we have just an example.

88
0:08:39.240 --> 0:08:45.720
For example, if I am writing a paper and if I cite cortex, this is how cortex will be

89
0:08:45.720 --> 0:08:51.440
hand-read at the end of the paper in the reference section, for example.

90
0:08:51.440 --> 0:08:58.360
And with this, we can give, for example, the credit to the developers, like, for example,

91
0:08:58.360 --> 0:09:04.360
Philip, Ali, and many others who is contributing with this software for a long time, and must

92
0:09:04.360 --> 0:09:11.560
be recognized by this work academically speaking, then this is important, then that's what we

93
0:09:11.560 --> 0:09:12.560
did.

94
0:09:12.560 --> 0:09:23.160
And nowadays, we are lucky because a few years ago, we are missing the infrastructure to

95
0:09:23.160 --> 0:09:31.560
how to define, how to document, and how to cite software.

96
0:09:31.560 --> 0:09:38.960
And now we have, for example, the citation.cff, that is a citation file format.

97
0:09:38.960 --> 0:09:48.360
It's been adopted a lot, and I think it will be the standard way to do it.

98
0:09:48.360 --> 0:09:51.880
And on top of it, we have many tools.

99
0:09:51.880 --> 0:09:58.520
Here is one example, CFF convert tool, where we can convert the CSCF file format, for example,

100
0:09:58.520 --> 0:10:02.920
to bib.tech, to bib.l.tech, or to APA format, and many other formats.

101
0:10:02.920 --> 0:10:09.480
Then we can keep all the metadata about the software important for citation in one single

102
0:10:09.480 --> 0:10:20.040
file, and from this file, we can deliver it to many others, and it's really an easy way

103
0:10:20.040 --> 0:10:22.000
to do it.

104
0:10:22.000 --> 0:10:30.640
And then in Cortex, it's a solved problem, but we still have an issue, is about how to

105
0:10:30.640 --> 0:10:35.600
identify permanently this object.

106
0:10:35.600 --> 0:10:39.160
I say object as a digital object.

107
0:10:39.160 --> 0:10:43.360
It's a software, but it's a digital object from the point of view of science.

108
0:10:43.360 --> 0:10:48.880
And how we can identify it permanently, for example, for papers, we have a DOI, that is

109
0:10:48.880 --> 0:10:53.360
very well known, and so it's very well for papers, PDF.

110
0:10:53.360 --> 0:10:58.160
But for software, we have a problem to...

111
0:10:58.160 --> 0:11:04.560
We can need to cite software in many different levels of granularity, for example.

112
0:11:04.560 --> 0:11:09.520
We can cite the software, just the software name, or a specific version of the software,

113
0:11:09.520 --> 0:11:14.960
or a specific line of a specific file inside the source code of the software.

114
0:11:14.960 --> 0:11:20.480
And this is still an open question, because, for example, we have a proposition from the

115
0:11:20.480 --> 0:11:30.400
community to solve it, but there is no one single kind of permanent ID that covers out

116
0:11:30.400 --> 0:11:33.520
the levels of granularity, for example.

117
0:11:33.520 --> 0:11:38.440
We have the proposition from the software heritage project, that it's the suite, the

118
0:11:38.440 --> 0:11:45.120
software heritage ID, that we can use it to cite software in the very specific code fragment

119
0:11:45.120 --> 0:11:48.480
to the snapshot of the full source code.

120
0:11:48.480 --> 0:11:54.440
But for example, we can't use software ID to cite software in a high level, like the

121
0:11:54.440 --> 0:11:57.480
software version of only this project name.

122
0:11:57.480 --> 0:12:00.040
For that, we should use another kind of ID.

123
0:12:00.040 --> 0:12:01.040
That's it.

124
0:12:01.040 --> 0:12:06.720
And it's an open question that we should work on this year or next year.

125
0:12:06.720 --> 0:12:07.720
Then that's it.

126
0:12:07.720 --> 0:12:11.240
So it's the time for a new one.

127
0:12:11.240 --> 0:12:14.520
I don't know if you will.

128
0:12:14.520 --> 0:12:25.200
So one question we've been asking ourselves is how to open the platform fully.

129
0:12:25.200 --> 0:12:30.920
What did we do to do that until now, and what to do in the future?

130
0:12:30.920 --> 0:12:36.240
So there is no platform, web platform, without free open source software today.

131
0:12:36.240 --> 0:12:39.520
And we are using a lot already.

132
0:12:39.520 --> 0:12:43.640
And I just put some of them on this page.

133
0:12:43.640 --> 0:12:52.920
You can see here from any layer of the infrastructure, from the virtual machine, the containers,

134
0:12:52.920 --> 0:13:01.760
the scripts, the operating systems, et cetera, et cetera, until the actual methods and the

135
0:13:01.760 --> 0:13:04.720
interface that you produce to the user.

136
0:13:04.720 --> 0:13:08.840
We are using free and open source software, or at least open source software, because

137
0:13:08.840 --> 0:13:11.320
I don't want to start a debate here.

138
0:13:11.320 --> 0:13:13.120
But that's the general idea.

139
0:13:13.120 --> 0:13:14.920
Now this is not Cortex producing that.

140
0:13:14.920 --> 0:13:20.120
Cortex is wrapping around this open source software.

141
0:13:20.120 --> 0:13:22.480
And it's open access for now.

142
0:13:22.480 --> 0:13:26.240
So it's free and open to everybody to use as an interface.

143
0:13:26.240 --> 0:13:28.600
But the code is not entirely free.

144
0:13:28.600 --> 0:13:33.000
We've been trying to do that a little bit more than the last few years.

145
0:13:33.000 --> 0:13:36.640
Hopefully in the next few years even more.

146
0:13:36.640 --> 0:13:42.680
And Ale will talk to you about how to do that and what are the challenges to actually produce

147
0:13:42.680 --> 0:13:47.000
a good open source software and methods.

148
0:13:47.000 --> 0:13:49.760
Hello, everybody.

149
0:13:49.760 --> 0:13:52.480
I'm Ale.

150
0:13:52.480 --> 0:13:57.080
I work with the guys and go within Cortex.

151
0:13:57.080 --> 0:14:00.240
So this is not really a talk about Cortex.

152
0:14:00.240 --> 0:14:02.840
I'm not going to do a demo or something.

153
0:14:02.840 --> 0:14:08.120
We thought of this talk as a moment to discuss what's going on with us, what is going on

154
0:14:08.120 --> 0:14:09.120
in the platform.

155
0:14:09.120 --> 0:14:14.080
Because up to now, like Philippe just explained, everybody can come and use.

156
0:14:14.080 --> 0:14:19.440
But most of the software in Cortex has been developed without, well, with open source

157
0:14:19.440 --> 0:14:22.640
in mind, but not in practice.

158
0:14:22.640 --> 0:14:23.760
For practical reasons.

159
0:14:23.760 --> 0:14:28.840
So are we missing one slide?

160
0:14:28.840 --> 0:14:30.480
No.

161
0:14:30.480 --> 0:14:34.320
So everything from the methods, the interfaces, the back ends, everything has.

162
0:14:34.320 --> 0:14:38.520
So even our documentation is on WordPress or Q&A also.

163
0:14:38.520 --> 0:14:40.800
So everything is based on open source.

164
0:14:40.800 --> 0:14:46.160
But up to now we didn't have real open source practices.

165
0:14:46.160 --> 0:14:57.200
So how are we managing this transition from a project that is very aligned with open source

166
0:14:57.200 --> 0:15:02.160
community but that doesn't manage to do open source to start doing open source?

167
0:15:02.160 --> 0:15:08.960
So there was really a big part was just getting even more open source into this project.

168
0:15:08.960 --> 0:15:17.600
So starting to use project management tools that we were using, some of them, but not

169
0:15:17.600 --> 0:15:19.880
as much, not as systematically.

170
0:15:19.880 --> 0:15:24.120
So this is a real common problem with research software.

171
0:15:24.120 --> 0:15:33.480
They don't always have the effects to go into GitLab or GitHub or wherever and use issues

172
0:15:33.480 --> 0:15:41.040
and use dashboards and project management, sometimes not even a thing in their head.

173
0:15:41.040 --> 0:15:46.440
And that's kind of the background that we were facing, years and years of researchers

174
0:15:46.440 --> 0:15:54.040
developing stuff, using open source software, but using version control because, well, it

175
0:15:54.040 --> 0:16:01.400
was still the infrastructure guys really needed that to work with, but it was really like

176
0:16:01.400 --> 0:16:02.680
the bare minimum.

177
0:16:02.680 --> 0:16:06.240
So how do you start to get people more involved?

178
0:16:06.240 --> 0:16:14.400
So we just, the first step was really pushing everybody to start using the usual tools,

179
0:16:14.400 --> 0:16:21.040
and sometimes force moving some projects and moving the discussion into issues on GitLab

180
0:16:21.040 --> 0:16:22.160
and all that.

181
0:16:22.160 --> 0:16:31.480
And then, also adopting for discussions more open source software like Matrix.

182
0:16:31.480 --> 0:16:36.720
So it's like, I don't know if anybody knows Matrix here, maybe today everybody already

183
0:16:36.720 --> 0:16:37.720
knows Matrix.

184
0:16:37.720 --> 0:16:40.920
It wasn't really a given last year.

185
0:16:40.920 --> 0:16:54.560
And then once we had adopted the general workflow, most of the projects were still private, but

186
0:16:54.560 --> 0:16:57.240
they had the workflow of an open source project.

187
0:16:57.240 --> 0:17:00.400
So it helped get people into a better mindset.

188
0:17:00.400 --> 0:17:07.080
And the people who would arrive and start working with us would more easily recognize

189
0:17:07.080 --> 0:17:12.040
the pattern of working with open source.

190
0:17:12.040 --> 0:17:20.800
Then because we had this system that runs the jobs and everything, and the old scripts,

191
0:17:20.800 --> 0:17:25.520
they would just use the structure that was in the system directly, and it was pretty

192
0:17:25.520 --> 0:17:28.040
hard to adapt and evolve them.

193
0:17:28.040 --> 0:17:34.520
Then we developed some kind of intermediate library so that it gets easier to, so making

194
0:17:34.520 --> 0:17:40.840
it easier to develop new methods in the platform.

195
0:17:40.840 --> 0:17:42.440
So we had to develop this intermediate.

196
0:17:42.440 --> 0:17:49.600
I won't have time to go into show the details, but just getting the idea that we have to

197
0:17:49.600 --> 0:17:55.200
get people into the workflow, develop libraries and interfaces and intermediate layers that

198
0:17:55.200 --> 0:18:01.680
help and automate some of the processes, give people more freedom to work.

199
0:18:01.680 --> 0:18:07.920
We also started integrating containers in the job manager and everything so that we

200
0:18:07.920 --> 0:18:15.120
could have done with this intermediate layer so that people could have more freedom to

201
0:18:15.120 --> 0:18:24.400
make it easier for them to keep doing their non-standard, non-advisable, non-best practices

202
0:18:24.400 --> 0:18:25.920
stuff.

203
0:18:25.920 --> 0:18:29.000
But that works for them because their researchers are not coders.

204
0:18:29.000 --> 0:18:33.800
They're not always coders.

205
0:18:33.800 --> 0:18:40.360
And finally, and even for the people in the team that are more skilled programmers, of

206
0:18:40.360 --> 0:18:44.880
course they want to have the possibility to do all this stuff.

207
0:18:44.880 --> 0:18:50.280
And finally, one thing that's very important is at the management level, because this is

208
0:18:50.280 --> 0:18:56.080
like a kind of already intermediate, kind of big-ish thing where we have hundreds of

209
0:18:56.080 --> 0:18:58.160
users every month, blah, blah, blah.

210
0:18:58.160 --> 0:19:03.840
So we had to discuss this in the strategic planning so that our institutional partners

211
0:19:03.840 --> 0:19:05.760
could get it.

212
0:19:05.760 --> 0:19:12.040
So basically, just get it everywhere as soon as possible and then start.

213
0:19:12.040 --> 0:19:22.520
Once you can show some of the benefits, we also work at the institutional level.

214
0:19:22.520 --> 0:19:27.600
So these are some of the challenges.

215
0:19:27.600 --> 0:19:32.400
Because part of the team didn't have the know-how, part of the researchers we work with, people

216
0:19:32.400 --> 0:19:35.960
have limited resources, they have priorities.

217
0:19:35.960 --> 0:19:39.800
And I'm just reading out of there, but that's it.

218
0:19:39.800 --> 0:19:41.320
It's not very surprising.

219
0:19:41.320 --> 0:19:45.840
There's this learning curve of open source and everything.

220
0:19:45.840 --> 0:19:50.320
And there's always doubts about why is this going to lead us.

221
0:19:50.320 --> 0:19:51.680
There's licensing doubts.

222
0:19:51.680 --> 0:19:56.600
So there's part of, like, next thing I'm going to quickly show is that we're starting to

223
0:19:56.600 --> 0:19:57.840
open up stuff.

224
0:19:57.840 --> 0:20:03.040
And there's lots of stuff that hasn't been opened yet simply because somewhere, we know

225
0:20:03.040 --> 0:20:09.880
that somewhere in some file somebody used an extract from a software library that is

226
0:20:09.880 --> 0:20:14.360
not clearly documented where it has been used and we need to find it and check if the license

227
0:20:14.360 --> 0:20:15.720
is compatible.

228
0:20:15.720 --> 0:20:19.520
So yeah.

229
0:20:19.520 --> 0:20:22.240
And so we're always like, okay, where are we going?

230
0:20:22.240 --> 0:20:29.840
But getting things to as close as possible on every dimension is what's keeping us moving.

231
0:20:29.840 --> 0:20:35.240
Just keeping the feeling that something is moving even if we're not seeing everything.

232
0:20:35.240 --> 0:20:41.160
But then we, well, through this effort eventually we managed to open source already a good part

233
0:20:41.160 --> 0:20:44.400
of the, specifically the science part.

234
0:20:44.400 --> 0:20:53.240
So the infrastructure, the dashboard, the interfaces, the front end of the web application

235
0:20:53.240 --> 0:20:59.880
and the job managing part, all those parts not necessarily, it's taking longer because

236
0:20:59.880 --> 0:21:05.520
has been like, it's also another part of the infrastructure.

237
0:21:05.520 --> 0:21:13.400
But the main, most important short term part is to let the scientific part of it be available.

238
0:21:13.400 --> 0:21:15.120
So here's just some examples.

239
0:21:15.120 --> 0:21:17.400
I'm not going to, but yeah.

240
0:21:17.400 --> 0:21:28.320
So there's two parsers, an importer for a big database of scientific publications, a

241
0:21:28.320 --> 0:21:35.360
kind of generic parser that we use for, we're in the sociology of science lab.

242
0:21:35.360 --> 0:21:40.280
So even though the tools are more like general humanities and social sciences, we have a

243
0:21:40.280 --> 0:21:46.520
lot of interesting things that come from PubMed, data that comes from PubMed and similar databases.

244
0:21:46.520 --> 0:21:51.160
So this is like also a parser for that.

245
0:21:51.160 --> 0:21:56.240
And here's one example of a project that's in progress because even though we reworked

246
0:21:56.240 --> 0:22:01.760
the project, parts of it still use libraries that we're not sure, so we have to check,

247
0:22:01.760 --> 0:22:08.620
take the time to check if we need to change anything or replace.

248
0:22:08.620 --> 0:22:12.240
Let's quickly show what some, some, one of these things look like.

249
0:22:12.240 --> 0:22:17.160
Well, this is just a repository for one of the projects.

250
0:22:17.160 --> 0:22:24.080
I have the source code, some documentation, blah, blah, blah.

251
0:22:24.080 --> 0:22:30.600
It makes pretty graphs and you have to use it like this, like this.

252
0:22:30.600 --> 0:22:35.860
So just getting, getting things into what we all know about, what you know as an open

253
0:22:35.860 --> 0:22:42.040
source format, how do I go back to the, to the presentation?

254
0:22:42.040 --> 0:22:46.960
F, no, no.

255
0:22:46.960 --> 0:22:53.520
There you go.

256
0:22:53.520 --> 0:22:56.040
What else there's to say?

257
0:22:56.040 --> 0:22:58.520
That's it.

258
0:22:58.520 --> 0:22:59.520
So thank you.

259
0:22:59.520 --> 0:23:04.680
I think, I mean, if you, if you, if you're experiencing, I don't know, if you, if you,

260
0:23:04.680 --> 0:23:10.800
any of you work in a similar institution where open source is not an evidence, but it's something

261
0:23:10.800 --> 0:23:12.800
that you have to struggle with.

262
0:23:12.800 --> 0:23:19.720
We're very happy to exchange after, during or after the conference.

263
0:23:19.720 --> 0:23:25.520
Did you skip the, ah, no, no, no.

264
0:23:25.520 --> 0:23:28.520
You have no more time.

265
0:23:28.520 --> 0:23:29.520
Thank you.

266
0:23:29.520 --> 0:23:30.520
Thank you.

267
0:23:30.520 --> 0:23:31.520
Any questions next?

268
0:23:31.520 --> 0:23:32.520
Question next.

269
0:23:32.520 --> 0:23:33.520
Yep.

270
0:23:33.520 --> 0:23:34.520
Thank you a lot.

271
0:23:34.520 --> 0:23:35.520
I like your time because there is a lot of nice teachers and you just said that you have

272
0:23:35.520 --> 0:23:54.880
a

273
0:23:54.880 --> 0:24:06.400
lot of time.

274
0:24:06.400 --> 0:24:09.320
Yeah.

275
0:24:09.320 --> 0:24:22.000
So, yeah, so the question was, what, what was preventing us to opening it from the beginning

276
0:24:22.000 --> 0:24:24.280
and to make open source software from the beginning?

277
0:24:24.280 --> 0:24:29.920
So as, as Ali was saying, the first thing I think is just the lack of no-hold, especially

278
0:24:29.920 --> 0:24:32.520
15 years ago when we started.

279
0:24:32.520 --> 0:24:38.200
The second thing I would say is that we, we basically didn't have a precise idea of what

280
0:24:38.200 --> 0:24:40.160
we were building.

281
0:24:40.160 --> 0:24:45.240
We just went basically script by script, project by project.

282
0:24:45.240 --> 0:24:48.680
And this, this is how we built slowly the platform.

283
0:24:48.680 --> 0:24:53.200
Then it became a platform, proper platform, I mean, with the, with the resources and everything.

284
0:24:53.200 --> 0:24:58.480
And then, then it was already used and, and we trained people on those methods already.

285
0:24:58.480 --> 0:25:04.360
So the problem of opening, of doing open source software is you have to think about it from

286
0:25:04.360 --> 0:25:08.000
the beginning or at least refactor enough the, the, the code.

287
0:25:08.000 --> 0:25:12.240
So it's, it's, it has no problem of, of license and stuff like that.

288
0:25:12.240 --> 0:25:17.440
So this is, this is just, you know, an ongoing streak.

289
0:25:17.440 --> 0:25:26.800
Yeah.

290
0:25:26.800 --> 0:25:27.800
I speak loud.

291
0:25:27.800 --> 0:25:28.800
Sorry.

292
0:25:28.800 --> 0:25:29.800
I can't, I can't hear you.

293
0:25:29.800 --> 0:25:52.400
Yeah, it's about, yeah, some, some people upload software to Zenodo or upload a documentation

294
0:25:52.400 --> 0:25:58.760
or that's, that creates one kind of identifier, which you could also make a, some people just

295
0:25:58.760 --> 0:26:02.040
make a publication related to the software so people can cite a DOI.

296
0:26:02.040 --> 0:26:05.920
Zenodo is going to give a DOI, so it's the same, pretty much the same thing.

297
0:26:05.920 --> 0:26:10.560
The problem is, I think, like, Jania was explaining is that sometimes you need, want to cite a

298
0:26:10.560 --> 0:26:15.680
specific version of the software or a specific file in a specific version, or you want to

299
0:26:15.680 --> 0:26:18.720
cite the software without mentioning a specific version.

300
0:26:18.720 --> 0:26:24.120
And, and you don't want to upload one version to Zenodo for every possible thing.

301
0:26:24.120 --> 0:26:43.400
Yeah, yeah, yeah, I, I don't know exactly deep what Zenodo offer, but I know that Zenodo

302
0:26:43.400 --> 0:26:50.120
offers a way to manage a many different kind of digital objects, data, images, software,

303
0:26:50.120 --> 0:26:53.040
etc. and not only Zenodo.

304
0:26:53.040 --> 0:26:58.440
In our case, what is missing is to study all the options to see which fits better in, in,

305
0:26:58.440 --> 0:27:06.560
in our case, you know, is more to, to understand because in fact, inside the, the, the software

306
0:27:06.560 --> 0:27:12.080
engineering community discussing this topic is still an open question, exactly how to

307
0:27:12.080 --> 0:27:13.080
do it.

308
0:27:13.080 --> 0:27:17.920
And when we, we search about this topic, it's quite difficult to find tutorials or someone

309
0:27:17.920 --> 0:27:25.480
teaching you how to, what kind of permanent indentifier you should use, for example, software

310
0:27:25.480 --> 0:27:31.240
heritage ID, for example, here is an example of the type of persistent indentifier that

311
0:27:31.240 --> 0:27:36.080
named as intrinsic persistent indentifier.

312
0:27:36.080 --> 0:27:42.600
What means it doesn't, doesn't depend on, on a service, has history where you need to

313
0:27:42.600 --> 0:27:45.560
ask a new ID to first to use it.

314
0:27:45.560 --> 0:27:52.720
It's like a hash, a hash ID of a commit is this kind of a, interesting key, a, a, a,

315
0:27:52.720 --> 0:27:57.440
persistent indentifier that we can generate by the source code itself.

316
0:27:57.440 --> 0:28:03.240
Another option is to use maybe Zenodo or maybe any other thing to generate a DUI.

317
0:28:03.240 --> 0:28:08.720
Then for that we are, we are gonna ask to the hazard, the, the DUI server to generate

318
0:28:08.720 --> 0:28:10.400
a DUI for us.

319
0:28:10.400 --> 0:28:13.000
Then we have many options.

320
0:28:13.000 --> 0:28:18.680
We don't know yet, deep and maybe Zenodo could be really interesting.

321
0:28:18.680 --> 0:28:26.120
I would be happy to, to learn with you, your experience because it's a lot of thing to,

322
0:28:26.120 --> 0:28:27.120
to learn.

323
0:28:27.120 --> 0:28:28.120
Sorry.

324
0:28:28.120 --> 0:28:29.120
Okay, thanks everybody for stopping here.

325
0:28:29.120 --> 0:28:30.120
Thank you.

326
0:28:30.120 --> 0:28:31.120
Thank you.

327
0:28:31.120 --> 0:28:48.680
cat

