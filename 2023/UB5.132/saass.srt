1
0:00:00.000 --> 0:00:11.080
I just have to mention that our board has put out a recruitment call, a call for nominations.

2
0:00:11.080 --> 0:00:12.360
We're trying to expand our board.

3
0:00:12.360 --> 0:00:15.320
So if you go to fsf.org, it'll be the top news item.

4
0:00:15.320 --> 0:00:20.560
It's something I just want to plug before I get started.

5
0:00:20.560 --> 0:00:22.760
We also host another conference in a month.

6
0:00:22.760 --> 0:00:25.800
You'll see some information about that too.

7
0:00:25.800 --> 0:00:40.480
So my talk is about SAS, and that stands for Public Speaking.

8
0:00:40.480 --> 0:00:43.720
It takes just a minute.

9
0:00:43.720 --> 0:00:50.360
A service as a software substitute.

10
0:00:50.360 --> 0:00:56.200
And what that means is when you run a service, when you use a service, and you use it to

11
0:00:56.200 --> 0:00:59.160
substitute for your own computing.

12
0:00:59.160 --> 0:01:04.120
And that's a little abstract, so I specify give an example.

13
0:01:04.120 --> 0:01:07.920
And the one I like to give is a photo editing service.

14
0:01:07.920 --> 0:01:12.880
So say you go to a website, you upload a photo, you tell it, you want to turn it black and

15
0:01:12.880 --> 0:01:18.040
white, and you click a button, it does it, and then you click download and you've got

16
0:01:18.040 --> 0:01:19.040
your photo.

17
0:01:19.040 --> 0:01:26.960
Well, that computation done on the back on the server is something that you should control

18
0:01:26.960 --> 0:01:30.960
with a program, with a free photo editing program like GIMP.

19
0:01:30.960 --> 0:01:36.440
And so when you use a service like that, you give away your software freedom in a very

20
0:01:36.440 --> 0:01:42.840
similar way to using a proprietary program on your computer.

21
0:01:42.840 --> 0:01:49.200
But in some ways it's even worse, because the server operator, it's automatically spire,

22
0:01:49.200 --> 0:01:55.320
has all your data, and it automatically has a backdoor to make changes at any time.

23
0:01:55.320 --> 0:02:00.200
So in some ways even worse than a proprietary software.

24
0:02:00.200 --> 0:02:10.880
So I want to talk about, that's sort of the basic case, but I'm going to assume you understand

25
0:02:10.880 --> 0:02:12.520
software freedom a bit.

26
0:02:12.520 --> 0:02:17.080
So I'm going to go into some more other cases.

27
0:02:17.080 --> 0:02:23.360
So let's talk about first some basic examples of when something is not SAS.

28
0:02:23.360 --> 0:02:31.480
So when somebody else is inherently involved in the activity, that's kind of usually a

29
0:02:31.480 --> 0:02:33.120
good giveaway.

30
0:02:33.120 --> 0:02:36.400
So communication service is an example.

31
0:02:36.400 --> 0:02:38.920
Say I want to send you a message across the internet.

32
0:02:38.920 --> 0:02:41.920
We need some intermediary to write that message.

33
0:02:41.920 --> 0:02:44.840
It's just I don't have a direct connection to everybody else.

34
0:02:44.840 --> 0:02:48.360
So somebody has to provide a service to do that.

35
0:02:48.360 --> 0:02:51.240
It's necessary.

36
0:02:51.240 --> 0:02:54.860
Another good example is publication.

37
0:02:54.860 --> 0:02:57.360
So I give you some data.

38
0:02:57.360 --> 0:02:58.720
I send you an email.

39
0:02:58.720 --> 0:03:00.000
I say you can publish it.

40
0:03:00.000 --> 0:03:02.880
Well, there's nothing wrong with you doing that versus me doing that.

41
0:03:02.880 --> 0:03:06.800
It's just publishing information.

42
0:03:06.800 --> 0:03:15.160
Now some websites offer multiple services and well, or one they call it one service,

43
0:03:15.160 --> 0:03:22.680
but it has many different use cases and some are SAS and some aren't.

44
0:03:22.680 --> 0:03:24.880
And let me digress just for a second.

45
0:03:24.880 --> 0:03:29.040
This SAS has nothing to do with the SAS with two S's.

46
0:03:29.040 --> 0:03:34.000
It was kind of meant to be a bad pun and it didn't work out that great.

47
0:03:34.000 --> 0:03:41.200
So just know that when I'm saying SAS, I'm talking about the SAS with the three S's and

48
0:03:41.200 --> 0:03:43.800
you just have to understand by context.

49
0:03:43.800 --> 0:03:48.920
So as I was saying, some services have multiple use cases.

50
0:03:48.920 --> 0:03:50.640
Some are SAS, some aren't.

51
0:03:50.640 --> 0:03:54.280
An example would be the website Flickr.

52
0:03:54.280 --> 0:03:59.480
It's meant to share photos, publication, not SAS, but then it also has photo editing features

53
0:03:59.480 --> 0:04:02.560
that is SAS as I talked about.

54
0:04:02.560 --> 0:04:07.200
So let's move on to another example, a backup service.

55
0:04:07.200 --> 0:04:15.440
So a backup service is something people often like to run themselves.

56
0:04:15.440 --> 0:04:16.960
So you think, well, is it SAS?

57
0:04:16.960 --> 0:04:17.960
Is it not?

58
0:04:17.960 --> 0:04:23.280
Well, if the backup, if the point of the backup service is to give you back your files exactly

59
0:04:23.280 --> 0:04:30.160
as you gave it to them, then it's not SAS because there's no computation there that

60
0:04:30.160 --> 0:04:34.560
you should control if you're only hoping to get back the exact same data that you gave

61
0:04:34.560 --> 0:04:35.560
it.

62
0:04:35.560 --> 0:04:37.120
The result wouldn't be any different.

63
0:04:37.120 --> 0:04:41.200
Now you may want to run that backup service for reasons other than SAS.

64
0:04:41.200 --> 0:04:42.720
Maybe you think it's more reliable.

65
0:04:42.720 --> 0:04:45.480
Maybe you think you have some privacy there.

66
0:04:45.480 --> 0:04:51.680
And that's one of the complications with SAS and services in general is that there are

67
0:04:51.680 --> 0:04:55.760
other concerns besides SAS that are often very important to people.

68
0:04:55.760 --> 0:04:58.920
So it makes it a little difficult to talk about it.

69
0:04:58.920 --> 0:05:03.800
That's part of the reason I'm talking about it today.

70
0:05:03.800 --> 0:05:12.160
Now how about the case of a database as a database service, for example, a SQL database

71
0:05:12.160 --> 0:05:13.160
service?

72
0:05:13.160 --> 0:05:21.560
Well, in this case, SQL queries are actually complex computation.

73
0:05:21.560 --> 0:05:23.800
There's huge manuals for them.

74
0:05:23.800 --> 0:05:29.080
How they work matters to the people using it.

75
0:05:29.080 --> 0:05:31.320
They want specific database programs.

76
0:05:31.320 --> 0:05:32.880
They care about what the version is running.

77
0:05:32.880 --> 0:05:34.920
They care about how that computation is run.

78
0:05:34.920 --> 0:05:39.960
So yes, it would be a SAS if it's a database service.

79
0:05:39.960 --> 0:05:46.280
But then think about contrast, a backup service, and a database service.

80
0:05:46.280 --> 0:05:51.520
So say you use a database service, but you use it like a backup service.

81
0:05:51.520 --> 0:05:56.720
You just dump some data into a single table, and you just retrieve that table.

82
0:05:56.720 --> 0:06:01.560
Well then you're using it like a backup service, and suddenly it's not SAS anymore.

83
0:06:01.560 --> 0:06:09.040
So what we have to think about is the primary purpose of how you're using the service.

84
0:06:09.040 --> 0:06:21.280
And when I say primary purpose, that brings me to a secondary purpose.

85
0:06:21.280 --> 0:06:24.800
And it's not really a secondary purpose that I want to talk about.

86
0:06:24.800 --> 0:06:28.920
But let me bring up another example.

87
0:06:28.920 --> 0:06:33.440
Say you upload some files to your backup service.

88
0:06:33.440 --> 0:06:38.920
And then you say to the backup service, what files do I have?

89
0:06:38.920 --> 0:06:43.760
And the backup service returns you a list of files sorted alphabetically.

90
0:06:43.760 --> 0:06:51.440
So if you have a list of files on your computer and you wanted it sorted, well that would

91
0:06:51.440 --> 0:06:53.920
be something you would want to do on your computer.

92
0:06:53.920 --> 0:06:58.600
You'd want to run the sorting algorithm, something you should control, how it's sorted.

93
0:06:58.600 --> 0:06:59.600
Definitely matters to you.

94
0:06:59.600 --> 0:07:01.000
That's your computation.

95
0:07:01.000 --> 0:07:08.040
But then when the backup service does it, well it has to tell you those files, and it

96
0:07:08.040 --> 0:07:09.600
has to sort them somehow.

97
0:07:09.600 --> 0:07:12.360
It has to give you to them in some sorted order.

98
0:07:12.360 --> 0:07:21.960
So in this case, it's doing computation that is what I call incidental computing.

99
0:07:21.960 --> 0:07:23.260
It's not your primary purpose.

100
0:07:23.260 --> 0:07:27.040
Your purpose is just to find out what files are on the backup service.

101
0:07:27.040 --> 0:07:33.500
Incidentally, there has to be some computing done in that process, which happens to also

102
0:07:33.500 --> 0:07:38.760
be like computing you would do on your own computer if you were running locally.

103
0:07:38.760 --> 0:07:42.880
But it's not the primary purpose of using that service.

104
0:07:42.880 --> 0:07:44.880
So it wouldn't be SAS.

105
0:07:44.880 --> 0:07:48.160
Another way to call it was ancillary computing.

106
0:07:48.160 --> 0:07:54.800
And so when you pick apart a service and its use cases, this is one way to narrow down

107
0:07:54.800 --> 0:08:00.960
the issue to whether something is SAS or is not SAS.

108
0:08:00.960 --> 0:08:06.760
Now for another more complicated example, I've been talking about the computing of an

109
0:08:06.760 --> 0:08:13.280
individual person, but groups can come together for a common purpose, form an organization

110
0:08:13.280 --> 0:08:19.000
or a project, and then they use a server to collaborate with each other.

111
0:08:19.000 --> 0:08:27.080
And an example of this would be like Wikipedia, which runs, well, media wiki, and Wikipedia

112
0:08:27.080 --> 0:08:30.760
and people who, and groups who run media wiki.

113
0:08:30.760 --> 0:08:42.440
Now that service has features like document editing, dipping documents, conflict resolution.

114
0:08:42.440 --> 0:08:48.360
Those are the type of computing, if you were working on your own, something you would want

115
0:08:48.360 --> 0:08:57.000
to control on your computer, but because you're working collaboratively with a group, you

116
0:08:57.000 --> 0:09:01.800
could say the group's computing.

117
0:09:01.800 --> 0:09:07.560
It's the group, and that group should be able to control its own computing by running its

118
0:09:07.560 --> 0:09:09.780
own server and the software on it.

119
0:09:09.780 --> 0:09:15.920
So you could say when you join in with that group, you're a member of that group and you're

120
0:09:15.920 --> 0:09:18.120
collaborating and doing that group's computing.

121
0:09:18.120 --> 0:09:21.920
So you can use those sort of features together.

122
0:09:21.920 --> 0:09:27.880
And this is a little bit hard to think about because sometimes your computing versus a

123
0:09:27.880 --> 0:09:34.760
group's computing can get a little blurry sometimes, but it's important to realize and

124
0:09:34.760 --> 0:09:37.760
think about.

125
0:09:37.760 --> 0:09:41.240
So onto another example.

126
0:09:41.240 --> 0:09:44.520
Think about bug tracking, a bug tracker.

127
0:09:44.520 --> 0:09:52.320
This is a very common piece of software that developers use.

128
0:09:52.320 --> 0:10:02.640
Now one way that a bug tracker could work, or does work for some projects, is they have

129
0:10:02.640 --> 0:10:08.080
a mailing list where they say, bugs go to this mailing list.

130
0:10:08.080 --> 0:10:13.280
So somebody sends an email to the mailing list, say, I have a bug, and somebody responds

131
0:10:13.280 --> 0:10:15.640
and says, yes, I agree, that's a bug.

132
0:10:15.640 --> 0:10:17.440
Or somebody says, no, I don't think so.

133
0:10:17.440 --> 0:10:18.840
And they discuss it.

134
0:10:18.840 --> 0:10:27.240
Well, this is just a form of communication and publication, like a normal mailing list,

135
0:10:27.240 --> 0:10:30.000
and I wouldn't call that SAS.

136
0:10:30.000 --> 0:10:36.560
But consider a software like Bugzilla.

137
0:10:36.560 --> 0:10:39.960
Well, it doesn't work that way.

138
0:10:39.960 --> 0:10:49.960
Especially with a larger project, you customize it so that it has maybe even hundreds of fields.

139
0:10:49.960 --> 0:11:00.760
And the people who are administering it are doing complicated queries on all of the bugs,

140
0:11:00.760 --> 0:11:06.360
running queries that will modify all the bugs, reassign them.

141
0:11:06.360 --> 0:11:11.680
And then it's starting to look like a complicated database with a front end.

142
0:11:11.680 --> 0:11:14.960
And then I would call that SAS.

143
0:11:14.960 --> 0:11:24.440
And this, I think, brings up a little bit of a problem in that it's very difficult.

144
0:11:24.440 --> 0:11:33.280
A lot of software projects want sophisticated software for their project.

145
0:11:33.280 --> 0:11:41.520
But they don't necessarily have the means to run that software, like Bugzilla.

146
0:11:41.520 --> 0:11:46.720
Because complicated software is complicated to run, especially as a service.

147
0:11:46.720 --> 0:11:51.160
Because you have data, you have backups, you have all of the details of running complicated

148
0:11:51.160 --> 0:11:52.160
software.

149
0:11:52.160 --> 0:12:00.400
So in that case, it's like a lot of projects out there actually running SAS, giving up

150
0:12:00.400 --> 0:12:01.400
their freedom.

151
0:12:01.400 --> 0:12:03.640
Well, yes, basically.

152
0:12:03.640 --> 0:12:10.320
But it's an area where we have a long way to go, I think.

153
0:12:10.320 --> 0:12:18.880
And a good way to deal with that situation is for projects to come together in a larger

154
0:12:18.880 --> 0:12:24.120
project that is in their collective interest.

155
0:12:24.120 --> 0:12:33.120
So some of the software I run or I help run, like the GNU project, where many software

156
0:12:33.120 --> 0:12:38.040
packages come together, share the infrastructure that's going to be in all of their interests.

157
0:12:38.040 --> 0:12:45.280
And that way, they're sort of doing a group computation together for a bug tracker.

158
0:12:45.280 --> 0:12:52.000
But now this brings me to an example of GitHub.

159
0:12:52.000 --> 0:12:58.920
So when I think of GitHub, I look around at the GitHub service.

160
0:12:58.920 --> 0:13:02.680
And I think there are a few features that are clearly SAS.

161
0:13:02.680 --> 0:13:06.520
One, some obvious examples would be continuous integration.

162
0:13:06.520 --> 0:13:11.320
That's like they kind of give you a virtual machine and say, run some code on your software.

163
0:13:11.320 --> 0:13:19.440
And well, if the code that you're running, well, is their code, then I guess that brings

164
0:13:19.440 --> 0:13:26.320
up another topic of virtual machines, which are not SAS if you control them.

165
0:13:26.320 --> 0:13:33.400
And but another feature of GitHub would be like they have a feature to tell you which

166
0:13:33.400 --> 0:13:36.280
functions in two repositories are different.

167
0:13:36.280 --> 0:13:43.600
Well, clearly that would be SAS because it's parsing the language of the repositories.

168
0:13:43.600 --> 0:13:48.200
It's doing a complicated diff, function level diff on them.

169
0:13:48.200 --> 0:13:54.720
And then some other features I think would not be SAS, like simply publishing a Git

170
0:13:54.720 --> 0:13:56.120
repository.

171
0:13:56.120 --> 0:14:02.240
That's just a publication of software, a publication of information, not SAS.

172
0:14:02.240 --> 0:14:05.520
And then the bug tracker, for example.

173
0:14:05.520 --> 0:14:13.880
I think in its basic form, it works very much like a simple form, like a mailing list that

174
0:14:13.880 --> 0:14:15.800
one person posts, another person replies.

175
0:14:15.800 --> 0:14:18.560
I would call that just a communication service.

176
0:14:18.560 --> 0:14:23.000
But I'm not too familiar with all of the advanced features of GitHub.

177
0:14:23.000 --> 0:14:29.280
But I get the suspicion that some of the maybe there might be some features of the bug tracker

178
0:14:29.280 --> 0:14:34.520
which go into the SAS area when it gets more complicated, when you're an advanced user

179
0:14:34.520 --> 0:14:36.520
of all of the features there.

180
0:14:36.520 --> 0:14:39.440
So I haven't picked apart every piece of GitHub.

181
0:14:39.440 --> 0:14:44.040
And it takes some time to do that analysis, which I haven't done.

182
0:14:44.040 --> 0:14:51.560
But in general, this brings me to the next topic is that, well, I don't know how many

183
0:14:51.560 --> 0:14:52.560
minutes do I have left?

184
0:14:52.560 --> 0:14:53.560
10 more minutes.

185
0:14:53.560 --> 0:14:54.560
10 minutes?

186
0:14:54.560 --> 0:14:55.560
Great.

187
0:14:55.560 --> 0:14:56.560
OK.

188
0:14:56.560 --> 0:15:03.400
So I think I'm done with some basic examples of analyzing SAS or not.

189
0:15:03.400 --> 0:15:10.440
And I'm happy to talk to people because there sometimes aren't bright lines.

190
0:15:10.440 --> 0:15:20.120
And it's a little blurrier than with determining if a piece of software is free or not.

191
0:15:20.120 --> 0:15:24.080
But it's not like there isn't blurry lines in that either.

192
0:15:24.080 --> 0:15:27.680
So I think it's just something we have to deal with.

193
0:15:27.680 --> 0:15:30.760
It's part of a lot of ethical issues, have their gray areas.

194
0:15:30.760 --> 0:15:33.320
And I just happen to be highlighting them.

195
0:15:33.320 --> 0:15:34.320
That's all.

196
0:15:34.320 --> 0:15:40.880
I don't think it's an inherent problem with SAS at all, with the concept of SAS.

197
0:15:40.880 --> 0:15:47.800
So now I want to bring up one common misconception is that a service which publishes some free

198
0:15:47.800 --> 0:15:52.960
source code that it says it's running means that the users of the service have software

199
0:15:52.960 --> 0:15:53.960
freedom.

200
0:15:53.960 --> 0:15:56.560
They don't.

201
0:15:56.560 --> 0:15:58.200
The users don't control that service.

202
0:15:58.200 --> 0:16:00.960
They can't tell it what program to run.

203
0:16:00.960 --> 0:16:07.480
You can only do that with a program on a server you control or on your own computer.

204
0:16:07.480 --> 0:16:12.240
And there may be important code that it runs besides what's published.

205
0:16:12.240 --> 0:16:20.400
I mean, generally, servers are not publishing the operating system or other things.

206
0:16:20.400 --> 0:16:26.800
The first reason I gave is basically the fundamental one, but some other ones are that.

207
0:16:26.800 --> 0:16:30.920
And of course, you can't ever be sure what somebody else's server is doing.

208
0:16:30.920 --> 0:16:33.200
You haven't installed the program.

209
0:16:33.200 --> 0:16:37.040
You can't be 100% sure.

210
0:16:37.040 --> 0:16:43.040
It's different than running your own code on a server you control.

211
0:16:43.040 --> 0:16:47.240
So for services that are not SAS, now I'm going to talk about this idea of publishing

212
0:16:47.240 --> 0:16:52.640
source code and think about the difference and the interaction between SAS and the publishing

213
0:16:52.640 --> 0:16:54.960
of service source code.

214
0:16:54.960 --> 0:17:03.600
So when we think about publishing service source code, I think about the AGPL, which

215
0:17:03.600 --> 0:17:10.440
says you have to publish the source code if it's a service to the users of it.

216
0:17:10.440 --> 0:17:18.200
And what we say is that the publishing of source code benefits the community so that

217
0:17:18.200 --> 0:17:22.440
they could use that source code.

218
0:17:22.440 --> 0:17:33.880
That benefit is so important to people being able to use that code that it's worth mandating

219
0:17:33.880 --> 0:17:34.880
with AGPL.

220
0:17:34.880 --> 0:17:43.920
And we recommend it for all software that is intended to be run as a service.

221
0:17:43.920 --> 0:17:56.400
And in fact, now not thinking about the SAS issue, but just in general, if I encounter

222
0:17:56.400 --> 0:18:02.760
a service and I say, I think, would there be any reason somebody else besides the server

223
0:18:02.760 --> 0:18:06.040
operator would want to run it?

224
0:18:06.040 --> 0:18:15.920
If there is, if there's a plausible case of that, I think, well, then are they publishing

225
0:18:15.920 --> 0:18:16.920
the source code?

226
0:18:16.920 --> 0:18:18.880
If they aren't, why not?

227
0:18:18.880 --> 0:18:23.880
I mean, why do they not want to benefit the community?

228
0:18:23.880 --> 0:18:33.920
And another benefit that brings, I think the biggest one is if the service is working well,

229
0:18:33.920 --> 0:18:42.160
good, maybe there's some fundamental services we all rely on, like DNS services.

230
0:18:42.160 --> 0:18:51.640
But then if the service stops working, it adds conditions that people don't want to

231
0:18:51.640 --> 0:18:52.640
agree to.

232
0:18:52.640 --> 0:18:54.640
It adds, it changes.

233
0:18:54.640 --> 0:18:59.760
Well, then the publishing of source code is sort of an insurance policy that somebody

234
0:18:59.760 --> 0:19:04.760
else could start up a new service and users could move over there, and that is so important

235
0:19:04.760 --> 0:19:10.920
that I think it's worth considering that in general for any service, which is separate

236
0:19:10.920 --> 0:19:14.400
than the SAS issue.

237
0:19:14.400 --> 0:19:19.480
And I think if we take a service like GitHub, I think that's obvious.

238
0:19:19.480 --> 0:19:22.440
Of course, people would want to run their own GitHub.

239
0:19:22.440 --> 0:19:30.920
So why we shouldn't accept a GitHub that doesn't have the service source code published, it's

240
0:19:30.920 --> 0:19:38.600
just foolish to subject yourself to the whims of that service operator without having some

241
0:19:38.600 --> 0:19:46.800
sort of insurance to go somewhere else, even if you aren't using it in a SAS way.

242
0:19:46.800 --> 0:19:56.160
So I'm going to move on to my next topic, which basically I think the SAS has not gotten

243
0:19:56.160 --> 0:20:01.760
enough attention in free software advocacy.

244
0:20:01.760 --> 0:20:02.760
And why hasn't?

245
0:20:02.760 --> 0:20:04.000
I think there's lots of reasons.

246
0:20:04.000 --> 0:20:06.880
I talked a little bit about the complexity.

247
0:20:06.880 --> 0:20:11.880
I think SAS was far less common in the past.

248
0:20:11.880 --> 0:20:19.000
Nowadays, most services tend to require non-free software as a client, usually in the form

249
0:20:19.000 --> 0:20:20.640
of JavaScript.

250
0:20:20.640 --> 0:20:28.880
And so services in general have caused a lot of problems for software freedom, other problems

251
0:20:28.880 --> 0:20:30.080
besides SAS.

252
0:20:30.080 --> 0:20:36.440
But like I said, I think SAS needs to get more attention because it's becoming more

253
0:20:36.440 --> 0:20:37.480
prevalent.

254
0:20:37.480 --> 0:20:42.680
Database services have, in the past few years, become very popular.

255
0:20:42.680 --> 0:20:45.200
Before that, it was much more common to run your own database.

256
0:20:45.200 --> 0:20:49.600
A lot of people are relying on these services, which are SAS.

257
0:20:49.600 --> 0:20:58.800
And so I think one interesting historical reason for a lack of focus on SAS is that,

258
0:20:58.800 --> 0:21:01.800
well, it's not part of the GPL.

259
0:21:01.800 --> 0:21:05.040
It's not part of any license.

260
0:21:05.040 --> 0:21:12.360
When the GPL was being drafted, the FSF had its lawyers try and think of a way to add

261
0:21:12.360 --> 0:21:17.760
in a provision against SAS, and they couldn't think of a way to do it.

262
0:21:17.760 --> 0:21:19.560
So they just didn't.

263
0:21:19.560 --> 0:21:24.400
And so when we say the GPL protects your freedom, well, there's one little hidden asterisk

264
0:21:24.400 --> 0:21:28.640
there as long as you don't give it away in a SAS.

265
0:21:28.640 --> 0:21:34.640
And I'd be curious to know some of the lawyers, maybe some lawyers here today, if they still

266
0:21:34.640 --> 0:21:36.280
think that's the case.

267
0:21:36.280 --> 0:21:40.560
If there's no way to have a SAS provision in a license, I'd be curious to what that

268
0:21:40.560 --> 0:21:41.560
is.

269
0:21:41.560 --> 0:21:45.720
I mean, it's the one case, I think, of the FSF saying, here's an important issue.

270
0:21:45.720 --> 0:21:47.040
We couldn't write into the license.

271
0:21:47.040 --> 0:21:52.440
I haven't heard many people talk about how that could be done.

272
0:21:52.440 --> 0:21:55.960
Maybe not covering all SAS, but some portion of it.

273
0:21:55.960 --> 0:21:57.160
I don't know.

274
0:21:57.160 --> 0:22:03.920
I'm not a lawyer, but I would love to hear from some.

275
0:22:03.920 --> 0:22:07.440
So how can you give SAS more attention?

276
0:22:07.440 --> 0:22:08.440
I don't have all the answers.

277
0:22:08.440 --> 0:22:09.560
It's just a couple ideas.

278
0:22:09.560 --> 0:22:11.840
I think number one is just to simply call it out more.

279
0:22:11.840 --> 0:22:17.720
When a company has a SAS business model, just say, hey, their business model is SAS.

280
0:22:17.720 --> 0:22:20.040
That's taking away people's freedom.

281
0:22:20.040 --> 0:22:23.040
That's a very simple way.

282
0:22:23.040 --> 0:22:33.600
Another idea I have is that there's this term self-hosting, which basically seems to cover

283
0:22:33.600 --> 0:22:35.600
the idea of SAS plus other things.

284
0:22:35.600 --> 0:22:39.120
It's the idea of services, run yourself.

285
0:22:39.120 --> 0:22:46.040
And sometimes it's even expanded to just non-services, a SAS services that should be run on your

286
0:22:46.040 --> 0:22:48.800
own computer and not as a service at all and running themselves.

287
0:22:48.800 --> 0:22:50.640
And people call that self-hosting.

288
0:22:50.640 --> 0:22:54.600
So it's kind of the idea of self-hosting kind of covers SAS plus other things.

289
0:22:54.600 --> 0:23:03.360
So I think also advocating for self-hosting and saying self-hosting overlaps very well

290
0:23:03.360 --> 0:23:09.560
with software freedom is a way that we can advocate against SAS without having to deal

291
0:23:09.560 --> 0:23:18.040
with the complexity of SAS itself of explaining it fully.

292
0:23:18.040 --> 0:23:23.040
And I'm getting to the end of my talk here.

293
0:23:23.040 --> 0:23:27.360
I think most of the ideas I want to share, I'd be happy to talk to people afterwards.

294
0:23:27.360 --> 0:23:33.320
And one shout out to a specific program, GNU Units, which is a small SAS that many of you

295
0:23:33.320 --> 0:23:34.320
many people use.

296
0:23:34.320 --> 0:23:39.120
They ask Google or a search engine to convert between Celsius or Fahrenheit.

297
0:23:39.120 --> 0:23:42.320
And there's a program you can do that on your own computer called GNU Units.

298
0:23:42.320 --> 0:23:44.760
So look it up.

299
0:23:44.760 --> 0:23:45.760
And that's all I've got.

300
0:23:45.760 --> 0:24:00.960
Thanks,

