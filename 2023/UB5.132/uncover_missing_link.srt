1
0:00:00.000 --> 0:00:01.000
Charles.

2
0:00:01.000 --> 0:00:02.000
Welcome.

3
0:00:02.000 --> 0:00:03.000
Thank you.

4
0:00:03.000 --> 0:00:04.000
Great.

5
0:00:04.000 --> 0:00:05.000
Thank you.

6
0:00:05.000 --> 0:00:07.000
We get some applause for Charles, please.

7
0:00:07.000 --> 0:00:08.000
Thanks for that.

8
0:00:08.000 --> 0:00:10.000
Thanks for being here around the lunch hour, too.

9
0:00:10.000 --> 0:00:12.000
I appreciate your making a little extra sacrifice.

10
0:00:12.000 --> 0:00:18.920
And just thanks for being here as part of the community dev room, too, right, and contributing

11
0:00:18.920 --> 0:00:19.920
to the discussion here.

12
0:00:19.920 --> 0:00:31.920
First, a technical, AV question.

13
0:00:31.920 --> 0:00:32.920
Can you hear me okay?

14
0:00:32.920 --> 0:00:34.920
Is the audio all right?

15
0:00:34.920 --> 0:00:36.920
Okay, great.

16
0:00:36.920 --> 0:00:37.920
Okay.

17
0:00:37.920 --> 0:00:38.920
So super excited to be here.

18
0:00:38.920 --> 0:00:44.080
And especially because I get to talk with all of you about two things that I'm extremely

19
0:00:44.080 --> 0:00:45.080
passionate about.

20
0:00:45.080 --> 0:00:51.080
The first one is open source, and since you're here in this room, I'm guessing there's a

21
0:00:51.080 --> 0:00:54.640
very good chance you share that passion with me.

22
0:00:54.640 --> 0:00:57.040
The second one is standards.

23
0:00:57.040 --> 0:00:59.400
I really enjoy working with standards.

24
0:00:59.400 --> 0:01:01.080
It's a big part of my job.

25
0:01:01.080 --> 0:01:04.840
I'm in the standards group at Cisco.

26
0:01:04.840 --> 0:01:12.600
Hopefully some of you are considered yourself a supporter of standards, but all right.

27
0:01:12.600 --> 0:01:14.360
We got a few.

28
0:01:14.360 --> 0:01:20.080
And what I really want to talk with you about is what I think is an opportunity for the

29
0:01:20.080 --> 0:01:24.600
standards community and the open source communities to work a bit better together and to help

30
0:01:24.600 --> 0:01:28.280
each other with navigating across those communities.

31
0:01:28.280 --> 0:01:33.640
Because it is very common for many people to really primarily associate themselves with

32
0:01:33.640 --> 0:01:35.920
one community or the other.

33
0:01:35.920 --> 0:01:41.120
So anything we can do to help the other community better understand what we're doing, how we're

34
0:01:41.120 --> 0:01:45.640
doing it, how to leverage the resources we have, I think is very helpful.

35
0:01:45.640 --> 0:01:48.760
And that's the subject of my talk.

36
0:01:48.760 --> 0:01:53.320
To uncover that missing link, the linkage between all the great things we're doing in

37
0:01:53.320 --> 0:02:01.120
open source and the great things we're doing with standards to the benefit of both communities.

38
0:02:01.120 --> 0:02:06.640
So I was a little late watching this, but I imagine many of you saw Game of Thrones.

39
0:02:06.640 --> 0:02:10.200
Is this a familiar sort of image to you?

40
0:02:10.200 --> 0:02:17.440
Even if you didn't, the idea is on the left-hand side, I guess to your left, you have Jon Snow.

41
0:02:17.440 --> 0:02:21.520
He's leading, he's kind of the lead of the people of the north.

42
0:02:21.520 --> 0:02:26.960
And then on the right you have this big guy, Tormond Giant, Spain.

43
0:02:26.960 --> 0:02:32.960
And he's kind of one of the leads of the wildlings that are even further north.

44
0:02:32.960 --> 0:02:39.880
And those two communities are separated first by a very large wall.

45
0:02:39.880 --> 0:02:44.480
And they really don't trust each other, they don't understand each other.

46
0:02:44.480 --> 0:02:50.600
However, during the course of the series, they come to understand each other a bit better

47
0:02:50.600 --> 0:02:56.520
and find really some common goals that they have in mind.

48
0:02:56.520 --> 0:03:01.400
And to work together and to achieve some greater good.

49
0:03:01.400 --> 0:03:06.400
And I think there's some similarity there with open source and with standards where

50
0:03:06.400 --> 0:03:12.640
by working more closely with each other we can really benefit each other.

51
0:03:12.640 --> 0:03:14.920
So first of all, why standards?

52
0:03:14.920 --> 0:03:18.000
Why do I think standards is important here?

53
0:03:18.000 --> 0:03:25.640
And I think for most industries, standards have really played a key role for many, many

54
0:03:25.640 --> 0:03:27.920
years.

55
0:03:27.920 --> 0:03:34.680
Large players in those industries, whether you're talking about telecom or networking

56
0:03:34.680 --> 0:03:43.960
or communications, it's mandatory to support a wide variety of standards in order to sell

57
0:03:43.960 --> 0:03:50.280
equipment or solutions to provide those into that market.

58
0:03:50.280 --> 0:03:55.600
And compliance with these standards is important for a number of reasons.

59
0:03:55.600 --> 0:04:01.560
And two of them that I want to call out is for interoperability so that when you have

60
0:04:01.560 --> 0:04:05.480
assistance from many different vendors, you can actually get them to work together.

61
0:04:05.480 --> 0:04:10.800
And also just to make sure that you never get stuck with a single vendor lock-in where

62
0:04:10.800 --> 0:04:16.120
once you start down a path, you can never use anything from anyone else without prohibitive

63
0:04:16.120 --> 0:04:19.080
cost or churn.

64
0:04:19.080 --> 0:04:24.720
As a result of this importance of standards in those industries, fierce competitors come

65
0:04:24.720 --> 0:04:29.920
together and actually collaborate quite well on the standards because they have a vested

66
0:04:29.920 --> 0:04:35.800
interest in those standards in establishing them so that they can add support for them

67
0:04:35.800 --> 0:04:38.080
into their products.

68
0:04:38.080 --> 0:04:41.920
And it's also important for them to be able to interoperate because many times they'll

69
0:04:41.920 --> 0:04:46.720
be coming in that they have some product or some solution that they want to sell into

70
0:04:46.720 --> 0:04:50.600
an existing larger solution.

71
0:04:50.600 --> 0:04:54.160
And their stuff needs to work with their competitors.

72
0:04:54.160 --> 0:05:02.480
In order to enter into this new market, they can't get the person buying their stuff to

73
0:05:02.480 --> 0:05:04.000
start over from scratch, right?

74
0:05:04.000 --> 0:05:07.000
You need to insert yourself in sort of incrementally into it.

75
0:05:07.000 --> 0:05:11.680
And so interoperability is super important there to interop with not only your competitors

76
0:05:11.680 --> 0:05:14.320
but your partners.

77
0:05:14.320 --> 0:05:16.360
So that actually works quite well.

78
0:05:16.360 --> 0:05:20.280
However, there's definitely challenges with standards.

79
0:05:20.280 --> 0:05:25.240
And one of the main ones is it can take a long time.

80
0:05:25.240 --> 0:05:29.920
Just getting a standard from the time you start defining it in a community to the time

81
0:05:29.920 --> 0:05:36.600
it's actually a completed published standard oftentimes can take a few years.

82
0:05:36.600 --> 0:05:40.880
And then if you think that now once you have that standard, a lot of companies will wait

83
0:05:40.880 --> 0:05:45.720
until the standard actually exists before they go off and start implementing it.

84
0:05:45.720 --> 0:05:49.560
So that's going to take a little bit more time now to add support for it.

85
0:05:49.560 --> 0:05:54.480
And then you go and you take implementations from multiple different vendors and you try

86
0:05:54.480 --> 0:06:00.960
to use them together and the interoperability isn't there because these standards are complicated.

87
0:06:00.960 --> 0:06:07.080
There's some ambiguity in how you might interpret certain parts of it or which feature sets

88
0:06:07.080 --> 0:06:10.000
from them you support and how well.

89
0:06:10.000 --> 0:06:14.880
So it takes a bit longer to really get that interoperability that was the goal from the

90
0:06:14.880 --> 0:06:15.880
start.

91
0:06:15.880 --> 0:06:21.160
And sometimes that would even require going back and changing the standard.

92
0:06:21.160 --> 0:06:26.560
But in any case, no matter what, it tends to take quite a long time.

93
0:06:26.560 --> 0:06:32.840
And that becomes a challenge because you may not have your standard already and adopted

94
0:06:32.840 --> 0:06:37.120
and deployed in time for it to do the thing that you really needed it to do.

95
0:06:37.120 --> 0:06:41.000
You might kind of miss that window of opportunity.

96
0:06:41.000 --> 0:06:47.240
So with open source, I think we see a very, very different dynamic.

97
0:06:47.240 --> 0:06:54.520
We see open source fueling the transformation of industries very, very quickly in many cases.

98
0:06:54.520 --> 0:07:00.400
And a vast community of people like what we see here at FOSDEM comes together around some

99
0:07:00.400 --> 0:07:08.560
common goals and it really can create fantastic software very quickly.

100
0:07:08.560 --> 0:07:18.080
And this rapid innovation is so, I mean, it's a very desirable thing.

101
0:07:18.080 --> 0:07:23.220
And so I think these industries that have mandated or really needed support for standards

102
0:07:23.220 --> 0:07:27.280
for many, many years, they're seeing open source as this great opportunity to speed

103
0:07:27.280 --> 0:07:28.280
things up.

104
0:07:28.280 --> 0:07:31.880
And so they're saying, well, you also need to support open source.

105
0:07:31.880 --> 0:07:37.360
You need to understand how to work with it because in my network or in my overall solution,

106
0:07:37.360 --> 0:07:40.040
I'm going to have equipment from a lot of different people.

107
0:07:40.040 --> 0:07:42.840
And some of that I really think needs to be open source.

108
0:07:42.840 --> 0:07:47.560
So how does your stuff work with these open source components?

109
0:07:47.560 --> 0:07:53.440
And sometimes the open source can become so widely deployed that it actually will become

110
0:07:53.440 --> 0:07:59.640
sort of a de facto standard, maybe before that standards group ever defined anything

111
0:07:59.640 --> 0:08:04.460
in that space, maybe before they were able to complete their work.

112
0:08:04.460 --> 0:08:09.960
So open source is really bringing some great things, but I think we'd all agree there

113
0:08:09.960 --> 0:08:12.360
are some challenges.

114
0:08:12.360 --> 0:08:17.520
Open source projects, from the point of view of someone who's trying to build a solution,

115
0:08:17.520 --> 0:08:20.960
it's really just like a, I think of it as a tool set, right?

116
0:08:20.960 --> 0:08:25.960
There's a lot of different projects out there, but none of them offer a complete solution.

117
0:08:25.960 --> 0:08:29.920
And so then what you need to be able to do is understand each of them, know how to put

118
0:08:29.920 --> 0:08:31.600
them together.

119
0:08:31.600 --> 0:08:37.840
And these are often open source projects that weren't designed.

120
0:08:37.840 --> 0:08:43.920
The people working on them really didn't have working with these other projects in mind,

121
0:08:43.920 --> 0:08:44.920
right?

122
0:08:44.920 --> 0:08:45.920
They didn't design for that.

123
0:08:45.920 --> 0:08:52.800
They may not have documented it at all, how to make it work with these other things.

124
0:08:52.800 --> 0:08:55.960
Or that documentation may not be great.

125
0:08:55.960 --> 0:09:00.680
The other thing is, I mean, in the open source community, it sort of has a mind of its own,

126
0:09:00.680 --> 0:09:01.680
right?

127
0:09:01.680 --> 0:09:06.400
So perhaps you want to use an open source project in a certain way, but if you're not

128
0:09:06.400 --> 0:09:13.920
actively contributing to it, it might move in a way that you weren't expecting or you

129
0:09:13.920 --> 0:09:15.080
weren't wanting.

130
0:09:15.080 --> 0:09:21.320
And so it may not ultimately meet the need that you had for your overall solution.

131
0:09:21.320 --> 0:09:23.440
And some projects just fade away.

132
0:09:23.440 --> 0:09:28.020
The community loses interest and starts spending their time on something else that looks even

133
0:09:28.020 --> 0:09:29.600
more interesting.

134
0:09:29.600 --> 0:09:34.600
So this challenge of integrating open source together with perhaps some other open source

135
0:09:34.600 --> 0:09:41.720
projects and maybe even some proprietary stuff, that's a real challenge.

136
0:09:41.720 --> 0:09:47.560
So where I think there's a lot of potential benefit is by bringing some of these characteristics

137
0:09:47.560 --> 0:09:54.560
of standards and open source together, by those two communities working better together.

138
0:09:54.560 --> 0:09:58.000
You can really bring some of that, if you could bring some of that speed and collaborative

139
0:09:58.000 --> 0:10:05.800
spirit that we see with open source into standards, actually think about creating open source

140
0:10:05.800 --> 0:10:10.600
implementations of standards as they're being developed, and then be able to feed that back

141
0:10:10.600 --> 0:10:17.000
into the standards and improve the quality of them early on, not after they've been published

142
0:10:17.000 --> 0:10:23.480
and after several years, but actually very early in those, the first iterations of the

143
0:10:23.480 --> 0:10:24.480
standards.

144
0:10:24.480 --> 0:10:30.680
Then, when you do have these standards, if you can add support for them into popular

145
0:10:30.680 --> 0:10:35.960
open source projects, then those projects suddenly become much more consumable by the

146
0:10:35.960 --> 0:10:41.480
industry that's built these big solutions around all these standards, right?

147
0:10:41.480 --> 0:10:48.480
Now all of a sudden, your open source project can interoperate in that larger environment

148
0:10:48.480 --> 0:10:51.760
because it does support these key standards.

149
0:10:51.760 --> 0:10:57.160
And then also, if you have some code that's being developed that implements either the

150
0:10:57.160 --> 0:11:02.840
complete or parts of the standard, then when the standard is actually ready, it's going

151
0:11:02.840 --> 0:11:06.840
to be much, much faster to deploy it if you already have some running code, right, rather

152
0:11:06.840 --> 0:11:12.560
than having to start from scratch, implementing just what was written down on a sheet of paper.

153
0:11:12.560 --> 0:11:17.400
So I think you can really have time to, you can speed up the time for adoption by having

154
0:11:17.400 --> 0:11:22.840
that code available in parallel with the standard.

155
0:11:22.840 --> 0:11:27.320
So just one example where I think helps illustrate the opportunity here.

156
0:11:27.320 --> 0:11:32.600
This is a relatively, it's a little bit dated slide from the Linux Foundation, but I think

157
0:11:32.600 --> 0:11:37.620
it demonstrates some of the points I'm trying to make quite well.

158
0:11:37.620 --> 0:11:41.520
This is looking at the network automation space.

159
0:11:41.520 --> 0:11:46.040
And on the left-hand side, you can see that there's a lot of open source projects just

160
0:11:46.040 --> 0:11:51.360
in the Linux Foundation alone that play a role in this space.

161
0:11:51.360 --> 0:11:57.600
So it's kind of layered from like the networking stack from top to bottom or bottom up.

162
0:11:57.600 --> 0:11:59.160
You can look at it either way.

163
0:11:59.160 --> 0:12:03.360
So you see the different open source projects, sometimes several of them playing at the same

164
0:12:03.360 --> 0:12:09.280
level of the stack because we allow multiple different projects that do some of the same

165
0:12:09.280 --> 0:12:10.280
things to coexist, right?

166
0:12:10.280 --> 0:12:13.800
I mean, that's very common in open source.

167
0:12:13.800 --> 0:12:15.920
So you have all these different projects.

168
0:12:15.920 --> 0:12:19.440
Some of them you may look at and say, hey, that project doesn't even exist anymore.

169
0:12:19.440 --> 0:12:22.120
That's an example that I was saying of the projects.

170
0:12:22.120 --> 0:12:24.000
Some of them actually fade away.

171
0:12:24.000 --> 0:12:30.240
So if you're trying to put together a solution that involves these different open source

172
0:12:30.240 --> 0:12:34.080
components, even if you're taking them off in the Linux Foundation, you still have a

173
0:12:34.080 --> 0:12:37.640
fair amount of integration that you're going to need to be able to do.

174
0:12:37.640 --> 0:12:45.080
On the right-hand side, you see similarly going up and down the networking stack here,

175
0:12:45.080 --> 0:12:49.800
the standards groups that play a role in that space.

176
0:12:49.800 --> 0:12:56.680
And I think the greatest opportunity for collaboration is going east-west across, right?

177
0:12:56.680 --> 0:13:04.640
So standards organizations like, for example, IETF and playing at the same level as perhaps

178
0:13:04.640 --> 0:13:13.160
an FDIO or an OVS or even with Linux, you start to see the opportunity for something

179
0:13:13.160 --> 0:13:16.480
that's being done in the standards area.

180
0:13:16.480 --> 0:13:21.180
What needs to be implemented, probably is implemented in these open source projects.

181
0:13:21.180 --> 0:13:29.560
So to the point that you can make that interaction and collaboration across these communities

182
0:13:29.560 --> 0:13:33.960
better, you can really help both sides.

183
0:13:33.960 --> 0:13:38.840
So as an example where I think we're making some progress here, I mentioned the IETF just

184
0:13:38.840 --> 0:13:44.000
a minute ago, and that's one standards organization that I'm involved in.

185
0:13:44.000 --> 0:13:50.400
It's the Internet Engineering Task Force, and it was created back in the mid-'80s with

186
0:13:50.400 --> 0:13:56.200
the goal of making the Internet really, all of the protocols on top of which the Internet's

187
0:13:56.200 --> 0:13:57.280
built.

188
0:13:57.280 --> 0:14:03.480
And now today, the goal remains to make the Internet better and over time to refine and

189
0:14:03.480 --> 0:14:05.700
add new protocols that are needed.

190
0:14:05.700 --> 0:14:13.200
So household names like TCPIP, DNS, DHCP, these things that we all end up using every

191
0:14:13.200 --> 0:14:18.200
day, those all came out of IETF.

192
0:14:18.200 --> 0:14:24.560
And I think IETF is a kind of good example here in that IETF even behaves a little bit,

193
0:14:24.560 --> 0:14:28.260
if you're not familiar with it, it behaves a little bit more closely to an open source

194
0:14:28.260 --> 0:14:32.900
community in that when you go there, you participate as an individual.

195
0:14:32.900 --> 0:14:35.880
There's no, like, company affiliation.

196
0:14:35.880 --> 0:14:38.360
It's free to participate.

197
0:14:38.360 --> 0:14:42.440
Anyone can do that, much like you often see with open source.

198
0:14:42.440 --> 0:14:46.600
And this quote on the right-hand side I think helps pull that out.

199
0:14:46.600 --> 0:14:49.320
You see, you know, we reject King's presidents voting.

200
0:14:49.320 --> 0:14:52.480
We believe in rough consensus and running code.

201
0:14:52.480 --> 0:14:56.800
And that idea of running code was really important to the IETF early on.

202
0:14:56.800 --> 0:15:02.380
I think maybe there was a drifting away from that over time, and I see there being a lot

203
0:15:02.380 --> 0:15:09.640
of potential in getting back to that idea of running code, whoops, sorry, that's related

204
0:15:09.640 --> 0:15:13.560
to standards.

205
0:15:13.560 --> 0:15:23.180
So one thing that the IETF did, I think, as a realization that its processes and ways

206
0:15:23.180 --> 0:15:27.200
of working need to change and to try to make it a little bit easier for developers in the

207
0:15:27.200 --> 0:15:31.960
open source community to get involved is just taking a look at the way that standards are

208
0:15:31.960 --> 0:15:38.160
actually written and developed over time and how consensus is built around them.

209
0:15:38.160 --> 0:15:44.120
Traditionally, it's been done using a pretty arcane set of tools that have been built in

210
0:15:44.120 --> 0:15:45.120
the IETF over time.

211
0:15:45.120 --> 0:15:49.600
And if you've been working in the IETF for a long time, you're probably pretty comfortable

212
0:15:49.600 --> 0:15:56.600
with writing your drafts in XML and then converting them into this RFC format.

213
0:15:56.600 --> 0:16:00.160
But if you're not, that's kind of a barrier to entry.

214
0:16:00.160 --> 0:16:06.560
And so there was actually a working group to find to say, hey, how can we make our processes

215
0:16:06.560 --> 0:16:11.820
work a bit better to meet developers, to make it more developer friendly?

216
0:16:11.820 --> 0:16:18.480
And so this Git working group, GitHub integration and tooling, what it did was to find a way

217
0:16:18.480 --> 0:16:25.720
that IETF drafts could be posted and worked on in a GitHub repo.

218
0:16:25.720 --> 0:16:30.240
And instead of using XML and having to translate, it could be written in Markdown, something

219
0:16:30.240 --> 0:16:36.320
that many developers are pretty familiar with just from writing their own readmes.

220
0:16:36.320 --> 0:16:44.360
And so now the drafts, although they're still just really text, but they're stored in GitHub

221
0:16:44.360 --> 0:16:48.600
and you have the version control around them and you can do pull requests and all that.

222
0:16:48.600 --> 0:16:53.080
So really, it's bringing, it's really meeting developers where they are, making it easier,

223
0:16:53.080 --> 0:16:58.920
more comfortable, straightforward for them to contribute by using things that the developers

224
0:16:58.920 --> 0:17:01.440
are already pretty familiar with.

225
0:17:01.440 --> 0:17:05.880
And you can see if maybe a little small, but when you're looking at, I'm showing you what

226
0:17:05.880 --> 0:17:12.200
the working group page for the draft, there's a section called additional resources.

227
0:17:12.200 --> 0:17:17.320
And what this takes you here was a newly defined additional resource, which is the GitHub repo.

228
0:17:17.320 --> 0:17:23.320
What were the draft that people are collaborating on as stored?

229
0:17:23.320 --> 0:17:27.320
Another thing that's been done, and this is where I've spent a lot of time, is in running

230
0:17:27.320 --> 0:17:29.360
the IETF hackathons.

231
0:17:29.360 --> 0:17:35.560
And the idea there is to do exactly that thing that I mentioned earlier of speeding up the

232
0:17:35.560 --> 0:17:42.520
pace and relevance of IETF standards by implementing them in parallel with defining them and taking

233
0:17:42.520 --> 0:17:46.960
the things that you learn from implementing them and putting them, working them back into

234
0:17:46.960 --> 0:17:49.800
future iterations of the draft.

235
0:17:49.800 --> 0:17:56.620
So I think that way you end up with a higher quality standard in a shorter amount of time.

236
0:17:56.620 --> 0:18:03.560
But another goal is to again, attract developers and kind of new participants from say universities,

237
0:18:03.560 --> 0:18:08.460
younger people in general into the IETF by creating an environment that's a little bit

238
0:18:08.460 --> 0:18:14.360
more interesting perhaps to contribute rather than reviewing drafts and commenting on them

239
0:18:14.360 --> 0:18:16.760
on mailing lists or something like that.

240
0:18:16.760 --> 0:18:22.400
You can actually use tools and techniques and code and contribute in that way too and

241
0:18:22.400 --> 0:18:27.560
point out where maybe there's a problem in the standard or a better way to do it by actually

242
0:18:27.560 --> 0:18:33.600
implementing it and using that to help build your feedback.

243
0:18:33.600 --> 0:18:37.420
And these are free and open to everyone and very collaborative.

244
0:18:37.420 --> 0:18:41.640
Some hackathons are competitive, but this is really about learning, moving things forward

245
0:18:41.640 --> 0:18:44.840
and improving all standards that the IETF works on.

246
0:18:44.840 --> 0:18:45.840
So it's non-competitive.

247
0:18:45.840 --> 0:18:49.880
And on the right-hand side, I just have a chart.

248
0:18:49.880 --> 0:18:56.840
You can see we ran the first one I think back in 2015 and attracted about 45 people and

249
0:18:56.840 --> 0:19:00.000
I thought that was quite successful.

250
0:19:00.000 --> 0:19:04.960
Then a couple years later after having these at every IETF meeting, it's now common to

251
0:19:04.960 --> 0:19:08.080
have three to 400 people that want to use.

252
0:19:08.080 --> 0:19:13.600
And if you think of an entire IETF meeting being about 1,000 people, that's 30 or 40

253
0:19:13.600 --> 0:19:18.560
percent of the people are coming and actually spending the weekend before it to work on

254
0:19:18.560 --> 0:19:26.680
code together, which I think has had a huge impact on the IETF.

255
0:19:26.680 --> 0:19:30.960
So another thing we did then as a result of these hackathons was, well, let's create a

256
0:19:30.960 --> 0:19:35.440
GitHub org and we can store the projects that we work on in the hackathon.

257
0:19:35.440 --> 0:19:37.080
We can store them there.

258
0:19:37.080 --> 0:19:42.400
So in case the project wasn't already hosted somewhere else, oftentimes we'll put the project

259
0:19:42.400 --> 0:19:45.120
in this GitHub org.

260
0:19:45.120 --> 0:19:49.080
And that makes it a little bit easier then to find code related to standards because

261
0:19:49.080 --> 0:19:51.420
you can go look in this GitHub org.

262
0:19:51.420 --> 0:19:55.920
So at least you find some code that's related to standards.

263
0:19:55.920 --> 0:19:57.200
You can find it there.

264
0:19:57.200 --> 0:19:59.720
So that helps out a bit too.

265
0:19:59.720 --> 0:20:03.880
Another thing we've done is if you look at – we always have a wiki that lists the various

266
0:20:03.880 --> 0:20:06.800
projects for an IETF hackathon.

267
0:20:06.800 --> 0:20:12.320
And this is a good example where they've done an important thing where you can see the key

268
0:20:12.320 --> 0:20:15.600
IETF drafts that the project is working on.

269
0:20:15.600 --> 0:20:16.600
There's links to them.

270
0:20:16.600 --> 0:20:19.920
You may not be able to read them well, but if you can download the slides, I've uploaded

271
0:20:19.920 --> 0:20:22.480
them and you can see those.

272
0:20:22.480 --> 0:20:27.980
And then down below, it's talking about where the code is that they're writing.

273
0:20:27.980 --> 0:20:30.400
And in this case, it's a GitHub repo.

274
0:20:30.400 --> 0:20:32.080
They're working on VPP.

275
0:20:32.080 --> 0:20:38.720
It's a network processing open source project.

276
0:20:38.720 --> 0:20:44.240
And they're implementing these drafts in VPP, which is a great example of the type of thing

277
0:20:44.240 --> 0:20:45.800
we want to have seen.

278
0:20:45.800 --> 0:20:50.080
So right here in their project description, they're showing you the drafts and the code,

279
0:20:50.080 --> 0:20:55.360
which is a nice way of linking those things together.

280
0:20:55.360 --> 0:21:06.400
So we made progress, but it's not all rainbows and unicorns yet by any means.

281
0:21:06.400 --> 0:21:10.720
So I think we're just scratching the surface here with what we can do.

282
0:21:10.720 --> 0:21:18.920
If I go back and I show you this GitHub org that we have, there's maybe 20 projects there.

283
0:21:18.920 --> 0:21:26.440
It's probably 1% of the code that is related to standards that exist in the open source

284
0:21:26.440 --> 0:21:27.440
world.

285
0:21:27.440 --> 0:21:34.040
So you can get a little bit of code that way, but it's really just a few things.

286
0:21:34.040 --> 0:21:41.920
And this wiki, the problem with this is if you look closely, you'll see that one of the

287
0:21:41.920 --> 0:21:44.720
draft names has even changed over time.

288
0:21:44.720 --> 0:21:47.220
So they're not maintained.

289
0:21:47.220 --> 0:21:51.840
We'll use them extensively in the lead up to the hackathon, during the hackathon, and

290
0:21:51.840 --> 0:21:54.160
for maybe a week or so after.

291
0:21:54.160 --> 0:21:56.880
But they're not maintained.

292
0:21:56.880 --> 0:22:04.540
This isn't really a good way to, over time, find the linkage between code and drafts.

293
0:22:04.540 --> 0:22:09.720
So I think there's definitely things that we need to do to improve.

294
0:22:09.720 --> 0:22:16.680
So what I did was, for those of you who work in the IETF, if you want to improve something,

295
0:22:16.680 --> 0:22:17.680
you do.

296
0:22:17.680 --> 0:22:18.680
You write a draft.

297
0:22:18.680 --> 0:22:28.400
So I wrote a draft about more systematically going and creating this linkage between IETF

298
0:22:28.400 --> 0:22:31.480
drafts and code that's related to them.

299
0:22:31.480 --> 0:22:38.240
And to set up a process that you could think of becoming a standard way of doing this,

300
0:22:38.240 --> 0:22:42.520
and so that everyone keeps this in mind when they're writing their drafts, and to point

301
0:22:42.520 --> 0:22:45.320
out where to find the code.

302
0:22:45.320 --> 0:22:52.360
So earlier I showed this additional information that you could have point to a GitHub repo.

303
0:22:52.360 --> 0:22:58.040
What we've done now is we added another type of additional resource, and that's a related

304
0:22:58.040 --> 0:22:59.040
implementation.

305
0:22:59.040 --> 0:23:04.600
And so now what you can do is when you're writing your internet draft, you have an idea,

306
0:23:04.600 --> 0:23:11.720
you can point to relevant code, whether it's an implementation of, say, the protocol you're

307
0:23:11.720 --> 0:23:18.960
defining, perhaps it's a tool that helps you sniff that protocol when it appears on the

308
0:23:18.960 --> 0:23:21.120
network, to sniff it on the wire.

309
0:23:21.120 --> 0:23:29.480
So anything that's going to help with implementing, supporting, deploying, maintaining, operating

310
0:23:29.480 --> 0:23:33.640
the standards that you're defining, you can point to them here.

311
0:23:33.640 --> 0:23:39.840
And all you need to do is you can go and you can edit those resources, and maybe, again,

312
0:23:39.840 --> 0:23:44.040
a little hard to see, but the first one is pointing to the GitHub repo where the draft

313
0:23:44.040 --> 0:23:50.040
is stored, and the second one is pointing to a related implementation, where, in this

314
0:23:50.040 --> 0:23:55.480
case, because this is sort of a process document, the related implementation is actually pointing

315
0:23:55.480 --> 0:23:58.960
to another RFC, which is about how to run the hackathon.

316
0:23:58.960 --> 0:24:04.200
So maybe not the greatest example, but I wanted to show how you use this.

317
0:24:04.200 --> 0:24:09.160
Now applying it to a more real world example, I'm going back to that hackathon project I

318
0:24:09.160 --> 0:24:15.360
showed you before that has the links to the internet draft, and then it's pointing to

319
0:24:15.360 --> 0:24:16.560
a GitHub repo.

320
0:24:16.560 --> 0:24:23.960
So you can see here, I'm looking at the draft here that's highlighted in red, this one on

321
0:24:23.960 --> 0:24:30.560
draft IETF ops AWG IP fix SRV6.

322
0:24:30.560 --> 0:24:38.120
And if I go look at it in the IETF data tracker, I can see there's related implementations defined

323
0:24:38.120 --> 0:24:40.720
for it down there at the bottom.

324
0:24:40.720 --> 0:24:46.080
And if I click on that, it'll actually take me to that GitHub repo.

325
0:24:46.080 --> 0:24:50.600
So now I'm not relying on the wiki anymore and something that's not being maintained.

326
0:24:50.600 --> 0:24:55.560
Now I actually am putting the linkage between the code and the draft right in the tooling

327
0:24:55.560 --> 0:24:59.520
that's used to work on the IETF draft.

328
0:24:59.520 --> 0:25:05.060
So in this way, it's a much more stable, easier to find reference for everyone, whether they

329
0:25:05.060 --> 0:25:08.960
knew about the IETF hackathons or not.

330
0:25:08.960 --> 0:25:16.200
And so I think that's the type of thing that it's starting to gain traction in the IETF,

331
0:25:16.200 --> 0:25:20.240
and I'm trying to get it to be much more common.

332
0:25:20.240 --> 0:25:22.720
And perhaps even there's better ways to do it.

333
0:25:22.720 --> 0:25:27.160
So people can also comment on the draft that I showed before if they have a better idea

334
0:25:27.160 --> 0:25:30.760
of how to do it.

335
0:25:30.760 --> 0:25:38.120
So I guess my ask to all of you is I hope that you see some value in creating this linkage

336
0:25:38.120 --> 0:25:46.120
between open source and standards, and that you can help do your part to create that linkage.

337
0:25:46.120 --> 0:25:51.220
So if you're working, for me or others in the standards community, if you're working

338
0:25:51.220 --> 0:25:56.080
on internet standards and you happen to know of some open source code, create that linkage,

339
0:25:56.080 --> 0:25:59.720
show people where there's code related to the standards.

340
0:25:59.720 --> 0:26:04.920
Once you're working on an open source project, though, and you know that project very well,

341
0:26:04.920 --> 0:26:10.080
and you know you've implemented some key standards in it, make sure that that's well documented

342
0:26:10.080 --> 0:26:15.600
in your read mirror or easy for someone who's not familiar with your project to see that,

343
0:26:15.600 --> 0:26:18.380
oh, yes, you do support these standards.

344
0:26:18.380 --> 0:26:22.960
Because that might make, hopefully will make your open source project much more valuable

345
0:26:22.960 --> 0:26:28.400
and easier for them to consume and to use for their purposes.

346
0:26:28.400 --> 0:26:36.240
So by making this linkage easier for people to find and use, I think we can make standards

347
0:26:36.240 --> 0:26:42.840
much more consumable by developers, and the other way around, the open source community

348
0:26:42.840 --> 0:26:49.120
and the things that we build there become much more consumable by these industries that

349
0:26:49.120 --> 0:26:53.820
have relied on standards for a number of years.

350
0:26:53.820 --> 0:26:56.480
So with that, I thank you for your time.

351
0:26:56.480 --> 0:26:58.720
I maybe have a couple minutes for questions still?

352
0:26:58.720 --> 0:27:00.720
You absolutely have a couple minutes for questions.

353
0:27:00.720 --> 0:27:01.720
Excellent.

354
0:27:01.720 --> 0:27:04.040
I'm on my way.

355
0:27:04.040 --> 0:27:09.840
And I'd also love feedback on the IETF draft if any of you are like, hey, I want to provide

356
0:27:09.840 --> 0:27:11.360
comments on an IETF draft.

357
0:27:11.360 --> 0:27:13.040
I've never done that before.

358
0:27:13.040 --> 0:27:14.600
This is a good opportunity.

359
0:27:14.600 --> 0:27:20.560
Thanks for this pitch was really highlighting.

360
0:27:20.560 --> 0:27:26.280
I think there is really a link between open source and like standards.

361
0:27:26.280 --> 0:27:33.240
So my question is, in one of your previous pictures, you were showing like standardizing

362
0:27:33.240 --> 0:27:36.080
organization and open source.

363
0:27:36.080 --> 0:27:42.600
And I've seen that there was like the image of open config on the open source.

364
0:27:42.600 --> 0:27:47.600
Let's see.

365
0:27:47.600 --> 0:27:48.600
Not this one, right?

366
0:27:48.600 --> 0:27:49.600
No.

367
0:27:49.600 --> 0:27:50.600
Oh, I think I know.

368
0:27:50.600 --> 0:27:52.760
One of the initial slides you were showing.

369
0:27:52.760 --> 0:27:54.240
This one maybe.

370
0:27:54.240 --> 0:27:55.240
Yeah.

371
0:27:55.240 --> 0:28:01.080
So I recently had to develop something related to the open config group, right?

372
0:28:01.080 --> 0:28:04.960
And somehow they are also defining a standard.

373
0:28:04.960 --> 0:28:07.120
So what do you think about this?

374
0:28:07.120 --> 0:28:08.120
I mean...

375
0:28:08.120 --> 0:28:09.120
Yeah.

376
0:28:09.120 --> 0:28:11.680
That's a good question.

377
0:28:11.680 --> 0:28:21.200
So that's an example of sort of a community that's not traditionally maybe considered

378
0:28:21.200 --> 0:28:25.800
an open...considered a standards group, but they're defining their own standards within

379
0:28:25.800 --> 0:28:26.800
it.

380
0:28:26.800 --> 0:28:31.280
And it has been a little bit of a challenge, I'd say, historically, because you had some

381
0:28:31.280 --> 0:28:38.840
standards being defined in IETF and kind of alternative standards rather than being argued

382
0:28:38.840 --> 0:28:42.720
within the IETF and used to influence IETF standards.

383
0:28:42.720 --> 0:28:49.760
It's kind of a standards in a similar space, but being done by another organization now

384
0:28:49.760 --> 0:28:51.720
by OpenConfig.

385
0:28:51.720 --> 0:28:58.120
And so I guess in some ways it's similar to having multiple open source projects that

386
0:28:58.120 --> 0:29:00.480
are trying to do the same thing.

387
0:29:00.480 --> 0:29:08.280
So I'd say the one thing is as long as the OpenConfig is open to community consensus

388
0:29:08.280 --> 0:29:13.440
and taking input, then ideally we'd have one set of standards.

389
0:29:13.440 --> 0:29:19.040
But if we have two and they have different communities working behind them, perhaps they

390
0:29:19.040 --> 0:29:20.440
each meet a separate need.

391
0:29:20.440 --> 0:29:22.480
So it's not necessarily a bad thing.

392
0:29:22.480 --> 0:29:28.680
The important thing is that both communities are very open to input from their members

393
0:29:28.680 --> 0:29:30.680
and hopefully they collaborate a bit where they can.

394
0:29:30.680 --> 0:29:33.840
So if you don't see anything against this, I mean, it's like...

395
0:29:33.840 --> 0:29:41.880
I'd say it's not ideal, similar to competing open source projects existing, but you can't

396
0:29:41.880 --> 0:29:46.720
always force everyone...that's kind of the beauty, I guess, of open source is you can

397
0:29:46.720 --> 0:29:49.320
go off and explore different things.

398
0:29:49.320 --> 0:29:54.280
And that's kind of what's happened here is, you know, it's like a fork almost.

399
0:29:54.280 --> 0:29:58.040
And whether they come back together at some point, I don't know, probably not at this

400
0:29:58.040 --> 0:30:00.720
point, but who knows?

401
0:30:00.720 --> 0:30:06.320
Okay, so we have time for one more question and I see one hand.

402
0:30:06.320 --> 0:30:11.040
Great, when it works out that way.

403
0:30:11.040 --> 0:30:12.040
Yes.

404
0:30:12.040 --> 0:30:15.520
Yeah, thank you for the talk.

405
0:30:15.520 --> 0:30:23.760
Or these implementations linked to a specification, would you preferably distinguish between an

406
0:30:23.760 --> 0:30:27.000
implementation and let's say a reference implementation?

407
0:30:27.000 --> 0:30:30.840
Oh, yeah, yeah, great point.

408
0:30:30.840 --> 0:30:35.400
That's actually one of the challenges we had in the IETF too, that people thought...

409
0:30:35.400 --> 0:30:43.840
I guess one of the concerns was perhaps pointing to some code that is, you know, it's just

410
0:30:43.840 --> 0:30:49.320
a little bit of a science project or a quick demo maybe even at one of these hackathons

411
0:30:49.320 --> 0:30:54.920
as opposed to something that is a full-fledged, hey, I can go off and use this in my mission-critical

412
0:30:54.920 --> 0:30:55.920
software.

413
0:30:55.920 --> 0:31:00.160
So I think the important thing there is in the readme.

414
0:31:00.160 --> 0:31:05.600
I haven't really come up with a better solution than that than to say, hey, you know, document

415
0:31:05.600 --> 0:31:06.600
what this is.

416
0:31:06.600 --> 0:31:08.160
Is this...are you just getting going?

417
0:31:08.160 --> 0:31:09.920
Is this a proof of concept?

418
0:31:09.920 --> 0:31:12.840
Is this something that you want people to contribute to?

419
0:31:12.840 --> 0:31:16.320
You know, to make sure you have your contributing file there.

420
0:31:16.320 --> 0:31:22.340
So it's kind of just letting people know through the readme, I think, is the best way to go.

421
0:31:22.340 --> 0:31:23.340
Thank you so much, Charles.

422
0:31:23.340 --> 0:31:24.340
Very much appreciated.

423
0:31:24.340 --> 0:31:25.340
Yeah, thank you.

424
0:31:25.340 --> 0:31:46.280
Hi.

