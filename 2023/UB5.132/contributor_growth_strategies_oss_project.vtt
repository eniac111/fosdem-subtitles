WEBVTT

00:00.000 --> 00:10.760
Here today at FOSDEM I am going to be talking about contributor growth strategies, how to

00:10.760 --> 00:17.800
get more contributors for your open source project.

00:17.800 --> 00:23.080
Today I'll start by talking about the factors that can impact contributor growth and why

00:23.080 --> 00:29.500
it can be so incredibly challenging before moving into some strategies for growing your

00:29.500 --> 00:34.880
contributor base, using contributor ladders to help people move into leadership positions.

00:34.880 --> 00:40.480
Then finally I'll talk about some metrics you can use to measure project sustainability.

00:40.480 --> 00:45.160
Then we'll look at a few resources and give you some final thoughts.

00:45.160 --> 00:49.160
First, I'll tell you a teeny tiny bit about me.

00:49.160 --> 00:55.280
I've been in the technology industry for well over 20 years, working mostly on open source

00:55.280 --> 01:01.760
projects from within companies like Intel, Puppet, and now VMware, I'm responsible for

01:01.760 --> 01:06.840
our open source community strategy within the open source program office.

01:06.840 --> 01:11.800
I'm a board member of Open UK, I'm a governing board member and maintainer for the Linux

01:11.800 --> 01:17.600
Foundation's Chaos Metrics project, I'm co-chair of the CNCF contributor strategy technical

01:17.600 --> 01:24.300
advisory group, and I also have a PhD from the University of Greenwich where I researched

01:24.300 --> 01:29.440
how people collaborate within the Linux kernel.

01:29.440 --> 01:36.880
Let's start by talking more about why it can be so hard to achieve contributor growth.

01:36.880 --> 01:42.660
In this section we'll talk about some of the issues people face that can impact the sustainability

01:42.660 --> 01:48.200
of contributions along with the vicious cycle that people often face when trying to balance

01:48.200 --> 01:55.120
the time required to maintain the project versus the time to onboard new contributors.

01:55.120 --> 01:58.920
The reality is we are not mindless automatons.

01:58.920 --> 02:05.480
We have feelings, we have bad days, we have other commitments and personal challenges

02:05.480 --> 02:10.920
in our lives that are often invisible to the other contributors within the project and

02:10.920 --> 02:14.640
they can get in the way of our contributions to open source projects.

02:14.640 --> 02:20.800
Maybe it can be squishy, we can be unpredictable and irrational, especially when we're stressed

02:20.800 --> 02:26.040
out, when we're overworked, when we're burnt out.

02:26.040 --> 02:29.800
But you can't have an open source project without actually having people to maintain

02:29.800 --> 02:35.200
it, so you need to be able to encourage people to participate in ways that are sustainable

02:35.200 --> 02:40.640
not just for the project but also for those people as human beings.

02:40.640 --> 02:45.240
Many projects struggle to find people who will actively participate in their projects

02:45.240 --> 02:48.080
and continue to participate over the long term.

02:48.080 --> 02:53.360
If it was easy, you would all have all of the people you needed to maintain your project

02:53.360 --> 02:58.280
and I'd be in an empty room and none of you would be watching this talk.

02:58.280 --> 03:03.040
But we're in a situation now where there are lots of open source projects and just frankly

03:03.040 --> 03:05.920
not enough contributors.

03:05.920 --> 03:09.800
Maintainers are burning out and are in desperate need of help.

03:09.800 --> 03:14.680
And sometimes it can be really difficult to get people to contribute to your project.

03:14.680 --> 03:19.760
And unfortunately there's no magic behind this, there's no one size fits all solution.

03:19.760 --> 03:24.800
But throughout this talk I will focus on some things that you can do to increase the chances

03:24.800 --> 03:32.360
of successfully building a community and then growing more contributors for your project.

03:32.360 --> 03:40.040
Building an open source project is hard work and it extends out over many years.

03:40.040 --> 03:43.280
And maintainer burnout is common with an open source project.

03:43.280 --> 03:48.720
Even the really big successful projects like Kubernetes struggle with maintainer burnout

03:48.720 --> 03:51.360
and growing the contributor community.

03:51.360 --> 03:57.080
It can be hard for already overworked maintainers to balance the day to day work required to

03:57.080 --> 04:02.240
keep the project running while also investing in additional activity to increase future

04:02.240 --> 04:04.280
community sustainability.

04:04.280 --> 04:10.240
So this creates a vicious cycle where maintainers don't have enough time to onboard new contributors

04:10.240 --> 04:16.360
leading to fewer contributors which leads back to no time to onboard new contributors.

04:16.360 --> 04:21.560
And while it takes a bit more time up front, if you can invest some time in activities

04:21.560 --> 04:26.760
that will help onboard new contributors like onboarding documentation for example, you

04:26.760 --> 04:31.040
can increase the chances that you can break out of this vicious cycle.

04:31.040 --> 04:35.080
Another way to free up some time for maintainers to break out of this cycle is by getting help

04:35.080 --> 04:40.480
for different types of contributions that take up valuable time and are required to

04:40.480 --> 04:42.440
make an open source project successful.

04:42.440 --> 04:47.640
So think about things like documentation, marketing, community management and loads

04:47.640 --> 04:48.640
of other things.

04:48.640 --> 04:54.600
And for projects with really complex code bases, it can sometimes be a lot easier to

04:54.600 --> 05:00.280
onboard people into some of these roles first to help free up some time to onboard other

05:00.280 --> 05:03.640
contributors later.

05:03.640 --> 05:08.200
Now next up, let's talk about developing and executing on a long-term contributor growth

05:08.200 --> 05:14.280
strategy including motivation, governance, new contributor onboarding, mentoring and

05:14.280 --> 05:17.640
leadership.

05:17.640 --> 05:22.680
People's motivations for contributing to your project vary widely.

05:22.680 --> 05:26.520
Some people are contributing as part of their job while others might contribute to gain

05:26.520 --> 05:30.560
experience or maybe learn more about a particular technology.

05:30.560 --> 05:36.440
And you don't really have any control whatsoever over what motivated people to show up.

05:36.440 --> 05:42.120
But there are things that you can do to motivate them to stick around regardless of why they

05:42.120 --> 05:44.160
showed up in the first place.

05:44.160 --> 05:49.800
Clear communication and reducing friction are key to helping people stick around.

05:49.800 --> 05:55.600
And I'll talk more in upcoming slides about the importance of explicit and clearly communicated

05:55.600 --> 06:02.120
governance along with solid onboarding docs and fostering a welcoming and inclusive community.

06:02.120 --> 06:06.640
But there are other things you can do to help motivate people to contribute.

06:06.640 --> 06:12.640
Having good first issues or help wanted labels are excellent places to start because these

06:12.640 --> 06:17.800
help contributors find something that they can work on while they learn more about the

06:17.800 --> 06:18.800
project.

06:18.800 --> 06:23.800
So good first issues should be targeted as something very simple that a brand new contributor

06:23.800 --> 06:29.800
can just pick up and do in a very quick amount of time.

06:29.800 --> 06:32.480
It helps them learn more about the contribution process.

06:32.480 --> 06:37.280
And then help wanted labels are for issues that maybe are a little bit more complicated

06:37.280 --> 06:41.560
and take a little bit more time so that people who've already started to contribute can find

06:41.560 --> 06:44.560
something else to work on next.

06:44.560 --> 06:49.240
And good first issues and help wanted labels are passive requests for help, right?

06:49.240 --> 06:56.160
But I also encourage maintainers to be proactive and specific about ways that people can help.

06:56.160 --> 07:02.480
Asking someone specific to review a PR or maybe answer a question in Slack or some other

07:02.480 --> 07:09.080
forum from a user demonstrates that you recognize their expertise and that you want their help

07:09.080 --> 07:10.640
specifically.

07:10.640 --> 07:16.120
And going back to the discussion about squishy humans, knowing that we're appreciated makes

07:16.120 --> 07:18.240
us feel good, right?

07:18.240 --> 07:23.400
Which can be a strong motivator to participate in an open SARS project.

07:23.400 --> 07:25.720
Now I know a lot of people like to really hate on governance.

07:25.720 --> 07:29.680
It's just paperwork, it's busy work, nobody likes it, it just gets in the way of doing

07:29.680 --> 07:31.760
the real work on the project.

07:31.760 --> 07:35.280
But this really isn't true of good governance.

07:35.280 --> 07:39.920
And good governance is really about setting expectations and getting all of the people

07:39.920 --> 07:42.640
in the community collaborating together.

07:42.640 --> 07:47.560
And ultimately the focus of open source project governance is on people.

07:47.560 --> 07:52.880
The roles we play, our responsibilities, how we make decisions, and what we should expect

07:52.880 --> 07:57.200
from each other as participating in the community.

07:57.200 --> 08:02.080
The goal should be to make the processes for participation as obvious as possible.

08:02.080 --> 08:04.360
Even for people who are brand new to the community.

08:04.360 --> 08:09.320
So having clear rules about how collaboration occurs, how decisions are made, and what types

08:09.320 --> 08:15.480
of contributions are in or out of scope really helps community members make contributions

08:15.480 --> 08:19.040
that are likely to be accepted and embraced by the project.

08:19.040 --> 08:24.480
This helps avoid wasting maintainers' time for contributions that just aren't aligned

08:24.480 --> 08:26.240
with the project at all.

08:26.240 --> 08:29.920
And a healthy project with clear governance makes contributors happy and helps set the

08:29.920 --> 08:34.960
project up for success and future growth.

08:34.960 --> 08:40.480
Now another aspect of governance is about making it easier for people to move into positions

08:40.480 --> 08:44.920
of increasing responsibility to help reduce the load on existing maintainers.

08:44.920 --> 08:49.880
We'll talk more about this later in the section about contributor ladders and leadership.

08:49.880 --> 08:53.200
But the good news is you don't have to start from scratch.

08:53.200 --> 08:58.680
We have some good templates with instructions that we've developed at the CNCF.

08:58.680 --> 09:03.840
But they apply to most projects so they can help you quickly and easily build out some

09:03.840 --> 09:07.520
really basic governance for your project.

09:07.520 --> 09:11.040
Now I suspect that some of you are still thinking that you really don't need to spend time on

09:11.040 --> 09:12.040
governance.

09:12.040 --> 09:16.440
But think about this from the perspective of the new contributor.

09:16.440 --> 09:21.760
It's a lot more difficult to participate in a project or participate in a community if

09:21.760 --> 09:26.120
you don't know anything about the role that you might play, the expectations, the key

09:26.120 --> 09:29.160
players, or the roles for participating.

09:29.160 --> 09:35.880
So explicit documented governance gives new and existing contributors a clear path to

09:35.880 --> 09:37.880
guide them through your project.

09:37.880 --> 09:43.040
And spending a bit of time, you don't spend a lot but just a bit of time documenting governance

09:43.040 --> 09:49.320
up front can help save you time later with fewer questions about how things work.

09:49.320 --> 09:53.880
And it gives you a document that you can point people to if they have questions.

09:53.880 --> 09:58.180
Now when I start contributing to a new open source project, I want to know how decisions

09:58.180 --> 10:03.400
are made and who makes those decisions which helps me understand whether decisions are

10:03.400 --> 10:08.760
likely to be made fairly by people with the expertise to make those decisions.

10:08.760 --> 10:13.220
And I also want to see a clear path into leadership for me or for my colleagues if we decide to

10:13.220 --> 10:16.160
stick around in the project over the long term.

10:16.160 --> 10:20.040
But the bottom line is that if the process for collaboration and decision making are

10:20.040 --> 10:25.880
not clearly documented as part of the project governance, this introduces a lot of uncertainty

10:25.880 --> 10:30.600
and increases the barrier to contribution while also jeopardizing the long term health

10:30.600 --> 10:34.360
and viability of the project.

10:34.360 --> 10:42.560
I see so many open source projects with contributing guides that don't actually provide any useful

10:42.560 --> 10:45.440
information about contributing to the project.

10:45.440 --> 10:51.000
At a minimum, a new contributor needs to understand how to spin up an environment where they can

10:51.000 --> 10:57.680
do their development, the expectations for testing and how to run those tests, any processes

10:57.680 --> 11:02.520
or expectations you have around things like pull requests or issues, and instructions

11:02.520 --> 11:07.200
for other requirements like maybe they need to sign a CLA or sign their commits using

11:07.200 --> 11:09.320
the DCO process.

11:09.320 --> 11:14.320
Now if this is well documented, contributors can get started with a minimal amount of help

11:14.320 --> 11:19.900
from existing maintainers which can save you a lot of time in the long run.

11:19.900 --> 11:24.360
And when a project doesn't have good onboarding docs, maintainers can get frustrated by the

11:24.360 --> 11:28.560
amount of time they spend on new contributor questions.

11:28.560 --> 11:32.240
And it can make it hard for contributors to feel welcome and take them longer to become

11:32.240 --> 11:33.760
productive.

11:33.760 --> 11:37.600
Now this does not mean that you need to spend days and days and weeks and weeks writing

11:37.600 --> 11:42.220
the perfect onboarding documentation for your project.

11:42.220 --> 11:44.640
Anything is better than nothing.

11:44.640 --> 11:49.800
And if you just start with a few things that can help people get started quickly, new contributors

11:49.800 --> 11:54.760
can actually help make the onboarding documents better by adding more details and additional

11:54.760 --> 12:01.320
instructions for things that they found confusing or that they had struggled with.

12:01.320 --> 12:06.200
Your project should also be designed to keep diversity, equity and inclusion top of mind.

12:06.200 --> 12:10.760
Building a diverse community where people feel welcome and included doesn't just happen.

12:10.760 --> 12:14.600
It does require putting at least some thought into it.

12:14.600 --> 12:19.840
But it's really time well spent providing an environment where everyone including people

12:19.840 --> 12:25.520
from marginalized populations feel safe is the first step toward building a diverse community

12:25.520 --> 12:27.280
for your project.

12:27.280 --> 12:32.560
Ideally having programs that give people opportunities for things like shadowing, mentoring, sponsoring

12:32.560 --> 12:37.360
new potential leaders can help you grow a diverse set of people into new leadership

12:37.360 --> 12:39.280
within your project.

12:39.280 --> 12:43.440
The Kubernetes contributor experience SIG is a great place to see some examples of how

12:43.440 --> 12:48.280
to implement some of these programs for things like shadowing and mentoring.

12:48.280 --> 12:54.720
Projects that make a concerted effort to bring in new people from a variety of backgrounds

12:54.720 --> 12:58.000
and have programs in place to help them grow into leadership positions are more likely

12:58.000 --> 13:03.640
to benefit from increased innovation and just have a healthier contributor community.

13:03.640 --> 13:08.340
And by having a diverse and welcoming community, you have the advantage of getting contributors

13:08.340 --> 13:12.840
that might not feel welcome in other projects.

13:12.840 --> 13:16.840
Now this, I gave it its own section but it's really still kind of part of the strategy

13:16.840 --> 13:21.840
section but it's important enough to call out separately since moving people into leadership

13:21.840 --> 13:27.900
positions really is a key part of growing your contributor base and scaling your project.

13:27.900 --> 13:31.480
So I'll talk about this in the context of contributor ladders which is a good way to

13:31.480 --> 13:34.600
do this.

13:34.600 --> 13:40.040
Defining the roles and responsibilities for contributors, reviewers, maintainers can help

13:40.040 --> 13:42.920
with recruiting new people into these roles.

13:42.920 --> 13:47.280
It can help to really think of this as a ladder where contributors can climb up to become

13:47.280 --> 13:53.560
reviewers and those reviewers can become maintainers and what's important is to document it and

13:53.560 --> 14:00.760
make sure that people understand how they can climb this ladder and move into positions

14:00.760 --> 14:04.040
with more responsibility within the project.

14:04.040 --> 14:08.600
A contributor ladder usually outlines the different roles within the project along with

14:08.600 --> 14:12.080
responsibilities and privileges that come with them.

14:12.080 --> 14:18.020
Community members generally start at the first levels of the ladder and then they advance

14:18.020 --> 14:20.640
up as their involvement in the project grows.

14:20.640 --> 14:24.600
So for each rung of the ladder you can define responsibilities which are the things that

14:24.600 --> 14:28.720
a contributor is expected to do.

14:28.720 --> 14:33.760
Requirements are the qualifications that a person needs to be put in that role.

14:33.760 --> 14:37.760
And then privileges are maybe some things that those contributors are entitled to do

14:37.760 --> 14:39.760
as a part of that position.

14:39.760 --> 14:44.600
And all of this helps set expectations for roles and encourages people to think about

14:44.600 --> 14:50.360
how they might take on additional responsibilities within the project.

14:50.360 --> 14:55.200
And as you get more people moving into maintainer roles you can reduce the load of the existing

14:55.200 --> 14:56.200
maintainers.

14:56.200 --> 15:01.760
Now the good news is that there is like with many things also a template so you can avoid

15:01.760 --> 15:03.160
building this from scratch.

15:03.160 --> 15:07.160
Now this template has probably more roles than most projects need but it's intended

15:07.160 --> 15:12.240
to be simplified and customized for your project.

15:12.240 --> 15:17.200
Project leadership is one of the key elements of good governance and this is how you scale

15:17.200 --> 15:18.900
your project.

15:18.900 --> 15:22.000
So you should have some kind of documentation about your leadership.

15:22.000 --> 15:25.400
For small projects maybe you just have a list of maintainers that indicates which people

15:25.400 --> 15:28.600
are responsible for which things.

15:28.600 --> 15:32.440
And there are quite a few different options for selecting leaders as part of defining

15:32.440 --> 15:37.400
your governance and the ideal is to have a process that provides a fair and level playing

15:37.400 --> 15:45.160
field that defines how contributors can become leaders and this should be documented so that

15:45.160 --> 15:50.400
all participants can clearly understand the criteria and the process for moving into leadership

15:50.400 --> 15:51.400
positions.

15:51.400 --> 15:56.240
Now some of the bigger projects like Kubernetes for example have an election process at least

15:56.240 --> 16:01.160
for the top levels of leadership like a steering committee.

16:01.160 --> 16:05.920
But only the biggest projects actually need something that complicated.

16:05.920 --> 16:10.520
Most projects have a relatively simple process where the existing leaders or existing maintainers

16:10.520 --> 16:12.560
get to select the new ones.

16:12.560 --> 16:17.880
So for example new maintainers are often nominated by existing maintainers and maybe approved

16:17.880 --> 16:23.800
after a certain number of maintainers have agreed to it or maybe there's a voting process.

16:23.800 --> 16:27.760
And there are loads of different options for selecting leaders for a project so I won't

16:27.760 --> 16:33.040
go into all of them but there is a wrote a document for the CNCF that kind of describes

16:33.040 --> 16:35.120
some different options.

16:35.120 --> 16:40.400
But the key is to spend some time thinking about this as you document your governance

16:40.400 --> 16:44.400
and as you build your contributor ladder so that you can bring new people into leadership

16:44.400 --> 16:49.280
positions and reduce the load on the existing maintainers to help scale your project by

16:49.280 --> 16:52.640
growing your contributor base.

16:52.640 --> 16:58.320
Now granted mentoring takes a bit more time but it's a good way to help existing contributors

16:58.320 --> 17:02.960
become even better with an eye toward moving them into leadership positions.

17:02.960 --> 17:07.480
So for busy maintainers one good approach is to focus on mentoring people who've already

17:07.480 --> 17:15.000
been around a while and are unlikely to disappear and help them learn to do maybe some more

17:15.000 --> 17:17.840
complex time consuming tasks.

17:17.840 --> 17:22.560
Like with many things mentoring isn't something that's all or nothing and you can time by

17:22.560 --> 17:24.880
box it to whatever time you can fit in your schedule.

17:24.880 --> 17:28.760
So this doesn't have to be hours and hours and hours every week.

17:28.760 --> 17:34.040
Even spending an hour, a month or an hour a week to help someone quickly become productive

17:34.040 --> 17:39.000
in some part of your project can be time well spent if that person can then take on a few

17:39.000 --> 17:43.200
tasks that help you reduce your load as a maintainer.

17:43.200 --> 17:48.560
You can even structure this as shadowing and allow them to watch you and learn while you

17:48.560 --> 17:52.400
do some maintainer tasks that you're going to do anyways.

17:52.400 --> 17:55.880
And if you focus this on helping someone learn to do something that can free up your time

17:55.880 --> 18:00.120
later then this will be time well spent.

18:00.120 --> 18:05.440
Now the strategic part of all of this comes in to thinking about where your time would

18:05.440 --> 18:07.640
be best spent.

18:07.640 --> 18:12.760
I've given a lot of suggestions so far in this presentation and you should not try to

18:12.760 --> 18:15.260
do everything at once.

18:15.260 --> 18:18.460
So I recommend you think strategically about where you start.

18:18.460 --> 18:22.280
If you know you've had people interested in contributing but they've given up when they

18:22.280 --> 18:27.520
couldn't get started then maybe you focus on onboarding docs.

18:27.520 --> 18:33.080
If you have a lot of casual contributors who come around occasionally and contribute things

18:33.080 --> 18:37.160
maybe you focus on the contributor ladder and governance to help some of them move up

18:37.160 --> 18:44.360
to take on more responsibility and eventually move into leadership positions.

18:44.360 --> 18:47.800
One way to figure out the best place to start is by using metrics.

18:47.800 --> 18:53.720
So I'm a big fan of metrics and data for those who know me but this can help you find problem

18:53.720 --> 18:57.120
areas and figure out where you should be spending your time.

18:57.120 --> 18:59.200
Time is precious right?

18:59.200 --> 19:04.560
So it's important to identify problem areas so that you can focus on the right things

19:04.560 --> 19:09.600
while avoiding wasting time on things that maybe are already going okay or going really

19:09.600 --> 19:10.600
well.

19:10.600 --> 19:16.000
However metrics do need to be interpreted in light of how you operate as a community

19:16.000 --> 19:21.080
and the other things happening in your project and there's no one size fits all interpretation

19:21.080 --> 19:26.040
for metrics but I will talk in this section about what some trends might indicate and

19:26.040 --> 19:29.760
how you can think about addressing them.

19:29.760 --> 19:33.360
One key area to look at for your project is responsiveness.

19:33.360 --> 19:38.760
So in this project in this graph you can see that there are times when they have a lot

19:38.760 --> 19:42.640
of PRs in the backlog that need to be merged or closed.

19:42.640 --> 19:47.640
Now if these PRs are coming from several regular contributors who aren't maintainers maybe

19:47.640 --> 19:51.960
it's a good time to look at how you can promote some of those contributors to become maybe

19:51.960 --> 19:56.280
reviewers, approvers, maintainers to help with the workload.

19:56.280 --> 19:59.380
Now as with any metrics you need to interpret them in light of your project.

19:59.380 --> 20:03.960
So there are other things that can cause an increase in the backlog like everyone preparing

20:03.960 --> 20:10.280
for a big release or maybe there's a big conference coming up or it's vacation season in Europe

20:10.280 --> 20:13.600
that just are not resolved by moving people into leadership roles.

20:13.600 --> 20:19.960
So you have to think about maybe why you have this backlog and what might help resolve it.

20:19.960 --> 20:23.000
It can also help to look at the types of contributors that you have.

20:23.000 --> 20:27.040
So in this case casual contributors are those drive-through contributors who make just a

20:27.040 --> 20:31.040
handful of contributions and then you never see them again.

20:31.040 --> 20:35.400
Regular contributors are the ones that make some contributions and stick around so they

20:35.400 --> 20:41.600
continue to make some contributions but maybe not a ton of contributions and then core contributors

20:41.600 --> 20:45.480
are usually the maintainers who make most of the contributions and stick around over

20:45.480 --> 20:47.920
the long term.

20:47.920 --> 20:51.020
Now you can really learn a lot from this graph actually.

20:51.020 --> 20:55.880
If you have a very small number of casual and regular contributors this can mean that

20:55.880 --> 21:00.800
people don't have the information needed to become productive and contribute.

21:00.800 --> 21:04.940
So in some cases onboarding docs can help solve this issue.

21:04.940 --> 21:08.080
Another thing that this graph can indicate is whether maybe you have some fundamental

21:08.080 --> 21:11.800
issues within your project that are driving people away.

21:11.800 --> 21:16.720
So if you see the total number of contributors declining or the number of regular contributors

21:16.720 --> 21:22.940
declining this can indicate some deeper issues maybe with toxic community members or an unwelcoming

21:22.940 --> 21:28.240
environment that probably needs to be resolved before you take any other actions to grow

21:28.240 --> 21:29.240
the community.

21:29.240 --> 21:33.520
Or it could mean people are leaving your community for some other reasons.

21:33.520 --> 21:38.000
Maybe lack of responsiveness is another one.

21:38.000 --> 21:43.920
Now this metric is often called the bus factor, pony factor, lottery factor based on the idea

21:43.920 --> 21:51.080
that if one person or a small number of people disappeared maybe after winning the lottery

21:51.080 --> 21:55.800
that the project would possibly be completely screwed because they're making all of the

21:55.800 --> 21:57.200
contributions.

21:57.200 --> 22:02.260
So I recommend measuring this because there are a couple of things I can tell you.

22:02.260 --> 22:07.120
So first of all it tells you how big of an issue this is for your current contributor

22:07.120 --> 22:08.120
situation.

22:08.120 --> 22:11.760
If it's like this one, this is a big issue and you should focus on getting some more

22:11.760 --> 22:15.720
contributors that can be moved into leadership roles.

22:15.720 --> 22:19.800
You might also find that there are people contributing more than you realized which

22:19.800 --> 22:21.820
is the other reason that this is a good metric.

22:21.820 --> 22:26.960
This can help you think about who you can encourage to contribute more or maybe find

22:26.960 --> 22:32.240
someone who can move up the ladder into a leadership role and reaching out to someone

22:32.240 --> 22:37.800
and acknowledging their work while encouraging them to do a bit more can help quite a bit

22:37.800 --> 22:39.600
with contributor growth.

22:39.600 --> 22:41.960
Sometimes people just need a bit of encouragement.

22:41.960 --> 22:45.600
As I mentioned earlier you can ask people for specific things that you know they're

22:45.600 --> 22:46.600
good at.

22:46.600 --> 22:51.200
There are several communities that I've gotten more involved in or involved in in the first

22:51.200 --> 22:55.200
place because someone asked for my specific help and kind of made me feel wanted within

22:55.200 --> 22:58.480
that community.

22:58.480 --> 23:02.320
Now before I wrap up this talk I'm going to leave you with a few resources that you might

23:02.320 --> 23:03.320
find useful.

23:03.320 --> 23:08.720
I've mentioned the CNCF contributor strategy technical advisory group a couple of times.

23:08.720 --> 23:13.440
We have a governance working group and a contributor growth working group which provide templates

23:13.440 --> 23:19.200
and guidance about contributor experience, sustainability, governance, that sort of thing

23:19.200 --> 23:22.840
to help people develop strategies for maintaining healthy projects.

23:22.840 --> 23:28.040
So resources are designed for CNCF projects but most of what we talk about applies just

23:28.040 --> 23:32.360
about any open source project.

23:32.360 --> 23:36.720
The open source way guidebook has loads of really great details about building and maintaining

23:36.720 --> 23:38.560
open source projects.

23:38.560 --> 23:43.960
The chaos project has loads of metrics definitions and software which you could see in my metric

23:43.960 --> 23:48.400
slides that you can use to measure the health of your open source community.

23:48.400 --> 23:51.320
And these are all great starting places for understanding how to grow your contributor

23:51.320 --> 23:52.320
community.

23:52.320 --> 23:58.160
And I just mentioned the contributor strategy tag on the resources slide but I wanted to

23:58.160 --> 24:00.480
put in a really quick recruiting plug.

24:00.480 --> 24:03.560
Like with most open source projects we're also looking for help.

24:03.560 --> 24:06.600
We don't have enough people to contribute.

24:06.600 --> 24:10.620
And anyone's welcome to join our meetings if you want to learn about us or even better

24:10.620 --> 24:15.360
if you're passionate about contributor growth, governance, or related topics and want to

24:15.360 --> 24:18.280
help CNCF projects improve in those areas.

24:18.280 --> 24:23.880
We'd love to have you join us and help us develop resources and provide advice to projects.

24:23.880 --> 24:27.120
And this slide has several ways to find us and get involved.

24:27.120 --> 24:32.200
So with that said let me leave you with just a few final thoughts.

24:32.200 --> 24:37.720
Maintaining an open source project is so much work and there are so many maintainers who

24:37.720 --> 24:42.000
are overworked, exhausted, burning out.

24:42.000 --> 24:45.880
And the best way to address this challenge is by growing your contributor base.

24:45.880 --> 24:47.520
But it's hard work.

24:47.520 --> 24:53.560
It takes time away from the day to day activities now which can be really hard to justify when

24:53.560 --> 24:57.160
you feel like you're barely keeping up as it is.

24:57.160 --> 25:02.720
But in the longer term spending at least a little time on things that can help you recruit

25:02.720 --> 25:06.760
and keep new contributors will be worth it in the long run.

25:06.760 --> 25:11.080
And hopefully some of the templates and resources that I provided will help you get started

25:11.080 --> 25:12.680
with some of this work.

25:12.680 --> 25:15.960
And as I've mentioned before you don't need to do everything at once.

25:15.960 --> 25:19.680
Taking just a little time on something to grow your contributor base is a great way

25:19.680 --> 25:23.000
to start.

25:23.000 --> 25:26.960
Thank you for coming to my talk and we can open it up for questions.

25:26.960 --> 25:30.760
That was very easy.

25:30.760 --> 25:33.760
Thank you Don.

25:33.760 --> 25:38.160
I have a question about the lottery factor.

25:38.160 --> 25:45.920
Do you have any advice on how to measure or how to take into account quality not just

25:45.920 --> 25:52.880
enumerating the quantity of commits that various contributions make?

25:52.880 --> 25:56.080
So the question is how to take into account quality versus quantity.

25:56.080 --> 25:58.360
Just quantity, yeah.

25:58.360 --> 26:04.960
Yeah I think that that's something you have to, so you're not going to be able to measure

26:04.960 --> 26:08.560
the quality really well instead of a quantitative way, right?

26:08.560 --> 26:11.680
But I think it's something, again it gets at interpretation.

26:11.680 --> 26:15.120
So I think it's something that you need to really think about.

26:15.120 --> 26:20.560
So there might be somebody that has loads of commits for some particular reason, but

26:20.560 --> 26:25.640
maybe they're not a major contributor to the project for some other reason.

26:25.640 --> 26:27.600
Maybe they're not a maintainer.

26:27.600 --> 26:30.000
Maybe it wouldn't be a big deal if they left tomorrow.

26:30.000 --> 26:33.280
Maybe they're working on something that's fairly niche that not a lot of people use,

26:33.280 --> 26:35.160
for example.

26:35.160 --> 26:40.720
So I think you really do need to interpret those graphs.

26:40.720 --> 26:42.960
And you can think about the quality of what someone does.

26:42.960 --> 26:48.600
If you've got someone who makes a ton of commits and they're kind of crap, then that's not

26:48.600 --> 26:51.880
as important as someone who makes a lot of commits that are really great.

26:51.880 --> 26:55.760
So you just need to, I think, apply a reality filter on top of it.

26:55.760 --> 26:59.080
But I don't think it's something that you can really easily measure quantitatively,

26:59.080 --> 27:04.480
but you need to just think about and kind of put a qualitative filter on top of it.

27:04.480 --> 27:05.480
Yeah.

27:05.480 --> 27:06.480
Other questions?

27:06.480 --> 27:13.480
Hi.

27:13.480 --> 27:23.200
First off, great talk.

27:23.200 --> 27:30.240
The question about the governance side, because I work on a pretty big open source project,

27:30.240 --> 27:35.600
but the problem there is that it's owned by a company that doesn't really necessarily

27:35.600 --> 27:41.600
value open sources, like one of their core reasons why they do it.

27:41.600 --> 27:48.320
So do you have any recommendations for how to advocate for governance in big open source

27:48.320 --> 27:50.560
projects or company-owned projects?

27:50.560 --> 27:51.560
Yeah.

27:51.560 --> 27:55.240
It's really hard to advocate for governance in company-owned projects.

27:55.240 --> 28:01.080
I've tried to do it and failed in certain projects in the past.

28:01.080 --> 28:07.200
What I found is usually the best way to approach it is to get them to document the way things

28:07.200 --> 28:08.400
work now.

28:08.400 --> 28:14.840
So not worry about changing all of the governance, not worry about coming up with some big elaborate

28:14.840 --> 28:19.360
governance structure, but how do people get moved into committed roles now?

28:19.360 --> 28:21.120
How do they get moved up?

28:21.120 --> 28:23.160
And try to encourage companies.

28:23.160 --> 28:27.080
And this is something I have this discussion internally within VMware all the time, too,

28:27.080 --> 28:30.680
is we hire people to work on certain open source projects.

28:30.680 --> 28:34.200
And so they get commit or status kind of automatically.

28:34.200 --> 28:38.640
And we should be as transparent as possible about that in our governance materials, for

28:38.640 --> 28:44.120
example, that they do get special treatment as of the fact that it's a VMware open source

28:44.120 --> 28:45.720
project and we're paying them to do the work.

28:45.720 --> 28:49.540
So they're going to be able to commit from day one.

28:49.540 --> 28:54.000
So I think being transparent about that, as transparent as possible, can help.

28:54.000 --> 28:57.680
But I would say work with them to document what they have right now.

28:57.680 --> 29:01.600
And then maybe people will start to see the gaps and you can try to build on it.

29:01.600 --> 29:02.840
But it's hard.

29:02.840 --> 29:07.680
It's really hard to get good governance for company on projects.

29:07.680 --> 29:10.480
It's a tough problem.

29:10.480 --> 29:16.920
Thanks for your talk.

29:16.920 --> 29:18.640
About the lottery factor.

29:18.640 --> 29:21.120
I'm not sure if you mentioned it or anything.

29:21.120 --> 29:22.120
But I'm going to see.

29:22.120 --> 29:46.920
All right.
