1
0:00:00.000 --> 0:00:13.640
Hello and welcome to my talk about a tool called Rege.

2
0:00:13.640 --> 0:00:20.360
It has something to do with a beehive and jail and I'm going to explain what it actually

3
0:00:20.360 --> 0:00:29.680
does, why it does it that way, what are the goals and what's the initiative behind it.

4
0:00:29.680 --> 0:00:41.720
So a relevant thing about me is I'm a co-founder of Hackerspace in my hometown.

5
0:00:41.720 --> 0:00:53.160
I was lucky enough to marry this girl and she supports me in all my crazy IT endeavors

6
0:00:53.160 --> 0:01:02.200
so Hackerspace was founded by us and it's a place where I do most of my development

7
0:01:02.200 --> 0:01:06.000
in the open source community.

8
0:01:06.000 --> 0:01:09.080
I've been a free business user since 2016.

9
0:01:09.080 --> 0:01:16.760
I used it briefly before 5.0 came out.

10
0:01:16.760 --> 0:01:28.520
And I'm somewhat involved in FreeBSD but I'm not a developer yet.

11
0:01:28.520 --> 0:01:37.480
I'm a FreeBSD contributor and for those of you that don't know what cBSD is, it's a

12
0:01:37.480 --> 0:01:39.600
jail and beehive manager.

13
0:01:39.600 --> 0:01:49.640
It can also manage Zen and VirtualBox but Rege doesn't support these two.

14
0:01:49.640 --> 0:01:58.360
I decided to have only FreeBSD native technologies supported.

15
0:01:58.360 --> 0:02:05.120
And obviously I'm an author of the software I'm about to talk about.

16
0:02:05.120 --> 0:02:13.360
So you might have seen similar tools like Vagrant and Docker Compose if you come from

17
0:02:13.360 --> 0:02:18.440
the Linux world like I do.

18
0:02:18.440 --> 0:02:26.640
And in that regard it's not revolutionary, it's actually pretty same thing.

19
0:02:26.640 --> 0:02:35.280
It's a manual development in a virtual machine or the jail.

20
0:02:35.280 --> 0:02:42.360
And currently jail has a really good support.

21
0:02:42.360 --> 0:02:49.360
Beehive is worked on because it has different distributions of Linux, different operating

22
0:02:49.360 --> 0:02:59.320
systems, versions and so on and it's a little bit harder to support because of those differences.

23
0:02:59.320 --> 0:03:08.960
And Oleg, who is a lead developer of cBSD decided to create a cBSD file which resembles

24
0:03:08.960 --> 0:03:16.760
somewhat Vagrant file in ideas and not the syntax.

25
0:03:16.760 --> 0:03:19.760
And I decided to take a different approach.

26
0:03:19.760 --> 0:03:29.360
So it's kind of a silly situation currently that there are two cBSD DevOps tools but we

27
0:03:29.360 --> 0:03:35.840
were trying out things and whatever works best is gonna stay.

28
0:03:35.840 --> 0:03:40.200
I'm rooting for the Rege of course.

29
0:03:40.200 --> 0:03:48.600
So the concept is that, well before I start with this, it would say the name of the project

30
0:03:48.600 --> 0:03:49.880
is Rege.

31
0:03:49.880 --> 0:03:53.680
I have a dreadlocks and I'm a musician.

32
0:03:53.680 --> 0:03:58.240
But I don't play Rege.

33
0:03:58.240 --> 0:04:01.680
It comes from a totally different idea.

34
0:04:01.680 --> 0:04:08.000
I have quite a few projects before this one that are all open source and now dead that

35
0:04:08.000 --> 0:04:16.600
had somehow referenced some songs or ideas from the Rege movement and music.

36
0:04:16.600 --> 0:04:26.320
And I said, okay how about I name this one Rege and stop the streak of resembling something

37
0:04:26.320 --> 0:04:29.640
I actually don't want to resemble.

38
0:04:29.640 --> 0:04:32.440
So that's where the name comes from.

39
0:04:32.440 --> 0:04:41.280
It's me trying to come up with a name to stop the Rege streak.

40
0:04:41.280 --> 0:04:52.520
So the basic concept behind Rege is that it uses cBSD for all heavy lifting.

41
0:04:52.520 --> 0:04:56.720
All jail and beehive management is done with it.

42
0:04:56.720 --> 0:05:04.640
Some of the networking is done with cBSD, some with RC.conf.

43
0:05:04.640 --> 0:05:11.720
I'm gonna get to that a bit later.

44
0:05:11.720 --> 0:05:15.840
And Rege has two entities.

45
0:05:15.840 --> 0:05:18.920
One is a service, one is a project.

46
0:05:18.920 --> 0:05:25.840
I intentionally called it a service because it can be a virtual machine or the jail.

47
0:05:25.840 --> 0:05:35.400
And the project is you might want to have different jails for different stuff.

48
0:05:35.400 --> 0:05:44.320
Let's say you're working with WordPress as a hoster and you know you need the PHP with

49
0:05:44.320 --> 0:05:48.800
WordPress, Nginx on one side and MySQL on the other.

50
0:05:48.800 --> 0:05:56.320
You probably don't want all of that to be inside the same container so you can split

51
0:05:56.320 --> 0:05:58.120
those up.

52
0:05:58.120 --> 0:06:07.560
You can influence the order of creation and booting and everything.

53
0:06:07.560 --> 0:06:15.560
We still don't have dependencies between jails but we might have in the future because it's

54
0:06:15.560 --> 0:06:22.320
a really nice feature.

55
0:06:22.320 --> 0:06:29.880
You probably are not gonna type all the commands to create the jail and then all the services

56
0:06:29.880 --> 0:06:33.040
inside of it.

57
0:06:33.040 --> 0:06:43.840
You're gonna use some of the provisioners and I'm gonna talk about that in a while.

58
0:06:43.840 --> 0:06:52.360
Where I come from, that's basically Serbia, we don't have IPv6.

59
0:06:52.360 --> 0:07:00.600
Forgive me if I didn't implement IPv6 properly because I have a really limited resources

60
0:07:00.600 --> 0:07:02.600
in testing that.

61
0:07:02.600 --> 0:07:10.920
There is of course tunnels that I use and I try to combine stuff but yeah, I'm basically

62
0:07:10.920 --> 0:07:14.080
with one hand behind the back.

63
0:07:14.080 --> 0:07:20.000
So I really try to support it, I just don't know if I've done it properly.

64
0:07:20.000 --> 0:07:25.280
Technologies, well, it's a mouthful.

65
0:07:25.280 --> 0:07:35.120
With vNet jails you can use DHCP and I almost insist on using vNet because for me as a system

66
0:07:35.120 --> 0:07:46.640
administrator it's easier than jails, I just fire up DHCP server, the DNS server, they

67
0:07:46.640 --> 0:07:58.080
are interconnected and to be specific DHCP is ICS, DNS server is NSD and there's one

68
0:07:58.080 --> 0:08:08.200
more DNS caching which is unbound.

69
0:08:08.200 --> 0:08:16.640
There are, well, all these technologies you probably know what they are.

70
0:08:16.640 --> 0:08:34.560
RTA, DVD is for IPv6 as I mentioned and PF, I would love to add IPFW, that's the future.

71
0:08:34.560 --> 0:08:43.640
So I don't cut off, I don't know what percentage of free BSD people but yeah, we wanna support

72
0:08:43.640 --> 0:08:48.920
everyone and everything ideally.

73
0:08:48.920 --> 0:09:00.400
And these two make and POSIX shell are the only languages used to implement reggae.

74
0:09:00.400 --> 0:09:09.360
I could get away with it because the CBSD is doing the whole stuff and I just need to

75
0:09:09.360 --> 0:09:16.960
script a few things, right.

76
0:09:16.960 --> 0:09:20.360
As I said, provisioners are supported.

77
0:09:20.360 --> 0:09:25.960
You don't have to use them, you can still just create a jail and do your, maybe it's

78
0:09:25.960 --> 0:09:34.520
a lab and you're playing with it, experimenting and whatnot but if you want you can run quite

79
0:09:34.520 --> 0:09:46.600
a few automation scripts and you can even have multiple provisioners for a single jail.

80
0:09:46.600 --> 0:09:53.920
That sounds crazy but if you think about it, sorry, wrong operating system.

81
0:09:53.920 --> 0:10:01.400
Free BSD doesn't come with a pre-installed Python and if you want to use Ansible you

82
0:10:01.400 --> 0:10:08.720
are gonna install Python first then the Ansible later.

83
0:10:08.720 --> 0:10:15.360
And for situations like that it's really, really nice to have shell provisioner doing

84
0:10:15.360 --> 0:10:23.080
like a first stage of the rocket launch and then Ansible does all the rest.

85
0:10:23.080 --> 0:10:32.560
I use shell and Ansible extensively and the rest of the provisioners, I really try to

86
0:10:32.560 --> 0:10:33.560
support them.

87
0:10:33.560 --> 0:10:42.480
I used all of them or am using them at work or somewhere else but I'm not using them as

88
0:10:42.480 --> 0:10:48.760
extensively as the first two so if you find a bug please report it.

89
0:10:48.760 --> 0:10:53.240
I will be nice and fix it if I know how to.

90
0:10:53.240 --> 0:11:02.040
So really it brings some things to the table that CBSD alone doesn't.

91
0:11:02.040 --> 0:11:09.920
I mean that's the reason it's created because it builds on top of something I personally

92
0:11:09.920 --> 0:11:13.480
consider a good software.

93
0:11:13.480 --> 0:11:16.560
And what it brings is in order to run let's say Win

94
0:11:16.560 --> 0:11:29.840
and Jails you will probably need a bridge and then some e-pairs and so on but bridge

95
0:11:29.840 --> 0:11:39.800
interface has to be created or at least allowed different administrators to have their own

96
0:11:39.800 --> 0:11:50.640
configuration of a bridge and not actually enforce what the CBSD comes with by default.

97
0:11:50.640 --> 0:12:00.040
And it's initializing network in such a way that PF is already configured, bridge is configured,

98
0:12:00.040 --> 0:12:11.080
IPv4 and IPv6 demons are stored and it's unbound and what not.

99
0:12:11.080 --> 0:12:23.160
So it initializes quite a lot and you might not like it and if you don't you have quite

100
0:12:23.160 --> 0:12:28.680
a few variables to disable stuff.

101
0:12:28.680 --> 0:12:37.840
For example you can disable IPv6 or have your projects resigned in a different directory

102
0:12:37.840 --> 0:12:41.400
not the default one and so on.

103
0:12:41.400 --> 0:12:49.960
So there's quite a financialization that it does because if you currently read how to

104
0:12:49.960 --> 0:13:01.320
start VNet jail in FreeBSD it's not really easy if you read it in different jail managers

105
0:13:01.320 --> 0:13:03.120
it might be better.

106
0:13:03.120 --> 0:13:09.680
I didn't check other documentation so I don't know but currently FreeBSD documentation

107
0:13:09.680 --> 0:13:18.240
around jail is kind of scarcin, not really depicting at all.

108
0:13:18.240 --> 0:13:25.880
And one of the things that it helps you with is how do you even start with it.

109
0:13:25.880 --> 0:13:34.200
Because I come from a Linux world in 2016 I was like how am I doing stuff, what do I

110
0:13:34.200 --> 0:13:41.160
do, how do I configure it and that was actually the reason I chose CBSD.

111
0:13:41.160 --> 0:13:55.520
At the time it made most logic, it was most intuitive tool for me to run my jails.

112
0:13:55.520 --> 0:14:00.440
Since then I discovered it's good for other things not just intuition right.

113
0:14:00.440 --> 0:14:06.000
But yeah I just love the software.

114
0:14:06.000 --> 0:14:14.000
The same as with the CBSD initialization because CBSD can do quite a lot.

115
0:14:14.000 --> 0:14:23.560
It can track resources, it can give you the usage of network per jail, it can do stuff

116
0:14:23.560 --> 0:14:29.360
and in order to do that it has to ask you things.

117
0:14:29.360 --> 0:14:39.000
For example are you using IPFW or PF and things like that are you using ZFS or UFS, what should

118
0:14:39.000 --> 0:14:46.120
I do, create clones or directories and so on.

119
0:14:46.120 --> 0:14:50.920
Regga chose a different path or I chose it for it.

120
0:14:50.920 --> 0:15:01.320
You can say use ZFS, yes or no and if it's no luckily we only have two file systems so

121
0:15:01.320 --> 0:15:07.400
either you use ZFS or the other one UFS.

122
0:15:07.400 --> 0:15:18.560
So the initial configuration is quite easier with Regga and CBSD and maybe if you're starting

123
0:15:18.560 --> 0:15:31.320
with the stack it's going to help you on your way from infancy to pro how to even start

124
0:15:31.320 --> 0:15:35.200
with CBSD and Regga.

125
0:15:35.200 --> 0:15:42.160
There is one decision to, okay let me take a step back.

126
0:15:42.160 --> 0:15:51.880
I try to create everything as the code but some things are just not meant to be like

127
0:15:51.880 --> 0:15:54.880
how do you assign addresses.

128
0:15:54.880 --> 0:16:04.840
CBSD has two, let's say two DHCP implementations.

129
0:16:04.840 --> 0:16:14.800
One is DHCP, it's called DHCP and what it does is run through all the IP addresses and

130
0:16:14.800 --> 0:16:22.120
finds the first free one and assign it to jail only on creation so it's not going to

131
0:16:22.120 --> 0:16:29.640
scan every time just when the jail is created it's going to scan them.

132
0:16:29.640 --> 0:16:39.360
So existing IP addresses and the configured IP addresses of jails that are not stored.

133
0:16:39.360 --> 0:16:49.360
So there is a second implementation of the recipe, it's called real DHCP.

134
0:16:49.360 --> 0:16:58.280
The idea is to have one master jail that has the CPU and DNS in it, authoritative DNS in

135
0:16:58.280 --> 0:17:09.000
it and there is local unbound outside of jail that says okay if you want zone that your

136
0:17:09.000 --> 0:17:12.960
jails are belonging to then look at here.

137
0:17:12.960 --> 0:17:23.400
It's from the Regga and CBSD perspective it's not so much about caching, actually it's not

138
0:17:23.400 --> 0:17:30.200
at all about caching although unbound is known for it and created for that purpose.

139
0:17:30.200 --> 0:17:43.000
It's more like how to call it a cop at the junction you go over here and it's redirecting

140
0:17:43.000 --> 0:17:46.320
the queries.

141
0:17:46.320 --> 0:17:53.480
So the idea is that probably while developing with Regga you're going to have a private

142
0:17:53.480 --> 0:18:05.280
IP address range and you want to still ask the DNS hey where is stuff because one thing

143
0:18:05.280 --> 0:18:13.840
that's actually two things are annoying to me about Docker at least when I used it.

144
0:18:13.840 --> 0:18:19.760
Docker containers know by name where other Docker containers are but you don't.

145
0:18:19.760 --> 0:18:27.920
You have to use either IP addresses or etc host hackery or something.

146
0:18:27.920 --> 0:18:34.600
And the second thing that really annoyed me is that I cannot have a user on this laptop

147
0:18:34.600 --> 0:18:45.520
with I don't know UID of 1001 and have the same user in a Docker container and do development

148
0:18:45.520 --> 0:18:48.400
inside of Docker container.

149
0:18:48.400 --> 0:18:55.200
It just matching the IDs was really terrible.

150
0:18:55.200 --> 0:19:07.960
I at least hope it was, it's not pertained but the idea behind that kind of frustration

151
0:19:07.960 --> 0:19:11.520
led to okay how about I have a DNS server.

152
0:19:11.520 --> 0:19:19.880
I mean it's what it's for to tell you where the IP address of this name is and so on.

153
0:19:19.880 --> 0:19:23.960
So yeah I couldn't create just the code.

154
0:19:23.960 --> 0:19:34.920
I still need one jail to do some maintenance stuff and some networking stuff.

155
0:19:34.920 --> 0:19:43.920
The nice thing about IPFW is that you can insert a rule whenever you want.

156
0:19:43.920 --> 0:19:50.800
If you're coming from Linux world that means it behaves like IP tables but PF doesn't.

157
0:19:50.800 --> 0:19:59.480
And PF has a pretty static set of rules unless you're using anchors.

158
0:19:59.480 --> 0:20:07.200
Anchors are a way to say okay this is a sub rule of the main rule and anchors can be changed

159
0:20:07.200 --> 0:20:14.480
and they are per jail called cbsd slash your jail name.

160
0:20:14.480 --> 0:20:25.760
So it's easier to see which rules are for which jails and I don't want to trash Docker

161
0:20:25.760 --> 0:20:38.800
too much but if you ever seen IP tables rules after the Docker mangles them it's a mess.

162
0:20:38.800 --> 0:20:40.100
It's a huge mess.

163
0:20:40.100 --> 0:20:54.560
So I try to be nicer as much as technologies and freebies they allow just don't be sorry

164
0:20:54.560 --> 0:21:01.920
don't be so negative towards developers and administrators they're gonna hate you.

165
0:21:01.920 --> 0:21:10.680
And so yeah when I say late these anchors are created after the jail is stored so it

166
0:21:10.680 --> 0:21:19.760
already has an IP address and can use the port redirection and whatever you need.

167
0:21:19.760 --> 0:21:29.160
And yeah because until the jail is stored it already registered itself.

168
0:21:29.160 --> 0:21:37.200
So it's a lease and DHCP registered in an NSD zone.

169
0:21:37.200 --> 0:21:46.920
So these anchors can use host names instead of IP addresses and if you're using DHCP you

170
0:21:46.920 --> 0:21:50.460
probably have no idea what's the IP address.

171
0:21:50.460 --> 0:22:02.440
So the nice thing is that you can use names to really sort your networking and firewalling

172
0:22:02.440 --> 0:22:06.880
I would say in a proper way in a more readable way.

173
0:22:06.880 --> 0:22:16.740
And there is a concept of in something called DevOps that I still don't know what it means.

174
0:22:16.740 --> 0:22:27.200
They say the DevOps is IP accounting they know what not to click on AWS otherwise it's

175
0:22:27.200 --> 0:22:31.780
gonna cost you.

176
0:22:31.780 --> 0:22:40.960
So it's like a administrator plus accounting right.

177
0:22:40.960 --> 0:22:48.760
But yeah in a DevOps world you want your production to resemble development or maybe the other

178
0:22:48.760 --> 0:22:50.560
way around.

179
0:22:50.560 --> 0:22:59.160
But yeah the fewer the differences between your development and your production the bigger

180
0:22:59.160 --> 0:23:05.000
the chances that you're gonna catch bugs in development not in production.

181
0:23:05.000 --> 0:23:12.160
Also users are the best monitoring system in the world.

182
0:23:12.160 --> 0:23:25.320
Okay so because of the vNet just the vNet implies that you're going to have to use some custom

183
0:23:25.320 --> 0:23:40.640
VFS rules because you want access to BPF you want access to PF so it can have its own firewall.

184
0:23:40.640 --> 0:23:47.240
And naturally DevFS rules are supported in reggae.

185
0:23:47.240 --> 0:23:55.000
Unfortunately by number not by name but hopefully that will change.

186
0:23:55.000 --> 0:24:06.320
Net warrior is integer or should I say unsigned integer it works like nice the bigger the

187
0:24:06.320 --> 0:24:10.320
number the later you're going to boot.

188
0:24:10.320 --> 0:24:19.760
So it's not a perfect solution but it's a solution to start your WordPress after the

189
0:24:19.760 --> 0:24:24.480
MySQL for example.

190
0:24:24.480 --> 0:24:31.320
And it even works if you remove the reggae you create everything with reggae remove it

191
0:24:31.320 --> 0:24:34.440
it still works the boot order works.

192
0:24:34.440 --> 0:24:43.560
So that I really try to make booting really really work even if I did something naughty

193
0:24:43.560 --> 0:24:46.880
to my code and it breaks.

194
0:24:46.880 --> 0:24:53.800
So I kind of have a fail safe.

195
0:24:53.800 --> 0:25:06.320
I didn't know where majority of you are from but for some reason in Serbia package repository

196
0:25:06.320 --> 0:25:08.200
is extremely slow.

197
0:25:08.200 --> 0:25:14.280
If I get two mbits that's like wow that's a light speed.

198
0:25:14.280 --> 0:25:20.560
I don't know why it works like that maybe it's our providers because I talk to different

199
0:25:20.560 --> 0:25:23.720
people and they don't have that problem.

200
0:25:23.720 --> 0:25:30.320
So I came up with solution work around.

201
0:25:30.320 --> 0:25:37.400
What if all my gels just use proxy and first one is going to download everything and it's

202
0:25:37.400 --> 0:25:39.360
going to be painfully slow.

203
0:25:39.360 --> 0:25:47.480
But the next one all the next ones for just going to use the cached.

204
0:25:47.480 --> 0:25:57.160
Just files and there is a reggae recipe for proxy.

205
0:25:57.160 --> 0:26:05.240
So you don't have to type in a bunch of commands you just go to the repo download it type make

206
0:26:05.240 --> 0:26:09.080
and you're going to have a proxy.

207
0:26:09.080 --> 0:26:15.600
You're going to have to change the configuration to tell it to use it but it's as simple as

208
0:26:15.600 --> 0:26:20.320
it gets.

209
0:26:20.320 --> 0:26:29.520
In my open source career I mostly work with audio and that's mostly graphical.

210
0:26:29.520 --> 0:26:36.560
So I needed something like don't pollute my host and let me use jail for development.

211
0:26:36.560 --> 0:26:41.320
But on the other hand let me click on the buttons because I need to.

212
0:26:41.320 --> 0:26:48.440
So reggae has a really easy way of forwarding.

213
0:26:48.440 --> 0:26:55.400
I think it's called forwarding in X. Open the port and all the X applications are connected

214
0:26:55.400 --> 0:26:57.120
to that port.

215
0:26:57.120 --> 0:27:06.320
So X is on the X org is on host and your X client is inside the jail so you can interact

216
0:27:06.320 --> 0:27:08.320
with it.

217
0:27:08.320 --> 0:27:16.440
And yeah it supports both but I'm going to have to work real hard on this one as the

218
0:27:16.440 --> 0:27:28.240
newest addition to the source code so it received the least amount of love and currently it

219
0:27:28.240 --> 0:27:33.240
only supports free BSD virtual machines.

220
0:27:33.240 --> 0:27:41.720
What's beneath it is C-BSD is using cloud in it to do your bootstrapping of a virtual

221
0:27:41.720 --> 0:27:51.560
machine to have the initial configuration and then your provisioner or provisioners

222
0:27:51.560 --> 0:27:55.040
can kick in and do whatever you like.

223
0:27:55.040 --> 0:27:58.320
Whatever you told them to.

224
0:27:58.320 --> 0:28:02.200
So what does development mean?

225
0:28:02.200 --> 0:28:13.720
There is a devil mode because it's exposing so many things and doing it rather insecurely

226
0:28:13.720 --> 0:28:19.440
for the sake of a developer being able to do stuff.

227
0:28:19.440 --> 0:28:24.840
I kind of think the devil mode is pretty good.

228
0:28:24.840 --> 0:28:31.720
It's so close to the devil, right?

229
0:28:31.720 --> 0:28:43.560
So it has this development mode where you, for example, share your directory where the

230
0:28:43.560 --> 0:28:48.000
services with the jail.

231
0:28:48.000 --> 0:28:56.360
I borrowed this idea from Vagrant having a slash Vagrant being a mount point of your

232
0:28:56.360 --> 0:29:06.120
project and you can interact with it either through the host or through the container.

233
0:29:06.120 --> 0:29:10.280
And yeah, it's a mountain and slash user slash source.

234
0:29:10.280 --> 0:29:21.760
It kind of made sense because I kind of expect people not to do free BSD kernel or user space

235
0:29:21.760 --> 0:29:26.080
development inside a jail.

236
0:29:26.080 --> 0:29:37.080
You might find that an obstacle, but you can still mount your own stuff on top of whatever

237
0:29:37.080 --> 0:29:39.920
reggae and C-BSD do.

238
0:29:39.920 --> 0:29:43.320
So you can add your mount points and stuff.

239
0:29:43.320 --> 0:29:49.480
So it's not limiting if you're doing free BSD development, which I expect some of you

240
0:29:49.480 --> 0:29:50.680
do.

241
0:29:50.680 --> 0:29:58.240
It's not going to be in the way.

242
0:29:58.240 --> 0:30:10.080
This user is in the jail and has the same user ID and group ID as the user and host

243
0:30:10.080 --> 0:30:17.960
that executed make inside of a reggae service.

244
0:30:17.960 --> 0:30:31.360
So that slash user slash source is all owner is the devil user and you can interact with

245
0:30:31.360 --> 0:30:32.360
it.

246
0:30:32.360 --> 0:30:33.360
It's read, write.

247
0:30:33.360 --> 0:30:41.920
So the only difference is that the user name and group name is probably going to be different.

248
0:30:41.920 --> 0:30:49.760
I say probably because I expect you not to name your user devil.

249
0:30:49.760 --> 0:30:58.560
And there are, while I was working on this, I was pretty active for quite a few years

250
0:30:58.560 --> 0:31:10.640
as a web developer, which is kind of strange for a free BSD guy, free BSD contributor.

251
0:31:10.640 --> 0:31:19.240
And what I realized is how about I have one line saying, okay, I'm going to, in these

252
0:31:19.240 --> 0:31:30.220
jails I'm going to use like Django or something as my framework that I'm going to use.

253
0:31:30.220 --> 0:31:40.880
So it does a few alterations of how it does things, so it lets you run your frameworks

254
0:31:40.880 --> 0:31:41.880
more easily.

255
0:31:41.880 --> 0:31:48.360
And I shouldn't actually use plural because the only framework that's currently supported

256
0:31:48.360 --> 0:31:54.560
is called print and guess who the author is.

257
0:31:54.560 --> 0:32:02.800
But the idea is that you have a directory in your service called bin and inside of it

258
0:32:02.800 --> 0:32:08.560
you have a devil.sh and Regga doesn't know what's inside of it.

259
0:32:08.560 --> 0:32:11.120
It's just going to run it inside the jail.

260
0:32:11.120 --> 0:32:19.040
And usually for the web development I like to have a T-max with split pane, back-end,

261
0:32:19.040 --> 0:32:27.720
front-end, and it knows how to tell front-end where the back-end API is if you need to integrate

262
0:32:27.720 --> 0:32:31.320
and you do.

263
0:32:31.320 --> 0:32:41.960
But basically you can create your own devil script and the Regga will be happy about it.

264
0:32:41.960 --> 0:32:46.320
So it can do much more than just one framework.

265
0:32:46.320 --> 0:32:57.360
But in the future I'm going to add quite a few to make people not so much involved with

266
0:32:57.360 --> 0:33:04.160
jails, easier to start using it.

267
0:33:04.160 --> 0:33:08.320
So production is totally different thing.

268
0:33:08.320 --> 0:33:10.080
I mean the opposite.

269
0:33:10.080 --> 0:33:16.200
It's going to say, okay, this jail is going to start with the boot of the machine.

270
0:33:16.200 --> 0:33:24.720
It's also going to try its best to remove everything this created like the user source

271
0:33:24.720 --> 0:33:36.880
mount, some of the scripts that are installed for devil to work easily and so on.

272
0:33:36.880 --> 0:33:47.840
So what's the idea here is that if you want to create like a build server or maybe on

273
0:33:47.840 --> 0:33:54.200
your machine you're using devil mode and you created it like that and then afterwards you

274
0:33:54.200 --> 0:34:02.600
say devil mode equals no, make down, make up, and make up is going to clean everything

275
0:34:02.600 --> 0:34:11.440
that devil created and then you can make export and create an image, move it to some other

276
0:34:11.440 --> 0:34:21.840
server import it there and it just means so that you can have like either your development

277
0:34:21.840 --> 0:34:26.640
container productionized, not a good idea.

278
0:34:26.640 --> 0:34:30.200
Don't do it if you can avoid it.

279
0:34:30.200 --> 0:34:35.840
But sometimes you can't and it works on my machine so ship it.

280
0:34:35.840 --> 0:34:45.840
But the more serious use case for it is to have your build server build the image of

281
0:34:45.840 --> 0:34:52.720
a jail and then you deploy it somewhere.

282
0:34:52.720 --> 0:35:05.360
So this is an example of, so up to here, first three commands are creating the project and

283
0:35:05.360 --> 0:35:12.880
the project name is going to be as the directory you created.

284
0:35:12.880 --> 0:35:23.080
So the project containing multiple services, well in this instance just want to make it

285
0:35:23.080 --> 0:35:24.080
compact.

286
0:35:24.080 --> 0:35:32.120
So up to here it's creating the project and then project expects services directory to

287
0:35:32.120 --> 0:35:37.400
contain your jail or beehive definitions.

288
0:35:37.400 --> 0:35:43.040
And the definitions are created with this, you can omit this part and it's not going

289
0:35:43.040 --> 0:35:51.360
to create any provisioner for you or you can say here Ansible shall puppet and that's the

290
0:35:51.360 --> 0:35:55.880
order of provisioners that are going to be run.

291
0:35:55.880 --> 0:36:03.720
It has a few more expectations where things are going to be for a certain provisioner

292
0:36:03.720 --> 0:36:09.400
but it's going to create a skeleton for you so you don't have to create them by yourself

293
0:36:09.400 --> 0:36:15.160
and it's a, well read the code.

294
0:36:15.160 --> 0:36:21.400
If you have the skeleton it's going to be more intuitive what you should do next with

295
0:36:21.400 --> 0:36:25.160
your own code with your own development.

296
0:36:25.160 --> 0:36:30.400
And it's pretty slick.

297
0:36:30.400 --> 0:36:38.880
It can be done differently I just think to me this was most intuitive and I'm trying

298
0:36:38.880 --> 0:36:43.720
not to go against intuition.

299
0:36:43.720 --> 0:36:55.180
So there is, let's say all of us need something I don't know like MySQL.

300
0:36:55.180 --> 0:37:05.480
We all here in this room are hosting WordPress and we all need MySQL WordPress and Nginx.

301
0:37:05.480 --> 0:37:08.440
But you don't have to create it on your own.

302
0:37:08.440 --> 0:37:13.880
There are pre-made recipes for that.

303
0:37:13.880 --> 0:37:20.600
They are not images, they are still in this instance they are all Ansible.

304
0:37:20.600 --> 0:37:31.840
And you can combine jails and beehives provision with different provisioners and in this case

305
0:37:31.840 --> 0:37:41.240
it's going to download these three jails, configure them and interconnect them because

306
0:37:41.240 --> 0:37:49.600
Nginx has to know where WordPress is and WordPress needs to know where the database is.

307
0:37:49.600 --> 0:37:52.120
But it's not going to create a database for you.

308
0:37:52.120 --> 0:37:57.240
It's still like okay I don't know what you want.

309
0:37:57.240 --> 0:38:05.240
Is it a single instance or you're hosting multiple WordPress instances and you need

310
0:38:05.240 --> 0:38:08.400
multiple databases and so on.

311
0:38:08.400 --> 0:38:11.440
So that's left up to you.

312
0:38:11.440 --> 0:38:24.240
But if you go to the MySQL everything is, if you want to look at code of this just add

313
0:38:24.240 --> 0:38:30.680
jail-myscale and you're going to have the repository.

314
0:38:30.680 --> 0:38:35.720
And there's a readme which tells you okay this is how you create a database in this

315
0:38:35.720 --> 0:38:47.080
jail so you can do it differently of course but if you're coming from different environment

316
0:38:47.080 --> 0:38:52.960
I try to hold your hand as much as I can but you can ignore it.

317
0:38:52.960 --> 0:38:59.280
The same is for the WordPress and Nginx has a directory with quite a few examples how

318
0:38:59.280 --> 0:39:09.920
you create your own hosts inside the Nginx configuration but it's not going to configure

319
0:39:09.920 --> 0:39:11.280
it for you.

320
0:39:11.280 --> 0:39:19.440
It's a recommendation and not much, okay you have to do it this way.

321
0:39:19.440 --> 0:39:29.320
And this URL is probably the most complex project I did with Rege.

322
0:39:29.320 --> 0:39:39.880
Most complex in a sense that it has the biggest number of jails and services inside of it

323
0:39:39.880 --> 0:39:42.840
that need to talk to each other.

324
0:39:42.840 --> 0:39:54.000
And well if you try to manage Jabber and Mail and do it responsibly you know that you need

325
0:39:54.000 --> 0:39:58.320
all the help you can get.

326
0:39:58.320 --> 0:40:08.760
So I try to create this service that creates the Mail and Jabber communication server it

327
0:40:08.760 --> 0:40:17.040
gives you the documentation on how you should configure your DNS, what's inside of it, the

328
0:40:17.040 --> 0:40:24.600
links towards specific services and their own configurations and examples and so on.

329
0:40:24.600 --> 0:40:30.200
So it's my way of avoiding writing documentation.

330
0:40:30.200 --> 0:40:33.800
I mean we all do that.

331
0:40:33.800 --> 0:40:37.960
We have better things to do or better things to do.

332
0:40:37.960 --> 0:40:45.320
So if you have an example it's a documentation on its own.

333
0:40:45.320 --> 0:40:49.720
And yeah the future.

334
0:40:49.720 --> 0:40:53.080
What can be better than documentation, right?

335
0:40:53.080 --> 0:41:03.080
But what I want to say is that Oleg who is CBSD lead developer is Russian and I'm going

336
0:41:03.080 --> 0:41:12.160
to quote him, my English is terrible so our documentation currently is not good.

337
0:41:12.160 --> 0:41:19.840
I'm not going to say terrible but it's not good as it can be and that's literally our

338
0:41:19.840 --> 0:41:21.440
next assignment.

339
0:41:21.440 --> 0:41:28.880
We already talked a few months before about it and documentation is really killing us

340
0:41:28.880 --> 0:41:38.440
or the lack of good documentation and way of searching it and browsing it and finding

341
0:41:38.440 --> 0:41:40.680
what you need.

342
0:41:40.680 --> 0:41:52.640
There is quite a few documents that describe how specific scenarios should be executed

343
0:41:52.640 --> 0:41:54.800
or specific commands.

344
0:41:54.800 --> 0:41:57.360
What options do they have?

345
0:41:57.360 --> 0:42:07.120
It just still needs to be worded better and more coherent and connected better so that

346
0:42:07.120 --> 0:42:15.280
you can say okay if I read this, this and this I know where I'm going to be and then

347
0:42:15.280 --> 0:42:20.360
I know how to manage WordPress for example.

348
0:42:20.360 --> 0:42:28.120
So documentation is a really big thing that maybe it's going to be the only thing that

349
0:42:28.120 --> 0:42:32.280
we are going to work on besides the bugs.

350
0:42:32.280 --> 0:42:43.760
So yeah sorry about not being very good with documents but we promise we will improve.

351
0:42:43.760 --> 0:42:51.760
Now these two I hope they are not mutually exclusive.

352
0:42:51.760 --> 0:42:55.560
Jail Conf is a much much simpler way.

353
0:42:55.560 --> 0:42:58.040
It's in the base.

354
0:42:58.040 --> 0:43:05.360
It really works wonderful and it can even manage your Beehive because today I don't

355
0:43:05.360 --> 0:43:12.760
know with which version it's for but you can have a Beehive inside your jail and if you

356
0:43:12.760 --> 0:43:19.720
have that you can only manage jail and that's kind of wonderful.

357
0:43:19.720 --> 0:43:31.040
What we really need or at least I would like to have is Jail Conf D working really great.

358
0:43:31.040 --> 0:43:33.600
Currently it doesn't.

359
0:43:33.600 --> 0:43:44.080
One of the obstacles, well two of the obstacles, in Jail Conf you can define dependencies between

360
0:43:44.080 --> 0:43:49.800
jails and that's how it's going to boot, it's going to create a tree and then go from the

361
0:43:49.800 --> 0:43:53.400
leaves to the root.

362
0:43:53.400 --> 0:44:03.680
But you can do that with Jail Conf D and there is a patch coming from a developer I know

363
0:44:03.680 --> 0:44:13.480
from Yerevan called Antranik and he promised he's going to upstream that patch this weekend

364
0:44:13.480 --> 0:44:17.800
so we are watching you.

365
0:44:17.800 --> 0:44:22.520
But yeah it's almost there.

366
0:44:22.520 --> 0:44:31.320
The second obstacle with Jail Conf D is that you cannot have common configuration like

367
0:44:31.320 --> 0:44:37.840
you can in a Jail Conf because Jail Conf is one file with multiple jails.

368
0:44:37.840 --> 0:44:46.520
Jail Conf D is multiple jails, sorry, multiple files, one jail profile.

369
0:44:46.520 --> 0:44:57.560
You can probably have multiple jails per file but that kind of kills the idea.

370
0:44:57.560 --> 0:45:10.600
The idea is to have better service jails start or stop or whatever and then probably most

371
0:45:10.600 --> 0:45:17.960
of us jail managers, developers are going to unite in it and say okay this is how we

372
0:45:17.960 --> 0:45:18.960
use it.

373
0:45:18.960 --> 0:45:23.880
Now you can criticize us and why didn't you do that in the first place?

374
0:45:23.880 --> 0:45:33.480
But I guess we needed to experiment and learn and see what works and what not so that we

375
0:45:33.480 --> 0:45:43.040
know once we upstream it to Jail Conf it's going to be what we expect it to be.

376
0:45:43.040 --> 0:45:53.840
And Kubernetes, all jokes aside, I don't know if you're following but there is more and

377
0:45:53.840 --> 0:46:01.400
more Kubernetes support in Potsfry and there is, I hope I'm going to pronounce the name

378
0:46:01.400 --> 0:46:13.400
properly, Doug Robson is working on Kubernetes support, Podman is already there and Doug

379
0:46:13.400 --> 0:46:27.480
has a pretty initial version of Kubernetes working on FreeBSD with VNet and jails.

380
0:46:27.480 --> 0:46:38.080
Why I'm hoping for this to happen is so that we can have easier transition from Linux to

381
0:46:38.080 --> 0:46:50.240
FreeBSD and honestly there's a friend of mine who promised me that we are going to try mixed

382
0:46:50.240 --> 0:46:59.160
Kubernetes data centers is Linux Freak, I'm a FreeBSD Freak so let's try to create one

383
0:46:59.160 --> 0:47:05.200
domain that is going to be mixed operating systems in Kubernetes.

384
0:47:05.200 --> 0:47:07.280
Who knows where it leads us?

385
0:47:07.280 --> 0:47:17.200
Maybe we just lose our hair but if we do succeed it's a really easy way to switch to migrate

386
0:47:17.200 --> 0:47:24.120
from one operating system to the other because realistically maybe you want to switch from

387
0:47:24.120 --> 0:47:27.880
FreeBSD to Linux, please don't.

388
0:47:27.880 --> 0:47:36.760
But yeah, who knows what's your use case and maybe your workplace is such that it simply

389
0:47:36.760 --> 0:47:39.440
has to be like that.

390
0:47:39.440 --> 0:47:48.920
So yeah, I'm hoping this will not live because it leaves more space for this and so I'm kind

391
0:47:48.920 --> 0:47:57.720
of like a split brain person, I really don't know what I want with Kubernetes.

392
0:47:57.720 --> 0:48:07.960
It's probably here to stay so we need to support it in order to be kinder towards other developers

393
0:48:07.960 --> 0:48:13.280
and system administrators, maybe DevOps.

394
0:48:13.280 --> 0:48:21.040
So I would like to thank a few communities and persons.

395
0:48:21.040 --> 0:48:29.160
Telesenter for supporting my crazy ideas and testing everything I do.

396
0:48:29.160 --> 0:48:37.600
At least few of the people are testing my crazy ideas and reporting back and sometimes

397
0:48:37.600 --> 0:48:40.600
in doing slight development.

398
0:48:40.600 --> 0:48:48.920
I'm really grateful to be physically in an environment that is supporting me in such

399
0:48:48.920 --> 0:48:57.440
a way because usually I don't know about you but I suspect we're the crazy ones.

400
0:48:57.440 --> 0:49:05.560
Why don't you use drugs like all normal kids or the Docker or whatever, right?

401
0:49:05.560 --> 0:49:10.560
So yeah, it's really nice to be supported.

402
0:49:10.560 --> 0:49:16.840
The FreeBSD community, I don't know how to say this enough.

403
0:49:16.840 --> 0:49:25.320
They've been supportive and helpful and I didn't encounter a question that somebody

404
0:49:25.320 --> 0:49:30.400
didn't answer if I was persistent enough.

405
0:49:30.400 --> 0:49:43.560
In the FreeBSD community, all again in particular, he created cbsd by himself and it's an enormous

406
0:49:43.560 --> 0:49:44.560
task.

407
0:49:44.560 --> 0:49:51.480
It even has end curses commands to make it easier for you.

408
0:49:51.480 --> 0:50:03.920
So it's enormous task that started 10 years ago, 2013, and so it's our big anniversary

409
0:50:03.920 --> 0:50:04.920
this year.

410
0:50:04.920 --> 0:50:13.360
I think it's somewhere during the summer but I will have to check that.

411
0:50:13.360 --> 0:50:22.280
Usually we announced that on a cbsd site and I'm afraid I didn't remember it.

412
0:50:22.280 --> 0:50:30.880
It was a few days before the FOSDEM and I was doing a bunch of things to basically prepare.

413
0:50:30.880 --> 0:50:38.440
So these are, if you want to ask something, contribute whatever is on your mind around

414
0:50:38.440 --> 0:50:43.360
regi cbsd or whatever music maybe.

415
0:50:43.360 --> 0:50:50.040
These are my contacts and now is the right time to ask questions.

416
0:50:50.040 --> 0:50:54.600
Thank you.

417
0:50:54.600 --> 0:51:01.720
Oh, he's going to die.

418
0:51:01.720 --> 0:51:04.080
He's going to die.

419
0:51:04.080 --> 0:51:08.920
I have a question.

420
0:51:08.920 --> 0:51:20.520
You spoke about order and it's just that you put, for example, mysec for WordPress or there

421
0:51:20.520 --> 0:51:28.520
is also a mechanism that allows you like a readiness probe to check if the database is

422
0:51:28.520 --> 0:51:31.520
ready to serve.

423
0:51:31.520 --> 0:51:40.880
Okay, so the question was, if I understood correctly, if boot order can also check if

424
0:51:40.880 --> 0:51:44.880
the database is stored before it stores the WordPress?

425
0:51:44.880 --> 0:51:56.760
No, it cannot do that but it will at some point because the jail conf can have dependencies

426
0:51:56.760 --> 0:52:06.440
and at some point I'm really hoping to switch to dependencies instead of boot order because

427
0:52:06.440 --> 0:52:08.760
who likes boot order?

428
0:52:08.760 --> 0:52:13.560
If you have like 200 jails, who knows what stores when?

429
0:52:13.560 --> 0:52:20.840
But with dependencies it's much easier.

430
0:52:20.840 --> 0:52:21.840
Any more questions?

431
0:52:21.840 --> 0:52:42.920
Yes, mostly for cbsd but you can find one for the regi that depicts mostly how to initialize

432
0:52:42.920 --> 0:52:50.320
it and start the really dumb project that almost has nothing in it.

433
0:52:50.320 --> 0:53:04.080
Sorry, the question was, I didn't catch that second one.

434
0:53:04.080 --> 0:53:13.000
Yes, so the question was, are there any demos and they're on YouTube.

435
0:53:13.000 --> 0:53:23.480
Some of them are on Russian and some of them are on, it's called Askinema.

436
0:53:23.480 --> 0:53:32.200
So even from the demo you can copy paste the text and do it yourself or commands or whatever.

437
0:53:32.200 --> 0:53:37.320
Okay, anyone else?

438
0:53:37.320 --> 0:53:47.160
Okay, then I'm going to have to say goodbye with the famous words, no ducker, no cry.

439
0:53:47.160 --> 0:53:48.160
Thank you.

440
0:53:48.160 --> 0:54:08.000
Thank you.

