1
0:00:00.000 --> 0:00:15.760
So, the start. Oh yes, I put a who am I, so I'm Rodrigo Soryos, so I'm free BSD port

2
0:00:15.760 --> 0:00:29.080
committer since 2014. What else? So yes, what speak it provides? I don't know if how many

3
0:00:29.080 --> 0:00:40.800
of you knows package provides? A few ones, okay. So, sorry? Oh yes, so this part of,

4
0:00:40.800 --> 0:00:48.680
so as you know we have package, pkg, which is a free BSD command used to manage

5
0:00:48.680 --> 0:00:54.280
packages and the package was designed to be extended with plugins, so you can

6
0:00:54.280 --> 0:01:02.360
route your own plugins to run special commands, handle hooks, replace existing

7
0:01:02.360 --> 0:01:08.800
commands or access the package database just for statistics or have numbers or

8
0:01:08.800 --> 0:01:15.240
whatever. So package provide basically is a plugin you can use with packages. We

9
0:01:15.240 --> 0:01:24.200
extend package to do a special thing as matching a found the package for

10
0:01:24.200 --> 0:01:30.480
a specific file. Basically you have, you are looking for which package I need to

11
0:01:30.480 --> 0:01:38.440
install to have this file in my computer and usually is you start looking on the

12
0:01:38.440 --> 0:01:44.640
internet, you Google a little bit to know exactly what the package you need and

13
0:01:44.640 --> 0:01:50.920
because sometimes the packages doesn't provide the name of the files we have

14
0:01:50.920 --> 0:01:57.680
inside the command or so on. So basically it's a way to found, is a

15
0:01:57.680 --> 0:02:02.840
reverse way to find with package correspond to a specific file. It could

16
0:02:02.840 --> 0:02:12.000
be a library, an executable or just a header like a.h file. So this is an

17
0:02:12.000 --> 0:02:19.720
example, so you just type package provides and libmpg123.iso and give

18
0:02:19.720 --> 0:02:28.080
you the list of packages who provide this. Sorry for the contrast, it's not

19
0:02:28.080 --> 0:02:35.880
really good. So you have a for this lib you have two packages, we

20
0:02:35.880 --> 0:02:41.640
have the mpg123 which is probably the main project who provides the file but

21
0:02:41.640 --> 0:02:47.520
you see that zoom video conferencing also provide this library in another

22
0:02:47.520 --> 0:02:58.880
version probably for my own and basically it's a Linux compat library. So

23
0:02:58.880 --> 0:03:04.720
as you can guess package provide is a client so you have in your computer but

24
0:03:04.720 --> 0:03:12.720
it's also a database who contains the full list of files you can install if

25
0:03:12.720 --> 0:03:21.920
you install all the packages existing in FreeBSD and this is a lot for just one

26
0:03:21.920 --> 0:03:29.200
release and one architectures we have one nine million files installable so

27
0:03:29.200 --> 0:03:37.600
this is a huge database we have to build. So just I put here this is

28
0:03:37.600 --> 0:03:46.400
the numbers for the the latest version so the 13 and if you look at the

29
0:03:46.400 --> 0:03:52.040
different versions of FreeBSD and different architectures you see how many

30
0:03:52.040 --> 0:03:59.040
how many files are and basically this is based on the packages you can build on

31
0:03:59.040 --> 0:04:07.720
FreeBSD for this architecture and version. So you can probably see which are the

32
0:04:07.720 --> 0:04:13.680
the good architectures the architecture works and you have a lot of applications

33
0:04:13.680 --> 0:04:20.360
and those architectures you who are a little bit not really use or we are

34
0:04:20.360 --> 0:04:26.320
missing a lot of tools who doesn't be out for those architectures.

35
0:04:26.320 --> 0:04:34.240
You have the also the the new ones like the ARMv7 who appears suddenly and it has

36
0:04:34.240 --> 0:04:42.320
a big big number and you have the ARMv6 who is declining a little bit it's

37
0:04:42.320 --> 0:04:49.520
still still things still works but as the numbers shows it's it's not that

38
0:04:49.520 --> 0:05:02.880
that popular than ARMv7. So this is basically how everything works. I have

39
0:05:02.880 --> 0:05:11.600
here because I host the database server myself so I have the the package provide

40
0:05:11.600 --> 0:05:19.440
server here you have the clients who connects to upload the database and I

41
0:05:19.440 --> 0:05:27.400
use the package FreeBSD servers to sync and have the list of files because this

42
0:05:27.400 --> 0:05:34.240
is the best and most efficient way to have the full list of files in a minimum

43
0:05:34.240 --> 0:05:40.160
of time because of course you you can guess it's it's not always possible to

44
0:05:40.160 --> 0:05:48.680
build all the packages just to have the list. It's kind of a nightmare. So

45
0:05:48.680 --> 0:05:57.200
basically yes I put some some things about these three so I start it on 2017.

46
0:05:57.200 --> 0:06:05.240
I have multiple motivations the first one was to stop doing grip on ports when I'm

47
0:06:05.240 --> 0:06:11.880
looking for a file is nothing more terrible than you try to compile a new

48
0:06:11.880 --> 0:06:17.800
a new project and say oh I'm missing this something H file and you start

49
0:06:17.800 --> 0:06:25.640
draping around and it takes hours just to have the full list of dependencies so

50
0:06:25.640 --> 0:06:34.120
this this way you you you can found it easily and and have the exact number and

51
0:06:34.120 --> 0:06:40.400
also you can have a full list so you the of the of the the package is providing

52
0:06:40.400 --> 0:06:45.880
the same file so you can choose the right one who match for you usually it's

53
0:06:45.880 --> 0:06:52.920
not it's not the first one because some some some packages bring a lot of

54
0:06:52.920 --> 0:07:01.400
dependencies so you can choose the right one and my second motivation was to write

55
0:07:01.400 --> 0:07:08.520
a package plugin at this time package just was a new thing this we had this

56
0:07:08.520 --> 0:07:18.160
plugin feature and as much as I know probably the first plugin available for

57
0:07:18.160 --> 0:07:23.600
package and probably the one of the works who's still working I have really

58
0:07:23.600 --> 0:07:33.760
real users but yes so so yes package provide was introduced at the FOSDEM

59
0:07:33.760 --> 0:07:43.760
the one year late when you're after in 2018 and this is where the story start

60
0:07:43.760 --> 0:07:52.480
this is the daily connections of people who access the server to upload the

61
0:07:52.480 --> 0:08:00.760
database looks not that much but I consider a package provide like consider

62
0:08:00.760 --> 0:08:06.720
package provide developer tool so I don't expect regular people use it that

63
0:08:06.720 --> 0:08:16.280
much because it doesn't too much sense and and also we have only people access

64
0:08:16.280 --> 0:08:22.080
only when they perform our package update I don't upload the database every

65
0:08:22.080 --> 0:08:28.000
time so when you are doing an update we you have update is at this time the

66
0:08:28.000 --> 0:08:33.640
plugin looks if we have a new database so it don't it downloads it it's right to

67
0:08:33.640 --> 0:08:44.120
be oh so oh yes yes this is what happens when you host your own server from time

68
0:08:44.120 --> 0:08:52.720
to time you have a breakages and in this case was some kind of certificate issues

69
0:08:52.720 --> 0:09:00.040
the some some numbers new questions from where people come from and as you can

70
0:09:00.040 --> 0:09:08.480
see it's much a lot the free BSD developers based so you have people

71
0:09:08.480 --> 0:09:16.360
mostly USA Canada some people in South America mostly in Europe we have some

72
0:09:16.360 --> 0:09:21.240
people as yeah Australia and unfortunately we now have too much

73
0:09:21.240 --> 0:09:30.240
to be upon Africa who don't use people not like BSD there so if you take the

74
0:09:30.240 --> 0:09:37.200
numbers yes we have the big the big chunk of users are in United States and

75
0:09:37.200 --> 0:09:45.960
you have a Germany and France we are quite the same numbers and yes and after

76
0:09:45.960 --> 0:09:54.160
that you have a lot of countries around the world sometimes yes you have a what

77
0:09:54.160 --> 0:10:00.920
funny is we have a Russian Federation and Ukraine and both have the same number I

78
0:10:00.920 --> 0:10:08.000
have the same number of people coming from both countries so strange and from

79
0:10:08.000 --> 0:10:16.200
time to time you have some special guests so for a couple of months I have

80
0:10:16.200 --> 0:10:23.360
people from st. Kitties and Nevis and food if you don't know st. Kitties is a

81
0:10:23.360 --> 0:10:31.080
small island here just just close to Cuba and it's basically just a place to

82
0:10:31.080 --> 0:10:38.840
put money and register your companies when you have things to hide so okay we

83
0:10:38.840 --> 0:10:50.240
have developers there just yes a quick look about the database as I say the

84
0:10:50.240 --> 0:10:59.760
database so we have a at this time we have a 58 thousand of ports if you

85
0:10:59.760 --> 0:11:06.520
consider we have a three major releases and six architectures that brings you a

86
0:11:06.520 --> 0:11:13.640
lot of ports so as I say it's something you can build by your own because I

87
0:11:13.640 --> 0:11:21.880
don't have enough space or CPU also to obtain the list of files it's not

88
0:11:21.880 --> 0:11:28.040
possible to trust big G list because those files are not totally fully

89
0:11:28.040 --> 0:11:36.920
complete sometimes you have replacements we don't during the build and I can just

90
0:11:36.920 --> 0:11:43.680
download as is the packages because it needs time and space to download the

91
0:11:43.680 --> 0:11:50.640
full list of packages and also having impact on mirror performances so I found

92
0:11:50.640 --> 0:12:00.640
a simple way is I try to abuse the the package file format as you know packages

93
0:12:00.640 --> 0:12:09.480
are just archived who contains two two times the manifest of the package and

94
0:12:09.480 --> 0:12:15.280
the second manifest which is a full manifest has the list of files provide

95
0:12:15.280 --> 0:12:23.520
for the package then comes all the files and the thing is you can just use the

96
0:12:23.520 --> 0:12:33.440
head HTTP request to only download the first part of the package and let's say

97
0:12:33.440 --> 0:12:40.040
we took we can extract the manifest because it works and if the JSON file is

98
0:12:40.040 --> 0:12:46.200
valid you're wrong you're good if you if you have an error you just increase a

99
0:12:46.200 --> 0:12:52.120
little bit of size just remember it for the next time so this way you can just

100
0:12:52.120 --> 0:13:00.120
download the only the manifest part of the files and the good thing is the HTTP

101
0:13:00.120 --> 0:13:06.280
head is a totally standard method so we are not trying to abuse the HTTP server

102
0:13:06.280 --> 0:13:13.960
and we are not producing or breakages in connections we are saving people bandwidth

103
0:13:13.960 --> 0:13:21.000
because we are we are not we are not using the the package to mirror just for

104
0:13:21.000 --> 0:13:30.600
us and we save our also everybody's time yes so talking about the database

105
0:13:30.600 --> 0:13:40.240
itself at the beginning I designed it as a just a full text file just because it's

106
0:13:40.240 --> 0:13:46.960
easy to read and search but it I have I have this problem is was too large is

107
0:13:46.960 --> 0:13:53.920
was 36 megabytes even compress okay

108
0:13:53.920 --> 0:14:06.160
so in 2018 I do is busy con I talk with talking with mark SP about the thing he

109
0:14:06.160 --> 0:14:13.000
suggests me I can use to locate file format locate is a Unix standard tool

110
0:14:13.000 --> 0:14:19.920
who store all the is try to store all the files you have in your computer so

111
0:14:19.920 --> 0:14:27.800
it's easy to found a place and use a nagoreen called bigram to store the

112
0:14:27.800 --> 0:14:35.840
datas and this this file format is pretty efficient because if we once once

113
0:14:35.840 --> 0:14:44.240
generated and compressed it I reduced by two to not the size of the file so it's

114
0:14:44.240 --> 0:14:50.320
it's pretty convenient because instead of downloading for a couple of minutes

115
0:14:50.320 --> 0:14:55.800
the database we can have a just in one one minute and something we it's pretty

116
0:14:55.800 --> 0:15:03.840
similar with the package itself in time so the package provide usages as I saw

117
0:15:03.840 --> 0:15:10.760
yes I show you you can just perform reverse searches you're looking for a file

118
0:15:10.760 --> 0:15:18.680
give you the name of the package but you can also use it to identify unexpected

119
0:15:18.680 --> 0:15:25.480
files in the packages like core dams things happen sometimes people commit

120
0:15:25.480 --> 0:15:33.040
and then the commit comes with binary files or dams because of this happens

121
0:15:33.040 --> 0:15:40.320
and also you can use it to search for duplicate files when you have two

122
0:15:40.320 --> 0:15:47.040
packages installed the same file and conflicting for a long time I report this

123
0:15:47.040 --> 0:15:55.080
this information to to the developers and I try to track exactly how much

124
0:15:55.080 --> 0:16:02.840
conflict we have and someone decide or Stefan Stefan is a decides to start

125
0:16:02.840 --> 0:16:09.600
looking at it and use the database the database I provide to to search for

126
0:16:09.600 --> 0:16:17.280
file conflicts and try to fix it to to to avoid conflict during a package

127
0:16:17.280 --> 0:16:24.360
install because package the tool can handle conflicts but the handle the

128
0:16:24.360 --> 0:16:29.480
conflict the worst way it's a okay you have a conflict so or you can't install

129
0:16:29.480 --> 0:16:34.960
the new package or you have to remove the old one so there's no way to and

130
0:16:34.960 --> 0:16:40.680
sometimes you you have a and that there's a lot of funny things because you have a

131
0:16:40.680 --> 0:16:45.280
binaries who have to say exactly the same name doing completely different

132
0:16:45.280 --> 0:16:57.440
things sometimes is the game and the network manager and Wow so yes so oh yeah

133
0:16:57.440 --> 0:17:14.760
and I still having six minutes so if you have questions please yeah oh the

134
0:17:14.760 --> 0:17:27.200
options no I am what I take is the real files available in in package servers

135
0:17:27.200 --> 0:17:33.600
so is the real thing you have if you install a package it's not something I'm

136
0:17:33.600 --> 0:17:42.600
sorry the question was if I scan for options and the the answer is no I just

137
0:17:42.600 --> 0:17:50.080
try to track what's on the package servers and the real files installed if

138
0:17:50.080 --> 0:17:59.400
you install it's not it's not used the custom yeah if you have a custom package

139
0:17:59.400 --> 0:18:05.960
server it doesn't bring you the files you are installing yes it's just for

140
0:18:05.960 --> 0:18:19.920
standard instant free BSD packages the way we build it yeah oh the first

141
0:18:19.920 --> 0:18:26.520
okay how long is to how long is take to scan the packages and build the index

142
0:18:26.520 --> 0:18:36.200
allow so the first the first con it can take about I think is I so I didn't do

143
0:18:36.200 --> 0:18:42.480
for a long time but I think it's like half an hour 30 minutes something like

144
0:18:42.480 --> 0:18:50.480
that and once once I build it I can I can just update in a couple of seconds

145
0:18:50.480 --> 0:18:58.400
from one minute so it's that the good thing is if I consider because I we have

146
0:18:58.400 --> 0:19:06.120
a file a manifesto with all the packages on the version so I can see which package

147
0:19:06.120 --> 0:19:13.360
change so I'm cons I just look at the package who changed the version and

148
0:19:13.360 --> 0:19:19.880
based on that and just recovering the the manifesto it takes yes it takes a

149
0:19:19.880 --> 0:19:26.160
cup I think the maximum is like a five minutes for for for an architecture and

150
0:19:26.160 --> 0:19:40.600
the version oh yes do that I use the locate so it's the yes is the locate

151
0:19:40.600 --> 0:19:47.640
format so because because it's really it's really convenient for this kind of

152
0:19:47.640 --> 0:20:09.360
usage yes yes I storied that and yeah

153
0:20:09.360 --> 0:20:30.720
oh yes I I include because the the way big RAM works it take just a line and

154
0:20:30.720 --> 0:20:36.960
just to line is it is a path so it's considered a path and there's no extra

155
0:20:36.960 --> 0:20:42.720
data around so you can you can use so I just include the the the package name

156
0:20:42.720 --> 0:20:50.600
inside inside the path and use a special character yes also separator I think in

157
0:20:50.600 --> 0:20:56.760
this case I used the star character because I don't expect people to put it

158
0:20:56.760 --> 0:21:06.760
put a star in the package name yes absolutely and and I use

159
0:21:06.760 --> 0:21:13.560
I use a regular expression for search but the the result is quite

160
0:21:13.560 --> 0:21:26.800
acceptable in bytes compressed it's 17 exact compressed it's 70 megabytes yes

161
0:21:26.800 --> 0:21:32.640
around because it depends on which version you're looking at but it's

162
0:21:32.640 --> 0:21:49.240
basically yes it's around this this size yeah yes could be could be yeah oh sorry

163
0:21:49.240 --> 0:21:54.640
the question aha this was a trick just to see if I can repeat yes the question

164
0:21:54.640 --> 0:22:01.280
was was why not use a slash instead of star because a slash a slash made more

165
0:22:01.280 --> 0:22:25.280
sense probably yes so but I am yes we can we can probably oh good question no I

166
0:22:25.280 --> 0:22:32.440
just see happy people

