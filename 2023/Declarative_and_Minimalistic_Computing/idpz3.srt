1
0:00:00.000 --> 0:00:08.520
All right, good.

2
0:00:08.520 --> 0:00:13.540
So thank you for joining me this afternoon for this presentation.

3
0:00:13.540 --> 0:00:20.160
I'm a researcher at KU Leuven and I'll be talking about our work on reasoning engine

4
0:00:20.160 --> 0:00:21.160
for F-O.

5
0:00:21.160 --> 0:00:32.880
So this morning I connected to Chad GPT and I asked him, or it, I don't know what's the,

6
0:00:32.880 --> 0:00:36.240
I'm twice the age of my son who is 15 years younger than me.

7
0:00:36.240 --> 0:00:38.080
How old am I?

8
0:00:38.080 --> 0:00:43.200
And it started pretty well by saying that let's give it, let's give a variable a name

9
0:00:43.200 --> 0:00:45.760
and then let's write the formula.

10
0:00:45.760 --> 0:00:51.560
And then when he tried to solve the equation, somehow he got lost and he was not able to

11
0:00:51.560 --> 0:00:54.120
find the correct answer.

12
0:00:54.120 --> 0:01:00.800
And that shows that Chad GPT is very capable at understanding English, but not so much

13
0:01:00.800 --> 0:01:09.420
about reasoning, about, it does not have the cognitive skills to solve the equation.

14
0:01:09.420 --> 0:01:14.960
And so if we ever will be able to create a machine that can pass the Turing test, of

15
0:01:14.960 --> 0:01:19.560
course it needs to be able to handle natural language.

16
0:01:19.560 --> 0:01:25.920
But it also has to have the cognitive skills that we human have, like those listed here.

17
0:01:25.920 --> 0:01:30.640
It should be able to learn from others through symbolic communication.

18
0:01:30.640 --> 0:01:35.200
It should be able to apply knowledge in new ways to perform new tasks, like the capacity

19
0:01:35.200 --> 0:01:36.960
to solve an equation.

20
0:01:36.960 --> 0:01:41.640
That's a knowledge that you can apply in many different settings.

21
0:01:41.640 --> 0:01:47.240
And it should have other cognitive skills like the capability to ask relevant questions

22
0:01:47.240 --> 0:01:49.960
and to explain its reasoning.

23
0:01:49.960 --> 0:01:56.800
And all these type of skills, we try to implement them and the field of study at the university

24
0:01:56.800 --> 0:02:00.000
is called knowledge representation and reasoning.

25
0:02:00.000 --> 0:02:02.840
And that's what we are working on.

26
0:02:02.840 --> 0:02:09.800
Now one way to have a computer solve a riddle like on the edge that I gave earlier is to

27
0:02:09.800 --> 0:02:12.920
program the system, to program the computer.

28
0:02:12.920 --> 0:02:19.000
But there's a big difference between a statement in a program and a statement of knowledge.

29
0:02:19.000 --> 0:02:27.960
If for example I write in a program that F is equal to M multiplied by A, that's a statement

30
0:02:27.960 --> 0:02:28.960
in a procedure.

31
0:02:28.960 --> 0:02:34.440
You can compute F if you know M and A. But that's quite different from what you would

32
0:02:34.440 --> 0:02:42.040
see in the physics book where the second law of motion would really mean that given any

33
0:02:42.040 --> 0:02:46.280
two of those quantities, you can compute the third one.

34
0:02:46.280 --> 0:02:51.440
And so you can really reason in multiple directions, unlike in a procedural statement.

35
0:02:51.440 --> 0:02:55.920
So that's a big difference between a program and knowledge.

36
0:02:55.920 --> 0:03:00.560
And you might think that Prolog, because it's a so-called declarative language, does not

37
0:03:00.560 --> 0:03:01.560
have that problem.

38
0:03:01.560 --> 0:03:04.020
But in fact, it does.

39
0:03:04.020 --> 0:03:10.760
If you have a Prolog program like you can vote if you are more than 18, it can only

40
0:03:10.760 --> 0:03:15.560
compute vote from the fact that you are more than 18 or not.

41
0:03:15.560 --> 0:03:17.640
It cannot go the other way around.

42
0:03:17.640 --> 0:03:22.040
And that's quite unlike what you would write in the logic statement, that you can vote

43
0:03:22.040 --> 0:03:27.160
if and only if your age is larger than 18.

44
0:03:27.160 --> 0:03:32.520
And with that kind of statement, you should be able to infer your age or at least a minimum

45
0:03:32.520 --> 0:03:37.280
value of your age from your right to vote.

46
0:03:37.280 --> 0:03:39.180
So really, Prolog is a programming language.

47
0:03:39.180 --> 0:03:44.480
It's not a knowledge representation language.

48
0:03:44.480 --> 0:03:47.520
Now what is programming?

49
0:03:47.520 --> 0:03:53.160
It's actually the process of translating the knowledge that we have of a problem into a

50
0:03:53.160 --> 0:03:58.240
program that can then, given a problem, solve it.

51
0:03:58.240 --> 0:04:01.720
And then if you have another problem, you have to apply that knowledge and convert it

52
0:04:01.720 --> 0:04:04.680
into another program, possibly, to solve it.

53
0:04:04.680 --> 0:04:10.640
And so depending on what kind of information you get as input and what kind of information

54
0:04:10.640 --> 0:04:14.800
you want as output, you will have to write different programs.

55
0:04:14.800 --> 0:04:20.120
And sometimes these programs will be quite different, which is a pity because the knowledge

56
0:04:20.120 --> 0:04:22.080
that is implicit in the program is the same.

57
0:04:22.080 --> 0:04:29.080
So why do we have to write so many different programs?

58
0:04:29.080 --> 0:04:33.000
The industry of converting knowledge into a program is, of course, a big industry.

59
0:04:33.000 --> 0:04:34.560
It's the IT industry.

60
0:04:34.560 --> 0:04:37.760
That's what makes us live.

61
0:04:37.760 --> 0:04:40.960
But still, there's possibly a better way to do it.

62
0:04:40.960 --> 0:04:42.660
And that's what we are working on.

63
0:04:42.660 --> 0:04:51.040
If we can represent the knowledge into a knowledge base and then develop some generic inferences,

64
0:04:51.040 --> 0:04:57.400
depending on the type of problem that you have, then you don't have to rewrite your

65
0:04:57.400 --> 0:04:58.400
program every time.

66
0:04:58.400 --> 0:05:03.360
So you can use a generic inference, give it the knowledge base that you have, the input

67
0:05:03.360 --> 0:05:06.360
of your problem, and it will give you the answer.

68
0:05:06.360 --> 0:05:11.960
So for example, for the age riddle that I had in the beginning, the generic inference

69
0:05:11.960 --> 0:05:14.400
is what we call model search.

70
0:05:14.400 --> 0:05:18.000
So we search for a model of the equation.

71
0:05:18.000 --> 0:05:22.320
And that's a very generic skill that can be implemented once and then applied in many

72
0:05:22.320 --> 0:05:27.300
different ways.

73
0:05:27.300 --> 0:05:30.800
So what is knowledge then?

74
0:05:30.800 --> 0:05:32.480
Knowledge is a statement of knowledge.

75
0:05:32.480 --> 0:05:38.400
It's a statement that is true in all possible worlds, like, for example, the second law of

76
0:05:38.400 --> 0:05:39.400
motion.

77
0:05:39.400 --> 0:05:44.060
It's true in all possible worlds that you can imagine.

78
0:05:44.060 --> 0:05:48.320
You can also say that a statement of knowledge is true in all acceptable worlds.

79
0:05:48.320 --> 0:05:55.800
That's what the law says, like the regulations that say what is acceptable is a behavior.

80
0:05:55.800 --> 0:06:00.840
And a statement of knowledge can be about what you desire the world to be.

81
0:06:00.840 --> 0:06:02.880
So it's an expectation.

82
0:06:02.880 --> 0:06:07.000
Or it can be about a particular situation that you face.

83
0:06:07.000 --> 0:06:10.240
And all these are different propositional attitudes.

84
0:06:10.240 --> 0:06:14.240
If you are interested in philosophy, you can go and look at Wittgenstein and his book.

85
0:06:14.240 --> 0:06:20.220
But that's the idea behind this.

86
0:06:20.220 --> 0:06:25.440
And so we have been thinking about what would be a good knowledge representation language.

87
0:06:25.440 --> 0:06:28.200
What could be its good attributes?

88
0:06:28.200 --> 0:06:34.600
And it should be, it should use symbols that have very simple semantics, like the age of

89
0:06:34.600 --> 0:06:43.480
a person, like very simple predicates and functions.

90
0:06:43.480 --> 0:06:46.360
It should have statements that are close to natural language.

91
0:06:46.360 --> 0:06:51.080
So it should be very easy to express a statement in natural language into a statement in knowledge

92
0:06:51.080 --> 0:06:53.040
representation and vice versa.

93
0:06:53.040 --> 0:06:57.160
When you have a representation of knowledge, you should be able to read it very easily

94
0:06:57.160 --> 0:07:00.040
into a natural language.

95
0:07:00.040 --> 0:07:01.280
And it should be expressive.

96
0:07:01.280 --> 0:07:06.760
It should be able to express complex forms of knowledge.

97
0:07:06.760 --> 0:07:14.440
So first order logic is a nice candidate for expressing knowledge.

98
0:07:14.440 --> 0:07:20.880
That's why it's one of the basic language to express scientific knowledge, for example.

99
0:07:20.880 --> 0:07:25.840
And we do use it in school for a good purpose.

100
0:07:25.840 --> 0:07:30.920
It has indeed some symbols with simple semantics.

101
0:07:30.920 --> 0:07:33.440
The statements are close to natural language.

102
0:07:33.440 --> 0:07:37.920
But still it is not as expressive as we would like it to be.

103
0:07:37.920 --> 0:07:42.080
So it has construct-like quantification.

104
0:07:42.080 --> 0:07:47.540
You can say for every x something is true, or there is an x such that something is true.

105
0:07:47.540 --> 0:07:49.560
But it doesn't have aggregates.

106
0:07:49.560 --> 0:07:55.360
It doesn't have inductive definitions, which are complex ways of explaining how you would

107
0:07:55.360 --> 0:08:00.960
compute the value of some element.

108
0:08:00.960 --> 0:08:09.880
And so we introduce a language called FO dot, the dot being representing a list of extensions.

109
0:08:09.880 --> 0:08:18.320
And so it's first order logic extended with types, or so-called sorts in the literature,

110
0:08:18.320 --> 0:08:24.920
with definitions or inductive definitions, with arithmetic so that you can do some computations.

111
0:08:24.920 --> 0:08:30.200
It's still this point limited to linear arithmetic, so you cannot do transcendental functions

112
0:08:30.200 --> 0:08:33.920
like sine and cosine.

113
0:08:33.920 --> 0:08:41.160
It supports aggregates like counting the cardinality of elements that satisfy some conditions,

114
0:08:41.160 --> 0:08:44.920
as well as the minimal or maximum, et cetera.

115
0:08:44.920 --> 0:08:48.560
And it has some more advanced functions like dealing with partial functions, functions

116
0:08:48.560 --> 0:08:54.760
that are undefined for some values of their arguments and intentional objects.

117
0:08:54.760 --> 0:08:59.320
You can look at the documentation if you want to have more details.

118
0:08:59.320 --> 0:09:03.560
Maybe I can give you some examples of statements.

119
0:09:03.560 --> 0:09:09.800
The first one would be for regulation about COVID.

120
0:09:09.800 --> 0:09:12.280
And you could read it like this.

121
0:09:12.280 --> 0:09:19.040
So if you want to do an activity of outdoor sports, then you have to finish it before

122
0:09:19.040 --> 0:09:22.520
8 PM in the evening.

123
0:09:22.520 --> 0:09:26.640
And then either you have a mask or you have a COVID safe ticket.

124
0:09:26.640 --> 0:09:37.360
So the hat is the logic symbol for and, and the v is the logic symbol for or.

125
0:09:37.360 --> 0:09:42.960
The second statement would be like for an organization of an event like this one or

126
0:09:42.960 --> 0:09:46.160
for a course, planning of a course.

127
0:09:46.160 --> 0:09:53.640
For every course provided by the university, the number of students that attend the course

128
0:09:53.640 --> 0:09:57.800
should be less than the capacity of the room of the course.

129
0:09:57.800 --> 0:10:02.960
That's really a very simple statement that can then be used for the search of a correct

130
0:10:02.960 --> 0:10:06.240
planning.

131
0:10:06.240 --> 0:10:14.600
The bottom example is an example of a definition where you have rules that can be applied.

132
0:10:14.600 --> 0:10:20.360
And the first, so it looks a little bit like a prologue, prologue statements that can then

133
0:10:20.360 --> 0:10:27.280
be used to come to define the tax rate of for, for, for, for, for selling a house, for

134
0:10:27.280 --> 0:10:29.840
example.

135
0:10:29.840 --> 0:10:37.280
And so at KU11 we have developed, we are developing these technologies, I mentioned Efodot, which

136
0:10:37.280 --> 0:10:40.240
is one of the two knowledge representation language.

137
0:10:40.240 --> 0:10:42.000
This is the more powerful one.

138
0:10:42.000 --> 0:10:48.840
CDMN is a table like way to, to introduce decision tables.

139
0:10:48.840 --> 0:10:54.400
And it can be used by business, by business analysts, I would say in a, and it's a little

140
0:10:54.400 --> 0:10:57.480
bit simpler than Efodot.

141
0:10:57.480 --> 0:11:03.320
And IDPZ3 is your reasoning engine that can use that knowledge base as well as some input

142
0:11:03.320 --> 0:11:08.160
to compute, to, to, to perform some reasoning tasks.

143
0:11:08.160 --> 0:11:12.740
And on top of that we have developed the IC, the interactive consultant as we call it.

144
0:11:12.740 --> 0:11:19.840
So it's a little bit like a machine that can pass a Turing test, but without the knowledge,

145
0:11:19.840 --> 0:11:24.920
the natural language capabilities, but it can reason like a Turing test machine would,

146
0:11:24.920 --> 0:11:27.960
would need to do.

147
0:11:27.960 --> 0:11:33.600
And these parts are really generic, so once it is developed, then it can be reused very,

148
0:11:33.600 --> 0:11:36.760
very easily.

149
0:11:36.760 --> 0:11:41.600
So the IDPZ3 is the reasoning engine that has these capabilities.

150
0:11:41.600 --> 0:11:46.960
It can ask questions like, is it possible according to the knowledge base of the possible

151
0:11:46.960 --> 0:11:49.480
words that we give him?

152
0:11:49.480 --> 0:11:51.320
That's called model checking.

153
0:11:51.320 --> 0:11:57.840
It can ask, you can ask him what would be a possible word, again according to the knowledge,

154
0:11:57.840 --> 0:11:59.520
the knowledge base.

155
0:11:59.520 --> 0:12:03.520
That's model generation or model search, model expansion.

156
0:12:03.520 --> 0:12:04.640
What is relevant?

157
0:12:04.640 --> 0:12:11.400
What would it, what should I get for information to, to, to be able to construct a model of

158
0:12:11.400 --> 0:12:17.280
the, of the, of the, of the knowledge base?

159
0:12:17.280 --> 0:12:22.520
What are the consequences of some partial information that I have about a situation?

160
0:12:22.520 --> 0:12:25.560
I have some information about the situation that I face.

161
0:12:25.560 --> 0:12:28.080
What are the consequences of that?

162
0:12:28.080 --> 0:12:33.560
It can then give you some explanations about those consequences, why this is a consequence.

163
0:12:33.560 --> 0:12:40.960
So it can explain its own reasoning and it can also do some kind of optimization.

164
0:12:40.960 --> 0:12:46.280
Again you can look at the website to have some more information there.

165
0:12:46.280 --> 0:12:50.000
So the reasoning engine is hosted in a Python program.

166
0:12:50.000 --> 0:12:56.880
So it's a Python program that will tell which inference to, to, to, to perform.

167
0:12:56.880 --> 0:13:04.220
And so it's easily downloadable from the, the Python package index.

168
0:13:04.220 --> 0:13:08.360
And so let me talk about the interactive consultants.

169
0:13:08.360 --> 0:13:14.480
Let's say that you have some challenge to engineer a design that meets some customer

170
0:13:14.480 --> 0:13:15.480
requirements.

171
0:13:15.480 --> 0:13:23.960
Well, to address that challenge, we develop an overclass of applets that can perform various

172
0:13:23.960 --> 0:13:31.760
forms of reasoning in, in the domain of expertise and that will help the engineer find proper

173
0:13:31.760 --> 0:13:33.440
design.

174
0:13:33.440 --> 0:13:36.200
So how does that work?

175
0:13:36.200 --> 0:13:42.160
So you have the requirements that come from, from the outside, from the environment, from,

176
0:13:42.160 --> 0:13:43.560
from, from the customer.

177
0:13:43.560 --> 0:13:45.520
So you have a set of requirements.

178
0:13:45.520 --> 0:13:51.520
The engineer will then interact with the application to enter the requirements that he knows, as

179
0:13:51.520 --> 0:13:57.940
well as some tentative decisions that he thinks would be proper design.

180
0:13:57.940 --> 0:14:02.520
And then in return, the system will ask him some additional question.

181
0:14:02.520 --> 0:14:08.360
Well, really you, you should know exactly what is the property of this material or what

182
0:14:08.360 --> 0:14:11.900
is the expected operating temperature of the, of the system.

183
0:14:11.900 --> 0:14:16.040
So it's, it's starting to have a conversation with the engineer.

184
0:14:16.040 --> 0:14:20.440
It will tell him what are the prerequisites of his tentative decisions.

185
0:14:20.440 --> 0:14:22.640
So if he says, oh, I'd like to use steel.

186
0:14:22.640 --> 0:14:27.160
Well, the system says, okay, but then you need to have, I don't know, some kind of pressure

187
0:14:27.160 --> 0:14:31.920
that is not higher than, than something else, whatever.

188
0:14:31.920 --> 0:14:35.840
It will tell him the consequences of his, of his decisions.

189
0:14:35.840 --> 0:14:41.080
It will be able to give some explanations and then some do some optimization of the

190
0:14:41.080 --> 0:14:42.080
design.

191
0:14:42.080 --> 0:14:48.680
So it's really a consultant that will help the engineer come to a solution and all that

192
0:14:48.680 --> 0:14:54.520
with some proprietary expertise of the domain of, of, of interest that will be used to do

193
0:14:54.520 --> 0:14:57.680
the, the reasoning.

194
0:14:57.680 --> 0:14:59.480
If I have time, I'll give you a quick demo.

195
0:14:59.480 --> 0:15:03.920
Maybe I'll go through the slides first.

196
0:15:03.920 --> 0:15:08.200
So we are developing that in partnership with some industrial partners.

197
0:15:08.200 --> 0:15:12.480
It is a big multinational that prefers to keep private.

198
0:15:12.480 --> 0:15:13.640
I have five minutes left.

199
0:15:13.640 --> 0:15:14.640
Thank you.

200
0:15:14.640 --> 0:15:20.680
But we are also working with Siemens with Flanders make, which is a research lab for

201
0:15:20.680 --> 0:15:24.480
the industry in, in, in Flanders.

202
0:15:24.480 --> 0:15:30.680
IntelliSelect in the, the banking sector and some with notaries.

203
0:15:30.680 --> 0:15:37.000
And the idea is to reduce the decision time of, of some experts.

204
0:15:37.000 --> 0:15:44.480
For example, in the Flanders make, it was to reduce the time to select a glue, to glue

205
0:15:44.480 --> 0:15:46.880
two materials together.

206
0:15:46.880 --> 0:15:52.040
And typically they had to go through data sheets and to find the proper glue.

207
0:15:52.040 --> 0:15:54.980
And with the tool they cannot do it in less than five minutes.

208
0:15:54.980 --> 0:16:01.400
And with a development code that was quite, quite low.

209
0:16:01.400 --> 0:16:09.000
This is an example with a big multinational company that had to design custom industrial

210
0:16:09.000 --> 0:16:10.160
components.

211
0:16:10.160 --> 0:16:15.680
The expertise of doing that was in the heads of the experienced engineers.

212
0:16:15.680 --> 0:16:17.960
But they wanted to empower the younger engineers.

213
0:16:17.960 --> 0:16:22.760
And so we formalized the knowledge of the experts into the system.

214
0:16:22.760 --> 0:16:26.400
And then with the interactive consultant, the younger engineers can play around with

215
0:16:26.400 --> 0:16:32.240
the different options and find a proper design that is right the first time.

216
0:16:32.240 --> 0:16:37.240
And the fact of formalizing the knowledge in, in the system really makes that knowledge

217
0:16:37.240 --> 0:16:42.080
an asset of the company that can then be managed as an other asset.

218
0:16:42.080 --> 0:16:46.920
And the organization becomes a learning organization.

219
0:16:46.920 --> 0:16:49.080
So why do we do this now?

220
0:16:49.080 --> 0:16:52.240
Why, why is it possible now and not before?

221
0:16:52.240 --> 0:16:58.360
That's because there are new solvers that are capable of making those type of reasoning.

222
0:16:58.360 --> 0:17:03.040
There, it's, it's a big progress in the artificial intelligence world.

223
0:17:03.040 --> 0:17:06.760
But it's a little bit less well known than, than neural networks and so on.

224
0:17:06.760 --> 0:17:09.600
But it is quite, quite a nice progress.

225
0:17:09.600 --> 0:17:13.920
And we try to put that into, into practice.

226
0:17:13.920 --> 0:17:17.800
And also we are getting a new understanding of what is knowledge and how to use it.

227
0:17:17.800 --> 0:17:23.400
And that's why this is, this is an interesting area.

228
0:17:23.400 --> 0:17:27.960
Let me go back to to the demo.

229
0:17:27.960 --> 0:17:30.240
So you can go to the IDPZ3.

230
0:17:30.240 --> 0:17:35.000
Ooh, I don't have internet.

231
0:17:35.000 --> 0:17:37.000
I did have it before.

232
0:17:37.000 --> 0:17:40.720
This is a bit flaky.

233
0:17:40.720 --> 0:17:42.040
Yeah, sorry about that.

234
0:17:42.040 --> 0:17:43.880
So I won't be able to show it.

235
0:17:43.880 --> 0:17:45.680
But that's, that's the end of my presentation.

236
0:17:45.680 --> 0:17:49.000
If there are any questions, I'll be happy to answer.

237
0:17:49.000 --> 0:17:50.000
Thank you.

238
0:17:50.000 --> 0:17:51.000
Yes?

239
0:17:51.000 --> 0:18:05.560
Can you explain how this, how you approach differentiates from the classical expert systems?

240
0:18:05.560 --> 0:18:09.720
Like what's the next step?

241
0:18:09.720 --> 0:18:14.440
So yeah, the question is how is this, if I understand well, how is this different from

242
0:18:14.440 --> 0:18:15.560
expert systems, right?

243
0:18:15.560 --> 0:18:19.760
Because expert systems were quite popular back in the 80s and 90s.

244
0:18:19.760 --> 0:18:21.760
And this looks very much the same.

245
0:18:21.760 --> 0:18:24.960
But the thing is that expert systems were very much like prologue.

246
0:18:24.960 --> 0:18:28.560
And so they could make inferences in one direction.

247
0:18:28.560 --> 0:18:32.080
But they could not reason with, with any other direction.

248
0:18:32.080 --> 0:18:35.480
So it could not reason with partial information, for example.

249
0:18:35.480 --> 0:18:40.160
While here, even with partial information, it's capable of doing some, some, some, to,

250
0:18:40.160 --> 0:18:43.160
to come up with, with some conclusions.

251
0:18:43.160 --> 0:18:48.400
So it's very different from, from programming from, from knowledge.

252
0:18:48.400 --> 0:18:49.400
Yeah?

253
0:18:49.400 --> 0:18:50.400
Yeah?

254
0:18:50.400 --> 0:18:58.400
So in the use case you presented, you said that you took expert note, how can you formalize

255
0:18:58.400 --> 0:19:02.360
it in order to be used by the reasoning engine?

256
0:19:02.360 --> 0:19:06.960
And the representation of the data is FO dot.

257
0:19:06.960 --> 0:19:09.960
Yes, if the representation of the knowledge is in FO dot, yes?

258
0:19:09.960 --> 0:19:15.600
Okay, how, what's the process of transferring the data or, we're just discussing with the

259
0:19:15.600 --> 0:19:16.600
experts?

260
0:19:16.600 --> 0:19:17.600
Right, yeah.

261
0:19:17.600 --> 0:19:21.440
So for the moment it's done by a knowledge engineer, as we call it, who talks with the

262
0:19:21.440 --> 0:19:25.080
experts and who looks in the data sheets and then that formalize it.

263
0:19:25.080 --> 0:19:28.120
It's like a programmer if you want, but for knowledge.

264
0:19:28.120 --> 0:19:32.160
So it has to, to, to formalize the knowledge into the, the, the formal language.

265
0:19:32.160 --> 0:19:34.160
Okay, and one more follow up.

266
0:19:34.160 --> 0:19:39.360
So the data representation is something like a decision tree or something?

267
0:19:39.360 --> 0:19:43.120
The, the representation is what I showed earlier.

268
0:19:43.120 --> 0:19:55.760
These are statements in logic like the one I showed, like this, these ones here.

269
0:19:55.760 --> 0:20:02.360
Let's, let's not show.

270
0:20:02.360 --> 0:20:06.800
So it would be statements like these that look very much like statement in English,

271
0:20:06.800 --> 0:20:09.560
but they would use some kind of formula.

272
0:20:09.560 --> 0:20:11.880
So the knowledge base is really just a text file.

273
0:20:11.880 --> 0:20:12.880
Okay.

274
0:20:12.880 --> 0:20:13.880
Stephen?

275
0:20:13.880 --> 0:20:14.880
Yeah, maybe one more.

276
0:20:14.880 --> 0:20:15.880
You didn't mention humor.

277
0:20:15.880 --> 0:20:16.880
You mentioned humor, but you said examples.

278
0:20:16.880 --> 0:20:24.880
Yes, it's not capable of that yet, but we are working on it.

279
0:20:24.880 --> 0:20:26.880
All right.

280
0:20:26.880 --> 0:20:30.440
All right, yeah.

281
0:20:30.440 --> 0:20:31.440
One more, yeah.

282
0:20:31.440 --> 0:20:38.800
To work with this.

283
0:20:38.800 --> 0:20:39.800
Yeah.

284
0:20:39.800 --> 0:20:41.480
It was some, some work.

285
0:20:41.480 --> 0:20:42.480
Yes.

286
0:20:42.480 --> 0:20:47.080
So the question is we, we use it as a back end for the reasoning engine.

287
0:20:47.080 --> 0:20:52.840
How much work did it require to build the reasoning engine engine that we have?

288
0:20:52.840 --> 0:20:54.840
Of course, it feels already quite capable.

289
0:20:54.840 --> 0:20:56.920
So it's very, very useful.

290
0:20:56.920 --> 0:21:00.640
But on top of that, we have new language constructs like aggregates.

291
0:21:00.640 --> 0:21:03.960
Z3 does not have, natively.

292
0:21:03.960 --> 0:21:09.120
And we have also some additional inference reasoning capabilities on top of it, like

293
0:21:09.120 --> 0:21:13.720
the term determination of what is the whole event question in a particular case.

294
0:21:13.720 --> 0:21:14.720
So yeah.

295
0:21:14.720 --> 0:21:15.720
Could you speak a bit lower?

296
0:21:15.720 --> 0:21:16.720
I don't hear because of the.

297
0:21:16.720 --> 0:21:29.840
Is the system capable of recognizing or even pointing out incoherent points in a specification?

298
0:21:29.840 --> 0:21:30.840
Yes, indeed.

299
0:21:30.840 --> 0:21:33.360
For example, if the senior engineers disagree or if.

300
0:21:33.360 --> 0:21:34.360
Right, yeah.

301
0:21:34.360 --> 0:21:35.360
Yeah.

302
0:21:35.360 --> 0:21:39.600
So the question is what happens is the knowledge base of conflicting statements in it, because

303
0:21:39.600 --> 0:21:43.400
then it cannot reason correctly.

304
0:21:43.400 --> 0:21:49.800
And actually we have an inference that will try to extract the minimum set of instances,

305
0:21:49.800 --> 0:21:55.560
of statements in it that will make the, that makes the, the, the knowledge base inconsistent.

306
0:21:55.560 --> 0:22:01.360
And then from that inconsistent set of statements, we can try, the knowledge engineer can try

307
0:22:01.360 --> 0:22:02.360
to resolve it.

308
0:22:02.360 --> 0:22:04.880
Has that been used in practice?

309
0:22:04.880 --> 0:22:05.880
It is used, yes indeed.

310
0:22:05.880 --> 0:22:09.440
Or has that helped in the specific case?

311
0:22:09.440 --> 0:22:12.120
In that specific case, I don't remember exactly.

312
0:22:12.120 --> 0:22:14.120
I couldn't say, but it could be.

313
0:22:14.120 --> 0:22:15.120
I don't know if.

314
0:22:15.120 --> 0:22:16.120
Can you speak in the room?

315
0:22:16.120 --> 0:22:17.120
Yeah.

316
0:22:17.120 --> 0:22:18.120
Yeah, you should come in.

317
0:22:18.120 --> 0:22:19.120
No, no, come.

318
0:22:19.120 --> 0:22:30.280
There's still one question if you could stay quiet, please.

319
0:22:30.280 --> 0:22:31.280
Yeah.

320
0:22:31.280 --> 0:22:59.880
Yeah, so the question is whether this could have

321
0:22:59.880 --> 0:23:06.420
more applications in the medical field, where you have some, need to reason with some probabilities,

322
0:23:06.420 --> 0:23:12.640
if there's this set of symptoms, there's a probability of such that, that this could

323
0:23:12.640 --> 0:23:13.640
happen.

324
0:23:13.640 --> 0:23:16.760
At this point we are not focusing on this type of reasoning with probabilities.

325
0:23:16.760 --> 0:23:23.000
There's another group at KU11 that has developed the logic called prob, log, probabilistic

326
0:23:23.000 --> 0:23:30.040
logic which is an evolution of prolog which goes in that direction, but this one does

327
0:23:30.040 --> 0:23:31.040
not do it.

328
0:23:31.040 --> 0:23:32.180
All right, thank you very much.

329
0:23:32.180 --> 0:23:57.520
3

