1
0:00:00.000 --> 0:00:01.000
We're all good.

2
0:00:01.000 --> 0:00:02.000
Sorry.

3
0:00:02.000 --> 0:00:03.000
Yeah, I remember.

4
0:00:03.000 --> 0:00:04.000
Hit the button when you're ready.

5
0:00:04.000 --> 0:00:05.000
Yeah.

6
0:00:05.000 --> 0:00:06.000
And help yourself to water as well.

7
0:00:06.000 --> 0:00:07.000
Yeah, sure.

8
0:00:07.000 --> 0:00:08.000
Check, check, check.

9
0:00:08.000 --> 0:00:09.000
All right, all right, all right.

10
0:00:09.000 --> 0:00:10.000
Hello, everyone.

11
0:00:10.000 --> 0:00:15.000
First time actually I'm talking about this project on a conference.

12
0:00:15.000 --> 0:00:18.000
So, FOSDAM here is it first.

13
0:00:18.000 --> 0:00:21.000
The images are generated with Mid-Journey.

14
0:00:21.000 --> 0:00:32.000
So I'm going to talk about this self-hosting for non-crowders.

15
0:00:32.000 --> 0:00:38.000
Somewhat of a click-by title, but we'll get there.

16
0:00:38.000 --> 0:00:40.000
I have a question for you all.

17
0:00:40.000 --> 0:00:41.000
Did anyone try?

18
0:00:41.000 --> 0:00:45.000
Raise your hand if you tried hosting Mastodon on your own.

19
0:00:45.000 --> 0:00:47.000
A Mastodon server.

20
0:00:47.000 --> 0:00:49.000
All right, all right.

21
0:00:49.000 --> 0:00:50.000
We have a couple of hands.

22
0:00:50.000 --> 0:00:53.000
Now, keep your hand up.

23
0:00:53.000 --> 0:01:03.000
Only lower your hand if you think the process was easy or simple or enjoyable.

24
0:01:03.000 --> 0:01:04.000
Okay.

25
0:01:04.000 --> 0:01:07.000
All right.

26
0:01:07.000 --> 0:01:15.000
So, this is the Mastodon docs on how to host it.

27
0:01:15.000 --> 0:01:16.000
This is just one page.

28
0:01:16.000 --> 0:01:19.000
This is actually not even the hosting part.

29
0:01:19.000 --> 0:01:22.000
This is just preparing the machine.

30
0:01:22.000 --> 0:01:27.000
So, out of this room here, I guess three or four people tried that,

31
0:01:27.000 --> 0:01:32.000
and I can understand them.

32
0:01:32.000 --> 0:01:34.000
It's not easy.

33
0:01:34.000 --> 0:01:37.000
And this doesn't just apply to Mastodon.

34
0:01:37.000 --> 0:01:41.000
It applies to many apps, actually, that you would want to self-host,

35
0:01:41.000 --> 0:01:47.000
many open source apps, because apps are getting complex.

36
0:01:47.000 --> 0:01:49.000
Does this not work?

37
0:01:49.000 --> 0:01:51.000
Yeah, you're working for the sex.

38
0:01:51.000 --> 0:01:52.000
I'm sorry.

39
0:01:52.000 --> 0:01:53.000
The other one is much better.

40
0:01:53.000 --> 0:01:54.000
Oh, really?

41
0:01:54.000 --> 0:01:55.000
Should that try it?

42
0:01:55.000 --> 0:01:58.000
Will there be...

43
0:01:58.000 --> 0:01:59.000
Thank you.

44
0:01:59.000 --> 0:02:00.000
Does this work better?

45
0:02:00.000 --> 0:02:02.000
Yes, it works better.

46
0:02:02.000 --> 0:02:04.000
Okay, all right.

47
0:02:04.000 --> 0:02:07.000
So, yeah, so you saw the huge instruction.

48
0:02:07.000 --> 0:02:10.000
You know, what we want is everyone to be able to host Mastodon,

49
0:02:10.000 --> 0:02:12.000
because that's kind of the point of Mastodon, right?

50
0:02:12.000 --> 0:02:15.000
It's decentralized.

51
0:02:15.000 --> 0:02:20.000
There's Docker out there that many, many projects use to simplify

52
0:02:20.000 --> 0:02:24.000
this process of hosting something.

53
0:02:24.000 --> 0:02:29.000
Maybe we could host Mastodon with Docker.

54
0:02:29.000 --> 0:02:32.000
So this would be the Docker setup.

55
0:02:32.000 --> 0:02:36.000
I guess it doesn't look that much easier.

56
0:02:36.000 --> 0:02:39.000
And I mean, imagine...

57
0:02:39.000 --> 0:02:42.000
I assume that most of us here are technical people,

58
0:02:42.000 --> 0:02:45.000
but imagine if you don't know how to use a command line.

59
0:02:45.000 --> 0:02:47.000
That would just be impossible.

60
0:02:47.000 --> 0:02:48.000
You can forget about it.

61
0:02:48.000 --> 0:02:53.000
You would use someone else's Mastodon server.

62
0:02:53.000 --> 0:02:56.000
So what if I tell you there is a way, actually,

63
0:02:56.000 --> 0:02:59.000
for people who don't even know how to use a command line

64
0:02:59.000 --> 0:03:03.000
to spin up a Mastodon instance?

65
0:03:03.000 --> 0:03:05.000
And this is how it would look like.

66
0:03:05.000 --> 0:03:07.000
This GIF is a bit sped up,

67
0:03:07.000 --> 0:03:11.000
but it actually is close to the normal speed.

68
0:03:11.000 --> 0:03:15.000
What's happening here is I'm entering a couple config values.

69
0:03:15.000 --> 0:03:19.000
The Mastodon is deployed on my machine anywhere I want,

70
0:03:19.000 --> 0:03:21.000
where I have this garden set.

71
0:03:21.000 --> 0:03:23.000
Mastodon is deployed.

72
0:03:23.000 --> 0:03:25.000
Streaming service is deployed.

73
0:03:25.000 --> 0:03:26.000
Configured.

74
0:03:26.000 --> 0:03:27.000
Sitekick service is deployed.

75
0:03:27.000 --> 0:03:28.000
Configured.

76
0:03:28.000 --> 0:03:30.000
Postgres database is deployed.

77
0:03:30.000 --> 0:03:31.000
Configured.

78
0:03:31.000 --> 0:03:33.000
Redis service is deployed.

79
0:03:33.000 --> 0:03:35.000
Configured.

80
0:03:35.000 --> 0:03:39.000
As you see, Mastodon has a lot of services.

81
0:03:39.000 --> 0:03:41.000
And we're done.

82
0:03:41.000 --> 0:03:44.000
We have a Mastodon instance now.

83
0:03:44.000 --> 0:03:45.000
This would be the...

84
0:03:45.000 --> 0:03:47.000
It's actually open on the Internet.

85
0:03:47.000 --> 0:03:51.000
I host a couple of those myself with this method.

86
0:03:51.000 --> 0:03:57.000
And this would be the URL that I end up having.

87
0:03:57.000 --> 0:04:00.000
And of course, you can have it on your own domain.

88
0:04:00.000 --> 0:04:04.000
If you own a domain, you would have it in Mastodon,

89
0:04:04.000 --> 0:04:05.000
let's say, on your domain.

90
0:04:05.000 --> 0:04:10.000
So the process, without regard to me speeding out the GIF,

91
0:04:10.000 --> 0:04:12.000
took one minute and 44 seconds.

92
0:04:12.000 --> 0:04:14.000
I counted.

93
0:04:14.000 --> 0:04:17.000
And you can do this locally on your own machine.

94
0:04:17.000 --> 0:04:21.000
If you want, you can do this in the cloud.

95
0:04:21.000 --> 0:04:26.000
If you do this in the cloud, that would be even a bit easier,

96
0:04:26.000 --> 0:04:27.000
but we'll talk about it.

97
0:04:27.000 --> 0:04:29.000
So this is called Gardens.

98
0:04:29.000 --> 0:04:30.000
It's an app.

99
0:04:30.000 --> 0:04:33.000
It's a platform that I'm making.

100
0:04:33.000 --> 0:04:36.000
It's open source under AGPL.3.

101
0:04:36.000 --> 0:04:40.000
And it's not the only one.

102
0:04:40.000 --> 0:04:43.000
Not the only self-hosting platform out there

103
0:04:43.000 --> 0:04:46.000
that really simplifies deployments.

104
0:04:46.000 --> 0:04:49.000
Actually, this project is based on another one called CapRower.

105
0:04:49.000 --> 0:04:52.000
I don't know if anyone in the room knows it.

106
0:04:52.000 --> 0:04:53.000
Okay.

107
0:04:53.000 --> 0:04:55.000
It has 100 million plus Docker pools.

108
0:04:55.000 --> 0:04:57.000
So a very established project.

109
0:04:57.000 --> 0:05:00.000
It's out there for many years already.

110
0:05:00.000 --> 0:05:04.000
It was called Captain Duck Duck previously.

111
0:05:04.000 --> 0:05:07.000
But CapRower was meant for hobbyists

112
0:05:07.000 --> 0:05:09.000
and kind of for testing.

113
0:05:09.000 --> 0:05:13.000
Our aim with Gardens is to bring it more to the organizations.

114
0:05:13.000 --> 0:05:16.000
So get it to a level where it's actually the stuff that you deploy,

115
0:05:16.000 --> 0:05:18.000
like Mastodon or anything,

116
0:05:18.000 --> 0:05:23.000
is you can use it instead of a SaaS service, for example,

117
0:05:23.000 --> 0:05:25.000
in an organizational setting.

118
0:05:25.000 --> 0:05:29.000
So the technical part of this is roughly this.

119
0:05:29.000 --> 0:05:32.000
It's a web app.

120
0:05:32.000 --> 0:05:35.000
The web app, actually, you deploy on your own server.

121
0:05:35.000 --> 0:05:38.000
So even the web app is on your own server.

122
0:05:38.000 --> 0:05:41.000
We have a website for non-technical people

123
0:05:41.000 --> 0:05:43.000
where they can connect their cloud account

124
0:05:43.000 --> 0:05:45.000
to deploy to their server.

125
0:05:45.000 --> 0:05:50.000
But after they do that, everything else happens on their machine.

126
0:05:50.000 --> 0:05:53.000
This web app talks to Docker API.

127
0:05:53.000 --> 0:05:57.000
It uses Docker Compose, which actually you cannot use via API.

128
0:05:57.000 --> 0:06:03.000
So there is some processing there to deploy containers for these apps.

129
0:06:03.000 --> 0:06:05.000
So, for example, like I was showing,

130
0:06:05.000 --> 0:06:07.000
these various services that Mastodon spins up,

131
0:06:07.000 --> 0:06:10.000
they're all in separate containers.

132
0:06:10.000 --> 0:06:13.000
And, of course, you can not just have Mastodon deployed like this.

133
0:06:13.000 --> 0:06:15.000
You can deploy Gitsy Meet.

134
0:06:15.000 --> 0:06:16.000
You can deploy WordPress.

135
0:06:16.000 --> 0:06:19.000
I'm going to show a couple more examples.

136
0:06:19.000 --> 0:06:24.000
And then we use Nginx to show these apps on the web

137
0:06:24.000 --> 0:06:31.000
and allow the actual end user to interact with them.

138
0:06:31.000 --> 0:06:34.000
Now, what I mentioned, for non-technical users,

139
0:06:34.000 --> 0:06:37.000
right now we support DigitalOcean.

140
0:06:37.000 --> 0:06:40.000
If, let's say, you don't know how to use a command line,

141
0:06:40.000 --> 0:06:46.000
but you want to have gardens on your, let's say, VPS or your machine,

142
0:06:46.000 --> 0:06:48.000
you just, there's an old flow.

143
0:06:48.000 --> 0:06:49.000
You connect to DigitalOcean,

144
0:06:49.000 --> 0:06:52.000
and then there's a no-code process where you spin up gardens,

145
0:06:52.000 --> 0:06:55.000
and then from gardens you can use it.

146
0:06:55.000 --> 0:07:01.000
But there's also a local process where you just run one line in the CLI.

147
0:07:01.000 --> 0:07:04.000
You pull basically the gardens container,

148
0:07:04.000 --> 0:07:07.000
and then gardens does everything from there.

149
0:07:07.000 --> 0:07:09.000
It doesn't actually, yeah.

150
0:07:09.000 --> 0:07:15.000
I mean, it talks back to us to get the list of apps available,

151
0:07:15.000 --> 0:07:19.000
but our end goal is for it not even to talk back,

152
0:07:19.000 --> 0:07:23.000
to kind of really be isolated in your environment.

153
0:07:23.000 --> 0:07:29.000
So these are just some examples of the apps we have in gardens.

154
0:07:29.000 --> 0:07:33.000
There's really a lot of good open source products that are coming out recently.

155
0:07:33.000 --> 0:07:38.000
Of course, there are established players like WordPress.

156
0:07:38.000 --> 0:07:43.000
There is stuff to replace social media, like PeerTube.

157
0:07:43.000 --> 0:07:46.000
Here are just some examples of what those replace.

158
0:07:46.000 --> 0:07:49.000
Of course, with Mastodon you can replace something like Twitter.

159
0:07:49.000 --> 0:07:52.000
Penpot here at the bottom left, you can replace Figma.

160
0:07:52.000 --> 0:07:55.000
They actually had to talk previously at the conference.

161
0:07:55.000 --> 0:08:00.000
Bizro or No-code DB can replace Airtable.

162
0:08:00.000 --> 0:08:02.000
GtMute can replace Zoom.

163
0:08:02.000 --> 0:08:03.000
Outline and replace Confluence.

164
0:08:03.000 --> 0:08:06.000
And there's actually other alternatives there.

165
0:08:06.000 --> 0:08:10.000
So you can choose whatever open source product you want to host.

166
0:08:10.000 --> 0:08:14.000
We have about 130 apps, a bit more, available right now

167
0:08:14.000 --> 0:08:16.000
that you can self-host with one click.

168
0:08:16.000 --> 0:08:19.000
But there is also an option to deploy your own apps

169
0:08:19.000 --> 0:08:24.000
or even connect to GitLab, let's say, have a bit of CI CD going,

170
0:08:24.000 --> 0:08:27.000
if you're more technical.

171
0:08:27.000 --> 0:08:30.000
As I mentioned, the process of spinning up those apps

172
0:08:30.000 --> 0:08:34.000
is based on Docker Compose mostly.

173
0:08:34.000 --> 0:08:38.000
There are options to even spin up from Tar Archive and so on,

174
0:08:38.000 --> 0:08:41.000
but this is like the main method.

175
0:08:41.000 --> 0:08:45.000
Yeah, we do some processing of Docker Compose files

176
0:08:45.000 --> 0:08:49.000
that are taken from official repositories of these app developers

177
0:08:49.000 --> 0:08:52.000
and then we just spin this up for you.

178
0:08:52.000 --> 0:08:56.000
So, Gardens is just one example.

179
0:08:56.000 --> 0:08:59.000
I'm talking about it because I'm making it.

180
0:08:59.000 --> 0:09:03.000
Capraour is what we forked because it's very reliable,

181
0:09:03.000 --> 0:09:05.000
very nice service.

182
0:09:05.000 --> 0:09:08.000
Coolify is a newer service, similar to that.

183
0:09:08.000 --> 0:09:11.000
The main difference, I'd say, is for the proxy,

184
0:09:11.000 --> 0:09:14.000
we use Nginx, they use traffic.

185
0:09:14.000 --> 0:09:17.000
And Unihost is a bit different,

186
0:09:17.000 --> 0:09:20.000
but it covers the same use case to self-host stuff.

187
0:09:20.000 --> 0:09:22.000
It's a bit different because it's a Debian distribution,

188
0:09:22.000 --> 0:09:26.000
so you have that on kind of replace your operating system,

189
0:09:26.000 --> 0:09:28.000
whereas Gardens, Capraour, and Caulify,

190
0:09:28.000 --> 0:09:34.000
they are all apps that you can put right now on Ubuntu, Debian,

191
0:09:34.000 --> 0:09:36.000
I think on CentOS, it works as well.

192
0:09:36.000 --> 0:09:39.000
I actually got it working on macOS,

193
0:09:39.000 --> 0:09:42.000
but that's more experimental.

194
0:09:42.000 --> 0:09:44.000
So why do we even want to self-host?

195
0:09:44.000 --> 0:09:47.000
Let's go back to that.

196
0:09:47.000 --> 0:09:52.000
I'd say actually, if we want software freedom,

197
0:09:52.000 --> 0:09:58.000
which is, I guess, the point of open source in a lot of ways,

198
0:09:58.000 --> 0:10:01.000
you have to be able to self-host.

199
0:10:01.000 --> 0:10:03.000
But as we can see from here, you know,

200
0:10:03.000 --> 0:10:05.000
just several people hosted Mastodon, let's say.

201
0:10:05.000 --> 0:10:09.000
I imagine many more here use Mastodon.

202
0:10:09.000 --> 0:10:12.000
It's kind of like if you're not using this freedom

203
0:10:12.000 --> 0:10:17.000
or if you're not able to because you can't handle the technical side

204
0:10:17.000 --> 0:10:22.000
because it's too difficult, that kind of defeats the purpose, right?

205
0:10:22.000 --> 0:10:26.000
So if you cannot host, you don't really have freedom

206
0:10:26.000 --> 0:10:31.000
if you have it technically or formally, let's say.

207
0:10:31.000 --> 0:10:35.000
So I'd argue that this not having freedom is bad,

208
0:10:35.000 --> 0:10:40.000
but also bad not just in a kind of ideological way,

209
0:10:40.000 --> 0:10:42.000
but also in a competitive way.

210
0:10:42.000 --> 0:10:48.000
If open source wants to be able to compete with all these SaaS apps out there,

211
0:10:48.000 --> 0:10:51.000
because this is like something that open source has

212
0:10:51.000 --> 0:10:54.000
that proprietary apps just don't have,

213
0:10:54.000 --> 0:10:56.000
and it's an unfair advantage.

214
0:10:56.000 --> 0:11:02.000
I think, I believe that right now, organizations,

215
0:11:02.000 --> 0:11:07.000
how they use it is they use proprietary SaaS by default.

216
0:11:07.000 --> 0:11:11.000
They self-host when they are really worried about privacy

217
0:11:11.000 --> 0:11:15.000
or there's some kind of sovereignty concerns or something.

218
0:11:15.000 --> 0:11:18.000
They don't care about open source.

219
0:11:18.000 --> 0:11:23.000
And how it should be is you self-host instead of SaaS by default,

220
0:11:23.000 --> 0:11:28.000
but then you choose a SaaS where it's too complex

221
0:11:28.000 --> 0:11:32.000
or you want the scale or there's some specific requirements

222
0:11:32.000 --> 0:11:37.000
or if you want to support developers because that's one way they earn

223
0:11:37.000 --> 0:11:41.000
and they can financially support the development.

224
0:11:41.000 --> 0:11:44.000
So to bring some numbers in there,

225
0:11:44.000 --> 0:11:48.000
I've been hanging out on Reddit self-hosted, sub-Reddit,

226
0:11:48.000 --> 0:11:50.000
and I found the statistics.

227
0:11:50.000 --> 0:11:53.000
So for the past like seven years,

228
0:11:53.000 --> 0:11:56.000
the number of people there skyrocketed

229
0:11:56.000 --> 0:12:00.000
to more than 200,000 people on the sub-Reddit.

230
0:12:00.000 --> 0:12:04.000
So it looks like people are interested actually in hosting their stuff.

231
0:12:04.000 --> 0:12:10.000
But I also run a poll with 1,250 participants about that number

232
0:12:10.000 --> 0:12:13.000
where I found out that people on that sub-Reddit,

233
0:12:13.000 --> 0:12:18.000
they don't really self-host, you know, anything business critical, so to say,

234
0:12:18.000 --> 0:12:21.000
or anything for their organization, anything for productive use,

235
0:12:21.000 --> 0:12:23.000
or at least not a lot of them.

236
0:12:23.000 --> 0:12:28.000
So about only 100 people self-host, let's say, Nextcloud or something,

237
0:12:28.000 --> 0:12:31.000
but most of them self-host for media,

238
0:12:31.000 --> 0:12:35.000
so let's say for movies or something, or for personal use.

239
0:12:35.000 --> 0:12:38.000
So maybe something for their smart home.

240
0:12:38.000 --> 0:12:41.000
So that I think is a pity,

241
0:12:41.000 --> 0:12:44.000
but I cannot understand that, why people are not self-hosting.

242
0:12:44.000 --> 0:12:48.000
Because it's complex, like we discussed, for organizations.

243
0:12:48.000 --> 0:12:51.000
Because it's complex, but also because of these issues.

244
0:12:51.000 --> 0:12:54.000
You don't just want to spin up an app.

245
0:12:54.000 --> 0:12:57.000
There's also a part that comes after you deploy,

246
0:12:57.000 --> 0:12:59.000
which is about maintenance,

247
0:12:59.000 --> 0:13:02.000
which is about making sure that your instance is secure,

248
0:13:02.000 --> 0:13:07.000
and if you get a lot of users, you also want to scale.

249
0:13:07.000 --> 0:13:10.000
You want to have an option to scale.

250
0:13:10.000 --> 0:13:14.000
So how we deal with that is for maintenance,

251
0:13:14.000 --> 0:13:17.000
for each app, for each service that I was showing you,

252
0:13:17.000 --> 0:13:20.000
let's say for Macedon, you can view logs in the graphical interface,

253
0:13:20.000 --> 0:13:25.000
so you don't have to accession to your instance to view logs.

254
0:13:25.000 --> 0:13:29.000
We keep a version history.

255
0:13:29.000 --> 0:13:34.000
We track analytics for instance with net data,

256
0:13:34.000 --> 0:13:38.000
so you can see, let's say, how much CPU is utilized,

257
0:13:38.000 --> 0:13:42.000
how much RAM is utilized, so you can kind of check the health,

258
0:13:42.000 --> 0:13:45.000
and net data actually provides nice notifications,

259
0:13:45.000 --> 0:13:48.000
so you can even get notifications where you want,

260
0:13:48.000 --> 0:13:50.000
or have a webhook to get updated when, let's say,

261
0:13:50.000 --> 0:13:55.000
you're running out of CPU or RAM.

262
0:13:55.000 --> 0:14:01.000
For security, we covered that with automatic SSL for all apps.

263
0:14:01.000 --> 0:14:05.000
You can force it. You can force HTTPS.

264
0:14:05.000 --> 0:14:11.000
We have basic auth, so that we do with Let's Encrypt.

265
0:14:11.000 --> 0:14:15.000
For scalability, actually, that's the part I love the most.

266
0:14:15.000 --> 0:14:18.000
If you have a lot of users, you can scale,

267
0:14:18.000 --> 0:14:21.000
either by adding more instances of the same app on the same machine,

268
0:14:21.000 --> 0:14:26.000
and Nardance will redistribute automatically the load,

269
0:14:26.000 --> 0:14:30.000
or you can scale by adding more machines into a Docker Swarm.

270
0:14:30.000 --> 0:14:34.000
So we support Docker Swarm. This is the same for Caprover.

271
0:14:34.000 --> 0:14:38.000
So I'd say people want to self-host, but it's hard,

272
0:14:38.000 --> 0:14:40.000
and we need to help them.

273
0:14:40.000 --> 0:14:44.000
So otherwise, they just use SaaS, like currently,

274
0:14:44.000 --> 0:14:46.000
and this is one way to do it.

275
0:14:46.000 --> 0:14:52.000
You can help this effort by, if you're a developer,

276
0:14:52.000 --> 0:14:56.000
maintaining Docker Compose files, or documentation,

277
0:14:56.000 --> 0:15:01.000
just a way to self-host for your application.

278
0:15:01.000 --> 0:15:05.000
If you're a sysadmin or a DevOps, you can think about providing

279
0:15:05.000 --> 0:15:07.000
a platform like this to your organization,

280
0:15:07.000 --> 0:15:10.000
so that people in your organization can spin something up

281
0:15:10.000 --> 0:15:13.000
without having to bother you.

282
0:15:13.000 --> 0:15:18.000
And you can, everyone here, of course,

283
0:15:18.000 --> 0:15:20.000
should use open source instead of SaaS,

284
0:15:20.000 --> 0:15:22.000
and you should try self-hosting.

285
0:15:22.000 --> 0:15:25.000
If you find self-hosting hard,

286
0:15:25.000 --> 0:15:28.000
you can check out some of those self-hosting platforms.

287
0:15:28.000 --> 0:15:32.000
You can, of course, host not on AWS or something,

288
0:15:32.000 --> 0:15:34.000
but you can use some of those hosters.

289
0:15:34.000 --> 0:15:38.000
Cloud68 had been giving a talk here a bit earlier.

290
0:15:38.000 --> 0:15:42.000
Chateauans is a French network of good hosters.

291
0:15:42.000 --> 0:15:44.000
Librehost is another one.

292
0:15:44.000 --> 0:15:47.000
So look at other hosting solutions.

293
0:15:47.000 --> 0:15:52.000
Thank you, and yeah, have a good rest of the conference.

294
0:15:52.000 --> 0:15:59.000
Thank you.

