WEBVTT

00:00.000 --> 00:15.900
Okay, Yarmul Makenbach, his next talk is K-OX-SIT, the Refinery-lined Identity of this

00:15.900 --> 00:16.900
Characterography.

00:16.900 --> 00:17.900
Welcome him.

00:17.900 --> 00:18.900
All right.

00:18.900 --> 00:19.900
Is this working?

00:19.900 --> 00:20.900
All right, awesome.

00:20.900 --> 00:21.900
Thank you all for coming.

00:21.900 --> 00:22.900
So, yeah, I'm Yarmul Makenbach.

00:22.900 --> 00:23.900
I'm a scientist.

00:23.900 --> 00:24.900
I'm a scientist.

00:24.900 --> 00:25.900
I'm a scientist.

00:25.900 --> 00:26.900
I'm a scientist.

00:26.900 --> 00:27.900
I'm a scientist.

00:27.900 --> 00:28.900
I'm a scientist.

00:28.900 --> 00:31.320
So, yeah, I'm Yarmul Makenbach.

00:31.320 --> 00:36.880
And I would like to give you a little non-technical introduction to my project called K-OX-SIT,

00:36.880 --> 00:42.240
which is all about verifying online identity with cryptography.

00:42.240 --> 00:46.120
And to start us off, I would actually like to review very quickly, like, how traditional

00:46.120 --> 00:47.120
passports work.

00:47.120 --> 00:53.520
So, yeah, you walk around with your little passport and you give it to the person who

00:53.520 --> 00:55.500
needs to verify it.

00:55.500 --> 00:59.060
And they will do their little verification with a computer.

00:59.060 --> 01:03.000
And then, of course, after that, you can do whatever you came to do with your passport.

01:03.000 --> 01:09.680
So, what I would like to briefly touch on is this third step, where a passport needs

01:09.680 --> 01:14.820
to be verified by contacting the government that issued it.

01:14.820 --> 01:17.200
In and of itself, the passport doesn't do that much.

01:17.200 --> 01:22.160
It's just a piece of paper with maybe a little picture to identify the person, but not that

01:22.160 --> 01:23.160
much more.

01:23.160 --> 01:28.680
And, in fact, even if you do verify with the government, it checks the validity of the

01:28.680 --> 01:29.680
document.

01:29.680 --> 01:30.680
Is it still valid?

01:30.680 --> 01:36.920
But it doesn't actually link it to the person, again, except for maybe the picture, but still.

01:36.920 --> 01:37.920
So if we were...

01:37.920 --> 01:43.280
So the online world, of course, is becoming more and more part of our lives.

01:43.280 --> 01:47.440
So, how would identity work on the Internet online?

01:47.440 --> 01:51.560
So, for me, of course, I would like to have it secure.

01:51.560 --> 01:58.160
And with that, I actually mean verifiable, so that I can present my online passport and

01:58.160 --> 02:03.440
prove to people that it's me and that not someone else is trying to claim that they're

02:03.440 --> 02:07.480
me or anything like that.

02:07.480 --> 02:10.240
I would like it to be anonymous.

02:10.240 --> 02:16.360
We don't actually need this online identity to be the same as our real... in real life

02:16.360 --> 02:17.360
identity.

02:17.360 --> 02:19.960
In fact, I would go even further than that.

02:19.960 --> 02:21.720
Fine, we can be multiple persons.

02:21.720 --> 02:24.320
We can be a certain person that works in a certain domain.

02:24.320 --> 02:27.240
We can be a person with a certain hobby.

02:27.240 --> 02:32.320
And all these personas, they don't need to match a real identity.

02:32.320 --> 02:36.640
And they should have their own identities that need to be maintained and be cared for

02:36.640 --> 02:42.360
and be presented separately as identities.

02:42.360 --> 02:44.320
I would like to be self-sovereign.

02:44.320 --> 02:46.800
So people should be able to make their own passport.

02:46.800 --> 02:53.080
They should be able to create it, update it, delete it, distribute it or keep it private

02:53.080 --> 02:58.320
as much as they would like to... as they see fit.

02:58.320 --> 03:01.160
And of course, I would like to see it decentralized.

03:01.160 --> 03:03.480
There shouldn't be any gatekeepers.

03:03.480 --> 03:06.680
It shouldn't run through a single big instances.

03:06.680 --> 03:08.040
It should just be...

03:08.040 --> 03:13.520
If you verify someone's identity, you need to be able to do it yourself on the spot without

03:13.520 --> 03:21.120
having to trust another entity in the middle as much as possible.

03:21.120 --> 03:26.160
And if you combine all this, I think it should represent what you do on the internet online

03:26.160 --> 03:31.800
and not just like the traditional passport where you were born mostly.

03:31.800 --> 03:34.240
So let's envision a little scenario.

03:34.240 --> 03:38.560
Again, I said that this would be non-technical.

03:38.560 --> 03:40.040
So we start off with Alice.

03:40.040 --> 03:43.360
And if there's Alice, then of course there's Bob.

03:43.360 --> 03:48.360
And they've spoken to each other for years now with, let's say Matrix, I don't know.

03:48.360 --> 03:49.560
So they know who they are.

03:49.560 --> 03:51.360
And again, they don't need to be...

03:51.360 --> 03:54.200
These don't need to be like in real life identities.

03:54.200 --> 03:56.480
They could be pseudonyms.

03:56.480 --> 03:58.280
But they know who they are.

03:58.280 --> 04:05.680
And on a certain day, Alice gets a message from a certain Bob 91 through a 7 network.

04:05.680 --> 04:09.120
And of course Alice wants to know, you know, is this Bob?

04:09.120 --> 04:10.120
Why are they using...

04:10.120 --> 04:16.200
And if it is, you know, why are they using a different username?

04:16.200 --> 04:18.440
That could have many reasons.

04:18.440 --> 04:21.000
But again, is this the same actual person?

04:21.000 --> 04:26.400
So luckily for Alice, in this case, she could ask Kieuxide.

04:26.400 --> 04:31.760
And Kieuxide actually did a little check on both Bob on the Matrix networks and Bob on

04:31.760 --> 04:35.000
91 on the XYZ network.

04:35.000 --> 04:39.840
And it could actually verify that they were the same person.

04:39.840 --> 04:42.880
So that's really a rough explanation.

04:42.880 --> 04:46.720
So let's actually look at what happens to get to this point.

04:46.720 --> 04:50.980
So what Bob did is he created a cryptographic key.

04:50.980 --> 04:56.280
So cryptographic keys are represented by a fingerprint, a large string.

04:56.280 --> 04:57.640
In this case, let's simplify it.

04:57.640 --> 05:00.360
We'll just call it key 42.

05:00.360 --> 05:05.120
And he treats the cryptographic key as like a sort of vault.

05:05.120 --> 05:07.120
So he can put arbitrary data in there.

05:07.120 --> 05:09.520
So in this case, he puts two links.

05:09.520 --> 05:10.920
In this case, I use different accounts.

05:10.920 --> 05:15.520
So maybe he refers to a Fediverse account.

05:15.520 --> 05:17.080
And he refers to a Liberapay account.

05:17.080 --> 05:23.440
Again, this could be any number of services that he chooses to enter in the vault.

05:23.440 --> 05:27.960
And then he uploads a public key version of this to a so-called key server.

05:27.960 --> 05:33.560
So a public key in this context, we can view it as like a glass vault.

05:33.560 --> 05:37.040
Everybody can look inside, but no one can actually modify the contents.

05:37.040 --> 05:41.360
Only Bob can, and Bob secured it through cryptography.

05:41.360 --> 05:46.080
But everyone can actually look at this vault and look at the links that are inside.

05:46.080 --> 05:54.960
And on that fateful day that we just discussed, Alice, so she went to this Kewksite page.

05:54.960 --> 06:01.200
And she entered the number 42 because she knows that that's Bob's cryptographic key

06:01.200 --> 06:02.200
identifier.

06:02.200 --> 06:07.520
Again, they must have talked about this before or anything like that.

06:07.520 --> 06:11.680
But so beforehand, she knew that this was Bob's key.

06:11.680 --> 06:18.120
And so, well, Kewksite then goes and fetch this key from the key server, displays the

06:18.120 --> 06:19.120
data.

06:19.120 --> 06:21.320
But again, it's just displaying this as a list.

06:21.320 --> 06:25.520
It doesn't know yet if it's actually verified because just claiming that you are someone,

06:25.520 --> 06:29.520
a certain account on the internet, you know, that's not sufficient.

06:29.520 --> 06:34.840
So what Kewksite then continues to do is that it will actually fetch some basic data, profile

06:34.840 --> 06:38.480
data from this Fediverse account.

06:38.480 --> 06:43.680
And inside this Fediverse account, it will actually find a link back to the key, in this

06:43.680 --> 06:46.240
case the number 42.

06:46.240 --> 06:51.520
And with this confirmation, it actually like knows that it verifies the identity.

06:51.520 --> 06:59.120
This really is the basis on how Kewksite determines identity through bidirectional verification.

06:59.120 --> 07:04.640
So the key links to a certain account on the internet and the account on the internet links

07:04.640 --> 07:07.320
back to the key.

07:07.320 --> 07:10.480
It does the same verification for the LiberiPay account.

07:10.480 --> 07:12.400
It finds a link back to the key.

07:12.400 --> 07:16.600
And so it has to be the same person that did both actions, put the link to the account

07:16.600 --> 07:22.280
in the key and put the link to the key back in the account.

07:22.280 --> 07:29.360
So that's how it looks in the stick figure mode.

07:29.360 --> 07:32.720
This is an example of my account, for example.

07:32.720 --> 07:39.960
And so, yeah, so this big string, that's actually what the 42 were presented in the stick figures.

07:39.960 --> 07:46.840
And below are like all my identities, all my accounts that I linked in my profile.

07:46.840 --> 07:50.520
And that actually have been verified by this website.

07:50.520 --> 07:55.880
So what this website does, kewksite.org, in the end is basically just like a little automation

07:55.880 --> 07:56.880
layer.

07:56.880 --> 07:57.880
You could verify it yourself.

07:57.880 --> 07:59.800
You could go to each of these profiles.

07:59.800 --> 08:04.680
You could go to each of these links and just look for the reference back to my key, which

08:04.680 --> 08:05.960
is written up there.

08:05.960 --> 08:09.000
But yeah, that is kind of a tedious task.

08:09.000 --> 08:12.920
So that's what Kewksite is designed to automate for you.

08:12.920 --> 08:18.320
But Kewksite will always give you the option to verify for yourself.

08:18.320 --> 08:21.600
So currently we do have a Kewksite mobile app.

08:21.600 --> 08:24.720
It's available on FTROID for now only.

08:24.720 --> 08:31.400
And it only does this profile verification mode functionality.

08:31.400 --> 08:35.940
It doesn't do process profile creation yet.

08:35.940 --> 08:40.680
For now, it requires you to use the command line, the GPG command line tool.

08:40.680 --> 08:43.520
So that's not for everyone.

08:43.520 --> 08:48.920
But yeah, we're working on making sure that the app can just make it, just like eBay's

08:48.920 --> 08:52.440
used to do back in the day.

08:52.440 --> 08:55.520
And of course, we would like to release it on different Play Store so that it's more

08:55.520 --> 08:57.320
widely available.

08:57.320 --> 09:01.640
But you can already play around with it right now.

09:01.640 --> 09:06.400
I would like to briefly touch on what is next for Kewksite.

09:06.400 --> 09:12.800
So we are trying to create this more easy kind of way to create profiles, not only using

09:12.800 --> 09:13.800
openPGP.

09:13.800 --> 09:17.240
Right now, everything is openPGP within Kewksite.

09:17.240 --> 09:22.580
But soon you'll be able to use, like it says, minisign keys or SSH keys or whatever keys

09:22.580 --> 09:25.840
we can find.

09:25.840 --> 09:30.500
As I said before, I would also like to have more apps that can actually help you and guide

09:30.500 --> 09:34.360
you in creating profiles so that it's not just for the very technical people among us,

09:34.360 --> 09:42.360
but also just more general that people can enjoy online identity verification.

09:42.360 --> 09:47.680
Another thing is for each website that we support, it needs to be programmed in manually.

09:47.680 --> 09:50.800
We need to know the right APIs for every service.

09:50.800 --> 09:55.720
So there's a lot of work that goes into finding out how to do that.

09:55.720 --> 10:01.920
And of course, if a certain bird's-eye decides to close the API, well, yeah, that is overdone

10:01.920 --> 10:03.840
for those verifications.

10:03.840 --> 10:07.360
But that is their problem.

10:07.360 --> 10:12.120
So we need to add support for more services and websites.

10:12.120 --> 10:18.320
And we should also play around with creating new websites, creating more clients.

10:18.320 --> 10:22.800
Clients can do a lot more things than just display a list of profiles.

10:22.800 --> 10:30.280
And these are things that should be explored, like different ways of using identity online.

10:30.280 --> 10:32.240
Actually I did so myself.

10:32.240 --> 10:37.080
I created my own competitor, in this case named Kewksite Blue.

10:37.080 --> 10:40.840
And I just, yeah, like it says, I built this in an afternoon.

10:40.840 --> 10:44.800
And it's just that easy to get started with this ID, because in the end, it's just an

10:44.800 --> 10:47.680
automation layer.

10:47.680 --> 10:53.400
And yeah, it was just a little quick test for myself to see how easy it is to create

10:53.400 --> 10:55.360
a new client.

10:55.360 --> 10:59.200
So if anyone feels like playing around with this, go ahead.

10:59.200 --> 11:03.480
It's a little fun, I guess.

11:03.480 --> 11:09.280
And the other thing that I quickly wanted to mention is to go further and just display

11:09.280 --> 11:16.560
a nice list of profiles and of online identities would be, what else can we do with online

11:16.560 --> 11:17.560
identity?

11:17.560 --> 11:22.320
And actually a few hours ago, there was this presentation by Pablo, where he discussed

11:22.320 --> 11:27.800
creating CVs for developers, or in the end, for more people.

11:27.800 --> 11:31.080
For now, developers, how can they share what they do online?

11:31.080 --> 11:36.840
How can they share their free open source contributions on different platforms, on different

11:36.840 --> 11:38.920
websites?

11:38.920 --> 11:44.920
So that is something that maybe we could explore using Kewksite as a backend to know who has

11:44.920 --> 11:53.880
done what and make a nice little CV of anyone's contributions to the open source world.

11:53.880 --> 11:58.120
And with that, I would like to thank Victor and Berger and all the other people who have

11:58.120 --> 12:02.880
contributed to the project so far and now for their funding.

12:02.880 --> 12:06.960
And if you like the idea behind this, do reach out.

12:06.960 --> 12:07.960
It's fun.

12:07.960 --> 12:14.680
And we're always looking for more people to get this field further.

12:14.680 --> 12:15.680
Thank you.

12:15.680 --> 12:26.080
Thank you a lot for a nice presentation.

12:26.080 --> 12:30.920
So you have now almost three minutes for questions.

12:30.920 --> 12:33.680
And after that, you will ask them outside.

12:33.680 --> 12:34.680
Anyone?

12:34.680 --> 12:42.000
Questions?

12:42.000 --> 12:47.360
So is the system dependent on a key server?

12:47.360 --> 12:48.920
No.

12:48.920 --> 12:52.120
So the question was, is it dependent on key servers?

12:52.120 --> 12:53.120
In the end, no.

12:53.120 --> 12:59.600
So key servers are just one way of promoting, distributing keys.

12:59.600 --> 13:05.640
But there's also like WKD, WebKey directory where you can put keys on your own server.

13:05.640 --> 13:08.560
You can also share keys directly, of course, between people.

13:08.560 --> 13:09.560
Brilliant.

13:09.560 --> 13:10.560
Okay.

13:10.560 --> 13:16.200
So have you also included key signing so that you can create a web of trust?

13:16.200 --> 13:17.200
No.

13:17.200 --> 13:19.400
There have been talks about that, no?

13:19.400 --> 13:21.000
Because it will be good.

13:21.000 --> 13:28.800
Yeah, of course, like the web of trust discussion, you know, that's, yeah, people like it, people

13:28.800 --> 13:32.640
don't like it.

13:32.640 --> 13:36.880
If you can make that socially easy for people, it's a big deal.

13:36.880 --> 13:38.000
Yeah.

13:38.000 --> 13:43.400
That is also something to explore, the social aspect between having identities and, yeah,

13:43.400 --> 13:46.360
because in the end, that's just another verification.

13:46.360 --> 13:51.360
New people know each other and that generates trust.

13:51.360 --> 13:52.360
Thanks.

13:52.360 --> 13:56.200
There was a few questions there.

13:56.200 --> 13:57.200
Yeah.

13:57.200 --> 14:00.240
Is there a last question?

14:00.240 --> 14:06.880
Because also in that direction, do you have support for blockchain names or something

14:06.880 --> 14:12.080
like that, where the public key is on a chain?

14:12.080 --> 14:14.240
It should probably be feasible.

14:14.240 --> 14:16.840
We haven't looked that much into it yet.

14:16.840 --> 14:21.720
For now, we're just focusing on the basic platforms where people are and where you can

14:21.720 --> 14:25.680
just create an account and then, yeah, get some data back from an API.

14:25.680 --> 14:28.960
It should probably be feasible as long as you can.

14:28.960 --> 14:34.240
As long as you have an online entity where you can put arbitrary data and you have a

14:34.240 --> 14:39.680
way of querying that data, everything's possible.

14:39.680 --> 14:46.480
It's just a matter of, yeah, send us a PR or send us an issue and let's discuss and

14:46.480 --> 14:48.480
we'll get it sorted.

14:48.480 --> 14:49.480
Okay.

14:49.480 --> 14:50.760
Thank you, Yarma.

14:50.760 --> 15:10.600
Thank you for listening.
