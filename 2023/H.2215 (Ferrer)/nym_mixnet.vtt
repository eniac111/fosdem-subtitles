WEBVTT

00:00.000 --> 00:12.080
So the next presentation is a NimixNet from Yoon Hockblood.

00:12.080 --> 00:14.080
So welcome, Yoon.

00:14.080 --> 00:16.320
Yeah, thank you very much.

00:16.320 --> 00:19.440
It's great to be here.

00:19.440 --> 00:23.440
The presentation all seems to be working.

00:23.440 --> 00:32.520
Right, so I'll talk about Nim, title is Intro to a New Anonymous Communication Network.

00:32.520 --> 00:38.240
It's quite a lot of overlap with the previous presentation about the concepts involved.

00:38.240 --> 00:41.600
And who am I?

00:41.600 --> 00:46.640
My name is Yoon Hockblood, or sometimes I go by just John for simplicity.

00:46.640 --> 00:53.360
I'm a Sweden developer, I spend my days writing Rust, backend type things.

00:53.360 --> 00:56.800
I used to do C++ and scientific computing in a previous life.

00:56.800 --> 00:59.600
Yeah, live in Stockholm.

00:59.600 --> 01:02.720
Yeah, that's me.

01:02.720 --> 01:07.200
Right, so the NimixNet.

01:07.200 --> 01:08.000
What's the NimixNet?

01:08.000 --> 01:11.040
So the basics, I mean, this is obviously free software.

01:11.040 --> 01:14.000
The source code is available on GitHub over there.

01:14.000 --> 01:17.840
It's a Apache license, it's mostly written in Rust.

01:17.840 --> 01:19.440
All the backend stuff is written in Rust.

01:19.440 --> 01:22.720
Some of the frontend things is TypeScript.

01:22.720 --> 01:29.280
This was in the past, this has been funded by some EU projects.

01:29.280 --> 01:34.640
And currently there is a Switzerland-based startup who does the majority of the development.

01:34.640 --> 01:39.200
But yeah, it's an open project and of course we welcome public contributions.

01:39.200 --> 01:45.840
And yeah, it's quite deeply rooted in university as well, in university research.

01:45.840 --> 01:51.200
We have some work-class researchers associated with the project.

01:51.200 --> 01:54.640
So the concepts aren't things that we came up with ourselves.

01:54.640 --> 01:59.920
This is state-of-the-art research.

01:59.920 --> 02:03.200
Right, so what is the problem that we're trying to solve?

02:03.200 --> 02:08.560
We had the usual suspects, the government surveillance and surveillance capitalism.

02:08.560 --> 02:16.480
And wish of these two is a problem, very much depends on where in the world you are.

02:16.480 --> 02:20.400
In some parts of the world these things aren't that big of a concern.

02:20.400 --> 02:22.400
For other people this is serious matter.

02:22.400 --> 02:28.240
This is with grave concern to some people, depending on who you are and where you live.

02:29.200 --> 02:32.640
And what is the aspect that we try to tackle here?

02:32.640 --> 02:35.280
Because there's a lot of privacy platforms that sort of...

02:35.280 --> 02:37.280
...to sort of...

02:37.280 --> 02:41.360
...tries to attack this challenge from different perspectives.

02:42.800 --> 02:47.760
The Nim-Max Net is a network layer or a transport layer thing.

02:47.760 --> 02:53.440
And the main challenge to be focused on is that it has become clear in the sort of the last 10 years that...

02:54.800 --> 02:59.280
...there's now so much surveillance going on and there are some entities that collect so much data...

02:59.280 --> 03:03.520
...on a global scale that they almost get some sort of like a god's eye view of the network.

03:03.520 --> 03:08.640
They can monitor the network on a planet scale and they can correlate.

03:08.640 --> 03:14.480
They can correlate using leaked metadata, your transmission patterns, your packet sizes, timings.

03:14.480 --> 03:23.680
They can do end-to-end correlations even though your data is sent entirely encrypted the whole way or obfuscated.

03:23.680 --> 03:30.560
But still if you can sort of monitor at all endpoints, you can sort of still draw conclusions.

03:30.560 --> 03:38.800
You can identify who talks to who and as we know who talks to who is sometimes more important than what they say from a sort of surveillance perspective.

03:40.720 --> 03:44.800
So that's the sort of the angle, the challenge that we try to tackle with this.

03:47.040 --> 03:51.520
So now I'm sort of taking a step back here. So I'm referring to the Nim platform.

03:52.240 --> 03:58.640
So which is then I use this quote here, a decentralized incentivized mixnet plus prior credentials.

03:58.640 --> 04:04.240
And sort of yeah, my talk here will be to try to unpack what all of this means.

04:04.240 --> 04:10.240
And we're going to start and with what I think is sort of the core part is the mixnet, the word in the middle there.

04:13.840 --> 04:21.200
I think if you use something like Tor as a starting point, that's sort of a very good first step to understand what it is.

04:21.200 --> 04:28.240
And just like Tor and just like the previous talk, it's an overlay network in the same way as ITP uses...

04:28.240 --> 04:39.760
onion routing where all packets are wrapped in layers of encryption to sort of to hide the fact, to hide the end destination of each packet.

04:40.720 --> 04:46.240
It's based on the Lupix design. If you know a little bit of mixnets, you probably have heard about Lupix.

04:46.240 --> 04:51.280
I put in a few citations here at the bottom if you want to read a bit more about these things.

04:51.280 --> 05:03.920
It uses Sphinx packets so that the idea is that all packets are wrapped into these identically looking and identically behaving packets.

05:04.800 --> 05:15.280
To sort of to hide some sizes and timings and also each packet as it moves through because you know,

05:15.280 --> 05:27.280
mixnet is very much what it sounds. It's data, you send through data, multiple hops, you mix data as much as you can through a cloud of nodes.

05:28.160 --> 05:36.320
At each node, I'm going to have some pictures on the next slide to illustrate it better, but yeah, on each hop in the network,

05:36.320 --> 05:42.000
you add things like random timings which effectively reorders traffic, you add cover traffic,

05:42.000 --> 05:50.480
which cover traffic can appear in many ways either like between nodes, but also for example,

05:50.480 --> 05:56.880
if you use a client to connect to network to transmit data, you emit Sphinx packets at a

05:57.520 --> 06:03.120
steady average rate. So it's not a steady rate, but it's like this is probabilistic how you send the

06:03.760 --> 06:09.840
packets, but you send a steady stream of packets either fake or real ones. So when you have real

06:09.840 --> 06:15.280
data to send, you just fill up the packet stream, the packet they send out fill up with real data.

06:17.040 --> 06:21.120
So from the outside, you can't tell when you're actually sending, when you're bursting data.

06:22.320 --> 06:28.080
You attach Serbs or single use reply blocks in your packets so that when you if you make a request

06:28.080 --> 06:33.600
across the network to get something back, you attach these headers, these metadata so that

06:33.600 --> 06:42.000
the response can be sort of layer encrypted and sent back so that the other side, the server

06:42.000 --> 06:48.400
doesn't know where the end destination is. So you hide your identity, but you still allow the other

06:48.400 --> 06:57.120
side to reply back to you. It's a picture, the first step here, the first one there, ordinary VPN,

06:57.120 --> 07:02.560
and a VPN doesn't give you any anonymity, it just moves trust. So the guy in the middle there,

07:02.560 --> 07:08.240
you can still see where data is coming from, where data is going. The second one, you have things

07:08.240 --> 07:13.520
like Tor where you have these nodes in the middle where you open up a circuit through the sort of

07:13.520 --> 07:21.920
swarm of nodes and you pump data through. And here you have MixNet set up where you, in each

07:21.920 --> 07:26.720
packet is mixed individually so you don't open up a circuit like Tor for example, you send up,

07:26.720 --> 07:33.040
each packet is sent as an individual pass-through. And the idea here, the crucial thing is that the

07:33.680 --> 07:38.160
on the other side, you see these packets there, they are colored white now instead of red and

07:38.160 --> 07:45.600
they're the same size. And you shouldn't be able to tell, you can't correlate who's like the data

07:45.600 --> 07:51.440
on the other side compared to on the sender side, which you can in many other systems, because you

07:51.440 --> 08:00.240
can't correlate transmission patterns, timing, sizes. So even if you can monitor all the data,

08:01.040 --> 08:07.680
all the exit data from this MixNet cloud, you still can't correlate who talks to who.

08:07.680 --> 08:18.400
That's sort of the key thing here. And yeah, so if we go back then to this quote,

08:18.400 --> 08:22.720
so decentralized, incentivized MixNet plus price credentials, what do we mean by incentivized?

08:23.200 --> 08:28.560
By incentivized, we mean that the network directory which keeps track of all the

08:30.000 --> 08:38.240
MixNodes and the gateways are a bit like exit nodes in Tor. They are constantly being monitored.

08:38.240 --> 08:43.120
Oh yeah, so the network directory is effectively a set of validators running a consensus protocol

08:43.120 --> 08:47.760
and they keep track of all the MixNodes, how well they mix traffic, how well they

08:47.760 --> 08:55.520
contribute capacity to network, giving them limbs for it, which in turn can be turned around and

08:55.520 --> 09:01.120
used to acquire bandwidth credentials, coconut credentials, is the academic term.

09:03.360 --> 09:07.360
And the idea is that we also, because this is always a problem when you have something like this,

09:08.320 --> 09:13.920
with volunteers you only get so far, anonymity or privacy loves company, you want to disappear in

09:13.920 --> 09:18.080
crowds. So you want to encourage people to provide capacity to the network at the same time as they're

09:18.080 --> 09:23.920
using it. That's the idea. Because otherwise it becomes difficult to scale up above a sort of

09:23.920 --> 09:31.520
various base level. But if you want to make this available for the broader public, you need more

09:31.520 --> 09:39.360
capacity. And this is a way that we hope we can achieve this. And these price credentials,

09:39.360 --> 09:45.840
the idea is that you break the linkability between your identity and your right to use the service.

09:48.000 --> 09:55.200
And it's a very deep topic on its own. Here's the citation. There are some cryptographic

09:55.200 --> 10:00.560
buzzwords here as well, listed and re-randomizable means that if you use the same bandwidth

10:00.560 --> 10:06.640
credential multiple times, it's indistinguishable from multiple people using different credentials

10:06.640 --> 10:17.200
from the person redeeming this. But yeah, the idea is you want to break the link between

10:17.200 --> 10:26.960
your identity and your right to use something. And yeah, okay, so the first word there, decentralized.

10:29.040 --> 10:34.560
It's not too much to add there. I mean, we have a running network. It's 500 mex nodes currently.

10:34.560 --> 10:39.840
And yeah, the vision is that this becomes sort of self-running. It should be like,

10:41.280 --> 10:48.240
it shouldn't happen. We won't have an anti-fragile funding model. We don't want it to be reliant on

10:48.240 --> 10:54.560
a specific company or some funding body or donations or anything. We want this to have robust,

10:56.240 --> 11:03.200
robustly running on its own, run by the community entirely, long-term. That's sort of the

11:03.200 --> 11:07.760
division here. Even though currently we have a startup that sort of does the most of the

11:07.760 --> 11:15.360
development, we should in turn, like long-term, we should be able to hand this off as sort of the ID.

11:19.280 --> 11:25.520
There's a picture. So this is all running currently. This thing that is currently sort of in

11:25.520 --> 11:30.400
deployment or sort of being rolled out or these credentials currently is free to use the main

11:30.400 --> 11:37.280
network. We have all these clients, there's a client, there's a Wasm client, there's a

11:39.600 --> 11:45.680
native running client exposing a WebSocket, the mixed nodes up there. When you use a user,

11:45.680 --> 11:51.440
you connect to the gateway, which is like entry and exit nodes for Tor. You mix the traffic,

11:52.000 --> 11:59.040
you exit on the gateway, you can have service providers. There's the set of validators keeping

11:59.040 --> 12:09.760
track of the other nodes in the system. Yeah. There's a lot of taking here, probably a lot of

12:09.760 --> 12:13.920
a lot of details there. I'm not sure it's all visible towards the end, but yeah, that's pretty

12:13.920 --> 12:28.320
much it. Thank you for your time. Yeah, thank you a lot for a nice talk. Yeah, thank you for

12:28.320 --> 12:36.640
listening. And I think that have some time. So theoretically, they could spend it asking a

12:36.640 --> 12:40.560
question at least for two minutes here and then after it, we can discuss it outside.

12:46.560 --> 12:52.640
Hi, can you imagine the NIMP framework also to be integrated into another proof of stake based

12:52.640 --> 12:56.560
cryptocurrency as a backend in the future? Maybe what did he say first?

12:56.560 --> 13:02.400
Can you imagine that the main part of the NIMP framework, like the mixed nodes and everything

13:02.400 --> 13:07.120
around it can also be attached to an existing proof of stake based other cryptocurrency that

13:07.120 --> 13:18.640
is not currently part of your ecosystem? Well, so I mean, a big use case of this is that

13:18.640 --> 13:23.840
it's this is sort of on the network layer. So that means it's a big use case is you have all

13:23.840 --> 13:29.760
these other privacy systems where in this crypto space where they have this privacy preserving

13:29.760 --> 13:34.720
services, but they still leak metadata at the bottom layer, you still leak metadata when you

13:34.720 --> 13:40.800
broadcast transactions and things like this. So I think if this were like to integrate this in other

13:40.800 --> 13:48.400
systems in this space, then it will be in that that layer, sort of the transport layer. So yeah,

13:48.400 --> 13:52.000
so there's a lot of potential for integrating with other privacy platforms, I think. And

13:52.000 --> 13:57.600
then in general with these, I mean, there are a lot of privacy platforms. And I think what we need

13:57.600 --> 14:03.040
is a sort of a robust ecosystem. There is no single solution that solves all our problems.

14:03.040 --> 14:07.840
We need a robust ecosystem for different solutions for different types of problems or different

14:07.840 --> 14:12.480
categories of problems. So I mean, I don't see this as a competitor to other systems. It's more

14:12.480 --> 14:18.720
they complement each other. For example, like when you had this, you had random delays, for example,

14:18.720 --> 14:23.520
that of course, you know, you have means you sort of compromise, you give up a bit of latency,

14:24.640 --> 14:28.320
which is, you know, works very well for asynchronous communication, but

14:29.760 --> 14:34.560
might not work so well for other categories of applications. So I think sometimes like this,

14:34.560 --> 14:37.920
this is also the complement store, it doesn't replace the store, it sort of complements it.

14:40.480 --> 14:42.400
Yeah. Okay.

14:43.600 --> 14:45.840
There's any more questions? Just grab me afterwards.

14:45.840 --> 14:53.440
Just go there and ask questions.
