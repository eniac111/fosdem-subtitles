WEBVTT

00:00.000 --> 00:10.720
So, thank you everyone who has come today, those who are here and those who are not in

00:10.720 --> 00:14.800
the room and were earlier.

00:14.800 --> 00:23.700
I would like to thank our speakers, Julia, Matheides and Reynaldo, Hekate, Ivan and David.

00:23.700 --> 00:29.440
Thank you very much for presenting at the first and hopefully not the last Haskell bedroom

00:29.440 --> 00:39.560
at FOSDEM and let's give them all another round of applause.

00:39.560 --> 00:44.760
Thank you to David and Toils who have helped a lot with the organising of this event, selecting

00:44.760 --> 00:51.720
the programme and for the swag which was donated by the Haskell Foundation.

00:51.720 --> 00:56.360
We have stickers here at the front, there's stickers on the table at the back as well.

00:56.360 --> 01:01.840
Feel free to grab a bunch as you leave.

01:01.840 --> 01:11.000
And for the books, for the prize draw, programming in Haskell by Graham Hutton, second edition,

01:11.000 --> 01:16.920
three copies donated by the Haskell Foundation to give away in the prize draw today.

01:16.920 --> 01:22.440
So thank you very much David for organising that.

01:22.440 --> 01:28.720
Thank you to the FOSDEM organisers and volunteers to make this possible and especially for all

01:28.720 --> 01:34.160
of the AV side of things which is a massive undertaking.

01:34.160 --> 01:43.400
So credit to them and if you see some volunteers please remember to thank them.

01:43.400 --> 01:48.160
And now the prize draw.

01:48.160 --> 01:52.480
So I think the highest number ticket was 39, if you have a ticket with a higher number

01:52.480 --> 02:02.840
than that, jump up and yell so that I put the correct range in the random number generator.

02:02.840 --> 02:15.760
So let's import system.random, let's make a generator, a new stdgen, actually I'll do

02:15.760 --> 02:27.000
it in a, I'll use a monad for this, new stdgen bind and what do we need to do here, random

02:27.000 --> 02:34.520
R, so random in a range from 1 to 39.

02:34.520 --> 02:35.520
It's inclusive?

02:35.520 --> 02:36.520
Yes.

02:36.520 --> 02:41.040
Okay, take my word for it.

02:41.040 --> 02:42.040
It'll be fast enough.

02:42.040 --> 02:43.040
Why not random RIO?

02:43.040 --> 02:46.040
Why not random RIO?

02:46.040 --> 02:54.400
Okay, and we need to, we'll need to do a random RIO, is that a function?

02:54.400 --> 02:56.120
We'll use new stdgen.

02:56.120 --> 03:01.560
We have to use a monad and a bind here just because this is the Haskell devroom and we

03:01.560 --> 03:08.880
need to play up to those sayings that people have that we're all obsessed with monads in

03:08.880 --> 03:11.720
the Haskell community and that's all we ever talk about.

03:11.720 --> 03:22.440
Okay, and we'll need to, let's see, pull out the first value, there we go.

03:22.440 --> 03:27.400
Okay, 35, who's got number 35?

03:27.400 --> 03:32.160
Not here, I'm just going to keep going then.

03:32.160 --> 03:35.160
Number nine, yes, we have a winner, okay.

03:35.160 --> 03:42.160
I'm going to pass that back, thank you.

03:42.160 --> 03:48.160
Okay I might actually hand these down and get someone else to do the running around.

03:48.160 --> 03:57.920
Okay, number 26.

03:57.920 --> 04:04.160
Okay, number 29, yep, here we go.

04:04.160 --> 04:14.320
33, there we go, everyone's right at the front.

04:14.320 --> 04:21.480
Okay and the grand prize, Australia's finest export.

04:21.480 --> 04:28.040
Number three, hey well done, okay.

04:28.040 --> 04:29.560
I'll bring up to you in a minute.

04:29.560 --> 04:33.480
Okay, so thank you everyone, that's a wrap.

04:33.480 --> 04:34.480
Cheers.

04:34.480 --> 05:00.140
Thank you.
