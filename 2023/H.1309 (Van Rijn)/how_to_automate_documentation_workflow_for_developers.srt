1
0:00:00.000 --> 0:00:07.000
My name is Portia.

2
0:00:07.880 --> 0:00:09.200
I'm from Document Right.

3
0:00:09.800 --> 0:00:14.480
We write technical documentation and today's presentation is called

4
0:00:15.080 --> 0:00:17.040
Automate the Pain Away.

5
0:00:17.840 --> 0:00:20.440
CICD workflows for documentation.

6
0:00:21.440 --> 0:00:22.440
Automate that pain away.

7
0:00:23.480 --> 0:00:25.440
So once again, it's me.

8
0:00:25.440 --> 0:00:31.520
I run a technical documentation agency. Before then I used to work as a Django developer.

9
0:00:31.920 --> 0:00:38.320
I spent years, too much time tinkering with side projects and working with documentation.

10
0:00:38.800 --> 0:00:44.280
And you could find me on Document Rights on Twitter and YouTube.

11
0:00:46.120 --> 0:00:52.720
What we'll cover, what we'll cover, what problem we're trying to solve, the tools that exist, how to automate your docs,

12
0:00:52.720 --> 0:00:56.240
and the pros and cons to automation.

13
0:00:59.080 --> 0:01:03.440
So I talk to clients and a common problem they tell me is,

14
0:01:04.040 --> 0:01:06.280
sounds like a developer wrote the docs.

15
0:01:06.680 --> 0:01:07.560
I'm like, OK.

16
0:01:08.480 --> 0:01:12.520
And we dig in into exactly what does that mean?

17
0:01:12.960 --> 0:01:14.920
Sounds like a developer wrote the docs.

18
0:01:14.960 --> 0:01:20.640
So some of the problems that companies have with their documentation include a wall of text,

19
0:01:20.640 --> 0:01:24.160
which means it's really hard to parse through the documentation.

20
0:01:24.720 --> 0:01:26.440
It lacks context.

21
0:01:26.800 --> 0:01:34.880
This is really common because if you wrote the code, you really don't know what an outsider will be confused on.

22
0:01:35.280 --> 0:01:36.280
It's out of date.

23
0:01:36.760 --> 0:01:38.560
It's not updated on a regular basis.

24
0:01:38.960 --> 0:01:41.440
The documentation is incomplete.

25
0:01:41.680 --> 0:01:44.160
There are some features that lack documentation.

26
0:01:44.520 --> 0:01:46.800
And finally, it's incohesive.

27
0:01:47.160 --> 0:01:49.720
It's very obvious that you're a Go developer.

28
0:01:49.720 --> 0:01:52.720
You're a React developer and you're a marketing person.

29
0:01:53.080 --> 0:01:56.720
All worked on the documentation and you could tell which section they worked on.

30
0:01:59.760 --> 0:02:03.080
So quick tour of voice and tone.

31
0:02:03.440 --> 0:02:09.320
If you want your documentation to sound cohesive and not like four different departments touched it

32
0:02:09.840 --> 0:02:13.680
or sound like developers wrote it, it's really important to know these concepts.

33
0:02:13.680 --> 0:02:22.960
Concepts. So this is a voice chart and a purpose of a voice chart is to make sure that your documentation,

34
0:02:23.840 --> 0:02:26.400
like I said before, sounds cohesive.

35
0:02:26.760 --> 0:02:29.600
And this is based on different principles.

36
0:02:29.960 --> 0:02:35.000
So you get together with your team and you figure out what do we stand for?

37
0:02:35.000 --> 0:02:45.360
And based on what you stand for, that actually informs the concepts, vocabulary and grammar that you will use in your documentation.

38
0:02:45.680 --> 0:02:50.960
I can talk about this, but it's easier to actually give you some real examples.

39
0:02:51.600 --> 0:02:53.600
So this is Google's voice.

40
0:02:53.920 --> 0:02:59.400
This examples I'm using comes directly from Google's documentation.

41
0:02:59.640 --> 0:03:02.000
I promise this is not my opinion.

42
0:03:02.120 --> 0:03:03.120
This is just Google.

43
0:03:03.120 --> 0:03:12.240
Google. So if you're looking at Google's documentation, they tell you that some of their principles include timeless documentation,

44
0:03:13.320 --> 0:03:16.640
catering to a global audience and accessibility.

45
0:03:16.920 --> 0:03:18.480
That's all nice and good.

46
0:03:18.840 --> 0:03:23.400
But what does that mean for concepts with timeless documentation?

47
0:03:23.400 --> 0:03:30.160
It means it's avoiding words and phrases that anchor documentation in a point in time like 2015.

48
0:03:30.160 --> 0:03:36.040
Vocabulary, it avoids words like now, new and currently.

49
0:03:36.440 --> 0:03:39.520
That's in the style guide and grammar.

50
0:03:39.720 --> 0:03:41.760
It uses the present tense.

51
0:03:42.000 --> 0:03:51.480
So you take your principles and from there you actually figure out what concept are you going to use, which vocabulary are you going to use and not use?

52
0:03:51.720 --> 0:03:53.480
And what is your grammar going to be like?

53
0:03:55.400 --> 0:03:57.960
Second example, Microsoft.

54
0:03:57.960 --> 0:04:01.480
This comes from Microsoft style guide documentation.

55
0:04:01.520 --> 0:04:03.520
Once again, I've not made this up.

56
0:04:03.800 --> 0:04:05.080
These are not my principles.

57
0:04:08.960 --> 0:04:15.880
Warm and relaxed, crisp and clear, bias free communication.

58
0:04:16.480 --> 0:04:24.120
So if we look at crisp and clear, it means that we're to the point we write for scanning first, reading second.

59
0:04:24.320 --> 0:04:25.960
We make it simple above all.

60
0:04:25.960 --> 0:04:34.760
Vocabulary, whenever possible, choose words that have one meaning as opposed to words with multiple meanings and grammar.

61
0:04:34.960 --> 0:04:38.800
Make every word sentence count.

62
0:04:39.000 --> 0:04:41.720
Concise, clear sentences.

63
0:04:41.920 --> 0:04:46.920
So once again, it's easier for you to get to concise, clear sentences.

64
0:04:47.120 --> 0:04:54.720
It's easier for you to get to whenever possible use words that have one clear meaning when you know what your principle is.

65
0:04:54.720 --> 0:04:57.720
So that's something that should not be avoided.

66
0:04:59.920 --> 0:05:01.120
We talked about voice.

67
0:05:01.320 --> 0:05:07.640
There's also tone so you can have a voice, but you can have different types of tone for a voice.

68
0:05:07.840 --> 0:05:12.720
So if you have a warning label, you'll have like it will be urgent.

69
0:05:12.920 --> 0:05:15.840
You have an urgent tone, but the voice is the same.

70
0:05:16.680 --> 0:05:22.960
If it's empathy, like a getting started guy, you want that person to feel like, yes, they're welcome.

71
0:05:22.960 --> 0:05:27.240
Yes, they suspend their whole weekend with your documentation.

72
0:05:27.440 --> 0:05:30.400
Whole weekend and inclusiveness.

73
0:05:30.600 --> 0:05:33.640
The introduction is also welcome.

74
0:05:33.840 --> 0:05:35.120
This is what we're about.

75
0:05:35.320 --> 0:05:39.920
Yes, this documentation is for you and will solve your problem.

76
0:05:40.120 --> 0:05:41.760
Those are the different tones.

77
0:05:41.960 --> 0:05:48.960
And once again, you have one voice, but several different tones in your documentation.

78
0:05:48.960 --> 0:05:59.760
All of this is codified not in a product manager's head, not in the lead engineer's head, but in a style guide.

79
0:05:59.960 --> 0:06:04.960
So the examples that we looked at were from Google and Microsoft style guides.

80
0:06:05.160 --> 0:06:08.960
So there are several different style guides that you can use for technical writing.

81
0:06:09.160 --> 0:06:10.960
There's a Google Microsoft.

82
0:06:11.160 --> 0:06:12.760
Smashing magazine has one.

83
0:06:12.960 --> 0:06:16.760
And the one that I personally use for my team is Digital Ocean.

84
0:06:16.760 --> 0:06:23.760
I love Digital Ocean's technical writing guide because it gets to the point and it gets the information really quickly.

85
0:06:23.960 --> 0:06:33.360
If you're using Microsoft style guide, it's literally over a thousand pages and I literally and I think Google is around a thou over a thousand pages as well.

86
0:06:33.560 --> 0:06:38.560
So even if the best intentions, one just doesn't have time for that.

87
0:06:38.760 --> 0:06:42.560
Here is a list of common documentation pitfalls.

88
0:06:42.560 --> 0:06:53.360
This data comes from the Google season of docs 2021 and some of the pitfalls that you have of documentation include the documentation is lacking specific use cases.

89
0:06:53.560 --> 0:06:55.360
The documentation is disorganized.

90
0:06:55.560 --> 0:06:58.360
It's outdated, not consistent.

91
0:06:58.560 --> 0:07:01.360
You don't know of these problems, right?

92
0:07:01.560 --> 0:07:03.360
Your documentation is perfect.

93
0:07:03.560 --> 0:07:09.360
And the documentation needs to be converted into a different tool, platform or format.

94
0:07:09.360 --> 0:07:13.160
Oh, no, so many moving parts.

95
0:07:13.360 --> 0:07:16.160
No wonder why no one keeps up with their documentation.

96
0:07:16.360 --> 0:07:17.760
You have voice.

97
0:07:17.960 --> 0:07:18.760
You have tone.

98
0:07:18.960 --> 0:07:20.360
You have the fact that it's out today.

99
0:07:20.560 --> 0:07:23.160
You have the fact that people are using different tools.

100
0:07:23.360 --> 0:07:24.960
How do you keep it together?

101
0:07:25.160 --> 0:07:28.960
Automation to the rescue.

102
0:07:28.960 --> 0:07:41.760
So this is where we're going to use CI CD tooling and automation to make sure that we take our principles and best practices and actually implement them.

103
0:07:41.960 --> 0:07:52.760
So we're going to take a step back using a CI CD workflow is part of a docs as code workflow and with a docs as code workflow, it has several parts.

104
0:07:52.960 --> 0:07:56.760
One, you're using version control like it.

105
0:07:56.760 --> 0:08:03.960
Second, you're building documentation with open source platform like Spinks Gatsby, Next.

106
0:08:04.160 --> 0:08:05.560
JS, Docosaurus.

107
0:08:05.760 --> 0:08:09.160
The documentation is written in MDX or Markdown.

108
0:08:09.360 --> 0:08:17.760
I know there's some ASCII people out there, but in this presentation, we're going to talk about Markdown and you make use of CI CD tools.

109
0:08:17.960 --> 0:08:23.960
If you want to learn more about docs as code, you can read and Gentles book docs like code.

110
0:08:23.960 --> 0:08:29.560
Her first edition was 2016 and she just updated it actually last month.

111
0:08:29.760 --> 0:08:30.560
She's amazing.

112
0:08:30.760 --> 0:08:31.360
I love that book.

113
0:08:31.560 --> 0:08:32.360
You just give it to everyone.

114
0:08:34.560 --> 0:08:39.360
All right, automated your team style guide starter pack.

115
0:08:39.560 --> 0:08:45.360
So in this situation case, we're going to use GitHub actions, Markdown and veil.

116
0:08:45.560 --> 0:08:46.760
I'll talk about what those tools are.

117
0:08:46.960 --> 0:08:49.360
So GitHub actions, the basics.

118
0:08:49.560 --> 0:08:52.160
It's a CI CD solution provided by GitHub.

119
0:08:52.160 --> 0:08:54.360
It's made up of workflow and events.

120
0:08:54.560 --> 0:09:06.560
It contains a marketplace of third party actions so you can write your own actions, but you can also use actions that are already pre-written in the marketplace and it's great for running linters and tests.

121
0:09:06.760 --> 0:09:11.360
Many of you probably already use it for JavaScript and Python and other programming languages.

122
0:09:12.760 --> 0:09:15.560
Markdown, it's platform agnostic.

123
0:09:15.760 --> 0:09:18.960
You use it with platforms such as Gatsby, Hugo or Docosaurus.

124
0:09:19.160 --> 0:09:20.560
Not as complex as code.

125
0:09:20.560 --> 0:09:28.560
I put this down because many people who are touching your documentation, they're not always engineers and I in our team.

126
0:09:28.760 --> 0:09:34.360
We have a project manager and she did not know anything about it.

127
0:09:34.560 --> 0:09:39.160
She knew nothing about code, but she actually updates documentation using Markdown.

128
0:09:39.360 --> 0:09:47.360
Another thing I like about Markdown is you can use MDX and MDX is where you can import and use react components.

129
0:09:47.360 --> 0:09:53.360
So if you want something that is interactive, MDX really gives you some more flexibility and MD.

130
0:09:55.360 --> 0:09:58.360
Vail is a linter for pros.

131
0:09:58.560 --> 0:10:04.560
There are extensions for Visual Studio Code, JetBrains and Vim and Emacs fans out there.

132
0:10:07.360 --> 0:10:09.760
It's not the only linter out there.

133
0:10:09.960 --> 0:10:12.160
You can check out Woke and WriteGood.

134
0:10:12.360 --> 0:10:16.760
The one thing I will say is with Vail, you can use many linters within Vail.

135
0:10:16.760 --> 0:10:21.160
Woke is what it sounds like.

136
0:10:21.360 --> 0:10:25.160
I'll let you check that out on your own time.

137
0:10:25.360 --> 0:10:28.160
The code.

138
0:10:28.360 --> 0:10:31.160
Let's see.

139
0:10:31.360 --> 0:10:38.160
If we have time, I would love to run a demo, but we'll see what happens.

140
0:10:38.360 --> 0:10:43.160
I would have to use a second screen, so let's just stay with this for now.

141
0:10:43.160 --> 0:10:48.760
This is the Vail config file and the Vail config file, what you're looking at is a style path.

142
0:10:48.960 --> 0:10:52.760
The alert level, I believe there's three different alert levels.

143
0:10:52.960 --> 0:10:56.560
What kind of format you're using, which is Markdown and style guides.

144
0:10:56.760 --> 0:11:03.560
In this case, you're not writing your own style guide, but you're using style guides created by WriteGood and Google.

145
0:11:04.760 --> 0:11:08.160
This is what a typical workflow looks like.

146
0:11:08.160 --> 0:11:14.560
This is the Vail one and you have on which triggers the workflow.

147
0:11:14.760 --> 0:11:23.560
The trigger is, in this case, a push and this code will run on the main branch.

148
0:11:23.760 --> 0:11:25.560
You're not stuck on one branch.

149
0:11:25.760 --> 0:11:29.960
If you want to run this on multiple branches, you can, but in this situation,

150
0:11:30.160 --> 0:11:37.360
we're just using one branch and if you go to 25 to 27, those are the style guides

151
0:11:37.360 --> 0:11:45.360
that we're using in this situation and we're using Google and we're also using WriteGood.

152
0:11:45.560 --> 0:11:49.560
I just added this today because I don't want this to seem like magic.

153
0:11:49.760 --> 0:11:56.160
When you're using Google's Vail YAML file, this is what it looks like.

154
0:11:56.360 --> 0:12:04.360
It's basically a regular expression, this is a first person one and it's checking to see if you're using I.

155
0:12:04.360 --> 0:12:10.760
What you could do is if you want to make your own Vail linter, you can go to Google,

156
0:12:10.960 --> 0:12:17.760
you can go to Microsoft and you can use their examples to help you get started.

157
0:12:17.960 --> 0:12:22.560
Finally, takeaways, the benefits of automating your documentation.

158
0:12:22.760 --> 0:12:27.560
It greatly speeds up the publishing process, which is a plus.

159
0:12:27.760 --> 0:12:33.160
The Git increases workflow transparency, Git blame.

160
0:12:33.160 --> 0:12:38.760
It encourages developers to take a more active role in maintaining documentation

161
0:12:38.960 --> 0:12:43.760
because it's using the similar tools that developers are using to develop code,

162
0:12:43.960 --> 0:12:51.960
which is like Git, VIM, MDX and it up skills technical writers.

163
0:12:52.160 --> 0:12:56.560
There are many technical writers out there that are not software developers

164
0:12:56.760 --> 0:13:00.560
and they ask a developer, well, what do I need to know?

165
0:13:00.560 --> 0:13:02.960
What kind of coding skills do I need?

166
0:13:03.160 --> 0:13:06.160
And they're like C++, which is fine.

167
0:13:06.360 --> 0:13:13.360
It's fine, but we're not giving them the kind of advice they need to use this data on a day to day basis.

168
0:13:13.560 --> 0:13:20.360
So if you go to Twitter, if you go to LinkedIn, if you go to write the docs Slack channel,

169
0:13:20.560 --> 0:13:27.360
there are technical writers who want to know how to upskill and knowing Git,

170
0:13:27.360 --> 0:13:34.160
knowing how to use markdown, knowing a sprinkling of HTML, CSS, JavaScript,

171
0:13:34.360 --> 0:13:38.160
can really give them the skills where they can actually use this on the job,

172
0:13:38.360 --> 0:13:39.560
which is really important.

173
0:13:39.760 --> 0:13:42.760
So you have these coding skills that they could actually implement.

174
0:13:42.960 --> 0:13:46.760
And it's one of the reasons why I like the docs's code.

175
0:13:46.960 --> 0:13:50.760
Caveats, these are the cons.

176
0:13:50.760 --> 0:14:00.560
When I work with a team, I would want them to already use a style guide without the automation.

177
0:14:00.760 --> 0:14:05.160
This is important because you can figure out what you want in your style guide,

178
0:14:05.360 --> 0:14:09.560
what should be taken out, and you can actually build a process.

179
0:14:09.760 --> 0:14:14.560
Once you're confident with that process, then it's time to automate.

180
0:14:14.560 --> 0:14:20.560
Second, you figure out how to deal with false positives.

181
0:14:20.760 --> 0:14:23.560
Vail is going to be wrong.

182
0:14:23.760 --> 0:14:28.560
You're going to have to talk to your team and figure out what's going to happen

183
0:14:28.760 --> 0:14:30.960
when a tool gives you the wrong answer.

184
0:14:31.160 --> 0:14:38.360
I've had teams where they've gotten a false positive and it really destabilized them.

185
0:14:38.560 --> 0:14:40.960
And so having that plan is important.

186
0:14:41.160 --> 0:14:43.560
And finally, this is the most important part.

187
0:14:43.560 --> 0:14:55.560
Automation will not solve for poor team communication, pettingness, and office bullies.

188
0:14:55.760 --> 0:15:01.960
You can't use CICD to deal with bullies.

189
0:15:02.160 --> 0:15:08.360
You actually need to talk to them and you actually need a conversation.

190
0:15:08.560 --> 0:15:09.960
Thank you very much.

191
0:15:09.960 --> 0:15:14.960
You can find me at Document Rights on Twitter and YouTube.

192
0:15:15.160 --> 0:15:18.960
Wait, wait, wait.

193
0:15:19.160 --> 0:15:20.760
Yes.

194
0:15:20.960 --> 0:15:21.760
Okay.

195
0:15:21.960 --> 0:15:22.760
Yes.

196
0:15:22.960 --> 0:15:25.960
We're going to run this.

197
0:15:26.160 --> 0:15:28.960
Wait, wait.

198
0:15:29.160 --> 0:15:30.760
We only have like two or three minutes.

199
0:15:30.960 --> 0:15:32.960
So let's not do too much clapping.

200
0:15:33.160 --> 0:15:35.360
This is what the repo looks like.

201
0:15:35.560 --> 0:15:37.160
This is a bare bone.

202
0:15:37.360 --> 0:15:39.160
What I have is getting started guy.

203
0:15:39.160 --> 0:15:43.960
I've used Obama if some you don't need to use Obama.

204
0:15:44.160 --> 0:15:49.160
There's a there's actually a Trump one too.

205
0:15:51.160 --> 0:15:56.160
So we have this and get status.

206
0:15:56.360 --> 0:16:02.160
Get add get commit Obama example.

207
0:16:02.360 --> 0:16:03.960
I know this is not great.

208
0:16:04.160 --> 0:16:07.160
And then let's push this.

209
0:16:07.160 --> 0:16:13.760
So I am now pushing this to get hub, which is here.

210
0:16:13.960 --> 0:16:15.760
So this is my GitHub repo.

211
0:16:15.960 --> 0:16:20.160
And here you see the workflows, the config file to getting started guide.

212
0:16:20.360 --> 0:16:24.760
And this is where your actions are located.

213
0:16:24.960 --> 0:16:31.160
And this to the left of your actions in this example, I'm only using one action,

214
0:16:31.360 --> 0:16:32.760
but you can use many actions.

215
0:16:32.760 --> 0:16:37.160
And here I'm actually running the code.

216
0:16:37.360 --> 0:16:40.960
So it's still building.

217
0:16:41.160 --> 0:16:42.960
And how much time do I have?

218
0:16:43.160 --> 0:16:44.560
Do I have one minute?

219
0:16:44.760 --> 0:16:45.360
I have.

220
0:16:45.560 --> 0:16:48.560
Oh, someone said two.

221
0:16:52.760 --> 0:16:59.360
So build yay this built, which is always a plus during a live demo.

222
0:16:59.360 --> 0:17:03.360
And if we scroll down, here are all the issues.

223
0:17:03.560 --> 0:17:05.160
So there are different levels.

224
0:17:05.360 --> 0:17:06.760
One level is an error.

225
0:17:06.960 --> 0:17:08.960
The next error is a warning.

226
0:17:09.160 --> 0:17:11.760
So error is spell out all ordinal numbers.

227
0:17:11.960 --> 0:17:17.360
And what I like about this is let's see if this is going to work for us.

228
0:17:17.560 --> 0:17:22.360
This shows you this shows you exactly what your error is.

229
0:17:22.560 --> 0:17:28.160
And you don't need a person to comb through the documentation and tell you

230
0:17:28.160 --> 0:17:32.760
this like this is a linter telling you exactly what you should change and your

231
0:17:32.960 --> 0:17:36.760
higher level problems you you can have a product manager or a technical writer

232
0:17:36.960 --> 0:17:40.160
deal with and do we have time for questions?

233
0:17:40.360 --> 0:17:41.760
No. All right.

234
0:17:41.760 --> 0:17:59.760
Thank you, everyone.

