WEBVTT

00:00.000 --> 00:06.120
Thanks very much.

00:06.120 --> 00:09.960
I leave you in the capable hands of Karen Jax.

00:09.960 --> 00:14.120
Hi, thanks, Jimmy.

00:14.120 --> 00:22.760
Hi, so I'm Karen Jax, and I'm going to talk to you today about DBA evolution or the changing

00:22.760 --> 00:24.760
role of the database administrator.

00:24.760 --> 00:29.720
So you can see that my title at the moment isn't database administrator, but I was a

00:29.720 --> 00:30.720
DBA administrator over 20 years.

00:30.720 --> 00:35.120
I'm not going to talk through the agenda, I've just left it there so that you can keep

00:35.120 --> 00:40.400
track of where we're up to and when I might stop talking.

00:40.400 --> 00:44.080
So I promised that this would be a talk for everyone that's pondered life's important

00:44.080 --> 00:45.080
questions.

00:45.080 --> 00:47.200
What does a DBA actually do?

00:47.200 --> 00:50.200
Why are DBAs always so grumpy?

00:50.200 --> 00:54.640
How has the role of the DBA changed over the last couple of decades?

00:54.640 --> 00:57.240
What's the DBA of the future going to do?

00:57.240 --> 01:01.560
And will autonomous databases finally have put us all out of work?

01:01.560 --> 01:07.440
So this year marks the 25th anniversary of the start of my career as a DBA, so I thought

01:07.440 --> 01:13.840
that I'd allow myself a bit of a self-indulgent retrospective.

01:13.840 --> 01:17.840
So first, the evolution of this particular DBA, and I'm going to apologise to Claire

01:17.840 --> 01:22.160
at this point because this is going to be a bit of a me, me, me section of my talk,

01:22.160 --> 01:26.560
so I'm just going to have to get through that bit.

01:26.560 --> 01:30.000
Being a DBA definitely wasn't an ambition of mine at school.

01:30.000 --> 01:34.080
Anybody here say database administrator when they were asked what they wanted to do when

01:34.080 --> 01:37.080
they grew up?

01:37.080 --> 01:41.520
I didn't even know I was going to go into IT until about a year before I started my

01:41.520 --> 01:45.360
career, although with hindsight it's fairly obvious that that's what I was destined to

01:45.360 --> 01:46.840
do.

01:46.840 --> 01:51.000
My dad taught me to count in binary before I could even properly count in decimal.

01:51.000 --> 01:57.120
He built me my first computer, an Acorn Atom, which he later replaced with a BBC Model B.

01:57.120 --> 02:02.720
And obviously I used the computer for playing Chuckie Egg and other games, but I also learnt

02:02.720 --> 02:06.280
to code in BBC Basic.

02:06.280 --> 02:11.920
And I actually looked up the spec of the BBC Model B in case anyone's interested, so it

02:11.920 --> 02:18.920
had a 2 megahertz processor and 64K of RAM.

02:18.920 --> 02:23.960
I then went on to do a maths degree because I still had absolutely no idea what I wanted

02:23.960 --> 02:26.960
to do, and maths was my favourite subject.

02:26.960 --> 02:30.520
And after that I figured I probably ought to get some real world skills, so I did a

02:30.520 --> 02:33.920
Masters in Software Development.

02:33.920 --> 02:38.600
Towards the end of that, one of the graduate schemes I applied to did some aptitude tests,

02:38.600 --> 02:42.840
and they came back to say that they thought I'd probably be good as a DBA.

02:42.840 --> 02:47.640
So once I'd asked Jeeves what one of those was, I thought that sounded like a fairly

02:47.640 --> 02:52.160
good fit, and that I'd give it a go.

02:52.160 --> 02:57.360
Fortunately, it turns out that Jeeves was right, and the aptitude tests.

02:57.360 --> 03:02.680
This is what my careers looked like so far, so I really haven't strayed very far from

03:02.680 --> 03:06.760
my DBA role.

03:06.760 --> 03:11.560
Obviously the things that I do in my job have changed over time because I've gradually moved

03:11.560 --> 03:17.160
into more senior roles, and I've gradually changed the focus of what I do, but I've tried

03:17.160 --> 03:21.560
not to let that influence what I talk about too much, I'm trying to talk more about the

03:21.560 --> 03:25.800
DBA role in general.

03:25.800 --> 03:30.960
So let's set the scene for the start of my career as a DBA in 1998.

03:30.960 --> 03:37.240
The 90s brought us grunge and Britpop, they also brought us the first truly portable

03:37.240 --> 03:42.320
and affordable mobile phones, for example the Nokia 3210.

03:42.320 --> 03:46.200
They brought us the first text message, the Palm Pilots, and also for better or worse

03:46.200 --> 03:51.080
Amazon and Google.

03:51.080 --> 03:55.120
But what does a DBA actually do?

03:55.120 --> 04:00.480
Just so that we're all on the same page, I've taken highlights of definitions of a DBA from

04:00.480 --> 04:07.640
various places, I looked at career services, DBMS vendors, and job sites, and the general

04:07.640 --> 04:15.640
consensus is that a DBA manages and secures computer systems that store data using specialist

04:15.640 --> 04:16.640
software.

04:16.640 --> 04:21.480
So they're all pretty much agreed, but that doesn't really tell us anything about what

04:21.480 --> 04:26.360
a DBA actually does.

04:26.360 --> 04:32.400
So first of all, one thing to note is that there are lots of different types of DBA,

04:32.400 --> 04:36.920
and the different types of DBA will be different from organisation to organisation.

04:36.920 --> 04:47.280
So at Acme, for example, we might have the DBA role split into many different DBA roles,

04:47.280 --> 04:54.200
whereas at Wonka Industries we might have DBAs who are in one pool who are all responsible

04:54.200 --> 04:59.000
for all DBA tasks.

04:59.000 --> 05:05.320
A traditional split is between the production DBA and the development DBA, so the production

05:05.320 --> 05:09.200
DBA will be responsible for keeping all of the databases in the production environment

05:09.200 --> 05:14.760
up and running, so looking at things like availability, performance, security.

05:14.760 --> 05:19.820
The development DBA would work more closely with the developers, so they've got a focus

05:19.820 --> 05:25.680
on building and maintaining the database environment that's supporting the application development

05:25.680 --> 05:32.040
lifecycle.

05:32.040 --> 05:37.640
In some organisations you might see a split of system versus application DBA.

05:37.640 --> 05:44.240
So here the application DBA will be more looking at the logical application related aspects

05:44.240 --> 05:49.560
of the database, whereas the system DBA is going to be responsible for the underlying

05:49.560 --> 05:54.960
software and the physical infrastructure.

05:54.960 --> 05:57.120
And the split's not clear cut.

05:57.120 --> 06:01.600
The roles often overlap, they may or they may not, and you might see lots of different

06:01.600 --> 06:09.920
types of DBA as well, so you might have a data warehouse DBA who will look after the

06:09.920 --> 06:14.880
data warehouses, particularly ETL from various data sources into the organisation's data

06:14.880 --> 06:15.880
warehouse.

06:15.880 --> 06:22.120
A cloud DBA I think I've got in there as well, who will be looking after cloud hosted databases,

06:22.120 --> 06:27.560
including liaising with the cloud provider.

06:27.560 --> 06:32.640
Also you might see database architects, I know it doesn't have DBA in the title, but

06:32.640 --> 06:35.920
it's a very closely related role and often overlaps.

06:35.920 --> 06:41.000
It's a role that's existed for at least a couple of decades, but it's gradually become

06:41.000 --> 06:49.960
more popular and seems in a lot of cases to have split out from the traditional DBA role.

06:49.960 --> 06:54.680
And it's not an exhaustive list, you could see all sorts of different types of DBA.

06:54.680 --> 06:59.800
You might also get DBAs that look after just one particular task, such as backup and recovery

06:59.800 --> 07:07.880
or replication, and any or all of those might be split into junior DBA and senior DBA, with

07:07.880 --> 07:13.440
the junior DBA doing a lot of the day-to-day tasks and the senior DBA having more of a

07:13.440 --> 07:17.440
strategic focus.

07:17.440 --> 07:23.400
Wrong button.

07:23.400 --> 07:27.640
So we saw the definition of a DBA role, but as I said, it didn't really tell us much about

07:27.640 --> 07:29.560
what a DBA actually does.

07:29.560 --> 07:34.920
So what does a DBA do in 2023?

07:34.920 --> 07:39.360
I looked at the different definitions that I showed you earlier and there were lists

07:39.360 --> 07:43.160
of responsibilities that went with those and I've taken information from different job

07:43.160 --> 07:48.080
adverts and tried to pull together the list.

07:48.080 --> 07:55.880
So most people seem to agree that a DBA will do some or all of designing, implementing

07:55.880 --> 08:01.920
and managing backup and recovery policies.

08:01.920 --> 08:06.000
Designing and implementing security policies and managing database access, although in

08:06.000 --> 08:10.440
a lot of places the security role has been split out into a separate security team these

08:10.440 --> 08:19.800
days, implementing monitoring and ongoing monitoring of the databases, design and development

08:19.800 --> 08:24.640
of the database, including data modelling or maybe just reviewing data models that have

08:24.640 --> 08:30.040
been created by the development team.

08:30.040 --> 08:36.600
Support and troubleshooting, including often being on a 24-7 on-call rotor.

08:36.600 --> 08:42.680
And database software install and upgrades listed in a lot of them as a specific task,

08:42.680 --> 08:49.120
but in a lot of places that's automate or the installation side of things is automated,

08:49.120 --> 08:55.000
so the DBA would either be responsible for implementing that automation or another team

08:55.000 --> 09:00.040
would do the automation and the DBA wouldn't actually have anything to do there.

09:00.040 --> 09:04.920
Upgrades I would say it's more of a strategic role in working with the application team

09:04.920 --> 09:10.360
to make sure that upgrades are tested correctly so that they're successful.

09:10.360 --> 09:17.080
And there's a whole other page, a whole other list of responsibilities, so providing database

09:17.080 --> 09:23.960
expertise to other teams, performance tuning, enhancement, often troubleshooting, capacity

09:23.960 --> 09:29.880
planning, creating databases, including for development and test environments, database

09:29.880 --> 09:36.760
maintenance and data protection and GDPR considerations.

09:36.760 --> 09:41.640
So that was a massive, sorry, before I move on, it's a massive long list of responsibilities,

09:41.640 --> 09:49.200
so clearly in most cases one person can't do all of those things.

09:49.200 --> 09:53.200
This chart shows some of the most requested skills for a DBA in the UK.

09:53.200 --> 10:00.040
I've taken this from IT Jobs Watch, so it's for the six months up to January 2023, so

10:00.040 --> 10:08.000
we can see that SQL is the first requested skill and I went up to number 23 because there

10:08.000 --> 10:11.640
we've got PostgreSQL listed there as well.

10:11.640 --> 10:18.120
On the next page I've summarised those different responsibilities, sorry, the different skills

10:18.120 --> 10:20.960
that are being asked for.

10:20.960 --> 10:31.800
So consolidating the list of skills, it boils down to SQL, so writing SQL, making it more

10:31.800 --> 10:37.920
efficient, potentially knowing procedural languages, integration and everyone's favourite

10:37.920 --> 10:41.600
ORMs.

10:41.600 --> 10:49.200
One or more database management systems, usually still asking for relational.

10:49.200 --> 10:54.320
Charge of operating systems, so this will be traditional operating systems but also

10:54.320 --> 10:57.920
various different cloud environments.

10:57.920 --> 11:02.200
Performance tuning, database migration seems to be quite a popular thing, people are always

11:02.200 --> 11:06.160
moving from one database to another.

11:06.160 --> 11:09.960
Disaster recovery, social skills is listed most of the places as a separate thing, I

11:09.960 --> 11:14.080
don't know what they're trying to say there.

11:14.080 --> 11:24.280
HA replication clustering type skills, and then not listed in any of the things I found

11:24.280 --> 11:29.520
as specific skills but most DBAs I know are actually expected to know about different

11:29.520 --> 11:33.520
DevOps tools and methodologies and they're expected to know how to use automation tools

11:33.520 --> 11:39.840
like Ansible or Puppet to do things.

11:39.840 --> 11:44.600
So how does all that compare to what a DBA did in 1998?

11:44.600 --> 11:48.520
On paper it actually looks very similar, so there I've just reproduced the same list of

11:48.520 --> 11:54.560
responsibilities as I had for what a DBA does in 2023, although I've taken off GDPR because

11:54.560 --> 11:57.600
that didn't exist yet.

11:57.600 --> 12:00.720
Does that mean nothing's changed?

12:00.720 --> 12:08.080
Well obviously, although the responsibilities are pretty much the same, the skills that

12:08.080 --> 12:14.200
a DBA needs and the tools that a DBA is expressed to be able to use have changed massively because

12:14.200 --> 12:20.000
a lot of the tasks that they do day to day are done very differently.

12:20.000 --> 12:25.160
And obviously that's not limited to DBA tasks or even IT tasks, we do loads of day to day

12:25.160 --> 12:27.040
tasks differently as well.

12:27.040 --> 12:32.680
So I've used send my sister a birthday card as an example, so that's the flow chart for

12:32.680 --> 12:37.840
1998, I would have gone to the shop, I would have browsed the racks, chosen a card I liked,

12:37.840 --> 12:42.040
I would have paid for that card and probably bought a stamp at the same time, taken it

12:42.040 --> 12:47.120
home, written a message in it, put my sister's address on it, stuck the stamp on and then

12:47.120 --> 12:53.160
walked it to my local post box to be collected by the post delivery.

12:53.160 --> 12:59.000
I can still use that method in 2023 if I want to, but this is what I'm more likely to do.

12:59.000 --> 13:04.040
I'm going to open the app of my favourite online retail, greetings card retailer, I'm

13:04.040 --> 13:08.760
going to upload a photo from my phone, type in a message and my sister's address, pay

13:08.760 --> 13:13.880
using my disposable online credit card and just get them to send it directly to my sister

13:13.880 --> 13:20.460
as soon as it's printed.

13:20.460 --> 13:25.960
So if we go back to DBA tasks, I've taken install database software as an example, I

13:25.960 --> 13:29.400
have not put this there to be read.

13:29.400 --> 13:36.120
This is an extract from the Oracle 7.3 installation guide, which was my first database installation

13:36.120 --> 13:37.120
that I did.

13:37.120 --> 13:43.160
I can't imagine that many DBAs in 2023 need to first walk to the machine room and put

13:43.160 --> 13:46.800
the CD into the server before they start their installation.

13:46.800 --> 13:53.600
It used to take me, I think, two days to prepare and perform a single database install and

13:53.600 --> 13:56.440
we didn't have a repeatable process.

13:56.440 --> 14:00.680
There was a silent mode that was supposed to allow us to script it, but because none

14:00.680 --> 14:05.320
of the servers were installed using any kind of automation, they all had their own particularities

14:05.320 --> 14:09.560
so it didn't work and we didn't bother with it.

14:09.560 --> 14:16.120
In 2023, a DBA wouldn't be expected to know how to use an automation tool such as Ansible

14:16.120 --> 14:22.160
to do a database software install and they probably not just install a standalone database,

14:22.160 --> 14:30.240
they can install the whole database infrastructure, including high availability monitoring, backup

14:30.240 --> 14:40.080
and recovery all in one command.

14:40.080 --> 14:45.360
What kind of skills did a DBA need in 1998?

14:45.360 --> 14:49.840
I can't reproduce the list of skills quite as easily because that has changed, but a

14:49.840 --> 14:52.600
lot of the general skills were the same.

14:52.600 --> 14:59.640
So you'd be expected to know SQL and probably a procedural language.

14:59.640 --> 15:05.520
You'd be expected to know one relational database management system.

15:05.520 --> 15:10.760
You'd probably be expected to know how to do Unix, basic admin and shell scripting,

15:10.760 --> 15:18.000
database performance tuning and disaster recovery, which was probably calling someone to bring

15:18.000 --> 15:24.160
the tapes back on site.

15:24.160 --> 15:28.520
So that's what a DBA was doing in 1998 and is doing today.

15:28.520 --> 15:34.560
What will a DBA do in another 25 years' time?

15:34.560 --> 15:37.440
Well I'm going to hedge that question for now.

15:37.440 --> 15:43.280
So before we start looking at what a DBA might do in 25 years' time, everyone likes a bit

15:43.280 --> 15:44.620
of buzzword bingo.

15:44.620 --> 15:50.320
So I thought we'd have a look at the buzzwords, trends, hypes from the last few decades just

15:50.320 --> 15:57.360
to give us an idea of what's changed around our vintage DBA and what's still changing.

15:57.360 --> 16:00.400
So the 1990s.

16:00.400 --> 16:06.120
The 90s brought us the World Wide Web, first with painfully slow dial-up access and finally

16:06.120 --> 16:11.920
broadband internet, which meant that remote work was finally a possibility for some DBAs,

16:11.920 --> 16:19.120
even if it was just to avoid having to trek into the office when doing 24-7 on call.

16:19.120 --> 16:21.480
The concept of big data was introduced.

16:21.480 --> 16:27.320
Data warehouses became popular and we needed massively parallel processing, MPP, to analyse

16:27.320 --> 16:30.080
all of this data, so Teradata became popular.

16:30.080 --> 16:33.680
Neteaser didn't come along until 2000s.

16:33.680 --> 16:39.480
Scrum started to creep into our normal everyday work process.

16:39.480 --> 16:44.840
Object-programming and from their object-oriented databases were the next big thing in programming

16:44.840 --> 16:46.800
methodology.

16:46.800 --> 16:51.800
Everybody was talking about AI and machine learning, even though they weren't new concepts,

16:51.800 --> 16:56.120
with Deep Blue beating Grandmaster Kasparov at chess.

16:56.120 --> 16:58.760
We were blessed with PostgreSQL and Linux.

16:58.760 --> 17:07.280
SSDs started to replace spinning disk hard drives, but that's still a gradual ongoing

17:07.280 --> 17:08.280
move.

17:08.280 --> 17:12.880
And a lot of us missed out on New Year's celebrations because we were on call to make sure that

17:12.880 --> 17:20.920
planes didn't fall out of the sky and fortunes weren't wiped out due to the Y2K bug.

17:20.920 --> 17:23.240
The 2000s.

17:23.240 --> 17:25.680
We were introduced to blockchain.

17:25.680 --> 17:30.200
Cloud was and still is one of the biggest buzzwords with a move away from the traditional

17:30.200 --> 17:32.000
data centre.

17:32.000 --> 17:34.040
Everything started to be provided as a service.

17:34.040 --> 17:37.680
We had software as a service and platform as a service.

17:37.680 --> 17:42.400
We were all expected to be agile, to embrace DevOps methodologies and to implement continuous

17:42.400 --> 17:45.680
integration and continuous deployment.

17:45.680 --> 17:51.960
The Internet of Things and social media contributed to a massive growth in data volumes.

17:51.960 --> 17:57.680
We got Hadoop, Exadata, NoSQL and JSON as new ways to store, process, analyse and describe

17:57.680 --> 17:59.920
data.

17:59.920 --> 18:05.680
Base was proposed as an alternative to ACID, favouring availability over consistency for

18:05.680 --> 18:09.920
distributed systems.

18:09.920 --> 18:14.560
Access to data on the move started to be possible with WiFi and containers were introduced,

18:14.560 --> 18:18.280
although they weren't at this point quite ready for databases.

18:18.280 --> 18:27.200
I'm going to take a deep breath and drink some water.

18:27.200 --> 18:37.240
Okay, 2010s, infrastructure joined the as a service party.

18:37.240 --> 18:40.600
NFTs, non-fungible tokens were introduced.

18:40.600 --> 18:45.960
We started to store our data in data lakes which sometimes became data swamps.

18:45.960 --> 18:50.480
Columna databases, even though they were actually a concept from the 1970s, became popular and

18:50.480 --> 18:53.160
joined the other NoSQL databases.

18:53.160 --> 18:58.120
We started to avoid putting all of our eggs in one basket with multi-cloud strategies.

18:58.120 --> 19:01.880
Oracle announced their autonomous databases which meant there was not going to be any

19:01.880 --> 19:04.880
need for DBAs any more.

19:04.880 --> 19:09.640
Cloud Native was the next big thing with microservices, Docker and Kubernetes.

19:09.640 --> 19:15.840
And the EU caused DBAs all across Europe, massive headaches by introducing the general

19:15.840 --> 19:22.560
data protection regulations, GDPR.

19:22.560 --> 19:27.960
The 2020s haven't all been a bed of roses in tech so far with a global pandemic and

19:27.960 --> 19:29.760
massive layoffs.

19:29.760 --> 19:34.680
On the other hand, remote work has started to become the norm for a lot of us.

19:34.680 --> 19:41.440
Access to data on the move is getting faster with the introduction of 5G.

19:41.440 --> 19:43.480
Zoom became a household name.

19:43.480 --> 19:45.440
Everyone's now heard of Mastodon.

19:45.440 --> 19:49.880
And apparently we're all going to be living in the metaverse and using chat GPT to write

19:49.880 --> 19:53.160
all of our reports and presentations.

19:53.160 --> 19:55.000
And that's just the first few years.

19:55.000 --> 20:03.880
So who knows what's going to have happened by the end of the 2020s?

20:03.880 --> 20:10.560
So we can look at a few ways that databases, I'm going to slow down a bit now.

20:10.560 --> 20:15.400
We can look at a few ways that databases have changed in response to all of those things

20:15.400 --> 20:19.180
that have been going on.

20:19.180 --> 20:24.240
This is a massively simplified view of the history of database management systems.

20:24.240 --> 20:26.260
Please don't quote me on this.

20:26.260 --> 20:34.880
So in around 1980, the relational database pretty much started to replace the old navigational

20:34.880 --> 20:35.880
databases.

20:35.880 --> 20:39.820
And it's been going strong since then and still is.

20:39.820 --> 20:51.600
In about 2000, various post-relational or NoSQL databases became popular and are still

20:51.600 --> 20:52.600
popular.

20:52.600 --> 20:54.080
And of course everything goes in cycles.

20:54.080 --> 20:59.760
The NoSQL databases were around before the relational databases, just that they weren't

20:59.760 --> 21:06.000
called NoSQL databases at that point.

21:06.000 --> 21:09.120
It's easy to think that relational databases are going away when we hear about all the

21:09.120 --> 21:13.080
different NoSQL databases there are and how popular they are.

21:13.080 --> 21:18.680
This is a chart from dbengines.com from January this year.

21:18.680 --> 21:23.440
And it shows that actually relational databases are more than twice as popular as all of the

21:23.440 --> 21:30.720
different types of database management system put together.

21:30.720 --> 21:35.040
And their figures also show that the popularity of relational database management systems

21:35.040 --> 21:41.760
has stayed fairly static over the last ten years.

21:41.760 --> 21:44.360
We've got more variety of databases.

21:44.360 --> 21:49.160
So in the 90s there was a handful of database management systems.

21:49.160 --> 21:53.400
And organizations would usually use one of those for all of their databases or maybe

21:53.400 --> 21:54.400
two.

21:54.400 --> 21:59.240
There are now over 400 different types of database management system.

21:59.240 --> 22:04.640
Most organizations don't restrict themselves to just one or two of those.

22:04.640 --> 22:10.560
So you'll get not just within one organization multiple database types but also within one

22:10.560 --> 22:14.560
application.

22:14.560 --> 22:20.560
So that means a DBA might be expected to know not just several relational database management

22:20.560 --> 22:23.160
systems but also various different NoSQL types.

22:23.160 --> 22:27.840
They might be expected to know about spatial databases, time series, graph databases or

22:27.840 --> 22:32.840
document store.

22:32.840 --> 22:35.120
Because I've got bigger.

22:35.120 --> 22:39.840
So the terms big data and very large database were introduced in the 90s but they don't

22:39.840 --> 22:44.000
actually tell us very much about the specific volume of data.

22:44.000 --> 22:51.120
The definition in most places I found a very large database is a database that stores so

22:51.120 --> 22:59.860
much data that its maintenance and architecture needs specialist tools and methodologies.

22:59.860 --> 23:05.080
So it's basically just a database that's so big that we haven't yet figured out how to

23:05.080 --> 23:06.740
manage it.

23:06.740 --> 23:10.960
So in the 90s most people I spoke to seem to think that a multi gigabyte database was

23:10.960 --> 23:12.720
fairly big.

23:12.720 --> 23:17.680
These days people have multi terabyte databases and they're seen as fairly normal.

23:17.680 --> 23:22.320
Once you start to get multi tens of terabytes you might start needing, might start to need

23:22.320 --> 23:29.800
some specialist methodologies.

23:29.800 --> 23:36.800
In 2018 IDC said that the global data sphere was predicted to grow to 175 zettabytes by

23:36.800 --> 23:39.680
2025.

23:39.680 --> 23:44.640
I haven't managed to find any later figures so I don't know if that's on course to still

23:44.640 --> 23:46.520
be the case.

23:46.520 --> 23:52.180
So the global data sphere is apparently all of the data that's created, captured and replicated

23:52.180 --> 23:56.640
in core edge and end point locations.

23:56.640 --> 23:59.600
And one zettabyte is a trillion gigabytes.

23:59.600 --> 24:06.720
So for anyone like me who has difficulty visualizing 175 trillion gigabytes, apparently if you

24:06.720 --> 24:13.160
burnt that onto CDs you'd have a stack of CDs that either took you to the moon 23 times

24:13.160 --> 24:17.840
or around the earth 222 times.

24:17.840 --> 24:22.680
So it doesn't look likely that there's going to be any shortage of data to manage any time

24:22.680 --> 24:26.880
soon.

24:26.880 --> 24:28.640
Databases have got more complex.

24:28.640 --> 24:35.160
I suspect we've all seen an application architecture diagram that looks approximately like that.

24:35.160 --> 24:42.140
We've got multiple database types not just as we said not just within one organization

24:42.140 --> 24:45.720
but also often for a single application.

24:45.720 --> 24:48.000
We've got multi cloud strategies.

24:48.000 --> 24:50.240
We've got containerized databases.

24:50.240 --> 24:52.960
We've got distributed systems.

24:52.960 --> 25:00.440
And we've got many interrelated components.

25:00.440 --> 25:07.280
So how has the DBA adapted in response to all of these changes?

25:07.280 --> 25:10.960
The DBA has had to develop a cloud mindset.

25:10.960 --> 25:15.520
I was really reluctant to embrace cloud.

25:15.520 --> 25:21.040
I can't remember when I first heard the word but I thought it was just a hype that was

25:21.040 --> 25:30.000
all going to blow over whether we like it or not cloud is here and it's growing so we

25:30.000 --> 25:32.080
have to work with it.

25:32.080 --> 25:36.360
So with the advent of cloud computing many DBAs are no longer actually responsible for

25:36.360 --> 25:39.440
managing on premise databases.

25:39.440 --> 25:43.120
The hardware and software is often managed by somebody else.

25:43.120 --> 25:49.640
So the cloud DBA will need to have knowledge of probably multiple different cloud platforms.

25:49.640 --> 26:00.000
And even organizations that keep their databases on premises are often moving to a cloud-like

26:00.000 --> 26:07.920
architecture, a cloud-like model with self-service databases.

26:07.920 --> 26:09.640
The DBAs had to learn to be flexible.

26:09.640 --> 26:13.960
So as I've said they would be expected often to know multiple different types of database

26:13.960 --> 26:17.720
not just relational but also no SQL.

26:17.720 --> 26:21.720
They need to be able to work in lots of different database environments.

26:21.720 --> 26:30.200
So the traditional operating systems but also cloud and things like Kubernetes.

26:30.200 --> 26:35.840
They're expected to know how to use DevOps and automation tools and methodologies.

26:35.840 --> 26:39.280
And they've got to keep up to date with all the changes in all of these different types

26:39.280 --> 26:44.280
of tool and methodology.

26:44.280 --> 26:50.040
The other side of the coin is that actually a lot of roles have been separated out into

26:50.040 --> 26:51.040
different teams.

26:51.040 --> 26:55.520
So you might now have different teams that are responsible for infrastructure, for data,

26:55.520 --> 26:58.760
security and the application.

26:58.760 --> 27:03.600
We already looked at the different types of DBA but actually there are a whole host of

27:03.600 --> 27:07.200
different roles related to database and the data in it.

27:07.200 --> 27:16.520
And this is just a few of the ones that I've seen by scanning job sites.

27:16.520 --> 27:21.000
All of these changes mean that the DBA has to collaborate with other teams.

27:21.000 --> 27:27.440
So not just with other database experts but also with teams that support the entire application

27:27.440 --> 27:28.440
stack.

27:28.440 --> 27:36.280
I often say to people that I've been forced out of my little database bubble.

27:36.280 --> 27:39.640
And the DBAs have to develop a strategic focus.

27:39.640 --> 27:45.880
So the DBA is more likely to be looking at the overall architecture of the database,

27:45.880 --> 27:53.800
analytics and data processing, improving automated processes, collaborating with other teams

27:53.800 --> 27:58.640
to make sure they've implemented business solutions rather than looking at the day-to-day

27:58.640 --> 28:06.640
technical details of managing the database.

28:06.640 --> 28:12.300
So as a reminder that change isn't all bad, I asked colleagues and contacts to tell me

28:12.300 --> 28:17.240
some of the DBA tasks that they used to have to do that they are glad to be rid of.

28:17.240 --> 28:20.280
And these are just a few of the answers.

28:20.280 --> 28:26.720
Vacuum cron jobs, data file reorganizations, commuting to work.

28:26.720 --> 28:31.840
That's a controversial one, some people probably do still have to do that.

28:31.840 --> 28:38.520
Writing complicated backup scripts and installing post GIS via scripts rather than create extension.

28:38.520 --> 28:47.180
So you've probably all got your own tasks that you are glad to be rid of.

28:47.180 --> 28:48.880
So the million dollar question.

28:48.880 --> 28:54.480
A variation of the question is the DBA role obviously is asked constantly all over the

28:54.480 --> 29:00.400
Internet and of course database conferences and probably more so since Oracle announced

29:00.400 --> 29:05.200
its autonomous database in 2017.

29:05.200 --> 29:10.320
Is the DBA the clock winder of the future or the lamp lighter, the switch board operator,

29:10.320 --> 29:15.320
the video rental clock or probably more likely the COBOL developer?

29:15.320 --> 29:21.040
Because even if things change so much that modern databases don't require a DBA, how

29:21.040 --> 29:26.320
many decades is it going to take before all databases are migrated over to this new DBA-less

29:26.320 --> 29:29.320
technology?

29:29.320 --> 29:42.120
Fortunately, data from the US Bureau of Labor Statistics says that there isn't a shortage

29:42.120 --> 29:45.200
of DBA roles.

29:45.200 --> 29:53.880
So we can see this goes from 2003, so 2003 is the first year in which those stats listed

29:53.880 --> 29:56.320
database administrator as a separate role.

29:56.320 --> 30:03.560
Before that I think it was computer scientists or I can't remember the exact role but there

30:03.560 --> 30:06.560
wasn't a specific DBA role.

30:06.560 --> 30:13.640
From 2020 it's listed as database administrators and architects so that supports what we saw

30:13.640 --> 30:18.320
before about the two roles splitting out from the same thing.

30:18.320 --> 30:26.080
So this is the total number of DBAs, thousands across the left there in the US.

30:26.080 --> 30:28.840
So we can see that it's going up slightly.

30:28.840 --> 30:34.280
It's not growing massively but it's definitely a slight upward trend.

30:34.280 --> 30:43.200
And the Bureau actually projects a 9% growth from 2021 to 2031 which is higher than the

30:43.200 --> 30:46.400
average of all other occupations.

30:46.400 --> 30:49.000
So that's good.

30:49.000 --> 30:55.240
I tried to find similar stats for the UK but unfortunately the lists of job roles are more

30:55.240 --> 30:58.440
generic, they don't have database administrator listed.

30:58.440 --> 31:05.840
So instead I've gone to IT Jobs Watch and I found the numbers of job adverts that have

31:05.840 --> 31:10.480
DBA, for DBA or database administrator and those numbers are looking pretty healthy for

31:10.480 --> 31:16.160
2022 and 2023.

31:16.160 --> 31:17.640
Well how about automation?

31:17.640 --> 31:21.600
Surely once everything is automated we don't need DBAs.

31:21.600 --> 31:25.640
So one of my friends is a pilot and people like to ask him, well the plane just flies

31:25.640 --> 31:26.640
itself doesn't it?

31:26.640 --> 31:30.760
You just put it in autopilot, you don't really need to be there as a pilot.

31:30.760 --> 31:34.560
And he says, well yeah, if everything is going well that's fine, you could just have someone

31:34.560 --> 31:39.440
with a lot less experience sitting there watching the dials.

31:39.440 --> 31:43.360
But as soon as something goes wrong, as soon as there's any kind of emergency situation,

31:43.360 --> 31:46.600
you want someone there that knows what they're doing.

31:46.600 --> 31:51.640
And okay, it's not usually such a life or death situation if a database has an emergency,

31:51.640 --> 31:55.520
but you want someone on hand that knows what they're doing to fix that and get things up

31:55.520 --> 31:57.840
and running again.

31:57.840 --> 32:02.200
So you still need someone there to make the decisions.

32:02.200 --> 32:09.040
And actually if each database takes less time to manage, that means that one DBA can manage

32:09.040 --> 32:10.040
more databases.

32:10.040 --> 32:15.040
Well we've seen how much more data there is and a similar number of DBAs, so that seems

32:15.040 --> 32:20.480
to probably work well.

32:20.480 --> 32:22.720
What about the junior DBAs?

32:22.720 --> 32:28.760
I've not been able to find any figures, but I wonder whether there are fewer junior DBA

32:28.760 --> 32:29.760
roles.

32:29.760 --> 32:34.600
If automation's replacing a lot of the tasks, the day-to-day tasks that junior DBAs use

32:34.600 --> 32:37.640
to do, do we still have roles for them?

32:37.640 --> 32:44.120
And if that's the case, how can somebody become a senior DBA if they haven't been a junior

32:44.120 --> 32:45.120
DBA?

32:45.120 --> 32:50.600
Does that mean that the career path's changing?

32:50.600 --> 32:52.080
And back to autonomous databases.

32:52.080 --> 32:59.080
I mean if we believed the headlines when Oracle announced autonomous databases back in 2017,

32:59.080 --> 33:04.200
DBAs were soon going to be a thing of the past, there was absolutely no need for them.

33:04.200 --> 33:12.160
So even if all databases were moved over to autonomous databases, we've got the day-to-day

33:12.160 --> 33:17.000
maintenance and patching is automated, but you still need somebody to design the databases,

33:17.000 --> 33:23.200
to do the data modeling, to make sure that there's efficient code accessing the database.

33:23.200 --> 33:28.160
And actually if you look at some of the reviews, these are just extracts from a couple of recent

33:28.160 --> 33:32.560
ones, apparently it's an extremely complicated thing to put in place.

33:32.560 --> 33:37.160
So you still need somebody who's an expert to be able to put that infrastructure in place

33:37.160 --> 33:41.440
in the first place.

33:41.440 --> 33:50.520
So fortunately the answer to all of that was no, the DBA role isn't obsolete.

33:50.520 --> 33:54.360
So what conclusions can we draw from all of this?

33:54.360 --> 34:00.480
The DBA role has changed since 1998 and it will continue to change in response to changes

34:00.480 --> 34:05.600
in database technology and methodologies.

34:05.600 --> 34:12.360
The DBA of 2023 has similar responsibilities to the DBA of 1998, but does them in a very

34:12.360 --> 34:18.120
different way and so they're expected to be able to do very different things.

34:18.120 --> 34:22.640
Relational databases are still going strong, they're still the majority and we're not

34:22.640 --> 34:27.380
expecting them to go anywhere, but DBAs will be expected to know about other databases

34:27.380 --> 34:30.680
as well.

34:30.680 --> 34:35.200
The amount of data is growing exponentially but being managed by a similar number of DBAs,

34:35.200 --> 34:41.520
so that suggests that we really do still need those DBAs.

34:41.520 --> 34:54.320
And things are moving either to the cloud or to a cloud-like infrastructure on premises.

34:54.320 --> 34:57.520
So the main thing for me is don't panic, as we've seen.

34:57.520 --> 35:02.320
Quantity of data is growing, a lot of that data is going to be stored in databases and

35:02.320 --> 35:06.040
that's going to have to be managed somehow.

35:06.040 --> 35:10.140
Even if things are automated, you want someone on hand in an emergency, you want somebody

35:10.140 --> 35:16.360
to design those databases, you want somebody to write and improve the automation code,

35:16.360 --> 35:24.080
you want someone to fix the interesting queries that have been created by ORMs.

35:24.080 --> 35:29.200
So it's a role that's evolving, like any other role in IT, like any other role anywhere else,

35:29.200 --> 35:31.560
but it's not going away.

35:31.560 --> 35:35.920
If you're happy to embrace automation and to try new things, you've got a long and happy

35:35.920 --> 35:39.640
career in front of you as a DBA.

35:39.640 --> 35:44.000
And even if you're a stick-in-the-mud old-fashioned DBA and you don't want to change, well, there

35:44.000 --> 35:48.600
are going to be enough legacy systems to keep you in work for a long time to come so you'll

35:48.600 --> 35:52.440
be fine until you retire.

35:52.440 --> 35:56.600
That's all I've said.

35:56.600 --> 36:11.000
I got through that faster than I expected, so I've got time for questions.

36:11.000 --> 36:12.640
Hello.

36:12.640 --> 36:14.200
Hi.

36:14.200 --> 36:22.840
Just a note from my side, what I discovered is very interesting for me is the operator

36:22.840 --> 36:24.840
concept in Kubernetes.

36:24.840 --> 36:30.360
Instead of using a managed PostgreSQL database which is expensive, I just use an operator

36:30.360 --> 36:36.640
and the operator itself, it doesn't just install a database automatically for me, it also does

36:36.640 --> 36:39.600
piggy bounds and it does switching from left to right.

36:39.600 --> 36:42.160
I think this will be the future.

36:42.160 --> 36:46.680
So a lot of knowledge we have right now will be moved into operators more central and it

36:46.680 --> 36:48.920
will be much better for us.

36:48.920 --> 36:50.640
Yep, I agree.

36:50.640 --> 36:57.120
If you're going to have a containerised environment, operators are definitely the way to go.

36:57.120 --> 37:02.160
The problem that I've seen, and I guess because of the role I do, I see when there are problems,

37:02.160 --> 37:04.680
is that people think, well, we've got an operator that does everything.

37:04.680 --> 37:06.880
We don't need DBAs.

37:06.880 --> 37:12.760
So you still need that DBA knowledge behind it, definitely.

37:12.760 --> 37:19.840
So working in smaller companies, the DBA is basically if you're lucky, the DevOps team

37:19.840 --> 37:25.200
and if you're unlucky, the developer team, which means a lot of people don't have the

37:25.200 --> 37:29.120
knowledge or the interest or time.

37:29.120 --> 37:32.160
And things are done in a sort of not proper way.

37:32.160 --> 37:39.120
So as somebody who is interested but has a job as a developer, how can you foster that

37:39.120 --> 37:47.240
environment where developers will start to understand if they're making inefficient queries

37:47.240 --> 37:52.520
or if they're building the database wrong and get them to both know and be interested

37:52.520 --> 37:58.000
and also get the company to kind of care about those things rather than keeping them until

37:58.000 --> 38:02.080
it's an emergency, like you said, and the plane is crashing down.

38:02.080 --> 38:03.600
That's a really good question.

38:03.600 --> 38:09.040
So I wish I had all of the answers to that because I've been in lots of organizations

38:09.040 --> 38:15.840
as a DBA or helping, and we've had exactly that situation.

38:15.840 --> 38:21.920
So I would say one thing is make friends with, make sure that all teams are actually talking

38:21.920 --> 38:24.680
to each other.

38:24.680 --> 38:30.760
As a DBA, I was always kind of trying to integrate the other teams and actually be useful.

38:30.760 --> 38:34.080
I mean, obviously, sometimes I was that typical GRUMB DBA.

38:34.080 --> 38:35.080
No, you can't do that.

38:35.080 --> 38:37.320
No, you can't have all these permissions.

38:37.320 --> 38:43.280
I was enforcing rules, but I tried really hard to be there and helpful and show that

38:43.280 --> 38:49.040
I could actually help to make this query run faster or help to make that better.

38:49.040 --> 38:55.000
So I think that's, and I did training courses for developers as well to teach them about

38:55.000 --> 38:56.560
the basics of databases.

38:56.560 --> 39:01.840
So that's great because I found that most developers are really open to that because

39:01.840 --> 39:04.080
they want to learn.

39:04.080 --> 39:09.520
As far as people higher up in the organization go, I'm not sure.

39:09.520 --> 39:13.120
I don't know what the answer is there, but probably just showing them how it benefits

39:13.120 --> 39:16.760
the organization is the only way to go there.

39:16.760 --> 39:17.760
Hello.

39:17.760 --> 39:21.240
Thank you for your talk.

39:21.240 --> 39:25.840
I feel completely, I agree completely with your talk.

39:25.840 --> 39:28.640
I'm a DBA as well.

39:28.640 --> 39:31.400
I have a couple of questions.

39:31.400 --> 39:37.280
First thing is the role of the DBA is still an old male role.

39:37.280 --> 39:42.680
So what can we do for making more attractive for the woman?

39:42.680 --> 39:46.920
Because it's something very stressful.

39:46.920 --> 39:50.360
Something that is very stressful.

39:50.360 --> 39:51.360
Another thing.

39:51.360 --> 39:54.280
Another million dollar question.

39:54.280 --> 39:57.280
Something that is not changed yet is still old male.

39:57.280 --> 40:01.320
And I don't think is a good idea to continue this way.

40:01.320 --> 40:07.040
I know it's an horrible job, but how can we make more attractive?

40:07.040 --> 40:13.400
And the other thing is a lot of companies, a lot of my customers struggle to find DBA.

40:13.400 --> 40:19.280
How can they make more attractive for getting hired permanent DBA?

40:19.280 --> 40:24.600
Because I give advice of hiring DBA because it's important to have in house, but they

40:24.600 --> 40:26.840
struggle to find DBA.

40:26.840 --> 40:27.840
Thank you.

40:27.840 --> 40:28.840
Yeah.

40:28.840 --> 40:31.120
So the first question, I wish I knew the answer to that.

40:31.120 --> 40:37.360
I have no idea how to get more women into being DBAs.

40:37.360 --> 40:42.520
That's something that's a problem across the whole of the IT community and something that's

40:42.520 --> 40:45.560
not changed since I started 25 years ago.

40:45.560 --> 40:52.480
The only things that I do is I go into part of an organization that does coding workshops

40:52.480 --> 40:54.600
for girls to try and get people in early.

40:54.600 --> 40:59.200
I mean, I was so lucky because my dad was a self-taught coder.

40:59.200 --> 41:00.280
He loved IT.

41:00.280 --> 41:04.080
He, like I say, he built me my first computer and showed me how to play with it.

41:04.080 --> 41:05.080
That's what people need.

41:05.080 --> 41:06.080
They need to see that it's fun.

41:06.080 --> 41:07.960
I mean, well, we think it's fun.

41:07.960 --> 41:09.760
I know it's not everybody's idea of fun.

41:09.760 --> 41:10.760
I know.

41:10.760 --> 41:12.360
My husband still doesn't understand.

41:12.360 --> 41:16.560
And I say, no, I know, but it's my hobby as well.

41:16.560 --> 41:17.560
So I think that's it.

41:17.560 --> 41:22.160
It's just, and that's probably the same as that first question, is that we need to make

41:22.160 --> 41:24.520
this look like fun to people.

41:24.520 --> 41:27.160
And maybe we need to try and get rid of that image of the Grumpy DBA.

41:27.160 --> 41:28.160
I don't know.

41:28.160 --> 41:31.880
We need to clean up our ugly aspects.

41:31.880 --> 41:32.880
Exactly.

41:32.880 --> 41:33.880
More flashing badges.

41:33.880 --> 41:34.880
More flashing badges.

41:34.880 --> 41:35.880
Thank you.

41:35.880 --> 41:36.880
Thank you.

41:36.880 --> 41:37.880
Hello.

41:37.880 --> 41:38.880
Hello.

41:38.880 --> 41:41.880
Thank you very much for the talk.

41:41.880 --> 41:45.080
I wanted to ask you, I'm a data engineer myself.

41:45.080 --> 41:46.080
Okay.

41:46.080 --> 41:51.160
I'm a data engineer myself, and I feel that it's complicated to get across what we do

41:51.160 --> 41:56.000
every day because we don't do any very visual things.

41:56.000 --> 42:00.880
We're not web developers, so we can show really nice pages or nice graphics.

42:00.880 --> 42:09.040
Do you have any advice to give for somebody who's in the field of databases and behind

42:09.040 --> 42:12.800
the scenes to make their work more noticeable?

42:12.800 --> 42:15.480
Yeah, that's a very good question.

42:15.480 --> 42:18.960
So I don't know.

42:18.960 --> 42:22.640
I mean, I suppose it depends which audience you're looking at.

42:22.640 --> 42:28.240
Are you looking at kind of internally within an organization or outside to the general

42:28.240 --> 42:29.240
public?

42:29.240 --> 42:43.640
Yeah, I think some of it is showing the value that they bring.

42:43.640 --> 42:47.880
The problem with a lot of things, like I can speak for being a DBA, is that when everything's

42:47.880 --> 42:50.640
going right, you're not noticed.

42:50.640 --> 42:53.040
Because what's the DBA doing?

42:53.040 --> 42:54.840
We're not with nothing's going on.

42:54.840 --> 43:02.240
We all need to start putting little things in the code to cause problems every so often.

43:02.240 --> 43:08.560
So maybe just try and bring attention to the value that you bring.

43:08.560 --> 43:13.600
Claire is probably a very good person to talk to later because I don't know if you saw Claire's

43:13.600 --> 43:20.200
talk earlier about how to write things in blogs so that you get your point across clearly

43:20.200 --> 43:21.600
and that kind of thing.

43:21.600 --> 43:24.600
But Claire has some very good ideas on how to communicate.
