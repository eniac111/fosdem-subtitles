1
0:00:00.000 --> 0:00:07.000
We have to do with the six store.

2
0:00:07.000 --> 0:00:24.480
Hello everyone, my name is James Strong and we're going to talk about rugby and six store

3
0:00:24.480 --> 0:00:25.560
today.

4
0:00:25.560 --> 0:00:28.440
But something's really interesting is happening today right now.

5
0:00:28.440 --> 0:00:31.640
So Seven Nations started today and Wales and Ireland explained.

6
0:00:31.640 --> 0:00:34.080
What's the score right now, Lewis?

7
0:00:34.080 --> 0:00:35.920
I think we should concentrate on the talk.

8
0:00:35.920 --> 0:00:38.760
I think it would be most enjoyable.

9
0:00:38.760 --> 0:00:41.200
Last time we checked it was 327 Ireland.

10
0:00:41.200 --> 0:00:42.200
Where are you from?

11
0:00:42.200 --> 0:00:43.200
Wales.

12
0:00:43.200 --> 0:00:44.200
Anyway, awesome.

13
0:00:44.200 --> 0:00:47.600
So, like I said, my name is James Strong.

14
0:00:47.600 --> 0:00:49.520
I'm a solutions architect at Chain Guard.

15
0:00:49.520 --> 0:00:52.560
I do a bunch of stuff with networking and Kubernetes.

16
0:00:52.560 --> 0:00:55.760
And if you're here to win the book, meet me outside afterwards.

17
0:00:55.760 --> 0:01:00.040
If you sign a container image during the talk and come hang out with me, I've got five copies

18
0:01:00.040 --> 0:01:01.040
of my book.

19
0:01:01.040 --> 0:01:03.360
So sign your container images, everyone.

20
0:01:03.360 --> 0:01:08.080
And if I broke your Ingress Engine X release on Thursday, I apologize.

21
0:01:08.080 --> 0:01:12.520
Please don't come outside and hang out with me.

22
0:01:12.520 --> 0:01:15.000
Hi everyone, I'm Lewis.

23
0:01:15.000 --> 0:01:18.600
I'm similar to James and Wales, not in others.

24
0:01:18.600 --> 0:01:24.280
As well as being at Chain Guard, I'm the coach for Rubina Squirrel's Under 8 Rugby Team.

25
0:01:24.280 --> 0:01:29.800
That's why you're listening today to a talk about Six Door and Rugby from myself.

26
0:01:29.800 --> 0:01:33.160
If you wouldn't mind keeping the score away from me with Wales versus Ireland right now,

27
0:01:33.160 --> 0:01:36.040
that would be beneficial for my own sanity.

28
0:01:36.040 --> 0:01:38.840
Yes, next slide, please.

29
0:01:38.840 --> 0:01:42.080
So at Chain Guard, we support a lot of open source projects.

30
0:01:42.080 --> 0:01:47.440
We're talking today about Six Door, but we're also part of CELSA, doing some assessments

31
0:01:47.440 --> 0:01:48.440
here.

32
0:01:48.440 --> 0:01:51.520
We've got Tekton, Knative, OpenSSF, and DistroRes.

33
0:01:51.520 --> 0:01:54.520
Does anybody use any or all of those?

34
0:01:54.520 --> 0:01:55.520
I do.

35
0:01:55.520 --> 0:01:59.760
There's a couple of them that aren't listed, like I said, Ingress Engine X.

36
0:01:59.760 --> 0:02:02.360
Chain Guard supports me to support Ingress.

37
0:02:02.360 --> 0:02:04.200
We also have our own container image out there.

38
0:02:04.200 --> 0:02:05.200
It's called Wolfie.

39
0:02:05.200 --> 0:02:06.200
You can check that out, wolfie.dev.

40
0:02:06.200 --> 0:02:10.720
But like I said, we're going to talk about Six Door and Rugby today.

41
0:02:10.720 --> 0:02:15.440
Okay, so who here has heard of Six Door prior to walking into this room?

42
0:02:15.440 --> 0:02:17.360
Okay, we've got a couple.

43
0:02:17.360 --> 0:02:18.680
Thank you for coming.

44
0:02:18.680 --> 0:02:22.200
Who here has heard of Rugby today prior to coming into this room?

45
0:02:22.200 --> 0:02:23.200
Yes, hello.

46
0:02:23.200 --> 0:02:24.200
All right.

47
0:02:24.200 --> 0:02:28.600
So, when we submitted this talk, James found this very special diagram.

48
0:02:28.600 --> 0:02:34.120
And when we zoom in, we can see the similarities between Six Door and Rugby for this talk.

49
0:02:34.120 --> 0:02:40.760
Incidentally, this lasts about 22 minutes, hence why we've had such a long introduction.

50
0:02:40.760 --> 0:02:42.680
So what do people think Rugby is?

51
0:02:42.680 --> 0:02:44.320
It's really not doing a haka.

52
0:02:44.320 --> 0:02:48.040
It looks cool and intimidates your opponents, but that's not really what it is.

53
0:02:48.040 --> 0:02:51.240
It's a very difficult game with highly specialized positions.

54
0:02:51.240 --> 0:02:55.320
And it all was required to help everyone work together to achieve a goal.

55
0:02:55.320 --> 0:02:59.080
And that's really what we think Six Door is and what we want to talk about.

56
0:02:59.080 --> 0:03:01.480
So there's lots of components about it.

57
0:03:01.480 --> 0:03:03.960
And we think that Six Door is tackling supply chain security.

58
0:03:03.960 --> 0:03:08.960
And we're going to talk about how, why, and hopefully make it fun along the way and learn

59
0:03:08.960 --> 0:03:13.840
a little bit about Rugby and Six Door and probably a lot about neither.

60
0:03:13.840 --> 0:03:17.320
So why is Six Door tackling supply chain security?

61
0:03:17.320 --> 0:03:21.040
It has started to improve the supply chain technology that we all use.

62
0:03:21.040 --> 0:03:24.720
It's made by open source maintainers for open source maintainers.

63
0:03:24.720 --> 0:03:28.240
A lot of you may not be aware, but a lot of things are being signed right now.

64
0:03:28.240 --> 0:03:32.760
So thank you to Adulfo there from SIG release for signing all of the Kubernetes releases

65
0:03:32.760 --> 0:03:33.760
with SIG store.

66
0:03:33.760 --> 0:03:34.760
Thank you.

67
0:03:34.760 --> 0:03:37.000
That was a lot of hard work.

68
0:03:37.000 --> 0:03:40.800
I know PyPy, a lot of package maintainers are going to be supporting that.

69
0:03:40.800 --> 0:03:43.640
I know Maven, so there's a lot of people that are using SIG store.

70
0:03:43.640 --> 0:03:47.560
You might not even be aware that you're using it, but it's a direct response to some of

71
0:03:47.560 --> 0:03:50.680
the challenges that are there right now.

72
0:03:50.680 --> 0:03:56.600
So who here has had someone else sign their GPG key?

73
0:03:56.600 --> 0:03:57.600
Been through a signing party?

74
0:03:57.600 --> 0:03:58.600
Two, three people?

75
0:03:58.600 --> 0:03:59.600
Four?

76
0:03:59.600 --> 0:04:00.600
Okay.

77
0:04:00.600 --> 0:04:04.000
I was really glad not everyone shot their hand up because that would have been really

78
0:04:04.000 --> 0:04:05.000
fun.

79
0:04:05.000 --> 0:04:10.440
Anyway, we're going to talk about how we're going to be doing that.

80
0:04:10.440 --> 0:04:16.440
Not knowing where your software comes from, and without having identity checks and safety

81
0:04:16.440 --> 0:04:22.120
protocols, it's leaving our, well, we're leaving it open to exploits and attacks.

82
0:04:22.120 --> 0:04:27.920
So SIG store attempts to make software and their infrastructure frictionless and invisible.

83
0:04:27.920 --> 0:04:42.360
And as James just mentioned, we're integrated with a wide range of systems.

84
0:04:57.920 --> 0:05:10.920
... to an identity and know where it came from and who made that piece of software.

85
0:05:10.920 --> 0:05:16.160
And just like in SIG store, rugby also has lots of positions that are available, highly

86
0:05:16.160 --> 0:05:17.160
specialized.

87
0:05:17.160 --> 0:05:18.160
I play a hooker.

88
0:05:18.160 --> 0:05:21.600
That's much different than what a full backward do.

89
0:05:21.600 --> 0:05:24.920
We all have different responsibilities to be able to win the game.

90
0:05:24.920 --> 0:05:26.480
So we're going to tie those two together.

91
0:05:26.480 --> 0:05:32.440
I'm going to start off at the very top of the play.

92
0:05:32.440 --> 0:05:33.840
So we're going to talk about trust roots.

93
0:05:33.840 --> 0:05:38.280
So with signing, it requires trust.

94
0:05:38.280 --> 0:05:43.380
So knowing who is making available this piece of software.

95
0:05:43.380 --> 0:05:45.680
So think of it from a PKI perspective.

96
0:05:45.680 --> 0:05:50.000
We have a root of trust in SSL certificates.

97
0:05:50.000 --> 0:05:52.800
What we're also trying to accomplish with SIG store is that same root of trust.

98
0:05:52.800 --> 0:06:00.760
So think of automated software for SSL certificates.

99
0:06:00.760 --> 0:06:03.160
I was thinking of Johnny Sexton.

100
0:06:03.160 --> 0:06:04.160
Oh, Johnny Sexton.

101
0:06:04.160 --> 0:06:06.400
That's not the answer.

102
0:06:06.400 --> 0:06:07.920
But think of it from that perspective.

103
0:06:07.920 --> 0:06:09.320
So SIG store has a root of trust.

104
0:06:09.320 --> 0:06:11.080
It was initialized with tough.

105
0:06:11.080 --> 0:06:12.080
So the update is...

106
0:06:12.080 --> 0:06:13.080
Let's encrypt.

107
0:06:13.080 --> 0:06:14.080
Let's encrypt.

108
0:06:14.080 --> 0:06:15.080
Thank you.

109
0:06:15.080 --> 0:06:16.080
Thank you for that.

110
0:06:16.080 --> 0:06:17.080
Let's encrypt.

111
0:06:17.080 --> 0:06:19.880
Think about SIG store as let's encrypt for software signing artifacts, making it easy

112
0:06:19.880 --> 0:06:22.240
and transparent for everyone to use.

113
0:06:22.240 --> 0:06:25.480
So the fly half is very influential player on the field.

114
0:06:25.480 --> 0:06:30.120
And in order to start that root of trust, we have to have that trust there.

115
0:06:30.120 --> 0:06:31.600
So there's a bunch of links there.

116
0:06:31.600 --> 0:06:35.520
We actually did a live stream of the SIG store key signing.

117
0:06:35.520 --> 0:06:38.920
If you want to figure out how they initialize that and did all that work, there's a great

118
0:06:38.920 --> 0:06:42.720
YouTube video from that.

119
0:06:42.720 --> 0:06:48.240
So going from the fly half to the loose head, from a play perspective, they're going to

120
0:06:48.240 --> 0:06:49.860
be the certificate authority.

121
0:06:49.860 --> 0:06:51.480
So now we've got our root of trust.

122
0:06:51.480 --> 0:06:56.600
We have our certificate authority to be able to produce those certificates to sign those

123
0:06:56.600 --> 0:06:57.600
artifacts.

124
0:06:57.600 --> 0:07:01.080
So a lot of responsibility is on the CA from that perspective.

125
0:07:01.080 --> 0:07:03.760
And of course, being a loose head, you carry a lot of weight on the team.

126
0:07:03.760 --> 0:07:05.440
You're very important into the scrum.

127
0:07:05.440 --> 0:07:10.440
So again, very important position on the team.

128
0:07:10.440 --> 0:07:14.920
So OITC allows us to identify the end user.

129
0:07:14.920 --> 0:07:17.600
We obtain some basic information about the user.

130
0:07:17.600 --> 0:07:21.360
And falsely use this OITC to authenticate requests.

131
0:07:21.360 --> 0:07:26.600
Subject related claims can be extracted and included on the certificate.

132
0:07:26.600 --> 0:07:33.000
SIG store runs a federated OITC identity provider in DEX, which creates a DEX OITC token from

133
0:07:33.000 --> 0:07:34.640
the original OITC.

134
0:07:34.640 --> 0:07:41.360
False code supports OITC from additional configured users, as we can see from the screen shot.

135
0:07:41.360 --> 0:07:44.800
And the play that we selected for this was Martin Kasrujevani.

136
0:07:44.800 --> 0:07:46.600
Does anyone know of Martin Kasrujevani?

137
0:07:46.600 --> 0:07:47.600
No?

138
0:07:47.600 --> 0:07:48.600
Okay.

139
0:07:48.600 --> 0:07:50.640
Well, there's something to learn today.

140
0:07:50.640 --> 0:07:54.720
He's a massive identity within the Italian game, even though he's originally from Argentina.

141
0:07:54.720 --> 0:07:58.240
And the reason I selected him is because you can identify him because of his sleep with

142
0:07:58.240 --> 0:08:01.960
all the identities of his family members on his arm.

143
0:08:01.960 --> 0:08:04.320
Next slide.

144
0:08:04.320 --> 0:08:06.280
And so now we've come to false seal.

145
0:08:06.280 --> 0:08:11.560
False seal is the API that drives all of this, that ties the OITC and the certificate at

146
0:08:11.560 --> 0:08:12.600
the OIT together.

147
0:08:12.600 --> 0:08:16.360
So when you're making a request to get a signing certificate, you're doing it through false

148
0:08:16.360 --> 0:08:17.360
seal.

149
0:08:17.360 --> 0:08:21.240
And you put that together with the hooker, and yes, I was self-serving, that is me.

150
0:08:21.240 --> 0:08:24.400
And do feel sorry for that guy.

151
0:08:24.400 --> 0:08:27.240
So false seal is a free code signing certificate authority.

152
0:08:27.240 --> 0:08:30.600
Anyone can make a request to get a signing certificate, tie it to their identity, and

153
0:08:30.600 --> 0:08:35.000
make it available for everyone to verify.

154
0:08:35.000 --> 0:08:38.440
They are short-lived certificates, so that's going to come into play from another piece

155
0:08:38.440 --> 0:08:39.440
of technology perspective.

156
0:08:39.440 --> 0:08:43.560
We're going to talk a little bit more about that with ReCore.

157
0:08:43.560 --> 0:08:47.640
So with ReCore, it provides a mutability with ephemeral certificates.

158
0:08:47.640 --> 0:08:51.960
It's based on a Merkle tree, and it fulfills the transparency log, which means that it's

159
0:08:51.960 --> 0:08:52.960
searchable for all.

160
0:08:52.960 --> 0:08:56.360
So you can use that URL there to be able to search via your browser, or you can use ReCore

161
0:08:56.360 --> 0:08:58.520
CLI to be able to search.

162
0:08:58.520 --> 0:09:01.600
So for this one, I'm looking towards Martin Johnson.

163
0:09:01.600 --> 0:09:05.320
Again as a Welsh person, for putting all these names out, it was quite difficult for me.

164
0:09:05.320 --> 0:09:07.360
But Martin Johnson was a powerhouse for England.

165
0:09:07.360 --> 0:09:10.320
He was a captain who led them to numerous victories.

166
0:09:10.320 --> 0:09:14.520
The reason why this is comparable to ReCore is he went on to a successful coaching career

167
0:09:14.520 --> 0:09:19.400
as well, providing insights for the next generation that has to hire to play the game.

168
0:09:19.400 --> 0:09:22.960
Yes, next slide, please.

169
0:09:22.960 --> 0:09:27.840
So we want to take some time and talk a little bit about how a developer interacts with that.

170
0:09:27.840 --> 0:09:34.280
So when we think about it from a rugby perspective, the scrum half is the connector between the

171
0:09:34.280 --> 0:09:37.440
forwards and the backs from that perspective.

172
0:09:37.440 --> 0:09:41.400
And cosign is that glue that ties all of these pieces together.

173
0:09:41.400 --> 0:09:43.560
Think of it like kubectl, right?

174
0:09:43.560 --> 0:09:45.600
You don't actually directly interact with the API.

175
0:09:45.600 --> 0:09:47.400
You do it through kubectl.

176
0:09:47.400 --> 0:09:52.240
Cosign is how you do that with Palsio and ReCore and the rest of the other six-door environment.

177
0:09:52.240 --> 0:09:56.360
So you can actually sign and verify signatures.

178
0:09:56.360 --> 0:09:58.400
It also creates in-toto attestation.

179
0:09:58.400 --> 0:10:03.320
So if you wanted to generate and sign other metadata about your container images, maybe

180
0:10:03.320 --> 0:10:07.360
how many CVEs are in it, if you're generating an S-bomb, things like that, other metadata

181
0:10:07.360 --> 0:10:11.120
you can make available, sign it and store it with the container.

182
0:10:11.120 --> 0:10:14.000
All of that can be done through cosign.

183
0:10:14.000 --> 0:10:16.440
And we're not talking about just container images as well.

184
0:10:16.440 --> 0:10:18.440
That's where it's highly targeted right now.

185
0:10:18.440 --> 0:10:21.080
But you can also sign other pieces of information.

186
0:10:21.080 --> 0:10:26.720
So when I send, as for fun, when I send documents to clients nowadays, I also sign it and it

187
0:10:26.720 --> 0:10:32.120
generates the hash of the document and the signature and they know that that document

188
0:10:32.120 --> 0:10:33.280
came from me.

189
0:10:33.280 --> 0:10:36.800
So it's basically a free DocuSign.

190
0:10:36.800 --> 0:10:38.200
So this is Gareth Edwards.

191
0:10:38.200 --> 0:10:43.960
He was an influential player in the 70s, played 88 consecutive games for Wales and one of

192
0:10:43.960 --> 0:10:49.600
the key reasons to our success in the 70s, not so much in the 2020s.

193
0:10:49.600 --> 0:10:54.000
And yes, Scrum Halfness instrumental in communicating between the backs and the forwards within

194
0:10:54.000 --> 0:10:56.760
a game, which I can also see with cosign.

195
0:10:56.760 --> 0:10:58.880
Not necessarily cosign in rugby, but yes.

196
0:10:58.880 --> 0:10:59.880
Next slide.

197
0:10:59.880 --> 0:11:23.880
Yes Canada.

