1
0:00:00.000 --> 0:00:16.120
So we are at our penultimate talk for this dev room and we have Mathias Horvat, which

2
0:00:16.120 --> 0:00:21.160
I hope I pronounced it right, with the staff software engineer on the Mozilla localization

3
0:00:21.160 --> 0:00:28.200
team and is going to talk about how you can localise your open source project with pontoon.

4
0:00:28.200 --> 0:00:35.520
Thank you. Hello everyone. First of all I would like to thank you all for coming all

5
0:00:35.520 --> 0:00:42.400
the way to Brussels to listen to me. I really appreciate it. I hope you are having a good

6
0:00:42.400 --> 0:00:47.440
day today and you are going to be having a good day tomorrow. As Francesca said I am

7
0:00:47.440 --> 0:00:56.080
an engineer with Mozilla for some time now and today I wanted to talk to you about localization,

8
0:00:56.080 --> 0:01:04.240
specifically how we do localization at Mozilla and hopefully how it can benefit you as well,

9
0:01:04.240 --> 0:01:11.560
be it within Mozilla or some Mozilla related project or not. But first things first, I

10
0:01:11.560 --> 0:01:18.280
have to mention something very important. This is Intish, she is my oldest daughter

11
0:01:18.280 --> 0:01:26.800
and she just turned seven today and her dad is at some conference with geeks spending

12
0:01:26.800 --> 0:01:39.400
time away from her. But can somebody take a picture? I actually brought her to Brussels

13
0:01:39.400 --> 0:01:46.960
so she is here. So we spent like an hour today together and by the time I get back home she

14
0:01:46.960 --> 0:01:53.800
is going to go to bed. No I am kidding. But I actually wanted to make this talk shorter

15
0:01:53.800 --> 0:01:57.480
because I want to spend more time with her so sorry about that. It is going to be a pretty

16
0:01:57.480 --> 0:02:02.200
short talk and then if you are going to have any questions, Emily, you will answer them.

17
0:02:02.200 --> 0:02:06.960
Is that fine? Thank you. Emily is my colleague over there who is going to do the last talk

18
0:02:06.960 --> 0:02:14.840
today. So big round of applause for Emily for being the last to speak today. She really

19
0:02:14.840 --> 0:02:26.040
appreciates that. Okay, back to localization and to some serious business. This is actual

20
0:02:26.040 --> 0:02:32.080
data. There is just 13% of Firefox users that are based in the US. That is maybe not very

21
0:02:32.080 --> 0:02:39.280
surprising. What could be a little bit more surprising is that 60% of all Firefox users

22
0:02:39.280 --> 0:02:49.400
use non-default locale which is ENUS, American English. In case it is not obvious, what I

23
0:02:49.400 --> 0:02:55.200
am trying to say is that localization matters. It is actually very important. We all, me

24
0:02:55.200 --> 0:03:01.880
included, often think of localization as an obstacle or something that we are going to

25
0:03:01.880 --> 0:03:09.600
do later or we are going to do it one day. But it actually really matters because apparently

26
0:03:09.600 --> 0:03:23.440
it keeps the door shut if you don't do localization of your software. I want to say a few things

27
0:03:23.440 --> 0:03:32.520
first about how localization actually works at Mozilla. It is driven by hundreds if not

28
0:03:32.520 --> 0:03:41.280
thousands of contributors, volunteers who spend their free time contributing to Mozilla

29
0:03:41.280 --> 0:03:45.480
because they like it or because they like the products that Mozilla develops or they

30
0:03:45.480 --> 0:03:53.360
like the mission or they care about their language. We are truly grateful that we have

31
0:03:53.360 --> 0:04:01.640
such an, as we call it, army of awesome people who are, as you saw earlier, basically responsible

32
0:04:01.640 --> 0:04:07.440
for 60% of the Firefox market share. There is not just Firefox. As you will see later,

33
0:04:07.440 --> 0:04:19.440
there is many, many more projects that Mozilla localizes. The platform that we use for localization

34
0:04:19.440 --> 0:04:26.000
is called Pontun. It is like a classic translation management system through which localizers

35
0:04:26.000 --> 0:04:32.360
interact. But it is basically, as I mentioned, just an interface. The actual strings, the

36
0:04:32.360 --> 0:04:41.560
actual English strings and translations are stored in repositories. Usually that is GitHub.

37
0:04:41.560 --> 0:04:48.600
I think also GitLab sometimes. There is also hg.mozilla.org. That is what we call a single

38
0:04:48.600 --> 0:04:53.200
source of truth. Then Pontun is basically just an interface because many of our localizers

39
0:04:53.200 --> 0:05:00.920
are surprised, not really developers, don't really want to work with repositories directly.

40
0:05:00.920 --> 0:05:07.560
It's much easier for them to make contributions through a tool that is hopefully not much

41
0:05:07.560 --> 0:05:14.280
more complicated to use than, say, email client or Facebook. As you can see from this page,

42
0:05:14.280 --> 0:05:21.520
this is a profile page of one of our active localizers. We really like version control

43
0:05:21.520 --> 0:05:30.760
systems in particular GitHub, as you can say, by a particular widget on this page. The way

44
0:05:30.760 --> 0:05:39.400
things work is that localizer would log in, they start by picking their team, their locale,

45
0:05:39.400 --> 0:05:48.200
like the localizer's software to French. They start on the French page in this case, which

46
0:05:48.200 --> 0:05:53.520
has some basic stats, some basic information about the locale in general, and more importantly,

47
0:05:53.520 --> 0:06:00.400
at least all the projects that this community localizes. This is a screenshot so I can't

48
0:06:00.400 --> 0:06:07.840
really scroll. There's 35 projects in total that the French community localizes. I think

49
0:06:07.840 --> 0:06:16.920
in total we have 36, and they are being translated to over 200 different locales. For those of

50
0:06:16.920 --> 0:06:23.000
you who are not familiar, the difference between a language and locale is that Spanish is one

51
0:06:23.000 --> 0:06:28.680
language, but then you have several variants of Spanish, for example, like Spanish-Spanish

52
0:06:28.680 --> 0:06:38.600
or Argentine-Spanish or Mexican-Spanish, those are locales, so all specific variants. Localizer

53
0:06:38.600 --> 0:06:47.040
would go to this page, pick one project, for example, AMO frontend, which is not fully

54
0:06:47.040 --> 0:06:54.320
translated yet, and then the translate view opens up, which is again a pretty straightforward

55
0:06:54.320 --> 0:06:59.520
page. On the left you see the list of strings, and in the middle you have on top source string

56
0:06:59.520 --> 0:07:07.840
and then the text field into which you enter translations. And then in the bottom right

57
0:07:07.840 --> 0:07:17.040
corner you see two tabs from which translators get some inspiration from. You get suggestions

58
0:07:17.040 --> 0:07:22.120
from several machine translation engines, translation memory, and you can also look

59
0:07:22.120 --> 0:07:30.080
into how other locales might have translated the same string. There's two ways most of

60
0:07:30.080 --> 0:07:38.160
our teams operate in. One is some localizers submit translations directly, which means

61
0:07:38.160 --> 0:07:45.200
as soon as they are submitted to pontoon they end up in the version control system and can

62
0:07:45.200 --> 0:07:50.760
be used in product. The alternative and more common way is that localizers just submit

63
0:07:50.760 --> 0:07:59.080
suggestions and those suggestions then need to be approved by our trusted localizers who

64
0:07:59.080 --> 0:08:04.200
have worked with localization for some time and have a proven track record of submitting

65
0:08:04.200 --> 0:08:09.920
quality translations, and then they get into the repository. So here in this case we're

66
0:08:09.920 --> 0:08:16.560
actually seeing on the left, we're seeing strings with corresponding suggestions, which

67
0:08:16.560 --> 0:08:27.120
are then approved by a reviewer. Maybe one more detail around this. Since you see the

68
0:08:27.120 --> 0:08:34.600
source string and the translation also in the sidebar on the left, the status boxes

69
0:08:34.600 --> 0:08:40.400
on the left are actually check boxes, so you can select multiple strings and approve them

70
0:08:40.400 --> 0:08:51.720
at the same time or reject them all at once. One last thing before I start with the presentation

71
0:08:51.720 --> 0:09:02.000
of pontoon. We're currently working on pre-translation feature, which is essentially engaging machine

72
0:09:02.000 --> 0:09:08.760
translation and translation memory, and as soon as source strings get exposed in the

73
0:09:08.760 --> 0:09:14.280
repository to be translated, and as soon as they're served to localizers, and localizers

74
0:09:14.280 --> 0:09:22.200
get notifications, hey, new strings are available, these strings get pre-translated using a combination

75
0:09:22.200 --> 0:09:28.600
of translation memory and machine translation. So if we find a perfect match, we would use

76
0:09:28.600 --> 0:09:33.560
translation memory. If we don't find anything usable in translation memory, we fall back

77
0:09:33.560 --> 0:09:47.160
to machine translation. This is a pretty controversial topic, because pre-translation can yield interesting

78
0:09:47.160 --> 0:09:56.520
results. Thank you. And that means that we're really slowly rolling this out for particular

79
0:09:56.520 --> 0:10:02.840
project locale combinations, where there's actual needs, where, for example, localizers

80
0:10:02.840 --> 0:10:08.040
are a little bit falling behind, but at the same time they have reviewers who are active

81
0:10:08.040 --> 0:10:15.440
enough to hop in and correct potential errors that the pre-translation produces. Pontoon

82
0:10:15.440 --> 0:10:20.520
is open source, it's freely available, so there's actually other users of pontoon outside

83
0:10:20.520 --> 0:10:29.240
Mozilla. We're not aware of many, maybe a dozen, but we also don't know in case there

84
0:10:29.240 --> 0:10:39.440
are more. It's relatively easy to set it up. We sadly don't offer any official support,

85
0:10:39.440 --> 0:10:44.200
but if you do come to our discourse, I'm going to send the link, I'm going to show the links

86
0:10:44.200 --> 0:10:56.840
at the last slide, or to our chat, chat.mozilla.org. We try to help, but like I said, we don't

87
0:10:56.840 --> 0:11:05.760
offer any official support. There are some requirements that need to be met in order

88
0:11:05.760 --> 0:11:12.480
for a project to be localized with pontoon. Obviously you need to use GitHub or some other

89
0:11:12.480 --> 0:11:20.200
VCS back end as a storage for translations. Then you have two options for organizing the

90
0:11:20.200 --> 0:11:26.680
files, either you follow a predefined folder structure or you use our out and end.tomos

91
0:11:26.680 --> 0:11:33.920
specification which is then wrapped by pontoon to detect where the source files are and where

92
0:11:33.920 --> 0:11:43.680
the translations are submitted. Obviously you need to store your translations in one

93
0:11:43.680 --> 0:11:51.060
of the supported file formats. Here's some of them. You might be familiar with Fluent.

94
0:11:51.060 --> 0:12:01.680
This is one of the formats that Mozilla developed. It's now basically slowly being... Emil is

95
0:12:01.680 --> 0:12:07.520
going to talk about it in the next talk. It's basically transitioning slowly towards message

96
0:12:07.520 --> 0:12:13.240
formats two, which is the format that is being developed. That's why there's an asterisk

97
0:12:13.240 --> 0:12:17.600
at the end. We don't technically have a full blown support for it yet, but we're working

98
0:12:17.600 --> 0:12:28.120
on that. There's also most common file formats are supported by pontoon. Once your project

99
0:12:28.120 --> 0:12:34.840
meets those requirements, you just need to create it on your pontoon instance, which

100
0:12:34.840 --> 0:12:41.360
is typically a very simple step. You need to add a project name, select target locales,

101
0:12:41.360 --> 0:12:46.640
and add a link to your repository. That's basically it. You save it, you sync it, and

102
0:12:46.640 --> 0:12:53.280
you have strings ready. Now the tricky part here is that you need your own instance. That's

103
0:12:53.280 --> 0:13:00.080
a little bit more work than filling out this form. Like I said, there is documentation

104
0:13:00.080 --> 0:13:10.480
on how to do that in our repository. It is, however, in our minds for some time now. We're

105
0:13:10.480 --> 0:13:17.280
testing what is, whether there's an interest for us to create something like a multi-talent

106
0:13:17.280 --> 0:13:22.880
pontoon instance where you wouldn't need to maintain your own instance. You would just

107
0:13:22.880 --> 0:13:35.440
come and create your own project there and use that instance. That's pretty much it.

108
0:13:35.440 --> 0:13:41.680
I would like to end here. This is the link to the repository, obviously, and all the

109
0:13:41.680 --> 0:13:48.080
links to this course and to chat that I mentioned and the documentation are there. You can also

110
0:13:48.080 --> 0:13:55.680
find me on matrix or Twitter. Sorry. Matt Jess. You can send me an email. I'd be also

111
0:13:55.680 --> 0:14:07.440
happy to answer any questions here. Thank you. Thank you very much. We already have

112
0:14:07.440 --> 0:14:16.400
two questions in the matrix room. One is, does it support more complex translation like

113
0:14:16.400 --> 0:14:24.160
full articles? As an example given, what we can find on support.mazilla.org? Short answer,

114
0:14:24.160 --> 0:14:31.040
pontoon is designed to be software localization translation system and we currently don't

115
0:14:31.040 --> 0:14:37.840
have any support for, yeah, I don't know how to call it, like articles, longer blocks of

116
0:14:37.840 --> 0:14:49.200
text. We sometimes abuse that, basically, and split some of the articles or some of

117
0:14:49.200 --> 0:14:55.200
our web pages by paragraphs into multiple strings. But that's not really it. That's

118
0:14:55.200 --> 0:15:02.480
not really the same as Wikipedia localization works or how MDN localization used to work

119
0:15:02.480 --> 0:15:11.000
in the past. We have a ticket on file for that probably since the first week since pontoon

120
0:15:11.000 --> 0:15:21.160
repository was created. But there has been basically no work on that. We do not only

121
0:15:21.160 --> 0:15:27.740
do we try to help you if you want to set up your instance, we're very happy to take patches.

122
0:15:27.740 --> 0:15:37.220
This one would be obviously huge. But anything that doesn't interfere with Mozilla needs,

123
0:15:37.220 --> 0:15:43.360
we would be happy to support. The reason why we haven't implemented that feature is because

124
0:15:43.360 --> 0:15:49.720
at Mozilla there simply was no real need for that apart from the exceptions that I mentioned

125
0:15:49.720 --> 0:15:57.080
earlier. I hope that answers the question. We have another question from Sylvia. I wonder,

126
0:15:57.080 --> 0:16:03.280
why does pontoon exist when other of us translation projects like Webblade exist? What Webblade

127
0:16:03.280 --> 0:16:08.560
not yet around when the project started? Were there any specific feature design decision

128
0:16:08.560 --> 0:16:13.480
you were missing that didn't work with Webblade? Not to say that pontoon shouldn't exist, I'm

129
0:16:13.480 --> 0:16:21.320
just wondering what is unique selling feature. That's a great question. I think it's good

130
0:16:21.320 --> 0:16:25.960
that people have options when they go to the store and they can choose different types

131
0:16:25.960 --> 0:16:31.040
of milk or different types of cars. So it's sort of like the same question as why does

132
0:16:31.040 --> 0:16:38.960
BMW exist if there's Mercedes? I think pontoon, I don't know Webblade too well, I have to

133
0:16:38.960 --> 0:16:46.800
admit that. I was at the presentation today and from what I heard, I think it's an amazing

134
0:16:46.800 --> 0:16:54.480
piece of software. I know that, for example, Mozilla is very eager about supporting natural

135
0:16:54.480 --> 0:17:01.280
sounding translations through Fluent and Message Format. We have special UI for that. Maybe

136
0:17:01.280 --> 0:17:06.240
that also exists in Webblade, I don't know, but I would guess that no, because Fluent

137
0:17:06.240 --> 0:17:13.440
never really passed the borders of Mozilla very intensively. So that would be one of

138
0:17:13.440 --> 0:17:18.560
the things that, and the Message Format support which is related to that, would be one of

139
0:17:18.560 --> 0:17:23.560
the things that comes to my mind. But other than that, I think it's mostly, there's probably

140
0:17:23.560 --> 0:17:30.240
a bunch of other tools. I don't know if Poodle is still in development. There's also closed

141
0:17:30.240 --> 0:17:37.680
source systems. I don't think, I think it's good that people have different choices and

142
0:17:37.680 --> 0:17:43.400
somebody likes that type of UI, somebody likes other types of UI.

143
0:17:43.400 --> 0:17:56.280
Are there any other questions? I see. Can we add support for Firefox translations in

144
0:17:56.280 --> 0:18:00.320
addition to Google and Cstrand? Is it easy to do?

145
0:18:00.320 --> 0:18:08.920
It's very easy to do. Actually, we've been, when we started working on pre-translation

146
0:18:08.920 --> 0:18:19.680
support, we wanted to only use machine translation engines that could be customized and trained

147
0:18:19.680 --> 0:18:27.560
with our own data. And when we were evaluating several engines, obviously Firefox translations

148
0:18:27.560 --> 0:18:33.280
was the first on the list. The challenge at that point, and that was maybe half a year

149
0:18:33.280 --> 0:18:41.680
ago, things might have changed, was that the quality was a little bit lower, at least from

150
0:18:41.680 --> 0:18:49.880
our experience. We were using, I think, BlueScore system, and I think BlueScore was about 5-10%

151
0:18:49.880 --> 0:18:54.480
lower for the locales that were supported by Firefox translations. And it's killing

152
0:18:54.480 --> 0:19:03.560
us because we would like to work with Firefox translations. And I'm sure that one day we

153
0:19:03.560 --> 0:19:06.960
will. And the other issue was that, at least at that point, there was maybe a dozen of

154
0:19:06.960 --> 0:19:12.360
locales that Firefox translations support, whereas with Alt and Mal, it's around 50,

155
0:19:12.360 --> 0:19:21.200
and then there's 50 additional supported by the generic engine of Google. So yeah, hopefully

156
0:19:21.200 --> 0:19:26.320
we're going to extend support to Firefox translations soon. And it's actually a good point, since

157
0:19:26.320 --> 0:19:33.040
adding an engine itself is quite trivial, we should probably just add it, not to pre-translation,

158
0:19:33.040 --> 0:19:39.040
but at least to that machinery tab where you could get suggestions from. Shit, why we haven't

159
0:19:39.040 --> 0:19:41.400
done that? Thank you.

160
0:19:41.400 --> 0:19:52.480
We do collect that, yes. Oh, sorry, sorry. So the question was, the suggestion was that

161
0:19:52.480 --> 0:20:01.600
it would be nice to also collect telemetry to see which engine is preferred by users.

162
0:20:01.600 --> 0:20:08.480
We actually do that already for each translation that's submitted by just copying it over from

163
0:20:08.480 --> 0:20:15.800
memory or any of the machine translation engine. We keep track of that. And we can see that,

164
0:20:15.800 --> 0:20:29.680
okay, this engine is more likely to be used than the other. Yeah.

165
0:20:29.680 --> 0:20:39.800
So one thing I was wondering regarding like Fluent, for example, like other libraries,

166
0:20:39.800 --> 0:20:46.400
for example, the Translate toolkit does not have support for Fluent yet. And I was wondering

167
0:20:46.400 --> 0:20:57.960
if Mozilla was planning to help on the development of Fluent support in the Translate toolkit.

168
0:20:57.960 --> 0:21:04.960
And another thing is that if there are any way of doing like validations, verifications,

169
0:21:04.960 --> 0:21:13.320
because in our project we have a lot of very beautiful translators, but they are many times

170
0:21:13.320 --> 0:21:19.400
it's the first time they translate, so they make a lot of mistakes with the HTML, markdown

171
0:21:19.400 --> 0:21:22.720
syntax, and if you have any kind of validation.

172
0:21:22.720 --> 0:21:30.120
Okay. Thank you. So maybe I can split my answer into two pieces. One piece around Fluent support

173
0:21:30.120 --> 0:21:34.920
in Translate toolkits or maybe some other libraries. And the other question is about

174
0:21:34.920 --> 0:21:42.200
whether pontoon has any sort of quality checks. So the first question, I think Emily will

175
0:21:42.200 --> 0:21:47.960
have much better answer to that in the next talk, which is going to be about message format

176
0:21:47.960 --> 0:21:54.160
2.0 standard, which I see, maybe I don't see clearly, Emily is going to correct me, which

177
0:21:54.160 --> 0:22:04.640
I see as Fluent 2.0. It's developed under the standardization bodies, and that I think

178
0:22:04.640 --> 0:22:12.800
means that the wider support in multiple tools is going to come. If you're specifically interested

179
0:22:12.800 --> 0:22:19.560
about Fluent and adding Fluent support to Translate toolkit, then I think we should

180
0:22:19.560 --> 0:22:47.780
definitely talk and see if there's an opportunity for that. So, translate toolkit already supports

181
0:22:47.780 --> 0:22:53.200
Fluent. That's the answer to the first question. Thank you. The second question about quality

182
0:22:53.200 --> 0:23:00.900
checks, and that's actually related to translate toolkit, pontoon uses three different libraries

183
0:23:00.900 --> 0:23:07.720
for quality checks. One is actually two are internal Mozilla libraries, and another one

184
0:23:07.720 --> 0:23:13.520
is translate toolkit library, which also has its own checks. So, yes, if there are any

185
0:23:13.520 --> 0:23:19.120
obvious errors that can be automatically detected, we will most likely detect it. There's probably

186
0:23:19.120 --> 0:23:27.000
errors that we could detect, but we don't, but I think most of them we do. We work on

187
0:23:27.000 --> 0:23:33.400
improvements to our check system through developers telling us, oh, you broke our product. Okay,

188
0:23:33.400 --> 0:23:38.160
apparently our checks are not good enough. So, over the years, I think our check system

189
0:23:38.160 --> 0:23:47.040
became quite bulletproof. Thank you. We have time for one last question. If someone has

190
0:23:47.040 --> 0:23:57.360
one. I don't see anyone. So, thank you very much, everyone, and thank you very much. Yeah,

191
0:23:57.360 --> 0:24:00.360
thank you. There's a cake on their deceit. Just check it.

192
0:24:00.360 --> 0:24:09.320
Thank you.

