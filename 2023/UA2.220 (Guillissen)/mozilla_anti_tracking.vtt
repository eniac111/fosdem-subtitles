WEBVTT

00:00.000 --> 00:13.920
One minute, please sit down everyone.

00:13.920 --> 00:17.320
I start.

00:17.320 --> 00:24.320
Whenever you are ready.

00:24.320 --> 00:25.320
Okay.

00:25.320 --> 00:26.320
Team, team.

00:26.320 --> 00:27.320
You started?

00:27.320 --> 00:30.120
So, hello, everyone.

00:30.120 --> 00:33.800
Welcome to our third call where we have Vincent.

00:33.800 --> 00:40.480
Vincent Turo is a UI engineer on Mozilla privacy and security products team working on tools

00:40.480 --> 00:42.960
like Firefox Relay and Firefox Monitor.

00:42.960 --> 00:49.080
He's going to talk about over a decade of anti-tracking work at Mozilla.

00:49.080 --> 00:50.240
Thank you, Francesca.

00:50.240 --> 00:53.720
That was actually the first sentence of my presentation just gone now.

00:53.720 --> 00:58.520
Yeah, so I work on the privacy and security products team.

00:58.520 --> 01:06.240
Yeah, and so I want to start this presentation with a bit of a personal anecdote.

01:06.240 --> 01:09.240
My open source journey started with the release of Firefox 1.0.

01:09.240 --> 01:13.000
It was my first interaction with open source software.

01:13.000 --> 01:17.600
Later started using Linux, started contributing.

01:17.600 --> 01:18.600
First with translations.

01:18.600 --> 01:20.920
Later I became a software engineer.

01:20.920 --> 01:25.640
But I only joined Mozilla as an employee about a year and a half ago.

01:25.640 --> 01:29.840
So for this presentation where I'm going to discuss a little over a decade of anti-tracking

01:29.840 --> 01:36.400
work at Mozilla, I'm going to be leaning a lot on the experience of my coworkers, specifically

01:36.400 --> 01:42.680
Luke Crouch and Max Crawford, other engineers on the privacy and security products team.

01:42.680 --> 01:43.680
They wrote this blog post.

01:43.680 --> 01:47.240
So most of the content of this presentation is also in the blog post.

01:47.240 --> 01:51.680
So if you want to have a quick high level recap, you can read that afterwards.

01:51.680 --> 01:54.240
It's also linked on the Fostom site, I think.

01:54.240 --> 01:57.120
But Luke has been at Mozilla for basically forever.

01:57.120 --> 01:59.480
Mozilla threw in through lots of institutional knowledge.

01:59.480 --> 02:03.000
So lots of the content is by him.

02:03.000 --> 02:04.160
Max did most of the illustrations.

02:04.160 --> 02:08.840
So that's where credit is due.

02:08.840 --> 02:12.000
So tracking, it can be beneficial.

02:12.000 --> 02:17.560
I want to do one short scary slide and then the rest will be more positive.

02:17.560 --> 02:24.600
But I want to take a bit of a moment to discuss the risk of tracking.

02:24.600 --> 02:30.640
Why are we actually trying to minimize the harmful effects of tracking?

02:30.640 --> 02:32.360
So tracking is a personal risk.

02:32.360 --> 02:35.640
You can fall victim to phishing attacks, for example.

02:35.640 --> 02:37.480
Or the people around you can fall victim to it.

02:37.480 --> 02:46.280
So if more of your data leaks, it can be used to impersonate you and get, for example, people

02:46.280 --> 02:49.680
around you to transfer large sums of money or whatever.

02:49.680 --> 02:54.440
So if someone contacts my father and says, hey, it's your son, could you please wire

02:54.440 --> 02:57.200
me 5,000 euros?

02:57.200 --> 03:00.840
It's a lot less believable than if they were to say, hey, it's Vincent.

03:00.840 --> 03:02.200
I just got fired from Mozilla.

03:02.200 --> 03:04.960
Hopefully, it never happens.

03:04.960 --> 03:08.280
Could you wire me 5,000 euros because I'm in money trouble or whatever?

03:08.280 --> 03:09.280
That's a lot more convincing.

03:09.280 --> 03:11.760
So data can be abused.

03:11.760 --> 03:14.600
But it's also a more societal risk.

03:14.600 --> 03:18.320
So ransomware has been in the news a lot recently.

03:18.320 --> 03:21.000
It costs a lot of money.

03:21.000 --> 03:26.400
It can even be used to convince people not to vote if they are aligned with a certain

03:26.400 --> 03:28.240
political party or et cetera.

03:28.240 --> 03:32.280
So there's risks involved with tracking.

03:32.280 --> 03:36.600
The rest of my presentation should be more positive.

03:36.600 --> 03:44.280
I'm going to discuss what we're doing to minimize those harmful effects to allow you to confidently

03:44.280 --> 03:46.880
use the internet carefree.

03:46.880 --> 03:48.960
So there's a variety of ways to track you.

03:48.960 --> 03:53.120
Historically, a lot of attention both inside of Mozilla and outside of Mozilla has been

03:53.120 --> 03:54.760
given to tracking cookies.

03:54.760 --> 04:00.000
So I'll start my presentation with an overview of what we've been doing there.

04:00.000 --> 04:03.800
And then I'll go over these other forms as well.

04:03.800 --> 04:09.560
So cookies and a bunch of related technologies that all call cookies.

04:09.560 --> 04:14.220
There are bits of data that websites can store on your computer, which can be useful.

04:14.220 --> 04:19.320
So if you load a website and the website sees a bit of data that proves that you are you,

04:19.320 --> 04:23.840
it can decide to give you your shopping card or your private messages or whatever and not

04:23.840 --> 04:24.840
show someone else's.

04:24.840 --> 04:27.640
So that's a good thing.

04:27.640 --> 04:30.640
That can also be used to track you if you don't want that.

04:30.640 --> 04:32.920
So every website you visit can set cookies.

04:32.920 --> 04:35.160
But not just that website.

04:35.160 --> 04:36.600
Websites can also embed other websites.

04:36.600 --> 04:41.560
So for example, a website could contain a YouTube video and then YouTube can set cookies

04:41.560 --> 04:42.560
as well.

04:42.560 --> 04:43.680
It can contain ads.

04:43.680 --> 04:49.040
And then those are often also served by a third party website can also set cookies.

04:49.040 --> 04:51.840
Websites can even embed other websites without just seeing them.

04:51.840 --> 04:55.420
So for example, with the goal of tracking you.

04:55.420 --> 04:58.060
So those can also set cookies.

04:58.060 --> 05:04.060
So we've been clamping down on that primarily through Firefox.

05:04.060 --> 05:10.920
So I'll start my overview with Firefox private browsing introduced in 2008 after a Chrome

05:10.920 --> 05:13.080
was released which had an incognito window.

05:13.080 --> 05:17.840
But a private browsing window is basically a window that as soon as you close it forgets

05:17.840 --> 05:21.320
everything you did in there, forgets the cookies that were stored as well.

05:21.320 --> 05:27.200
It's often jokingly referred to as porn mode but it's definitely also an anti-tracking

05:27.200 --> 05:28.200
tool.

05:28.200 --> 05:30.560
So for example, my girlfriend used it as such.

05:30.560 --> 05:37.320
She's a kind of ridiculous Harry Potter fan, like participates in international pub quizzes

05:37.320 --> 05:39.320
about Harry Potter level.

05:39.320 --> 05:41.760
But she's also a high school teacher.

05:41.760 --> 05:46.800
And so sometimes she'll need to show a video of something that happened in the news recently.

05:46.800 --> 05:52.080
And she'll go to YouTube, share her screen, and show a YouTube video to her class.

05:52.080 --> 05:56.560
And she doesn't necessarily want her entire private life, which is entirely Harry Potter,

05:56.560 --> 05:59.760
shown in the YouTube recommendations.

05:59.760 --> 06:06.920
So what she does is at home when she's listening to Harry Potter music or ASMR or podcast

06:06.920 --> 06:12.800
or whatever on YouTube, she'll open a private browsing window and do that thing in there.

06:12.800 --> 06:15.840
And then if she closes it, then YouTube can't correlate those two sessions.

06:15.840 --> 06:23.200
So won't show Harry Potter recommendations when she's sharing something with her class.

06:23.200 --> 06:26.240
Another reason why I'm starting my overview with this private browsing window is that

06:26.240 --> 06:31.160
it's we interpret if someone uses a private browsing window, we interpret that as a signal

06:31.160 --> 06:37.240
that someone wants less tracking and is willing to accept some more breakage.

06:37.240 --> 06:43.040
And so unfortunately often when we're trying to block tracking, websites assume that they

06:43.040 --> 06:45.080
can track you and then build their functionality on that.

06:45.080 --> 06:48.680
So there's a risk if you combat that, that you break the website.

06:48.680 --> 06:53.400
So whenever we want to introduce new measures to combat tracking, we'll first introduce

06:53.400 --> 06:58.640
it in private browsing, see how much it breaks there, and then later we can try to port it

06:58.640 --> 07:02.080
over to your regular browsing window.

07:02.080 --> 07:06.000
So that's why I mentioned private browsing first.

07:06.000 --> 07:10.560
In 2013, we introduced more granular cookie control.

07:10.560 --> 07:13.280
So you could make that trade-off yourself as a user.

07:13.280 --> 07:16.720
You could choose, for example, to not use cookies at all.

07:16.720 --> 07:17.720
Lots of breakage.

07:17.720 --> 07:23.040
You wouldn't even be able to log into websites anymore, but also remove that tracking factor.

07:23.040 --> 07:27.160
You could also choose to, for example, not the third-party cookie.

07:27.160 --> 07:30.640
So if you visit a website, then that YouTube video that's in there might not be able to

07:30.640 --> 07:31.760
set cookies.

07:31.760 --> 07:33.120
Less breakage, but still quite a bit.

07:33.120 --> 07:40.480
So it gave you that control, which is helpful, but it's also kind of out of the way.

07:40.480 --> 07:41.760
You have to know of these options.

07:41.760 --> 07:46.120
You have to understand what they do, understand their risks, and just making that trade-off

07:46.120 --> 07:50.760
between breakage and less tracking isn't a great one in the first place.

07:50.760 --> 07:56.240
So later on, we also introduced a block list so that basically a list of cookies that we

07:56.240 --> 07:58.080
know are just used to track you.

07:58.080 --> 08:01.040
Don't provide any functionality for you as a user.

08:01.040 --> 08:03.040
And we allowed you to block those cookies.

08:03.040 --> 08:09.180
So less breakage doesn't prevent all tracking, but helps there.

08:09.180 --> 08:15.800
And then not too long ago, 2021, that's really state-of-the-art anti-tracking cookie work.

08:15.800 --> 08:18.760
We introduced what we call total cookie protection.

08:18.760 --> 08:21.320
So that doesn't actually block cookies.

08:21.320 --> 08:25.380
But for example, if you visit youtube.com and then later visit a different website that

08:25.380 --> 08:29.700
also includes a YouTube video, they'll both have cookies, but they'll be different cookie

08:29.700 --> 08:30.700
jars.

08:30.700 --> 08:33.680
So YouTube will still not be able to correlate those two sessions.

08:33.680 --> 08:38.040
So that helps prevent that tracking factor without actually breaking it, because from

08:38.040 --> 08:39.880
YouTube's point of view, they still have cookies.

08:39.880 --> 08:42.440
So that's the work so far.

08:42.440 --> 08:44.360
Obviously the timeline here stops at 2021.

08:44.360 --> 08:48.300
We're in 2023 now, but they're still the future.

08:48.300 --> 08:51.840
So we're always working on more things to combat that.

08:51.840 --> 08:55.800
But that's my overview of cookies so far.

08:55.800 --> 08:58.420
With that, let's move on to IP addresses.

08:58.420 --> 09:04.040
So IP addresses are basically addresses for every device that's connected to the internet.

09:04.040 --> 09:05.560
They're relatively stable.

09:05.560 --> 09:12.960
They can change, but most of the time, most devices have the same address.

09:12.960 --> 09:15.480
And this is a pretty strong identifier.

09:15.480 --> 09:17.640
Like for example, I'm the only one that uses this phone.

09:17.640 --> 09:19.560
It often has the same IP address.

09:19.560 --> 09:24.440
So everything you can link to that IP address is quite sure to be me.

09:24.440 --> 09:28.880
Same goes for this laptop, for example.

09:28.880 --> 09:35.520
And they're not just tools to link you, but they're also often correlated to the same

09:35.520 --> 09:37.760
to your geographical location.

09:37.760 --> 09:42.840
So it's not super specific, but when I'm at home, you can deduce from my IP address which

09:42.840 --> 09:44.280
city I am.

09:44.280 --> 09:45.280
I'm in.

09:45.280 --> 09:49.200
So yeah, that's the risk of IP addresses.

09:49.200 --> 09:51.320
So whatever we've been doing there.

09:51.320 --> 09:54.200
Well, like cookies, oh, I forgot this.

09:54.200 --> 10:01.400
So the thing with IP addresses, it's inherently if two devices connect to each other via the

10:01.400 --> 10:05.600
internet, they can see each other's IP addresses.

10:05.600 --> 10:09.200
And so that means by virtue of connecting to a website, that website will be able to

10:09.200 --> 10:11.480
see your IP address.

10:11.480 --> 10:13.840
And again, websites can embed other websites.

10:13.840 --> 10:17.840
So those embedded websites can also see your IP address.

10:17.840 --> 10:24.760
So just like we did for cookie protection, we introduced a block list of IP addresses

10:24.760 --> 10:29.120
that are known to track you and not provide other functionality.

10:29.120 --> 10:33.400
As I mentioned, first in private browsing later also gave you that option in your regular

10:33.400 --> 10:36.640
browser window, browsing, which is good.

10:36.640 --> 10:41.120
If you never even connect to a tracking server or to an answer or whatever, it can't track

10:41.120 --> 10:42.120
you.

10:42.120 --> 10:43.120
It can't see your IP address.

10:43.120 --> 10:48.080
But obviously, we can only do this for connections that don't provide any functionality.

10:48.080 --> 10:52.680
We can't start blocking youtube.com because you won't be able to visit to view that video

10:52.680 --> 10:54.120
anymore.

10:54.120 --> 11:02.360
So to battle that, in 2019, we introduced Firefox private network, which is in between

11:02.360 --> 11:07.000
your browser and the website you're connecting to.

11:07.000 --> 11:11.200
And so instead of connecting directly to that website, you'll connect to Firefox private

11:11.200 --> 11:17.920
network and then Firefox private network connects to the website you're trying to view.

11:17.920 --> 11:22.520
And then from the point of view of that website, it will see the IP address of Firefox private

11:22.520 --> 11:23.520
network.

11:23.520 --> 11:28.560
So in 2020, we expanded that to your entire device with Mozilla VPN, which protects not

11:28.560 --> 11:32.240
just your browser traffic, but everything on your device.

11:32.240 --> 11:34.720
And you can also use it on multiple devices.

11:34.720 --> 11:39.840
Yeah, so that's our IP protection so far.

11:39.840 --> 11:46.080
Yeah, then I'll move on to email addresses, which is the fun part because I worked specifically

11:46.080 --> 11:51.280
on Firefox relay product here that I'll discuss in a second.

11:51.280 --> 11:58.160
The first is a question that blew my mind when Luke first mentioned it.

11:58.160 --> 12:04.680
But email addresses, they feel like you can easily create a new email address, right?

12:04.680 --> 12:08.440
You go to g1.com, enter a username and a password, and you've got a new email address.

12:08.440 --> 12:09.920
So they feel like they're easy to change.

12:09.920 --> 12:13.880
But in practice, you've probably changed your house address more often than you've changed

12:13.880 --> 12:15.360
your email address.

12:15.360 --> 12:21.480
I've moved a lot, like, I don't know, six times in the past 10 years maybe, but all

12:21.480 --> 12:24.120
the time I've been reachable via the same email address.

12:24.120 --> 12:29.560
So if you have that on file, there's so much history about me that you know via that email

12:29.560 --> 12:30.760
address.

12:30.760 --> 12:33.040
So it's a pretty stable identifier.

12:33.040 --> 12:38.400
And it's cool if you block all your third-party tracking cookies and you hide your IP address,

12:38.400 --> 12:43.480
but if you then go on and sign in with your email address, they can just correlate that

12:43.480 --> 12:45.480
back together.

12:45.480 --> 12:51.000
And this happens, for example, if you go to an online store and you buy clothes or whatever

12:51.000 --> 12:55.240
and you sign in with your email address and then have the clothes delivered from the point

12:55.240 --> 12:58.640
of view from that store, you're a very attractive customer.

12:58.640 --> 13:02.880
Like, compared to some random on the street, you're far more likely to make another purchase

13:02.880 --> 13:05.300
there than some random person is, right?

13:05.300 --> 13:10.440
So what that store then does is they go to Instagram or whatever, and they're like, hey,

13:10.440 --> 13:12.240
here's an advertising campaign.

13:12.240 --> 13:16.440
There's also a list of all the email addresses of our customers.

13:16.440 --> 13:21.040
Could you please show those ads to those customers?

13:21.040 --> 13:23.680
And so from the point of view of that store, that's great news.

13:23.680 --> 13:25.440
They can advertise to you.

13:25.440 --> 13:26.760
You're a high-potential customer.

13:26.760 --> 13:33.520
But from the point of view of Instagram or Facebook, Meta, whatever, owns it, it's even

13:33.520 --> 13:37.560
better because they have not just your activity on Instagram and Facebook and WhatsApp, et

13:37.560 --> 13:38.560
cetera.

13:38.560 --> 13:43.920
They go, hey, you're a customer of that store and of any other stores that have done the

13:43.920 --> 13:44.920
same.

13:44.920 --> 13:49.920
So lots of ways to track you, and that's the voluntary part, voluntary data sharing by

13:49.920 --> 13:52.940
third parties.

13:52.940 --> 14:00.160
But in 2018, I believe, we introduced Firefox Monitor, which basically it keeps track of

14:00.160 --> 14:02.720
data leaks that happen.

14:02.720 --> 14:07.080
And if you sign up for Firefox Monitor, it will warn you if your data was found in a

14:07.080 --> 14:11.480
data leak, if there was a hack or whatever, to remind you, hey, maybe you want to change

14:11.480 --> 14:12.480
your password.

14:12.480 --> 14:18.280
But what we saw is that many people use the same email address at different services.

14:18.280 --> 14:23.600
So if there's data leaks in different services with the same email address, you can link

14:23.600 --> 14:26.720
the two data leaks, the data in the two data leaks.

14:26.720 --> 14:30.240
You can link them together and know that they're about the same person.

14:30.240 --> 14:35.640
And many people even, probably not all of you, but other people also use the same password

14:35.640 --> 14:37.080
across different websites.

14:37.080 --> 14:41.360
So even if there's not a data leak in a different website, by using your email address and your

14:41.360 --> 14:46.600
password, they're still able to extract data from those other websites.

14:46.600 --> 14:48.080
So that's obviously not great.

14:48.080 --> 14:52.520
So in 2020, we introduced Firefox Relay.

14:52.520 --> 14:56.080
And what basically Firefox Relay does is it provides you with a unique email address per

14:56.080 --> 14:57.080
service.

14:57.080 --> 14:59.760
So if you have a sign up form, you need to leave your email address.

14:59.760 --> 15:03.200
You hit the Relay button, and it will generate a new email address.

15:03.200 --> 15:10.280
So I know ZQF40 at multmail.com, for example.

15:10.280 --> 15:14.900
And it will forward all email that goes to that email address to your true email address.

15:14.900 --> 15:19.600
So the store will still be able to communicate with you, send you emails at that address,

15:19.600 --> 15:22.080
but that won't have your actual email address on file.

15:22.080 --> 15:26.800
And so if there's a data leak there, your data can be linked to your data elsewhere,

15:26.800 --> 15:30.680
because you have two different email addresses there.

15:30.680 --> 15:33.360
So that's Firefox Relay.

15:33.360 --> 15:34.360
Yeah.

15:34.360 --> 15:38.600
Oh, actually, I'm doing well on time.

15:38.600 --> 15:41.440
You're welcome, Francesca.

15:41.440 --> 15:43.880
So then I lost the phone numbers.

15:43.880 --> 15:45.760
So kind of similar threat, right?

15:45.760 --> 15:49.640
It was super annoying when I started to use Relay, and cool, you can leave your email

15:49.640 --> 15:50.640
address.

15:50.640 --> 15:52.440
And I'm like, ha ha ha, I've got my Firefox Relay address.

15:52.440 --> 15:53.440
You can catch me.

15:53.440 --> 15:56.520
And then they're like, can you give your phone number two?

15:56.520 --> 15:59.140
A bit of a shame.

15:59.140 --> 16:06.420
So what we did is late last year, we introduced phone masking for Firefox Relay, added this

16:06.420 --> 16:07.800
graphic to our website.

16:07.800 --> 16:11.080
But it works similar to email masking.

16:11.080 --> 16:17.440
You get a phone number mask, so a new phone number, and all the text messages, all the

16:17.440 --> 16:21.400
phone calls that go to that phone number will be forwarded to your true number without having

16:21.400 --> 16:24.680
to share your true phone number.

16:24.680 --> 16:29.320
And so if you get, for example, a text message saying, hey, it's your bank.

16:29.320 --> 16:35.160
Could you please change your password, go to this website and change it?

16:35.160 --> 16:37.880
That's an additional signal where you can see, well, this is not actually my true phone

16:37.880 --> 16:39.160
number, which my bank has.

16:39.160 --> 16:43.080
So this is probably a scammer.

16:43.080 --> 16:45.000
This is a pretty new edition.

16:45.000 --> 16:48.960
So unfortunately for probably most of you, also for myself, especially given that I work

16:48.960 --> 16:56.440
on it, not available outside the US and Canada yet, but hopefully soon.

16:56.440 --> 17:03.240
But yeah, so the point there is lots of this work is like the broadening of the scope beyond

17:03.240 --> 17:05.920
just tracking cookies.

17:05.920 --> 17:07.920
That's all quite recent works.

17:07.920 --> 17:12.720
You should saw like 2018 onwards, we started to broaden our focus.

17:12.720 --> 17:18.780
That's also when the security and privacy products team around then started.

17:18.780 --> 17:21.120
So yeah, we're not done yet.

17:21.120 --> 17:26.680
Obviously this is the overview of the timeline so far.

17:26.680 --> 17:33.080
And yeah, if you have any ideas of what we can do, do leave them on Mozilla Connect.

17:33.080 --> 17:35.640
And that's, I think everything I had.

17:35.640 --> 17:47.120
Damn, my practice was so much slower.

17:47.120 --> 17:48.920
Thank you very much.

17:48.920 --> 17:51.880
And so does anyone have any questions?

17:51.880 --> 18:07.640
So especially with the IP and email protection, it really seems like you have a single part

18:07.640 --> 18:08.640
of the page.

18:08.640 --> 18:09.640
What do you do to mitigate any risks?

18:09.640 --> 18:11.040
So the question was if, that's what you, yeah.

18:11.040 --> 18:17.120
So the question is if, especially for Mozilla VPN and Firefox Relay, Mozilla is kind of

18:17.120 --> 18:19.920
the single point of failure there.

18:19.920 --> 18:25.960
And yeah, that's true.

18:25.960 --> 18:33.680
So the point of failure here is, for example, for Firefox Relay, if you're, imagine we're

18:33.680 --> 18:38.820
doing everything to prevent it, but imagine there's a data leak at Firefox Relay.

18:38.820 --> 18:47.560
What then happens is your email address still gets public, which is annoying, obviously.

18:47.560 --> 18:49.760
But you're basically back at where you were before, right?

18:49.760 --> 18:54.840
But there's just one place where it could fill IE Firefox Relay rather than all those

18:54.840 --> 18:57.000
places that store your other email address.

18:57.000 --> 18:59.600
So yeah, it's annoying.

18:59.600 --> 19:04.880
Ideally we'd have, I'm not sure, I'm sure Luke has probably a couple of ideas around

19:04.880 --> 19:07.920
minimizing that that we might look at at some point.

19:07.920 --> 19:10.240
If you have, looks like you have an idea.

19:10.240 --> 19:16.520
Because especially if you are like the central place where you store everything, you become

19:16.520 --> 19:18.480
a very attractive target.

19:18.480 --> 19:19.480
Yeah that's true.

19:19.480 --> 19:24.840
So yeah, if the, we're saying if we're a central place that has, have lots of email

19:24.840 --> 19:28.120
address, obviously we become a bigger target.

19:28.120 --> 19:29.120
That is true.

19:29.120 --> 19:34.720
I wouldn't say like right now Firefox Relay and VPN as well aren't that big compared

19:34.720 --> 19:38.480
to like there's far bigger data, data faults.

19:38.480 --> 19:45.000
But that's definitely something we're aware of and want to minimize.

19:45.000 --> 19:55.120
I think right now for, at least for me personally the, for me personally that is still worth

19:55.120 --> 19:56.120
it, right?

19:56.120 --> 20:00.360
The risk is smaller for using Firefox Relay.

20:00.360 --> 20:08.000
For, if I want to order a ticket for example, like a concert ticket, I'll give them a Relay

20:08.000 --> 20:13.240
address, they'll forward me the ticket and I'm done with it and I never knew that again.

20:13.240 --> 20:17.560
For your, if you're interacting with your bank for example, I would use your actual

20:17.560 --> 20:19.440
email address.

20:19.440 --> 20:24.160
So it's, yeah, there's definitely a risk calculation to make there.

20:24.160 --> 20:27.600
Nothing is a, yeah, all these products are not a perfect solution.

20:27.600 --> 20:32.920
I think that's basically the threat in all of this.

20:32.920 --> 20:39.800
It's all about trying to find that balance, like with the trying to block cookies for

20:39.800 --> 20:43.640
example, it's all trying to find this balance between how much tracking do we want to allow

20:43.640 --> 20:46.280
and how much breakage do we want to allow.

20:46.280 --> 20:51.240
There's always tracking that we can't prevent and there's always downsides of our anti-tracking

20:51.240 --> 20:52.360
measures that we can't prevent.

20:52.360 --> 20:57.360
So yeah, I wish I had a better answer but that's it.

20:57.360 --> 20:59.800
We have a personal sign matrix.

20:59.800 --> 21:00.800
Okay.

21:00.800 --> 21:04.920
It currently doesn't work with short.

21:04.920 --> 21:06.920
Ah, okay.

21:06.920 --> 21:16.120
So Danny on our matrix is asking that I'm not, yeah, so is asking about Firefox Relay

21:16.120 --> 21:21.120
phone number masks, not working with a bunch of tools.

21:21.120 --> 21:27.240
That is something we're aware of and working to fix for those who are familiar with phone

21:27.240 --> 21:28.240
number masking.

21:28.240 --> 21:29.240
Yeah.

21:29.240 --> 21:39.240
So my question is, is it correct to state that at the moment none of the services we

21:39.240 --> 21:44.240
demonstrate actually treat our data end to end and then end to end encryption so that

21:44.240 --> 21:48.240
you can't see our data and follow up question to this question, if you have any plans to

21:48.240 --> 21:53.680
implement end to end detection, is it even realistic in this space?

21:53.680 --> 22:04.520
So the question is, do we end to end and create the data we're handling?

22:04.520 --> 22:08.680
Obviously not applicable to everything like cookie, et cetera, not.

22:08.680 --> 22:15.880
For emails, that's basically not possible because we need to know your email address

22:15.880 --> 22:17.920
to actually be able to forward email.

22:17.920 --> 22:22.560
We don't store the emails we forward so we get them for them to you and forget about

22:22.560 --> 22:23.560
them.

22:23.560 --> 22:26.560
So, um, damn it.

22:26.560 --> 22:32.320
Uh, VPN, actually I'm not sure maybe, but I see why you are here.

22:32.320 --> 22:33.320
Is that encrypted?

22:33.320 --> 22:37.600
I think your connection via VPN is encrypted, right?

22:37.600 --> 22:43.440
So yeah, um, VPN works the way that you generate like this.

22:43.440 --> 22:45.440
We're using one.

22:45.440 --> 22:48.160
Sorry for putting you on the spot, but.

22:48.160 --> 22:49.160
Hi.

22:49.160 --> 22:50.160
Um, yeah.

22:50.160 --> 22:52.240
So VPN works, um, we're using the Wagga protocol.

22:52.240 --> 22:56.560
So on the client, you generate your own private key and you only upload the public key to

22:56.560 --> 22:59.160
the mother, the mother VPN network.

22:59.160 --> 23:02.640
And then during the server handshake with a partner, you generate a session key.

23:02.640 --> 23:06.880
So essentially even if your public key gets leaked, we can't see anything.

23:06.880 --> 23:07.880
Yeah.

23:07.880 --> 23:09.960
So VPN is, is entered and encrypted.

23:09.960 --> 23:15.880
We can't see your, uh, what, what you pass through there.

23:15.880 --> 23:16.880
Hey.

23:16.880 --> 23:17.880
Hi.

23:17.880 --> 23:24.680
Uh, I wonder how does a Firefox relay, um, like, uh, prevent spam?

23:24.680 --> 23:28.640
Like how does, what kind of like mechanism does it use to catch?

23:28.640 --> 23:32.080
Uh, so there's a basic spam filter.

23:32.080 --> 23:40.360
Um, we make sure that if, uh, so if we forward our email and your email and you mark market

23:40.360 --> 23:46.680
as spam in your, uh, in your inbox, Firefox relay gets a signal and stop forwarding emails

23:46.680 --> 23:51.560
to that email address because, uh, you know, it's spam.

23:51.560 --> 23:57.080
I wouldn't know.

23:57.080 --> 24:03.920
So the question was what service do we use to, to detect spam, um, come to our matrix

24:03.920 --> 24:05.600
and I'll find out for you.

24:05.600 --> 24:06.600
Uh, yeah.

24:06.600 --> 24:07.600
All right.

24:07.600 --> 24:09.200
I reckon engineers will know that.

24:09.200 --> 24:10.200
Yeah.

24:10.200 --> 24:11.920
I'm not involved with that part of the implementation.

24:11.920 --> 24:16.040
Um, but we do have a number of anti-spam and anti abuse mechanisms in there.

24:16.040 --> 24:19.840
Um, cause obviously we don't want to get blocked by other people as well.

24:19.840 --> 24:21.840
Uh, thank you for the talk.

24:21.840 --> 24:24.160
Uh, might sound like a stupid question.

24:24.160 --> 24:29.040
You mentioned the three or four products like relay VPN and monitor.

24:29.040 --> 24:31.240
Are they free, including the VPN?

24:31.240 --> 24:32.240
Uh, no.

24:32.240 --> 24:33.240
So the VPN is paid.

24:33.240 --> 24:35.680
I would also recommend you not to use a free VPN.

24:35.680 --> 24:37.040
They're almost all shady.

24:37.040 --> 24:40.880
Uh, quite a few of the paid ones are also pretty shady actually.

24:40.880 --> 24:42.280
Um, but no.

24:42.280 --> 24:48.960
So the VPN is, I believe if you pay annually, I think five euros a month.

24:48.960 --> 24:50.700
Uh, I see not.

24:50.700 --> 24:51.700
So that's good.

24:51.700 --> 24:56.680
Uh, Firefox relay has a free plan which gives you just five email addresses.

24:56.680 --> 24:59.160
Uh, so that works with them.

24:59.160 --> 25:01.880
If you want to give every service a unique email address, that's not great.

25:01.880 --> 25:04.720
Um, but they cost one euro a month.

25:04.720 --> 25:08.680
Um, and, um, monitor is free.

25:08.680 --> 25:10.520
Uh, yeah.

25:10.520 --> 25:17.760
And so part of this is also like part of what we're doing at Mozilla is, is, you know, building

25:17.760 --> 25:20.040
these, these, uh, privacy protecting tools.

25:20.040 --> 25:23.360
Uh, we're also trying to find ways to have those finance themselves.

25:23.360 --> 25:28.880
So that's what, yeah, it's not, um, yeah, we're not trying to sell ads or anything.

25:28.880 --> 25:29.880
You pay for it.

25:29.880 --> 25:30.880
You're the customer.

25:30.880 --> 25:32.600
That's, that's the idea there.

25:32.600 --> 25:34.560
All right.

25:34.560 --> 25:39.480
So I think it's pretty obvious that the technologies that are being used to track is now kind

25:39.480 --> 25:43.640
of almost requires to have a sort of centralized entity to sort of resolve it.

25:43.640 --> 25:48.760
Whereas cookie protection could be kind of done decentralized and that obviously makes

25:48.760 --> 25:53.280
Mozilla as a, as an organization, a kind of a target of critique, I guess, because you

25:53.280 --> 25:56.080
become centralized to some sort of tracking.

25:56.080 --> 26:01.600
Is there some sort of track or something that happens at Mozilla to mitigate the risks of

26:01.600 --> 26:04.880
being a single entity that could store too much information?

26:04.880 --> 26:10.320
Like for instance, in terms of relays, there is separate entity that, or, or an entrenched

26:10.320 --> 26:14.640
thing that tries to ensure that you don't store too much data so that at least you can't

26:14.640 --> 26:17.120
kind of try to monetize it yourself.

26:17.120 --> 26:22.360
Um, they, yeah, everyone can hear it.

26:22.360 --> 26:23.360
Right.

26:23.360 --> 26:28.600
So, um, one, one strategy there that we have as a Mozilla, we have our lean data practices.

26:28.600 --> 26:32.000
So that means collect as little, as little data as possible.

26:32.000 --> 26:33.440
That's one way to mitigate that.

26:33.440 --> 26:37.440
So for example, in Firefox Relay, it's why we only store your email address.

26:37.440 --> 26:41.040
We don't store the emails we forward.

26:41.040 --> 26:46.400
You can choose, so you can choose to store, uh, associations like which lay, which mass

26:46.400 --> 26:49.920
data use of which website, but you can also choose to have that stored locally if you

26:49.920 --> 26:53.480
have the extension or just not stored at all.

26:53.480 --> 27:00.880
Um, and yeah, in terms of, we'd like, like, it's definitely something we'd like.

27:00.880 --> 27:04.520
I don't, I'm not sure of initiatives going on there.

27:04.520 --> 27:13.880
Um, and we do, um, not last night train of thought, but, um, yeah.

27:13.880 --> 27:14.880
Thank you very much.

27:14.880 --> 27:17.360
Unfortunately, this last question we have time off.

27:17.360 --> 27:21.600
Please put the rest in the matrix room.

27:21.600 --> 27:42.300
Okay, I'll leave, uh, go ahead and as I

27:42.300 --> 27:52.300
I think I like 100% my fingers for this team.

27:52.300 --> 27:53.300
Like 100%.

27:53.300 --> 27:54.300
Yeah.

27:54.300 --> 27:55.300
Oh, cool.

27:55.300 --> 28:00.300
It's like fresh air, like you've got everything.

28:00.300 --> 28:03.300
You can come on and make sure you're not wasting anything.

28:03.300 --> 28:05.300
Thank you.

28:05.300 --> 28:06.300
Thank you.

28:06.300 --> 28:08.300
No, no.

28:08.300 --> 28:13.300
And then obviously you're live.

28:13.300 --> 28:14.300
Yes.

28:14.300 --> 28:17.300
Yes.

28:17.300 --> 28:22.300
You have an adapter.

28:22.300 --> 28:40.300
Thank you.

28:40.300 --> 28:43.300
Wonderful.

28:43.300 --> 29:10.300
Thank you.

29:10.300 --> 29:14.300
I think most of you are going to turn on your second screen.

29:14.300 --> 29:16.300
It's not on, I think.

29:16.300 --> 29:19.300
It's on.

29:19.300 --> 29:21.300
It's difficult.

29:21.300 --> 29:24.300
So why doesn't that see it?

29:24.300 --> 29:27.300
I think what people are asking about is the current voting party.

29:27.300 --> 29:31.300
What does that do in the voting party?

29:31.300 --> 29:36.300
So in countries where, for example, ISPs are net worth,

29:36.300 --> 29:41.300
and they're not worth.

29:41.300 --> 29:44.300
They're not worth.

29:44.300 --> 29:47.300
I think it would be very secure.

29:47.300 --> 29:52.300
I get the title more.

29:52.300 --> 29:55.300
It's a different department.

29:55.300 --> 29:58.300
I'm sorry, I can't talk, but it depends if you just scatter over there.

29:58.300 --> 30:02.300
There's a better poll.

30:02.300 --> 30:03.300
Yes.

30:03.300 --> 30:04.300
It's coming.

30:04.300 --> 30:09.300
Yes.
