WEBVTT

00:00.000 --> 00:10.480
Great pleasure to be here. Can you all hear me at the back? All right. Can you? Yeah,

00:10.480 --> 00:16.900
thank you. Yeah, wow. What, FOSDEM? Thank you to the organisers and for the staff for

00:16.900 --> 00:22.280
inviting me here. It's a great pleasure to be here. And, yeah, if you asked me a year

00:22.280 --> 00:28.420
ago would I be here, I'd be like no, because I hadn't actually heard of FOSDEM. Apologies,

00:28.420 --> 00:33.000
at that point. Secondly, if I'd be told that I'd be talking about Rosegarden, which is

00:33.000 --> 00:39.360
something I've not worked on myself for a very long time, not contributed to, I'd be

00:39.360 --> 00:47.640
doubly surprised. However, I think it's important to look back sometimes. And I've called this

00:47.640 --> 00:52.360
talk a slumbering, yeah, Rosegarden a slumbering giant. And I thought, I didn't really think

00:52.360 --> 00:55.080
when I was putting this submission in as well, so I thought a slumbering giant, that made

00:55.080 --> 01:02.280
sense to me at the time. Who knows what slumbering actually means? Okay. I should explain that,

01:02.280 --> 01:06.560
because I was thinking about maybe changing. So slumbering actually means not quite sleeping,

01:06.560 --> 01:10.640
but also not quite awake either. And it's kind of in relation to the fact that Rosegarden

01:10.640 --> 01:14.640
has been around for a very long time. Maybe just as a show of hands as well, how many

01:14.640 --> 01:19.800
people have used, okay, let's start off simply. How many people have used computers to make

01:19.800 --> 01:26.240
music? Okay. So we've got about 20 maybe. That's pretty good. Keep your hand up if you

01:26.240 --> 01:33.240
use Linux to make music. Okay. That's actually more, I think. It's weird. Okay. About the

01:33.240 --> 01:39.480
same maybe. So how many people have heard of Rosegarden? Okay. That's not bad. Not impressed.

01:39.480 --> 01:47.480
Okay. Good. Good stuff. So Rosegarden started actually longer than 20 years ago. Let me

01:47.480 --> 01:58.720
show you. So this is the kind of current Rosegarden. This is how it looks kind of now. And if you're

01:58.720 --> 02:06.960
familiar with music software, by the way, I've got a pointer. Can you see it? Yeah.

02:06.960 --> 02:10.560
It's cool. I usually just use it to torture cats, but this is the first time I've actually

02:10.560 --> 02:16.600
used it on a presentation. So yeah, if you're unfamiliar with digital audio workstations,

02:16.600 --> 02:22.720
I'll give you a little tour. So we have down here some instruments, and you can map to

02:22.720 --> 02:27.800
those tracks, and they're either MIDI tracks, which is musical instrument digital interface

02:27.800 --> 02:33.240
tracks, or you can have audio tracks too. And this is how Rosegarden essentially works.

02:33.240 --> 02:39.320
It allows you to compose. It allows you to record into it from a digital instrument or

02:39.320 --> 02:52.480
from an analog instrument, and then you can edit it on the screen. Just to go back to

02:52.480 --> 02:57.960
the beginning, the talk today as well is going to be about the history of Rosegarden. It's

02:57.960 --> 03:04.520
going to be about how I believe that good engineering practice, it was an interesting

03:04.520 --> 03:11.280
talk, the last talk from Brian, about using the latest tools and technology to understand

03:11.280 --> 03:15.640
how open source software can be better. So as part of this talk, I'm going to look at

03:15.640 --> 03:19.840
how Rosegarden was put together in the first place and why I believe it's still around

03:19.840 --> 03:22.920
because of the way it was put together and because of some of the design decisions that

03:22.920 --> 03:31.040
we made during the creation of it. Oh, yeah, if I didn't mention, there's a QR code there.

03:31.040 --> 03:34.080
If you want to scan that, you can go to a page where there'll be some links. I'll also

03:34.080 --> 03:42.640
share this at the end. Rosegarden was really a kind of a labour of love. It was almost

03:42.640 --> 03:46.840
an accidental success, but it was kind of done deliberately in a way. That doesn't really

03:46.840 --> 03:51.880
make any sense, but Rosegarden came about originally from a university project. So it's

03:51.880 --> 03:58.560
actually a lot older than 20 years. It's almost 30 years old. In fact, it's over 30 years old.

03:58.560 --> 04:07.960
And then it became something of its own thing. So just diving back into how it looks these

04:07.960 --> 04:13.520
days again. So we've got a piano editor on one side and a notation editor on the other.

04:13.520 --> 04:17.040
And this was one of the great powers of the original Rosegarden, as well as both notation

04:17.040 --> 04:25.160
editing and MIDI editing too. And this is the current Rosegarden homepage where you

04:25.160 --> 04:30.280
can download it and see how often it's raised. Up here you can see there was a release in

04:30.280 --> 04:39.840
December. The current maintainer, Ted, works very hard on these. And when I'm talking about

04:39.840 --> 04:43.280
the engineering processes that go behind it, you'll see towards the end of the presentation

04:43.280 --> 04:47.480
that there's a lot of manual work involved still. So some of the best practices that

04:47.480 --> 04:54.200
we get through our day jobs can actually help us understand how we can make software like

04:54.200 --> 05:03.040
this more maintainable and easier to release. It's not untypical as well for large software

05:03.040 --> 05:11.640
projects like this to have slow release cycles. And typically once it's released, it goes

05:11.640 --> 05:18.880
into the usual repositories where it can be created and packaged for download on various

05:18.880 --> 05:27.080
different distributions. It's been translated into around 20 different languages, including

05:27.080 --> 05:40.560
Chinese, Japanese, Italian, Spanish, Finnish, German, loads. And over the last 20 years

05:40.560 --> 05:49.080
it's been downloaded from all over the world as you can imagine. And this is some stats.

05:49.080 --> 05:54.400
So interestingly enough, we're still on SourceForge. That's down to the developers having a certain

05:54.400 --> 05:58.880
way of looking at things. So SourceForge is the preferred way of looking at things for

05:58.880 --> 06:02.200
a lot of the developers because they've been involved in it for a long time. And perhaps

06:02.200 --> 06:06.240
they're a little bit behind the times. So they like to dig their heels in sometimes

06:06.240 --> 06:12.320
when it comes to what is acceptable in terms of the technology that is being used. So the

06:12.320 --> 06:15.920
good part about it is that we have all the stats from the beginning of time basically

06:15.920 --> 06:20.200
all the way to today on how many times it gets downloaded. And this is source packages

06:20.200 --> 06:26.880
only essentially as well. So it's not bad. I mean, its height, it was 5,000 source package

06:26.880 --> 06:31.280
downloads per month. And even with the last release it was still around 2,000. So if you

06:31.280 --> 06:38.520
add that into the mix with all the prepackaged stuff that happens for the distributions,

06:38.520 --> 06:48.840
then it's a pretty tidy amount. So who am I and why am I here? So I worked on Rosegarden

06:48.840 --> 06:55.080
between 1995 and 2004, 2005. I'm now an independent consultant and I kind of specialized mainly

06:55.080 --> 07:02.440
in software delivery and customer focus. And that means that over the years as a professional

07:02.440 --> 07:07.000
software engineer, I've learned various techniques which has helped me understand, okay, well

07:07.000 --> 07:11.840
maybe we could do things slightly better. And I'd like to talk and write about this

07:11.840 --> 07:21.840
right now. And this is how this talk I suppose kind of came about because I was thinking

07:21.840 --> 07:26.640
what is the project that gave me the most pleasure over these years? And when it comes

07:26.640 --> 07:35.040
down to it, undoubtedly Rosegarden was the thing. And some of the takeaways I believe

07:35.040 --> 07:44.120
that we can get from this is to understand how open source software becomes important

07:44.120 --> 07:49.200
and how it stays important as a social and commercial, well not commercial, it can be

07:49.200 --> 07:58.360
commercial but as a social enterprise. So this is really a story about motivation and

07:58.360 --> 08:11.640
why we do things the way we do. And how open source software becomes something that can

08:11.640 --> 08:18.000
take over our lives as well. So just to expand on that a little bit, I've kind of broke it

08:18.000 --> 08:23.360
down to three areas which I believe are the core components of how open source kind of

08:23.360 --> 08:29.640
gets good, how open source projects become a thing in the first place and how they then

08:29.640 --> 08:38.680
sustain themselves. And it's mainly, spoilers, mainly around the social exercise. We do it

08:38.680 --> 08:43.960
because we kind of want to, we're driven to do it. Of course we do it as well because

08:43.960 --> 08:48.680
we can't do it by ourselves. So that's number one for me is the effort that it takes to

08:48.680 --> 08:54.840
build something. So when you look at something like Rosegarden or any other huge open source

08:54.840 --> 08:58.680
project, you end up with hundreds of thousands of lines of code and lots of contributors

08:58.680 --> 09:06.720
from all over the world doing various different things, either writing code themselves, becoming

09:06.720 --> 09:11.360
developers, doing translations, helping out on the website with documentation. And this

09:11.360 --> 09:15.440
is a snapshot from the Rosegarden website of the contributors that have been involved

09:15.440 --> 09:31.800
over the years. Secondly, you can't do it without effort, you can't do it without support.

09:31.800 --> 09:39.800
This is a picture of the time that's elapsed between when I, no sorry, when I stopped working

09:39.800 --> 09:46.840
on Rosegarden and pretty much today. This is my son, Sam. He was one when I took a photo

09:46.840 --> 09:55.600
of him and put him on this poster, so to kind of, to be used at one of these sounds expos

09:55.600 --> 10:04.560
that we did in 2004. And this is him last year as he graduated from high school. And

10:04.560 --> 10:10.960
this was probably the reason why I stopped contributing to Rosegarden this time because

10:10.960 --> 10:18.040
I went off to have a family. And of course the family is important for support, so they

10:18.040 --> 10:30.360
have to keep you going, maintaining your energy to be able to do stuff. In addition to that,

10:30.360 --> 10:51.560
we also see how the working world comes into play. One second. So after university, I went

10:51.560 --> 11:05.120
into, sorry. So how does the working world shape our experience and our perception of

11:05.120 --> 11:10.560
what goes on in the open source land? So after university, basically, after Rosegarden first

11:10.560 --> 11:17.200
came out, going into engineering and becoming a person who would actually grow as an engineer

11:17.200 --> 11:34.120
and then be able to feed back into that project. So this is taking, this is the start, basically,

11:34.120 --> 11:39.640
of Rosegarden. So I went to Bathurst University between 1990 and 1994. Rosegarden started

11:39.640 --> 11:47.240
as a university project by a couple of friends of mine, Chris Cannon and Melissa Wilson.

11:47.240 --> 11:51.640
And they did it for a final year project at Bath. And it was written for John Fitch, who

11:51.640 --> 11:56.160
was one of the computer science professors there. And it's his idea to come up with a

11:56.160 --> 12:00.720
Unix sequencer and notation editor. I think it was the combined thing that he came up

12:00.720 --> 12:07.640
with together. So Rosegarden itself was born of a university project in around 1992. And

12:07.640 --> 12:11.880
the name is a bit strange. So Rosegarden, where does that come from? It's actually,

12:11.880 --> 12:18.000
thanks to these guys, a band called Bauhaus who come out of Northampton in the UK from

12:18.000 --> 12:25.480
1978. And Chris Cannon, one of the lead developers, the originators of Rosegarden, he was a big

12:25.480 --> 12:31.080
fan of Bauhaus and he had one of the songs called Rosegarden, The Funeral of Soars, which

12:31.080 --> 12:38.800
is actually a song by John Cale. And he, being a bit of a wag thought, it's probably going

12:38.800 --> 12:43.840
to be crap, this notation editor. So we'll call it Rosegarden after Funeral of Scores.

12:43.840 --> 12:53.960
Ha ha. Scores notation. Get it? So yeah, that was the origination of the name. So 1992,

12:53.960 --> 13:00.760
it was written on Unix. It was written on SGI originally, under Irix, with the Athena

13:00.760 --> 13:07.160
widget set. It was a modified Athena widget set, written in C. And it looked pretty good.

13:07.160 --> 13:10.960
I mean, I think Chris did a pretty good job, actually, despite the fact he thought it would

13:10.960 --> 13:18.000
be terrible. This is actually Rosegarden 1.0, the source code. However, I believe this screenshot

13:18.000 --> 13:23.920
comes from Rosegarden 2.1, which was the first Linux port of that source code. And as you

13:23.920 --> 13:30.960
can see, it's got a piano roll editor, an event editor. It's also got the notation.

13:30.960 --> 13:35.920
Oops. And it also works together on the same screen like that. So it was pretty advanced.

13:35.920 --> 13:40.720
And it worked via the Irix device. So it would actually send out to a MIDI device from the

13:40.720 --> 13:46.200
SGI, the Silicon Graphics workstation. That was it, number one. That was done for a final

13:46.200 --> 13:52.400
year project. So what happened next? Well, what happened along the side of that was that

13:52.400 --> 13:59.840
we ended up spending a lot of time mucking around. So in 1992, 1993, I was still at university.

13:59.840 --> 14:04.920
Chris and Melissa were peers of mine, friends of mine, too. And we used to hang around in

14:04.920 --> 14:09.720
the spark labs, as they were called, at Bath University. And we played too much X-tank.

14:09.720 --> 14:17.640
Anyone know X-tank? Yes, very good. Too much fun. And too many late nights. And that was

14:17.640 --> 14:22.880
the thing about coding at the time as well. It was a social enterprise. It's exactly the

14:22.880 --> 14:28.800
same these days as well. I look at my son. I say to him, okay, why have you not learned

14:28.800 --> 14:32.720
like, why have you not learned? He starts, okay, so now he's going to university, he's

14:32.720 --> 14:39.160
starting to learn computer science at university. And when I was growing up, I had a computer

14:39.160 --> 14:43.240
probably like some of you here. I started coding because I was interested in it. Him

14:43.240 --> 14:46.640
absolutely zero interest in coding until he got to university. It's all been gaming.

14:46.640 --> 14:52.720
I'd be like, why didn't you build a website? No interest. But yet he goes on to study computer

14:52.720 --> 14:56.960
science. And annoyingly, he's really good at it. And he picks it up in no time at all.

14:56.960 --> 15:01.960
So now I'm getting WhatsApp saying, dad, what about this node problem? How do I fix that?

15:01.960 --> 15:08.080
Okay, fine. But to be honest, looking back, it's exactly the same now as it was then.

15:08.080 --> 15:13.800
Because we just mucked around, too. We spent a lot of time in the spark labs playing X-tank.

15:13.800 --> 15:17.960
We spent a lot of time learning command line or learning about Unix processes, how they

15:17.960 --> 15:24.160
work. We learned stuff off each other. So at university, I learned Unix command line

15:24.160 --> 15:30.440
solely from mucking around. I learned C and X11 from doing some university courses, some

15:30.440 --> 15:37.040
of my minors. But the majority of it was from, yeah, just hanging out with people, exchanging

15:37.040 --> 15:45.640
information. So that was Rose Garden 1. And then we left university. We went off into

15:45.640 --> 15:54.200
the working world as a peer group as well. So I ended up in London eventually. As did

15:54.200 --> 15:57.720
Chris and Melissa. They were working for the same company, actually. And we ended up hanging

15:57.720 --> 16:06.920
out. And somehow, I don't know quite how this happened. But we got to a point where Linux

16:06.920 --> 16:14.240
was a thing. You know, I think I've got a picture next. Where is it? Okay. So I've been

16:14.240 --> 16:18.160
working for a little bit. I've just skipped ahead. I'll skip back. I've been working for

16:18.160 --> 16:21.920
a little bit. I managed to save a bit of money eventually. And I bought my first PC. And

16:21.920 --> 16:28.200
it was one of these gateway 2000s. Came in a cow box. I can't forget it. And it was so

16:28.200 --> 16:31.800
exciting because I never had my own PC before. And the first thing I did with it was buy

16:31.800 --> 16:43.280
Slackware 3.0 and put that on it. And that came out of, yeah, working. So going back

16:43.280 --> 16:48.040
to this picture. The working world. And that was really where things started to kind of

16:48.040 --> 16:53.680
fall into place. Because when you're working in a proper company, you have responsibilities.

16:53.680 --> 16:59.280
And that was one thing that work really taught me. You're not just mucking around in the

16:59.280 --> 17:04.440
Spark lab anymore. You can't stay up late to do your coding and have a lot of fun and

17:04.440 --> 17:08.960
sleep late. You end up doing that anyway when you're a young engineer sometimes. But if

17:08.960 --> 17:15.120
you're working for a company like this, like I was, a telecoms company, and we had responsibilities.

17:15.120 --> 17:21.480
So we created network management software. And also software for multiplexers. And my

17:21.480 --> 17:27.160
first boss, she was great. She sent me out on a customer visit. Straight away. She said,

17:27.160 --> 17:32.040
okay, get in the car. Get up to Sheffield in Yorkshire in the UK. And go and be on

17:32.040 --> 17:37.200
site with Yorkshire Telecom whilst they're upgrading their multiplexers and upgrading

17:37.200 --> 17:42.240
software with our new network management software. And for something like that as a young, just

17:42.240 --> 17:46.880
out of university, graduate engineer, it was incredible. Because it finally gave you that

17:46.880 --> 17:51.320
connection between all the stuff that you do, all the hours that you spend on a piece

17:51.320 --> 17:58.480
of code and the customer themselves. Because if one of these cabinets fell out of the network

17:58.480 --> 18:02.120
or the upgrade didn't work, then someone would have to be sent out in a van. So the street

18:02.120 --> 18:06.280
cabinet to reboot it and then you have to watch it in the control room to make sure

18:06.280 --> 18:14.920
it came back up again. And that was, yeah, the real kind of visceral connection.

18:14.920 --> 18:19.960
So this is the first, you might call it a learning, that I had. I didn't even realise

18:19.960 --> 18:29.800
it at the time, of course. You don't do it. It was the fact that you need to serve somebody

18:29.800 --> 18:34.120
with everything you do. Well, I felt that anyway. Because sometimes you might just want

18:34.120 --> 18:37.960
to write some code for the hell of it. But unless someone's using it, where's the point?

18:37.960 --> 18:49.720
You know? I felt that really, really keenly. So, yeah. Cow box. Actually, just to go so

18:49.720 --> 18:55.560
back to the last one as well. So the cow box arrived. I got a P75. I think it was 95. So

18:55.560 --> 18:59.960
a Pentium P75. It wasn't particularly flash. It wasn't top of the range. But I installed

18:59.960 --> 19:04.840
Slackware 3 on it. And then there was a tarball of the Rose Garden source code knocking around.

19:04.840 --> 19:08.840
And I think Chris and myself knocked it together. It might have been Melissa as well. Knocked

19:08.840 --> 19:16.200
it together into the first kind of release on Linux of Rose Garden. And then just after

19:16.200 --> 19:33.240
that. One second. So it was kind of a heyday of music software, really. Everything got very

19:33.240 --> 19:38.840
exciting very quickly. So I bought my first PC. I was working. I was working too hard.

19:38.840 --> 19:44.360
But having fun. But after a while, hard work became too much like hard work. I was on pager

19:44.360 --> 19:48.840
duty. And back in those days it was actually a pager as well. And I remember the first

19:48.840 --> 19:52.760
night I was on pager duty. I was lying there in my bed. And I put the pager right next

19:52.760 --> 19:56.600
to my head. And I was just staring at it. For the whole night. I couldn't go to sleep.

19:56.600 --> 20:00.840
I was just so scared in case it went off. What would I do? I had my own hardware at

20:00.840 --> 20:09.640
home. I had my PC. But it was I'll come to this. It was on a 14.4 modem which I had to ask

20:10.440 --> 20:14.040
someone to buy for me at work. They wouldn't even otherwise I'd have to drive into the office. I

20:14.040 --> 20:17.960
had another car. So it was basically you were trying to offer support to a global product

20:18.920 --> 20:24.120
from a very basic setup whilst being on pager duty. And the pager duty lasted for a whole week

20:24.120 --> 20:28.680
as well. So you'd have a week on and then maybe two weeks off. And that was really stressful.

20:28.680 --> 20:34.120
So between that and working and everything else and probably parting a little bit too much,

20:34.120 --> 20:38.600
I just felt burnt out after a year and a half of this. So I kind of moved jobs a couple of

20:38.600 --> 20:43.000
times. I bumped up my pay a little bit. And I got to a point a couple of years later where

20:43.000 --> 20:48.600
I could actually take some time off. Oh, God. Let's relax. The first thing I did was buy some

20:48.600 --> 20:53.480
music software because it was the thing I wanted to do. So I've been building software and I've

20:53.480 --> 20:56.920
been getting into being an engineer. But what I really wanted to do was make some music and be a

20:56.920 --> 21:03.960
rock star. So seriously. So I bought a load. Well, I say bought. I probably ripped. I definitely

21:03.960 --> 21:11.480
ripped a load of stuff and put it onto my Windows PC like logic audio, Q base, rebirth and reason,

21:11.480 --> 21:16.760
all these great tools that are available at the time. Digital audio workstations, which meant

21:16.760 --> 21:21.960
they would record audio. You could put plug-ins into them. They would make great sounds. And also

21:21.960 --> 21:31.960
things like rebirth, which was like a TB808, simulator, emulator, whatever. Lots of fun.

21:31.960 --> 21:37.400
Lots of squelchy fun. So I spent a couple of years understanding these tools and having fun with them

21:37.400 --> 21:47.080
and recording. And what I didn't realize I was doing was I was learning the domain. And if you

21:47.080 --> 21:53.640
kind of look back from where we are now and you've kind of studied OO, object oriented design,

21:53.640 --> 22:01.000
and you've maybe read Eric Evans' book or listened to Vaughan Vernon speak about DDD, domain driven

22:01.000 --> 22:04.840
design, you understand that that's what you're doing is you're learning the language, the ubiquitous

22:04.840 --> 22:10.840
language of music software and then you're learning to talk and feel the way that musicians do when

22:10.840 --> 22:19.080
they use this software. So around the same time,

22:19.080 --> 22:34.920
so around the same time, we had Rose Garden 2.1 already, but we hadn't moved on since 1992.

22:34.920 --> 22:39.800
This was around 98 at this point. We did kick around a few ideas. So we, I mean mainly Chris

22:39.800 --> 22:44.920
and myself and also Guillaume, a French developer who came on board, I think off the back of the 2.1

22:44.920 --> 22:49.720
work, again it was a bit hazy. We started kicking around some ideas. We want to rewrite this thing.

22:49.720 --> 22:54.760
Well, how are we going to do it? So I got this domain knowledge. Chris was an amazing software

22:54.760 --> 23:03.640
engineer and still is to this day and still works in audio and in audio software. And me piggybacking

23:03.640 --> 23:09.160
on his genius and also Guillaume's genius was a way to understand how we could build a whole

23:09.160 --> 23:16.680
new version of Rose Garden. It was an itch we wanted to scratch. And we discussed a few things

23:16.680 --> 23:22.520
and technology was quite fluid at the time. So we were like, could we do it in Java? Not really.

23:23.080 --> 23:29.720
There was no sound system or there was a very basic API. To be fair, the Linux sound system

23:29.720 --> 23:33.720
was not particularly advanced at that time either. It was just about coming out but it was mainly

23:33.720 --> 23:39.160
OSS before that. So Rose Garden 2.1, just used open sound system which was just a device essentially.

23:39.160 --> 23:44.040
So you could, there was no internal routing of MIDI events or audio. It was all straight out onto

23:44.040 --> 23:50.360
the device. Java had the same problem. It was kind of slow in catching up. It wasn't slow. It was just

23:50.360 --> 23:53.640
the fact that it hadn't been written yet, you know, a lot of these interfaces. There was a

23:56.680 --> 24:01.400
immediate API for Java but Java was never my forte. Didn't like it. Didn't like the stack traces.

24:01.400 --> 24:07.160
We also discussed IPC quite a lot with interpersonal communication. We discussed

24:07.160 --> 24:15.960
CORBA. Anyone remember CORBA? Yeah. Anyone forgot CORBA? Yeah. Terrible. Well, at the time it was

24:15.960 --> 24:19.000
very exciting. There was an alien book. You read it and you thought what the hell is this? It's

24:19.000 --> 24:25.240
really complicated. So it was too heavy weight. But I think actually Rose Garden 3, the missing

24:25.240 --> 24:32.760
number between 1, 2 and where we are now with Rose Garden 4 was an IPC, a CORBA based thing.

24:32.760 --> 24:36.360
We might have even written in Java or something. It was crazy. That didn't last very long. It was

24:36.360 --> 24:43.960
back of a fag packet type stuff, as they say in the UK. But we had a few other ideas. We thought,

24:43.960 --> 24:50.680
well, it wants to build it on Linux. It has to be on Linux. We're both quite proficient in C++.

24:50.680 --> 24:57.560
Let's do C++ maybe. Build a nice data model. And also we saw that Elsa was emergent. Jack,

24:57.560 --> 25:03.480
which is the Jack audio connection kit, is still I don't think it was invented until a couple years

25:03.480 --> 25:10.760
later, maybe 2000 or so. That was a flexible audio routing system, which is very cool. We

25:10.760 --> 25:17.320
eventually implemented. But we knew another thing, that the UI was going to be vital. Having worked

25:17.320 --> 25:26.280
on X11 and a thing of widget set, very basic X11 widget sets, there were two very exciting

25:26.840 --> 25:31.960
Linux alternatives coming up, GTK and all the various wizards, all the various parts of it.

25:32.840 --> 25:39.400
And KDE based on Qt. And the debate probably didn't take that long, but it felt like it went

25:39.400 --> 25:49.160
on forever. But eventually we decided, I think as a kind of a three of us, on taking the most

25:49.160 --> 25:54.920
pragmatic attitude, and that was we're going to go with KDE. And initially we decided to go with KDE

25:56.360 --> 26:01.400
because it seemed to be slightly more mature. And I think we all like Qt as well. We didn't

26:01.400 --> 26:10.360
know Qt particularly well at that point. The tool kit that KDE is built on. So.

26:15.480 --> 26:22.440
We come to KDE years. So this was the real start of the real build of Rose Garden 4,

26:22.440 --> 26:28.600
the thing I showed you at the top. So we finally got here. From what I say here, KDE 3 was released

26:28.600 --> 26:34.280
in April the 3rd, 2002. And I think what we'd done between then is we'd started probably in 2000 and

26:34.280 --> 26:38.840
we'd started writing some stuff. And eventually we got to a point where we had to kind of go with

26:38.840 --> 26:43.240
the major upgrades. And KDE 3 felt for the first time, I think, when we were finally kind of getting

26:43.240 --> 26:48.760
there. It felt like it was good. We were using a little bit of... Have you already seen that picture?

26:51.800 --> 26:55.080
Yeah. I'll just stick on here. So we were using a little bit of

26:55.080 --> 27:01.720
decop, I think it was, which was the communication interface for Rose Garden. We were running two

27:02.600 --> 27:08.680
separate processes. The Rose Garden sequencer and the Rose Garden itself. Rose Garden GUI,

27:08.680 --> 27:16.520
basically. And they communicated via... Well, we were going to use the KDE mechanism. We didn't

27:16.520 --> 27:22.280
in the end. I think eventually we ended up on a memory map file which was suitably good for both

27:22.280 --> 27:28.920
processes to access at that time. So, yeah, as you've seen, we ended up with quite a flexible

27:29.720 --> 27:34.520
architecture. So this kind of maps the core. I'm not going to go into the core of the core of Rose

27:34.520 --> 27:40.600
Garden, but I can point out a few things. So there was the two processes which underlay it behind.

27:41.320 --> 27:47.560
The GUI communicated with the shared memory map file. The sequencer did all the running of the

27:47.560 --> 27:52.600
stuff, the in and the out and the whatever. It was all controlled via the transport down here.

27:52.600 --> 27:59.480
And it had quite a flexible mapping so that we had any instrument here could be mapped to any

27:59.480 --> 28:04.680
of these instruments there. And they could be a MIDI device or an audio device. And we kind of

28:04.680 --> 28:12.040
created an abstraction layer there which would allow us to map those as well onto either MIDI

28:12.040 --> 28:19.000
devices which users could create called device files which allowed our users to actually get

28:19.000 --> 28:25.480
involved with creating specific configurations for their own setups. So if you had a particular

28:25.480 --> 28:32.280
type of keyboard or a MIDI device somewhere else, then you'd be able to create a device for it

28:32.280 --> 28:38.600
and be able to map those sounds to your Rose Garden setup. Similarly, the segments themselves,

28:38.600 --> 28:43.560
so these blobs are all segments. And you could slice those up and they'd all have parameters

28:43.560 --> 28:47.320
associated with them too. So there was design obviously going on underneath the covers.

28:48.040 --> 28:57.880
And that was from quite an early time as well. I believe that we didn't actively sit down and

28:57.880 --> 29:02.120
plan it all, but we spent a lot of time refactoring. And that was one of the biggest

29:02.120 --> 29:06.280
pain points I think we felt whilst we were working in the early 2000s.

29:06.280 --> 29:13.800
There was all these great tools available. Coming out of working in industry where you had

29:14.440 --> 29:18.680
all the compilers essentially before then, the end of the 90s or mid-end of the 90s,

29:18.680 --> 29:21.960
it was typically you had to buy a compiler. So you had to buy a license for something.

29:23.320 --> 29:27.240
You'd have to buy your library so the standard template library for C++ wasn't,

29:27.240 --> 29:31.320
it was still kind of getting there. You'd have to buy Boost, I think it was, or whatever it was

29:31.320 --> 29:37.960
called. There were various things you had to pay for. GCC and G++ were still getting there as well.

29:38.920 --> 29:47.000
G++ 3 I think came out around the same time. So the toolset was shifting. There was also

29:47.000 --> 29:55.640
the shifting media layers as well in Linux. So we were talking to people on various main lists

29:55.640 --> 29:59.800
basically about like when is the new version of Alsop coming out with the stuff that we can use to

29:59.800 --> 30:03.880
actually get some realtime stuff working on Alsop. So all of these layers underneath we were waiting

30:03.880 --> 30:11.720
for. Plus the tooling was a little bit kind of getting there too. Plus all of the UI toolkits

30:11.720 --> 30:15.400
were also growing. So we were kind of growing alongside all of this stuff. And it made it

30:16.200 --> 30:22.440
quite difficult. We didn't have any CI. We had like a couple of machines. We had some basic

30:22.440 --> 30:27.320
source control in SourceForge, which was probably CVS at the time, not even subversion at that point,

30:27.320 --> 30:32.200
which worked. But typically even with three of us working on it, there would be breaking

30:32.200 --> 30:37.720
changes the whole time. We didn't have any tests per se. We just downloaded the latest bit of

30:37.720 --> 30:44.600
source code and building it at something would break. So when you're refactoring our core area,

30:45.400 --> 30:49.000
even with three people, and you've got all of these dependencies moving, it makes it very

30:49.000 --> 30:56.120
difficult to get anywhere. So we struggled, to be fair. I was working for a couple of years. Well,

30:56.120 --> 30:58.520
it probably felt like a couple of years. It probably wasn't. It was probably more like six

30:58.520 --> 31:02.120
months. I did take some time off and I worked on it full time in a little basement with

31:02.120 --> 31:07.640
multiple computers, with distcc running on various computers to try and speed up my builds

31:07.640 --> 31:12.840
and stuff. And it was a real struggle. Mainly because we were refactoring and breaking stuff,

31:12.840 --> 31:21.880
but also because we had a kind of unstable base. Still, through much effort and through much time

31:21.880 --> 31:28.600
and through much dedication from not just a core team, a growing team the whole time, but also some

31:28.600 --> 31:33.400
really passionate users who came along quite early and have stuck with us the whole way through.

31:33.400 --> 31:37.080
So we've still got people who have been using it for 20 years who just love it because

31:38.120 --> 31:42.360
they don't think of any other way of working with it, basically. It's brilliant. They will compile

31:42.360 --> 31:45.720
it and they will run it on their own kernels or they'll download it as part of a package or

31:45.720 --> 31:49.000
they'll have a machine which they haven't touched for years purely because they want to run Rose

31:49.000 --> 31:55.560
Garden. There are other alternatives, of course. There's plenty of other alternatives, but what

31:55.560 --> 32:01.000
we've done is we kind of found our people, I suppose, through the way that we'd built it,

32:01.000 --> 32:05.560
through the way that we'd gone about building it maybe as well, and the thought we put into it,

32:06.200 --> 32:11.000
and the love maybe, we've kind of built something which has stuck around. And as you can see here,

32:11.000 --> 32:16.280
it does, this is doing some audio and it also plugs into this thing I mentioned called the

32:16.280 --> 32:22.200
Jack Audio Connection Kit, which is a way of routing audio around internally on Linux and

32:22.200 --> 32:28.760
various other platforms too. So it's actually like an audio bus. Here's a virtual synth as well,

32:28.760 --> 32:32.920
which you can route to it. So it works with virtual synths, external synths, etc.

32:32.920 --> 32:49.720
So what we saw was an emergent architecture, as I mentioned various things. I need to speed up a

32:49.720 --> 32:53.160
bit so I'm going to go through a little bit faster. I've also mentioned the Rose Garden

32:53.160 --> 32:58.040
Studio concept. So this was the thing about the device files. And I think this is another powerful

32:58.040 --> 33:03.240
feature of Rose Garden, one that's still used to this day. So we've got over 100 device files,

33:03.240 --> 33:08.760
so people have gone off and they built them for Yamaha synths, for Roland synths, for various

33:08.760 --> 33:12.120
different types, and you can just download those and install them into Rose Garden, and you can

33:12.120 --> 33:18.280
map all the voices basically straight into it. Additionally, we've got, as I mentioned, the Jack

33:18.280 --> 33:25.880
integration, the support for Ladsper and also DSSI plugins, which are native plugins for Linux,

33:25.880 --> 33:30.840
and other platforms, as well as the VST plugins, which are the standard music,

33:32.600 --> 33:39.080
more standardized music plugins, audio plugins for Windows and other platforms.

33:39.800 --> 33:44.200
Additionally, of course, notation markup and printing using Lilypond as well. So very high

33:44.200 --> 33:56.360
quality score export from Rose Garden, which has been very much appreciated by some of our users too.

33:56.360 --> 34:02.040
So with all that rambling, this is one of the learnings that I found was that just the

34:02.040 --> 34:06.760
architecture itself is difficult because of various reasons, communication mainly, but also

34:06.760 --> 34:10.760
what do we want to build. Secondly, organization around that is difficult too, and we saw that

34:10.760 --> 34:16.520
with refactoring that we had to suffer essentially. Maybe with better tooling or maybe with more

34:16.520 --> 34:19.960
stable platforms that we were building on, it would have been simpler, and in hindsight it

34:19.960 --> 34:24.360
seems almost trivial, but at the time it felt very difficult.

34:29.640 --> 34:36.840
Secondly, this is something which really stuck a lot in the claw, in the throat, which is everyone

34:36.840 --> 34:43.480
has an opinion on UI, everyone. Users, developers, even developers who don't profess to be UI or UX

34:43.480 --> 34:47.880
experts have an opinion, because we all use the software, right? And if you change anything,

34:47.880 --> 34:54.520
then you break a workflow. And that's a difficult lesson to learn. You may be a great coder,

34:54.520 --> 35:00.520
but again it becomes the social angle between what are we trying to build and how do we keep

35:00.520 --> 35:05.640
people happy, because it's even happened on the Rose Garden developer list in the last couple of

35:05.640 --> 35:13.640
days. Ted's released a new version before Christmas, but he's released a patch version

35:13.640 --> 35:17.880
the last week, and he changed one of the theme set-ups so it defaults to something that no one

35:17.880 --> 35:25.560
likes. So there's a mini uproar going on. On the flip side, when you do get it right,

35:25.560 --> 35:31.240
when you do spend the time getting your architecture right and you're thinking about your code and your

35:31.240 --> 35:38.440
core, then sometimes big features that you might have thought impossible even a few months ago are

35:38.440 --> 35:43.000
almost trivial to implement, and suddenly those points you go, oh, thank God, we got it right,

35:43.000 --> 35:48.280
and you actually feel that that is something that was worth spending the time on. Doesn't happen all

35:48.280 --> 35:55.320
the time, but sometimes it does, and it feels great. And yeah, fourthly in this little block,

35:56.920 --> 36:00.840
literally all you need is a small number of users, and there need to be loyal users to keep you

36:00.840 --> 36:06.840
going. So even though you're not getting paid for it, if you've got passionate users, it can mean

36:06.840 --> 36:15.720
everything. Okay, talking of passionate users, we'd spend some time in basements and online,

36:15.720 --> 36:22.040
of course, building stuff, and we and Chris thought it would be a great idea to get out there

36:22.040 --> 36:26.520
and start showing it. And around the same time, 2002 or so, there were Linux expos starting to

36:26.520 --> 36:32.680
happen in the UK. So through contacts of ours, we were involved with Linux user magazine, I wrote

36:32.680 --> 36:39.640
for them at some point or other, and we managed to flag a stand at one of the first Linux expos,

36:39.640 --> 36:45.880
and this is us looking all ruddy and young and lovely and wearing kind of branded t-shirts.

36:45.880 --> 36:50.040
Look at that, made that myself, fantastic. This is my friend Mike, unfortunately not with us

36:50.040 --> 36:55.160
anymore, but he was a great inspiration and helped us a lot and encouraged us to get set up.

36:55.160 --> 37:02.600
And this is Chris. And this is our fantastic set up, isn't that just Stella? So today, I mean,

37:02.600 --> 37:09.640
and yesterday walking around, looking at people sitting behind desks, exactly not better desk,

37:10.440 --> 37:15.480
to be honest, with much more impressive set ups, it really takes me back to those days when we were

37:15.480 --> 37:19.640
doing the same thing. We had our software, we were excited about it, and we went out there and

37:19.640 --> 37:27.160
showed it to people. So, yeah, we were doing lots of things, writing, went to trade shows,

37:27.160 --> 37:32.760
we went to conferences, well, not hundreds of them, a few, a handful. We started approaching

37:32.760 --> 37:39.400
vendors, so there were people who were building music software PCs, and we talked to them, maybe

37:39.400 --> 37:43.560
they'd be interested, we talked to Roland, we talked to Yamaha, we talked to loads of people,

37:43.560 --> 37:53.720
talked to AMD. There's a book, it's in my bag, there's the, one second. So Michael McIntyre wrote

37:53.720 --> 38:01.240
this whole guide which was published, the Roser Garden Companion. Yeah, and then we started talking

38:01.240 --> 38:08.360
to partners as well, so there were people at the same time who were betting their careers and their

38:08.360 --> 38:14.200
livelihoods on Linux being the next big platform. Obviously, everyone thinks this year is the year

38:14.200 --> 38:21.400
of the Linux desktop, you know, but there are still people out there, well, then there were people out

38:21.400 --> 38:28.520
there who wanted to build Linux-based hardware as well. We talked to a creator of keyboards in

38:28.520 --> 38:34.120
Italy, we flew us over and we talked to him, it was a fantastic couple of days, met his family,

38:34.120 --> 38:38.360
his mother made us a lovely pasta for lunch, and we saw his workshop where he was building these

38:38.360 --> 38:45.240
incredible multimedia platforms and keyboards in his garage, basically, his garage business,

38:45.240 --> 38:54.440
fantastic. So yeah, we got out on the road. Also, we launched a product, this was called Studio to

38:54.440 --> 39:01.320
Go. So Chris and I, we formed a company and we built a bootable CD which enables you to basically

39:01.320 --> 39:06.520
have an entire studio on your CD, you could put it into a Windows machine and you could boot it up

39:06.520 --> 39:10.920
and boot it into Linux and you'd be ready to go, basically. You could also install it on your

39:10.920 --> 39:19.000
Windows machine too. This is Chris, the year later, so from the previous photo, this is a kind of a

39:19.000 --> 39:25.480
level of professionalism higher, we look more relaxed, more kind of in the moment, they're,

39:25.480 --> 39:29.320
yeah, again, I think more relaxed. And then if we look another year further, this is us,

39:29.320 --> 39:35.160
the kind of the high point of our career with Fervent Software and Studio to Go.

39:35.160 --> 39:38.200
This was at the Sounds Expo in 2004, I believe, yeah.

39:43.560 --> 39:50.520
So we weren't in this by ourselves, there was an organisation called Linux Audio,

39:51.240 --> 39:55.400
as well, which is still around,.org, and in fact, I looked on the website yesterday and

39:55.400 --> 39:59.960
apparently I'm on the board of directors or something, anyway, it's not a company and I'm

39:59.960 --> 40:04.200
not on the board of anything there, but it was like a kind of an open source collaboration group

40:05.080 --> 40:11.720
with a guy called Daniel James as well, who also I work with in journalism, he was a big proponent

40:11.720 --> 40:21.800
of another Linux audio platform as well, which is still being sold, I believe. So working together,

40:21.800 --> 40:27.560
we managed to get to a Sounds Expo where it was not just Linux stuff, it was also Windows and

40:27.560 --> 40:38.200
the rest of the vendors there too. However, at that point, it was getting clear that we weren't

40:38.200 --> 40:41.800
going to make a living out of it, Chris and I, so we kind of, with a family coming along,

40:41.800 --> 40:45.320
and that's why I mentioned it at the beginning with a photo of my son, it was like a decision to say,

40:45.320 --> 40:49.240
well, what can we do now? Because we tried a kind of business, it didn't make enough money for us,

40:49.240 --> 40:53.480
and we didn't really have the insight into what we should do next, so we just said, okay, let's

40:53.480 --> 40:58.280
call it quits for the minute. I dropped off from Rose Garden at that point, but loads of people

40:58.920 --> 41:05.720
stepped up. And one of the biggest things that they did in the next section, which is the QT years,

41:05.720 --> 41:11.400
was to port it from KDE to QT, which meant basically ripping out the KDE stuff sounds

41:11.400 --> 41:17.080
simple enough, but took about a year and a half, which led everyone to understand that major

41:17.080 --> 41:23.320
dependency upgrades are very hard. One of the good things to look at from the source code of Rose

41:23.320 --> 41:29.720
Garden now is that of the source files that we have, about 1400 C++ files, most of them are

41:29.720 --> 41:35.160
pretty small, so under 500 lines, that's including comments, so that's a good sign too. Healthy code

41:35.160 --> 41:47.480
base. So, I'm skipping now from 2008, 2010, and I'm kind of looking towards what's happened

41:47.480 --> 41:53.080
the last ten years, but also the future. Ted Felix came on board in 2010, and by his words,

41:53.080 --> 41:57.240
I spoke to him in the last week or two, by his words, he said it suffered from a lot of

41:57.240 --> 42:03.560
stability problems. We have a GitHub as well, as well as a source for, and GitHub is downstream,

42:03.560 --> 42:12.760
so it allows us to do some nice visualisations. So, this was around the first bit of work that

42:12.760 --> 42:19.800
we did to stabilise the initial Rose Garden. This was around the studio to go time, lots of work

42:19.800 --> 42:26.920
there, and then this was around the KDE to QT port, so lots of work went in there too. After this,

42:26.920 --> 42:30.360
when Ted came on board, he said basically he spent a lot of time stabilising, basically getting rid

42:30.360 --> 42:34.920
of bugs and making sure that there was adequate performance, and doing that, I think it was not

42:34.920 --> 42:43.560
unaided for sure, but focusing on that a lot. And you can see this also represented in the way that

42:44.520 --> 42:49.400
Chris and Guillaume were very involved here, and Ted was involved later, and this is my contribution.

42:53.560 --> 42:58.840
And also we see, again, from GitHub, the churn that was going on around the same time,

42:58.840 --> 43:04.040
so studio to go product, QT port, and then stabilisation after that. But if you then look at,

43:05.960 --> 43:12.520
I'm just comparing us to Muse, which is another Linux audio workstation as well,

43:14.680 --> 43:19.800
and this goes up to 40 on this axis and up to a bit higher on this one. So, in terms of contributions,

43:19.800 --> 43:24.680
we're not far off what Muse is doing as well, which is really encouraging to see.

43:24.680 --> 43:29.720
So, I would say the product is pretty healthy, it's been stabilised, it's still being used by lots

43:29.720 --> 43:38.520
of people, you don't hear about it a lot, but it's still there. And I'm going a bit faster now

43:38.520 --> 43:42.520
because I need to wrap up, but the number one thing has got to be people, and that's why I

43:42.520 --> 43:49.800
mentioned at the front of this talk. People to do the work, of course, people to support you

43:49.800 --> 43:53.640
whilst you're doing the work, and the expertise that you build together when you're designing

43:53.640 --> 43:59.400
something. So, that's why I see Rosegard now as still surviving, and still something that we can

43:59.400 --> 44:10.600
contribute to. So, top five things for open source, basically, I would say this as well.

44:11.240 --> 44:20.280
So, good architecture and good toolkit choices are super important, and they help with defining

44:20.280 --> 44:24.680
equality and defining how far you can go with any one thing. And if you're not getting anywhere

44:24.680 --> 44:28.760
down a certain path, then just rip it up and start again, or refactor, or think really hard

44:28.760 --> 44:35.080
about your design. Also, Ted's jumped in with some stuff here. As he's mentioned, the stringent

44:35.080 --> 44:40.200
requirements are merging, so making sure that you don't allow anything to merge. And in fact,

44:40.200 --> 44:43.960
recently there's been a fork of Rosegard, because one of the developers has got a bit annoyed that

44:43.960 --> 44:47.400
he's not getting his stuff reviewed, and it's fair enough, everyone's doing it in their spare time.

44:47.400 --> 44:54.040
It's still a labour of love. Also, I mentioned earlier, refactoring and unit testing. I did

44:54.040 --> 45:00.360
actually manage to get the unit test code coverage the other day on Rosegard, and it's 8%,

45:01.640 --> 45:08.280
which is not good. Okay, there are some challenges with a UI base, whether with a GUI, but it should

45:08.280 --> 45:12.760
be higher than that. So, I imagine one of the things that I might be looking at as I dip my

45:12.760 --> 45:20.200
toe back in a little bit is to maybe write some more tests. So, number one, quality. Number two,

45:20.200 --> 45:24.200
coding is social. I mean, that's one of the things that we don't realise is that we think we go into

45:24.200 --> 45:29.160
OSS, we can just hide maybe online or do some coding by ourselves, but increasingly it becomes

45:29.160 --> 45:34.520
social. It's a different type of social ability maybe to working in an office. But open source,

45:34.520 --> 45:39.080
I believe, is much more social than working in an office, because working in an engineering job,

45:39.080 --> 45:44.600
a software job in an office. Because you can just focus in on the one thing that you're doing. You

45:44.600 --> 45:49.720
don't have to be maybe told that you need to be more interactive in a certain way of working.

45:49.720 --> 45:53.160
But in OSS, you have to be, there is no question about it. You've got to be

45:53.800 --> 45:57.800
able to defend your ideas and maybe persuade other people too.

46:00.200 --> 46:06.440
Also, related to this as well, it's the social side of the customer engagement. It's the

46:06.440 --> 46:11.480
the the fact that you do have customers or end users, however you define them,

46:11.480 --> 46:15.720
and they will have opinions whether you like it or not. So you're putting yourself out there.

46:19.480 --> 46:23.160
Thirdly, and this is something I've come across in the last year or so, this guy called Seth Godin.

46:23.160 --> 46:30.440
He's an American marketing guru and his approach, I really like his approach. He's got a great

46:30.440 --> 46:40.680
podcast called Akimbo, A-K-I-M-B-O, you should check it out. He writes and he speaks really well,

46:40.680 --> 46:46.760
really pithily on lots of subjects about marketing. He's not like a slimy kind of marketing dude,

46:46.760 --> 46:52.280
whatever kind of feel. It's like it speaks to me as an open source person. One of the things,

46:52.280 --> 46:58.120
one of his key phrases is this, people like us do things like this. I think that's what it means to

46:58.120 --> 47:04.440
connect with your audience, to find your audience and to keep connecting with your audience at the

47:04.440 --> 47:11.640
right level. So yeah, we might spend some time arguing about how a UI should be or what how we

47:11.640 --> 47:17.000
should architect this or if we should refactor that. However, it's worth it if we connect with

47:17.000 --> 47:22.760
each other and we connect with our customers well at the same time. And also he talks about audience,

47:22.760 --> 47:28.040
importantly, because you don't need to solve all the problems in the world. All you need to do is

47:28.040 --> 47:37.400
solve a few problems for a few people. Fourthly, use all the tools. So we're just so lucky these

47:37.400 --> 47:44.920
days. We've got all these amazing tools. We've got GitHub, we've got CodeCove, we've got Cloud,

47:44.920 --> 47:50.760
whatever it is, lots of stuff. You know, Sonar Cloud, etc. All these great things that we can use,

47:50.760 --> 47:58.760
Sonar Type. So use them. Use CI, use unit testing, use TDD, use all of the great

47:58.760 --> 48:02.520
engineering advances that we've come up with over the last ten years to make our code better.

48:06.200 --> 48:13.640
And finally, don't take it too seriously. One of the reasons that I got involved in OSS was that

48:13.640 --> 48:17.720
I could do it from what we could do ourselves. You know, we could put our little imprint on the

48:17.720 --> 48:23.160
world or do something fun. And that's the point. It needs to be fun. It needs to be enjoyable.

48:23.160 --> 48:29.240
So when it stops being enjoyable, don't do it anymore. And that is it. Thank you very much.

48:29.240 --> 48:43.880
Any questions?

48:43.880 --> 48:53.880
Are there any questions? Oh, yes, there are.

49:01.000 --> 49:02.440
Please raise your hand. Okay.

49:02.440 --> 49:13.080
Hi. Thank you. I can't wait to give the software a try when I get back out.

49:14.280 --> 49:22.360
I might install it later. But was there any possibility of you playing a bit of music,

49:22.360 --> 49:27.560
maybe? No demo today. I should have said that at the top. All right. Thank you.

49:27.560 --> 49:31.000
Okay. Any other questions?

49:31.000 --> 49:54.120
Okay. Seems it. Thank you very much. A big round of applause.
