1
0:00:00.000 --> 0:00:22.160
Let's just fetch our micro blocks here.

2
0:00:22.160 --> 0:00:24.560
This happened to me before.

3
0:00:24.560 --> 0:00:26.400
Why did that go away?

4
0:00:26.400 --> 0:00:27.880
Let's try this.

5
0:00:27.880 --> 0:00:32.040
Let me just quit micro blocks a second.

6
0:00:32.040 --> 0:00:33.040
Oh, there it goes.

7
0:00:33.040 --> 0:00:35.200
No, I don't want to quit.

8
0:00:35.200 --> 0:00:37.800
Okay, so the cable wasn't quite plugged in.

9
0:00:37.800 --> 0:00:41.400
For some reason I lost my displays to something.

10
0:00:41.400 --> 0:00:46.920
So I said basic sensors, just like that Heti language.

11
0:00:46.920 --> 0:00:49.160
Actually let me just quit micro blocks really quick.

12
0:00:49.160 --> 0:00:51.080
This cable is being a little flaky.

13
0:00:51.080 --> 0:00:54.720
No, no, no.

14
0:00:54.720 --> 0:00:55.920
And also in the display.

15
0:00:55.920 --> 0:00:56.920
Okay.

16
0:00:56.920 --> 0:00:58.320
This is what it looks like.

17
0:00:58.320 --> 0:01:02.800
And you have outputs, you have inputs, and then you can do all the pins.

18
0:01:02.800 --> 0:01:07.560
You have your control variables, operators, all sorts of stuff like that.

19
0:01:07.560 --> 0:01:09.720
But I plugged in this board.

20
0:01:09.720 --> 0:01:10.720
It showed a green here.

21
0:01:10.720 --> 0:01:11.880
It's already connected.

22
0:01:11.880 --> 0:01:14.680
So it already knows what this board is.

23
0:01:14.680 --> 0:01:22.080
And when I click temperature, it tells me it's 19 degrees C. If I want to see the display,

24
0:01:22.080 --> 0:01:25.160
I simply turn on the display.

25
0:01:25.160 --> 0:01:26.520
Oh, let's see.

26
0:01:26.520 --> 0:01:29.000
I need this quick camera.

27
0:01:29.000 --> 0:01:33.160
So for those of you at home, there's my happy face.

28
0:01:33.160 --> 0:01:35.880
And then I click temperature.

29
0:01:35.880 --> 0:01:38.480
There it is there.

30
0:01:38.480 --> 0:01:41.960
Keep losing this connection.

31
0:01:41.960 --> 0:01:43.440
Okay.

32
0:01:43.440 --> 0:01:46.440
All right.

33
0:01:46.440 --> 0:01:57.080
Every time the HDMI pops in and out, it's causing micro blocks to be unhappy.

34
0:01:57.080 --> 0:01:59.080
Sorry about that.

35
0:01:59.080 --> 0:02:01.080
What's that?

36
0:02:01.080 --> 0:02:02.080
Okay.

37
0:02:02.080 --> 0:02:03.480
All right.

38
0:02:03.480 --> 0:02:08.280
Let's just try this one more time.

39
0:02:08.280 --> 0:02:11.280
Load micro blocks.

40
0:02:11.280 --> 0:02:19.600
And another particularly cool.

41
0:02:19.600 --> 0:02:22.280
It's okay.

42
0:02:22.280 --> 0:02:24.720
It's very flaky.

43
0:02:24.720 --> 0:02:26.040
Oh, I lost it.

44
0:02:26.040 --> 0:02:28.040
Let me see.

45
0:02:28.040 --> 0:02:33.520
What happened to my power?

46
0:02:33.520 --> 0:02:52.440
So HDMI is lost.

47
0:02:52.440 --> 0:02:53.840
Don't touch anything.

48
0:02:53.840 --> 0:02:54.840
Yeah.

49
0:02:54.840 --> 0:02:57.840
We might have a few screen issues here.

50
0:02:57.840 --> 0:03:05.800
Let me just try really quickly if I can quit and open again.

51
0:03:05.800 --> 0:03:09.480
Okay.

52
0:03:09.480 --> 0:03:17.080
Quite briefly, I wanted to show you that you can graph something like the light level.

53
0:03:17.080 --> 0:03:30.320
And you can also see the data of an input value and it will put zero at the bottom.

54
0:03:30.320 --> 0:03:32.480
And I can watch this in real time.

55
0:03:32.480 --> 0:03:36.640
And if I close my hand over it, it gets reflections on stuff.

56
0:03:36.640 --> 0:03:41.520
But so you can see, you can plot data in real time, X, Y, and Z.

57
0:03:41.520 --> 0:03:43.980
It has an accelerometer.

58
0:03:43.980 --> 0:03:45.320
So that's very cool.

59
0:03:45.320 --> 0:03:46.880
All right.

60
0:03:46.880 --> 0:03:48.440
Now, we're going to go back.

61
0:03:48.440 --> 0:03:49.880
So that's liveness.

62
0:03:49.880 --> 0:03:51.240
There's no compile download.

63
0:03:51.240 --> 0:03:54.200
It's just happening.

64
0:03:54.200 --> 0:03:58.300
Next point is that you can do things in parallel.

65
0:03:58.300 --> 0:04:07.860
So I'm going to show you a quick, how multitasking is handled through just opening the two button

66
0:04:07.860 --> 0:04:10.120
blink program right here.

67
0:04:10.120 --> 0:04:13.200
And I open this.

68
0:04:13.200 --> 0:04:17.040
And if I press button, let me get my camera.

69
0:04:17.040 --> 0:04:24.400
If I press button A, while I'm pressing it, it's going to repeat and blink 100 milliseconds.

70
0:04:24.400 --> 0:04:26.780
While I press B, it does the same thing.

71
0:04:26.780 --> 0:04:32.660
I can actually press A and B. And I can try to get them in sync or I can try to get them

72
0:04:32.660 --> 0:04:33.660
on and off.

73
0:04:33.660 --> 0:04:35.160
But it takes too long.

74
0:04:35.160 --> 0:04:40.900
So just as Hetty has variables, I can do something like a delay.

75
0:04:40.900 --> 0:04:44.560
So I can try to play around with it in real time.

76
0:04:44.560 --> 0:04:50.040
And I set the delay to like 500.

77
0:04:50.040 --> 0:04:58.800
And then I drag this delay variable in so I can play around with a slower blink time

78
0:04:58.800 --> 0:05:03.180
and change it all I want while I'm experimenting.

79
0:05:03.180 --> 0:05:08.680
And now, if I set that delay variable, you can also use say block.

80
0:05:08.680 --> 0:05:14.580
So it's nice to just set a variable and say it.

81
0:05:14.580 --> 0:05:16.680
Now I know what it is.

82
0:05:16.680 --> 0:05:24.160
And if I'm pressing the A, now you see it's every 500.

83
0:05:24.160 --> 0:05:29.280
And now I can more like get them on, off, on, off.

84
0:05:29.280 --> 0:05:33.200
And if you were in an Arduino loop, just one Continue Forever loop, this would be a lot

85
0:05:33.200 --> 0:05:43.480
harder to have either these different multitasking done for you, which is very, very cool.

86
0:05:43.480 --> 0:05:45.960
The next thing is that it's autonomous.

87
0:05:45.960 --> 0:05:59.320
So if I am programming and I'm doing these blocks on my IDE, then what happens is there's

88
0:05:59.320 --> 0:06:07.880
actually an opcode, it looks a bit like assembly language representation of those blocks that

89
0:06:07.880 --> 0:06:08.880
you can see.

90
0:06:08.880 --> 0:06:15.760
And then in the actual board, it's actually in bytecode.

91
0:06:15.760 --> 0:06:23.960
So if I were to turn on advanced blocks, I could show you the instructions.

92
0:06:23.960 --> 0:06:31.880
You can see that, and then I could actually see the bytecode.

93
0:06:31.880 --> 0:06:35.980
And the bytecode is then what is inside the virtual machine.

94
0:06:35.980 --> 0:06:43.400
So that will have cool ramifications about sharing our files when we get to that point.

95
0:06:43.400 --> 0:06:47.280
OK, so blocks equate to bytecode.

96
0:06:47.280 --> 0:06:54.360
So it's autonomous in the sense that if I unplug it from my laptop and I plug it back

97
0:06:54.360 --> 0:07:02.000
in, then what happened?

98
0:07:02.000 --> 0:07:05.840
Did I lose my connection?

99
0:07:05.840 --> 0:07:11.140
OK, I just, oh, I know what happened.

100
0:07:11.140 --> 0:07:13.400
For autonomy, I made a mistake.

101
0:07:13.400 --> 0:07:19.200
I actually need a when started block to set that delay because there was delay of zero.

102
0:07:19.200 --> 0:07:22.280
So I actually needed this to be set.

103
0:07:22.280 --> 0:07:26.680
We have to show our errors.

104
0:07:26.680 --> 0:07:34.360
And now down here, there we go.

105
0:07:34.360 --> 0:07:41.240
And I love having a co-speaker.

106
0:07:41.240 --> 0:07:48.200
And then another very awesome aspect of it is its portability.

107
0:07:48.200 --> 0:07:54.320
So microblocks, if you look at how we build the virtual machine, we have a platform I.O.

108
0:07:54.320 --> 0:07:57.400
script with an any file that I looked last night.

109
0:07:57.400 --> 0:08:00.320
There were up to 43 different boards.

110
0:08:00.320 --> 0:08:05.400
And there's kind of about nine varieties that if you go into microblocks itself and you

111
0:08:05.400 --> 0:08:11.920
want to update the firmware on a board, it will show you well, this is plugged in now.

112
0:08:11.920 --> 0:08:14.360
I'm just updating the firmware on it.

113
0:08:14.360 --> 0:08:18.360
But let me just unplug this for a moment.

114
0:08:18.360 --> 0:08:22.720
And if you want to update the firmware on a board, there's like micro bits, caliope,

115
0:08:22.720 --> 0:08:23.720
the ESP32.

116
0:08:23.720 --> 0:08:09.980
There's some new electroph

117
0:08:27.980 --> 0:08:29.600
a whole bunch of boards.

118
0:08:29.600 --> 0:08:31.600
But there's also in the platform I.O.

119
0:08:31.600 --> 0:08:36.960
any file, a whole bunch of Arduino boards and other stuff that's there.

120
0:08:36.960 --> 0:08:39.520
So it's portable.

121
0:08:39.520 --> 0:08:49.680
And I want to do a quick display of that where I take this quick ham.

122
0:08:49.680 --> 0:08:55.080
I'm going to make it big.

123
0:08:55.080 --> 0:08:57.820
And we apply power.

124
0:08:57.820 --> 0:09:00.720
So I have a whole bunch of boards plugged into a USB strip.

125
0:09:00.720 --> 0:09:03.640
So we don't lose the HDMI.

126
0:09:03.640 --> 0:09:09.040
And Bernat's going to turn that on.

127
0:09:09.040 --> 0:09:16.160
And now you can see I have the heartbeat program running on a whole bunch of different boards.

128
0:09:16.160 --> 0:09:21.500
So I kind of cheated on a couple of boards that are new and didn't have full support

129
0:09:21.500 --> 0:09:23.880
like this Mbits board.

130
0:09:23.880 --> 0:09:27.380
But and of course the circuit playground doesn't have the same thing.

131
0:09:27.380 --> 0:09:33.080
But on some of these OLED displays, you can actually use the micro bit type style display

132
0:09:33.080 --> 0:09:35.320
box and it still works.

133
0:09:35.320 --> 0:09:39.440
And then go around and push the A button on everything.

134
0:09:39.440 --> 0:09:44.280
So the A buttons turn them all to smiles.

135
0:09:44.280 --> 0:09:46.240
And whoops.

136
0:09:46.240 --> 0:09:48.440
Dang.

137
0:09:48.440 --> 0:09:52.240
Just so now they're all happy face.

138
0:09:52.240 --> 0:09:59.720
And of course if they have B buttons, we can go back to our heart.

139
0:09:59.720 --> 0:10:03.240
And this is the only one that has a side B button.

140
0:10:03.240 --> 0:10:08.120
Voila.

141
0:10:08.120 --> 0:10:12.720
So as you know, like getting used to a programming environment, when you pick up a different

142
0:10:12.720 --> 0:10:16.040
board, do you want to get a different programming environment every time?

143
0:10:16.040 --> 0:10:17.680
No, clearly not.

144
0:10:17.680 --> 0:10:23.880
So portability is really cool.

145
0:10:23.880 --> 0:10:26.440
Did I lose it completely?

146
0:10:26.440 --> 0:10:28.000
All right.

147
0:10:28.000 --> 0:10:29.760
I'm about to hand this off.

148
0:10:29.760 --> 0:10:32.360
So that's good.

149
0:10:32.360 --> 0:10:34.840
All right.

150
0:10:34.840 --> 0:10:37.160
Let's hear.

151
0:10:37.160 --> 0:10:38.480
Okay.

152
0:10:38.480 --> 0:10:44.280
And then the last part to explain is shareability.

153
0:10:44.280 --> 0:10:52.800
So yeah, I could do the same program.

154
0:10:52.800 --> 0:10:57.960
So shareability is there's a few ways to deal with this.

155
0:10:57.960 --> 0:11:01.920
Let me go in the slide show mode because I'm basically wrapped up.

156
0:11:01.920 --> 0:11:08.200
One is like you can go to the file open save menu with micro blocks.

157
0:11:08.200 --> 0:11:13.220
Let me just show you in real time here.

158
0:11:13.220 --> 0:11:19.220
So you can just go in here and say file, save file open.

159
0:11:19.220 --> 0:11:25.000
And then there's these other options like encoded in the URL.

160
0:11:25.000 --> 0:11:29.380
So you can say file copy project URL to a clipboard.

161
0:11:29.380 --> 0:11:32.320
And then you can open it, give that URL out.

162
0:11:32.320 --> 0:11:39.540
And we do this, you know, embed a you just put a hyperlink on some documentation.

163
0:11:39.540 --> 0:11:41.800
And you can open that right in the Chrome browser.

164
0:11:41.800 --> 0:11:43.680
Chrome or Edge browser support the serial mode.

165
0:11:43.680 --> 0:11:45.080
You can't unfortunately use Firefox.

166
0:11:45.080 --> 0:11:46.960
I used to work from Mozilla.

167
0:11:46.960 --> 0:11:47.960
Okay.

168
0:11:47.960 --> 0:11:49.440
And then encoded in the picture.

169
0:11:49.440 --> 0:11:55.120
So our documentation, we have pictures on the websites in the wiki in the learn section.

170
0:11:55.120 --> 0:11:57.200
And the code is actually embedded in the picture.

171
0:11:57.200 --> 0:12:02.920
So you drag the picture into your Chrome browser and or into your IDE standalone or Chrome

172
0:12:02.920 --> 0:12:05.520
browser and it will actually load the code.

173
0:12:05.520 --> 0:12:11.160
And then the last part is it's shareable by opening from the board.

174
0:12:11.160 --> 0:12:20.120
And so I'm going to have Bernat demonstrate that as we hand off to more cool demo for

175
0:12:20.120 --> 0:12:24.120
part two.

176
0:12:24.120 --> 0:12:27.160
Okay.

177
0:12:27.160 --> 0:12:30.440
Can you hear me?

178
0:12:30.440 --> 0:12:33.800
Yes, of course you can.

179
0:12:33.800 --> 0:12:37.800
So yeah, we were talking about portability.

180
0:12:37.800 --> 0:12:43.160
And one of the aspects of portability is not just that the code is portable across boards,

181
0:12:43.160 --> 0:12:45.680
but the board itself is an example of portability.

182
0:12:45.680 --> 0:12:53.120
The board is actually it contains the program that you are seeing here, right?

183
0:12:53.120 --> 0:12:57.880
In any other microcontroller environment, once the code is here, the code is here and

184
0:12:57.880 --> 0:12:58.880
it's it's gone.

185
0:12:58.880 --> 0:13:03.280
If you've lost your program, if you've lost your source, the source is gone.

186
0:13:03.280 --> 0:13:04.520
Right?

187
0:13:04.520 --> 0:13:12.000
And microblocks, we have a way, oops, not this, yeah, yeah, this microlock, sorry, that's

188
0:13:12.000 --> 0:13:13.000
open from board.

189
0:13:13.000 --> 0:13:15.060
Now, I'm in the browser version.

190
0:13:15.060 --> 0:13:19.040
We have versions, we haven't mentioned that, but we have versions for the browser and for

191
0:13:19.040 --> 0:13:24.240
Mac, Windows, Linux, and Chromebook and Raspberry Pi, etc.

192
0:13:24.240 --> 0:13:27.200
So we have many platforms that we support.

193
0:13:27.200 --> 0:13:29.480
This is the browser version.

194
0:13:29.480 --> 0:13:37.840
And now it says plug in the board and connect and click the USB icon to connect.

195
0:13:37.840 --> 0:13:41.440
So I'll just connect as it's set.

196
0:13:41.440 --> 0:13:44.520
Now I select the USB port.

197
0:13:44.520 --> 0:13:46.880
And now it's actually reading back the code.

198
0:13:46.880 --> 0:13:49.560
And it's not like we embedded the blocks inside the board.

199
0:13:49.560 --> 0:13:54.480
It's actually for the, I know this is a slightly geekier audience than our usual.

200
0:13:54.480 --> 0:14:01.920
So we actually have a decompiler that John built in that's inspired in this quick decompiler

201
0:14:01.920 --> 0:14:03.640
that John also worked on.

202
0:14:03.640 --> 0:14:08.320
And what it does is it takes these bytecodes and it retranslates them into what we see

203
0:14:08.320 --> 0:14:09.320
here.

204
0:14:09.320 --> 0:14:10.320
Right?

205
0:14:10.320 --> 0:14:16.520
And just to prove that it still works, it does.

206
0:14:16.520 --> 0:14:23.440
And you know, we like to joke that micrologs is so portable that we could even port it

207
0:14:23.440 --> 0:14:26.720
to a board that does not exist.

208
0:14:26.720 --> 0:14:28.560
And that's actually a joke, but it's true.

209
0:14:28.560 --> 0:14:31.920
Like we have a board that doesn't exist and can run micrologs.

210
0:14:31.920 --> 0:14:36.520
Since micrologs is VM based, you could compile this VM for something that does not exist,

211
0:14:36.520 --> 0:14:37.920
that is virtual.

212
0:14:37.920 --> 0:14:41.560
And that's why we made Borde.

213
0:14:41.560 --> 0:14:44.240
Borde is a result of the pandemic.

214
0:14:44.240 --> 0:14:50.800
We were doing online classes and it was really hard to get hardware to kids.

215
0:14:50.800 --> 0:14:58.880
So that was an idea like my boss and Jan's and Yatka's boss at SAP, she had this idea

216
0:14:58.880 --> 0:15:04.520
that we needed something virtual so that kids who don't have access to hardware could still

217
0:15:04.520 --> 0:15:06.360
at least try micrologs.

218
0:15:06.360 --> 0:15:07.880
And that's why we made Borde.

219
0:15:07.880 --> 0:15:10.600
And Borde, as you can see, can run the same code.

220
0:15:10.600 --> 0:15:11.600
It's not a simulator.

221
0:15:11.600 --> 0:15:12.600
That's very important.

222
0:15:12.600 --> 0:15:13.600
It's not a simulator.

223
0:15:13.600 --> 0:15:15.760
It's running the exact same VM.

224
0:15:15.760 --> 0:15:18.140
So it's a virtual board, not a simulator.

225
0:15:18.140 --> 0:15:20.080
It has its own capabilities.

226
0:15:20.080 --> 0:15:21.400
It has a couple of buttons.

227
0:15:21.400 --> 0:15:23.240
It has a speaker.

228
0:15:23.240 --> 0:15:24.680
It has a touchscreen.

229
0:15:24.680 --> 0:15:25.800
It has a file system.

230
0:15:25.800 --> 0:15:28.600
It can do HTTP client operation.

231
0:15:28.600 --> 0:15:31.000
So it's a different sort of board.

232
0:15:31.000 --> 0:15:33.700
Yeah, right.

233
0:15:33.700 --> 0:15:39.600
So it does the same things.

234
0:15:39.600 --> 0:15:44.520
But you know, this is nice, but micrologs was always about physical computing.

235
0:15:44.520 --> 0:15:45.520
This is nice.

236
0:15:45.520 --> 0:15:47.860
If you don't have a board, that's a good way to get started.

237
0:15:47.860 --> 0:15:53.160
But our aim was always to teach physical computing, to do tangible things in the real world, in

238
0:15:53.160 --> 0:15:54.620
the physical world.

239
0:15:54.620 --> 0:15:59.240
So let me show you one thing that you would not be able to do with boarding.

240
0:15:59.240 --> 0:16:02.000
And that's connecting external sensors to your board.

241
0:16:02.000 --> 0:16:08.420
So just this funny sensor that I have in here, that's an RFID sensor.

242
0:16:08.420 --> 0:16:12.080
That's the technical Mambo Jumbo for the thing that's in your credit card that lets you pay

243
0:16:12.080 --> 0:16:19.720
contactlessly or on your subway card or your gym membership card or whatever.

244
0:16:19.720 --> 0:16:28.480
And I happen to have some of these cards with me, as you all do, I'm sure.

245
0:16:28.480 --> 0:16:29.480
So for example,

246
0:16:29.480 --> 0:16:33.480
Do you want cards up here?

247
0:16:33.480 --> 0:16:34.480
Yeah.

248
0:16:34.480 --> 0:16:37.480
And maybe I need, yeah, I need a cable.

249
0:16:37.480 --> 0:16:38.480
Oops.

250
0:16:38.480 --> 0:16:39.480
It's physical.

251
0:16:39.480 --> 0:16:50.360
So this board has a battery, but it's that that's the problems of the physical world

252
0:16:50.360 --> 0:16:51.360
as well.

253
0:16:51.360 --> 0:16:56.040
So I'm connecting an external battery to it.

254
0:16:56.040 --> 0:16:58.960
Okay.

255
0:16:58.960 --> 0:17:03.200
And now I'm just going to try.

256
0:17:03.200 --> 0:17:12.600
This has a micro box program in it, by the way, that I can show later, maybe.

257
0:17:12.600 --> 0:17:14.120
But I'll show it later.

258
0:17:14.120 --> 0:17:22.880
So okay, so I made it so it recognizes this particular card and it plays a tone.

259
0:17:22.880 --> 0:17:24.680
Okay, that's interesting.

260
0:17:24.680 --> 0:17:26.960
Let's try another card.

261
0:17:26.960 --> 0:17:29.880
Okay.

262
0:17:29.880 --> 0:17:31.680
Let's try this one.

263
0:17:31.680 --> 0:17:33.600
Okay.

264
0:17:33.600 --> 0:17:35.120
Okay.

265
0:17:35.120 --> 0:17:37.360
Cool.

266
0:17:37.360 --> 0:17:40.920
I'm missing some.

267
0:17:40.920 --> 0:17:43.760
No, wait.

268
0:17:43.760 --> 0:17:46.360
Yes, we'll talk later.

269
0:17:46.360 --> 0:17:51.560
I'll need a special number that comes with it as well.

270
0:17:51.560 --> 0:17:57.760
Let's try with my bank ones and this one as well.

271
0:17:57.760 --> 0:17:59.480
Okay.

272
0:17:59.480 --> 0:18:03.600
So we have a bunch of cards and we've seen that each of them can make a note.

273
0:18:03.600 --> 0:18:05.600
Let's try to maybe.

274
0:18:05.600 --> 0:18:09.080
Oh yeah.

275
0:18:09.080 --> 0:18:13.200
Where is it?

276
0:18:13.200 --> 0:18:17.760
I know it's somewhere.

277
0:18:17.760 --> 0:18:20.920
Oh, maybe.

278
0:18:20.920 --> 0:18:23.440
Yeah.

279
0:18:23.440 --> 0:18:33.400
You know, when you're having trouble paying, that's why.

280
0:18:33.400 --> 0:18:35.880
Because it's okay.

281
0:18:35.880 --> 0:18:38.640
Okay.

282
0:18:38.640 --> 0:18:45.360
I'll try to play a song.

283
0:18:45.360 --> 0:18:48.360
Where is it?

284
0:18:48.360 --> 0:19:03.320
The second part.

285
0:19:03.320 --> 0:19:15.120
Cathy, can you hand me your keys?

286
0:19:15.120 --> 0:19:21.240
Okay.

287
0:19:21.240 --> 0:19:25.240
So I was to show that programming is fun, but programming the real world and touching

288
0:19:25.240 --> 0:19:32.520
actual things is a very engaging way to get kids and people that are not hardcore gigs

289
0:19:32.520 --> 0:19:38.040
interested in what we do, which is programming computers.

290
0:19:38.040 --> 0:19:39.040
That was all.

291
0:19:39.040 --> 0:19:40.040
Go to the.

292
0:19:40.040 --> 0:19:41.240
Oh yeah.

293
0:19:41.240 --> 0:19:47.000
Go to the micro blocks website if you want to learn more about it.

294
0:19:47.000 --> 0:19:48.000
Microblocks.fun.

295
0:19:48.000 --> 0:19:52.760
Small, fast, human friendly.

296
0:19:52.760 --> 0:19:53.760
That's our website.

297
0:19:53.760 --> 0:20:00.160
We have a very nice, if I may say so, learn page with a lot of tutorials.

298
0:20:00.160 --> 0:20:01.920
Microblocks is also translated to a lot of language.

299
0:20:01.920 --> 0:20:03.800
I forgot how many.

300
0:20:03.800 --> 0:20:06.120
The code is also translated just like Eddie.

301
0:20:06.120 --> 0:20:09.360
And a little more translators just like Eddie.

302
0:20:09.360 --> 0:20:10.720
Yeah.

303
0:20:10.720 --> 0:20:17.080
And if you want to help out in our site, there is a whole section about how to contribute

304
0:20:17.080 --> 0:20:22.400
and we have a space for everyone who wants to help out.

305
0:20:22.400 --> 0:20:23.400
Thank you.

306
0:20:23.400 --> 0:20:31.640
Do you have time for questions?

307
0:20:31.640 --> 0:20:36.040
Just maybe one or two, right?

308
0:20:36.040 --> 0:20:37.040
Any questions?

309
0:20:37.040 --> 0:20:45.240
Is it expensive?

310
0:20:45.240 --> 0:20:51.560
I was getting asked that a lot at the booth yesterday.

311
0:20:51.560 --> 0:20:58.960
Because we were doing some demos in the SFC booth and the range, if I can pull it, this

312
0:20:58.960 --> 0:20:59.960
how much was this?

313
0:20:59.960 --> 0:21:03.800
Maybe $25 M5 stack.

314
0:21:03.800 --> 0:21:06.840
Probably even less than $10 for the M5 atom.

315
0:21:06.840 --> 0:21:11.560
The micro bits were retail at $15 until the pandemic supply and change shortage.

316
0:21:11.560 --> 0:21:13.400
Now they're $20 or more.

317
0:21:13.400 --> 0:21:15.800
The M bits, what was this one now?

318
0:21:15.800 --> 0:21:18.360
$12, $25.

319
0:21:18.360 --> 0:21:19.880
The Pico Ed is maybe $10.

320
0:21:19.880 --> 0:21:20.880
This is maybe $25.

321
0:21:20.880 --> 0:21:25.320
So I would say they range less than $50.

322
0:21:25.320 --> 0:21:28.360
And then you can buy some of these educational boards.

323
0:21:28.360 --> 0:21:31.920
Let me just show you.

324
0:21:31.920 --> 0:21:38.120
Like some of the small boards with stuff already included, so you don't have to learn, but

325
0:21:38.120 --> 0:21:43.120
the new Robatistan.com Pico Ed board, this is like $50.

326
0:21:43.120 --> 0:21:44.880
But it has all these sensors and actuators.

327
0:21:44.880 --> 0:21:49.480
And then you can pull apart the bricks, as they're called, and use cables to put them

328
0:21:49.480 --> 0:21:50.480
back together.

329
0:21:50.480 --> 0:21:54.480
I want to say the board is free, though.

330
0:21:54.480 --> 0:21:58.400
We have other ranges from zero to...

331
0:21:58.400 --> 0:22:03.280
And the cheapest of the ESP8266 is there a couple dollars.

332
0:22:03.280 --> 0:22:05.280
But then you have to buy the sensors and actuators.

333
0:22:05.280 --> 0:22:09.520
I actually find for teaching you probably want to buy something with integrated stuff.

334
0:22:09.520 --> 0:22:13.920
And then you can buy all these kits and plug them together and run robots and the robotic

335
0:22:13.920 --> 0:22:14.920
kits.

336
0:22:14.920 --> 0:22:16.680
There's a ton of hardware out there.

337
0:22:16.680 --> 0:22:17.680
Next question.

338
0:22:17.680 --> 0:22:21.520
So do you have a free-made sort of workshop material?

339
0:22:21.520 --> 0:22:26.480
Oh, hold on.

340
0:22:26.480 --> 0:22:32.520
So first of all, in the learn site, you're going to find some resources that are like

341
0:22:32.520 --> 0:22:39.540
full classes, like let's say this one that teaches you about main enumerals.

342
0:22:39.540 --> 0:22:44.840
We also try to do activities that are not just about technology, right?

343
0:22:44.840 --> 0:22:47.720
So we can get a more diverse audience interested.

344
0:22:47.720 --> 0:22:52.840
If you make a project about bits and bytes, that's going to interest probably the people

345
0:22:52.840 --> 0:22:53.840
in this room.

346
0:22:53.840 --> 0:22:58.080
But you're already interested with... you're not the target audience, right?

347
0:22:58.080 --> 0:23:02.840
But if we talk about main enumerals, maybe people who are interested in history or culture

348
0:23:02.840 --> 0:23:09.160
are going to see the value in programming and microcontrollers.

349
0:23:09.160 --> 0:23:11.760
So that's a whole activity.

350
0:23:11.760 --> 0:23:12.760
And then you have actually...

351
0:23:12.760 --> 0:23:19.720
And again, you drag the screenshots, pictures into the IDE and they will load.

352
0:23:19.720 --> 0:23:24.320
And then you have a teacher's guide with extra information about what's being talked about.

353
0:23:24.320 --> 0:23:26.320
And then there's...

354
0:23:26.320 --> 0:23:28.880
We've done these things called activity cards.

355
0:23:28.880 --> 0:23:34.520
And I put together a kit with a manufacturer and they included these activity cards, 10

356
0:23:34.520 --> 0:23:36.920
two-sided cards in the kit.

357
0:23:36.920 --> 0:23:43.840
And there's things like flashlight tag and sound and two-button texting.

358
0:23:43.840 --> 0:23:48.960
It uses two microbits and use tilt to find the letters and punctuation and button A and

359
0:23:48.960 --> 0:23:52.040
button B to find the letters and add.

360
0:23:52.040 --> 0:23:57.560
And you can actually text messages directly between two microbits, for example, or clues

361
0:23:57.560 --> 0:24:03.120
or other boards.

362
0:24:03.120 --> 0:24:07.840
What do you mean, can you code...

363
0:24:07.840 --> 0:24:10.560
We don't want people to have to go through this hard-on.

364
0:24:10.560 --> 0:24:12.280
That's why we're making microblocks.

365
0:24:12.280 --> 0:24:17.200
So you don't have to care about bits and byte codes.

366
0:24:17.200 --> 0:24:20.240
No, this is coding.

367
0:24:20.240 --> 0:24:26.240
You can see the off codes if you want and you can build other editors to the VM if you

368
0:24:26.240 --> 0:24:28.520
want a text-based editor on top.

369
0:24:28.520 --> 0:24:29.520
Go ahead.

370
0:24:29.520 --> 0:24:37.520
I'm wondering, I'm familiar a bit with microbits.

371
0:24:37.520 --> 0:24:45.520
And so what you do is you add sensors or you put them in little robot cars, I think, like

372
0:24:45.520 --> 0:24:46.520
that.

373
0:24:46.520 --> 0:24:47.520
Yes.

374
0:24:47.520 --> 0:24:48.520
And?

375
0:24:48.520 --> 0:24:49.520
Yes.

376
0:24:49.520 --> 0:24:53.280
If you go to the learn side again, there's...

377
0:24:53.280 --> 0:24:57.600
You can select the microbit here and you'll see all these activities for the microbit.

378
0:24:57.600 --> 0:25:02.200
And a lot of them are using external sensors, like this one uses motors to make a microbit

379
0:25:02.200 --> 0:25:03.840
robot.

380
0:25:03.840 --> 0:25:09.240
This one uses a ready-made robot car.

381
0:25:09.240 --> 0:25:12.240
A lot of them use external sensors and activators.

382
0:25:12.240 --> 0:25:17.760
So, for example, you ask, I deliver.

383
0:25:17.760 --> 0:25:26.040
There's just five commands at the end of the radio.

384
0:25:26.040 --> 0:25:28.080
Forward, back, left, right, and stop.

385
0:25:28.080 --> 0:25:30.960
Every time the buttons go up, I stop.

386
0:25:30.960 --> 0:25:34.440
And this one's running out of battery.

387
0:25:34.440 --> 0:25:36.960
So the other one's faster.

388
0:25:36.960 --> 0:25:37.960
We're over time, Kathy.

389
0:25:37.960 --> 0:25:38.960
Okay.

390
0:25:38.960 --> 0:25:39.960
Thank you, everyone.

391
0:25:39.960 --> 0:25:46.600
Thank you.

